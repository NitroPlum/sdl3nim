
{.warning[UnusedImport]: off.}
{.hint[XDeclaredButNotUsed]: off.}
from macros import hint, warning, newLit, getSize

from os import parentDir

when not declared(ownSizeOf):
  macro ownSizeof(x: typed): untyped =
    newLit(x.getSize)

type
  enum_DUMMY_ENUM_520094156* {.size: sizeof(cint).} = enum
    DUMMY_ENUM_VALUE = 0
type
  enum_AssertState_520094180* {.size: sizeof(cint).} = enum
    ASSERTION_RETRY = 0, ASSERTION_BREAK = 1, ASSERTION_ABORT = 2,
    ASSERTION_IGNORE = 3, ASSERTION_ALWAYS_IGNORE = 4
type
  enum_AsyncIOTaskType_520094192* {.size: sizeof(cint).} = enum
    ASYNCIO_TASK_READ = 0, ASYNCIO_TASK_WRITE = 1, ASYNCIO_TASK_CLOSE = 2
type
  enum_AsyncIOResult_520094196* {.size: sizeof(cint).} = enum
    ASYNCIO_COMPLETE = 0, ASYNCIO_FAILURE = 1, ASYNCIO_CANCELLED = 2
type
  enum_PropertyType_520094218* {.size: sizeof(cint).} = enum
    PROPERTY_TYPE_INVALID = 0, PROPERTY_TYPE_POINTER = 1,
    PROPERTY_TYPE_STRING = 2, PROPERTY_TYPE_NUMBER = 3, PROPERTY_TYPE_FLOAT = 4,
    PROPERTY_TYPE_BOOLEAN = 5
type
  enum_ThreadPriority_520094232* {.size: sizeof(cint).} = enum
    THREAD_PRIORITY_LOW = 0, THREAD_PRIORITY_NORMAL = 1,
    THREAD_PRIORITY_HIGH = 2, THREAD_PRIORITY_TIME_CRITICAL = 3
type
  enum_InitStatus_520094248* {.size: sizeof(cint).} = enum
    INIT_STATUS_UNINITIALIZED = 0, INIT_STATUS_INITIALIZING = 1,
    INIT_STATUS_INITIALIZED = 2, INIT_STATUS_UNINITIALIZING = 3
type
  enum_IOStatus_520094256* {.size: sizeof(cint).} = enum
    IO_STATUS_READY = 0, IO_STATUS_ERROR = 1, IO_STATUS_EOF = 2,
    IO_STATUS_NOT_READY = 3, IO_STATUS_READONLY = 4, IO_STATUS_WRITEONLY = 5
type
  enum_IOWhence_520094260* {.size: sizeof(cint).} = enum
    IO_SEEK_SET = 0, IO_SEEK_CUR = 1, IO_SEEK_END = 2
type
  enum_AudioFormat_520094270* {.size: sizeof(cint).} = enum
    AUDIO_UNKNOWN = 0, AUDIO_U8_enumval = 8, AUDIO_S8_enumval = 32776,
    AUDIO_S16LE = 32784, AUDIO_S32LE = 32800, AUDIO_F32LE = 33056,
    AUDIO_S16BE = 36880, AUDIO_S32BE = 36896, AUDIO_F32BE = 37152
when not declared(AUDIO_S16_enumval):
  const
    AUDIO_S16_enumval* = enum_AudioFormat_520094270.AUDIO_S16LE
else:
  static :
    hint("Declaration of " & "AUDIO_S16_enumval" &
        " already exists, not redeclaring")
when not declared(AUDIO_S32_enumval):
  const
    AUDIO_S32_enumval* = enum_AudioFormat_520094270.AUDIO_S32LE
else:
  static :
    hint("Declaration of " & "AUDIO_S32_enumval" &
        " already exists, not redeclaring")
when not declared(AUDIO_F32_enumval):
  const
    AUDIO_F32_enumval* = enum_AudioFormat_520094270.AUDIO_F32LE
else:
  static :
    hint("Declaration of " & "AUDIO_F32_enumval" &
        " already exists, not redeclaring")
type
  enum_BlendOperation_520094288* {.size: sizeof(cint).} = enum
    BLENDOPERATION_ADD = 1, BLENDOPERATION_SUBTRACT = 2,
    BLENDOPERATION_REV_SUBTRACT = 3, BLENDOPERATION_MINIMUM = 4,
    BLENDOPERATION_MAXIMUM = 5
type
  enum_BlendFactor_520094292* {.size: sizeof(cint).} = enum
    BLENDFACTOR_ZERO = 1, BLENDFACTOR_ONE = 2, BLENDFACTOR_SRC_COLOR = 3,
    BLENDFACTOR_ONE_MINUS_SRC_COLOR = 4, BLENDFACTOR_SRC_ALPHA = 5,
    BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 6, BLENDFACTOR_DST_COLOR = 7,
    BLENDFACTOR_ONE_MINUS_DST_COLOR = 8, BLENDFACTOR_DST_ALPHA = 9,
    BLENDFACTOR_ONE_MINUS_DST_ALPHA = 10
type
  enum_PixelType_520094296* {.size: sizeof(cint).} = enum
    PIXELTYPE_UNKNOWN = 0, PIXELTYPE_INDEX1 = 1, PIXELTYPE_INDEX4 = 2,
    PIXELTYPE_INDEX8 = 3, PIXELTYPE_PACKED8 = 4, PIXELTYPE_PACKED16 = 5,
    PIXELTYPE_PACKED32 = 6, PIXELTYPE_ARRAYU8 = 7, PIXELTYPE_ARRAYU16 = 8,
    PIXELTYPE_ARRAYU32 = 9, PIXELTYPE_ARRAYF16 = 10, PIXELTYPE_ARRAYF32 = 11,
    PIXELTYPE_INDEX2 = 12
type
  enum_BitmapOrder_520094300* {.size: sizeof(cint).} = enum
    BITMAPORDER_NONE = 0, BITMAPORDER_4321 = 1, BITMAPORDER_1234 = 2
type
  enum_PackedOrder_520094304* {.size: sizeof(cint).} = enum
    PACKEDORDER_NONE = 0, PACKEDORDER_XRGB = 1, PACKEDORDER_RGBX = 2,
    PACKEDORDER_ARGB = 3, PACKEDORDER_RGBA = 4, PACKEDORDER_XBGR = 5,
    PACKEDORDER_BGRX = 6, PACKEDORDER_ABGR = 7, PACKEDORDER_BGRA = 8
type
  enum_ArrayOrder_520094308* {.size: sizeof(cint).} = enum
    ARRAYORDER_NONE = 0, ARRAYORDER_RGB = 1, ARRAYORDER_RGBA = 2,
    ARRAYORDER_ARGB = 3, ARRAYORDER_BGR = 4, ARRAYORDER_BGRA = 5,
    ARRAYORDER_ABGR = 6
type
  enum_PackedLayout_520094312* {.size: sizeof(cint).} = enum
    PACKEDLAYOUT_NONE = 0, PACKEDLAYOUT_332 = 1, PACKEDLAYOUT_4444 = 2,
    PACKEDLAYOUT_1555 = 3, PACKEDLAYOUT_5551 = 4, PACKEDLAYOUT_565 = 5,
    PACKEDLAYOUT_8888 = 6, PACKEDLAYOUT_2101010 = 7, PACKEDLAYOUT_1010102 = 8
type
  enum_PixelFormat_520094316* {.size: sizeof(cint).} = enum
    PIXELFORMAT_UNKNOWN = 0, PIXELFORMAT_INDEX1LSB = 286261504,
    PIXELFORMAT_INDEX1MSB = 287310080, PIXELFORMAT_INDEX4LSB = 303039488,
    PIXELFORMAT_INDEX4MSB = 304088064, PIXELFORMAT_INDEX8 = 318769153,
    PIXELFORMAT_RGB332 = 336660481, PIXELFORMAT_XRGB4444 = 353504258,
    PIXELFORMAT_XRGB1555 = 353570562, PIXELFORMAT_RGB565 = 353701890,
    PIXELFORMAT_ARGB4444 = 355602434, PIXELFORMAT_ARGB1555 = 355667970,
    PIXELFORMAT_RGBA4444 = 356651010, PIXELFORMAT_RGBA5551 = 356782082,
    PIXELFORMAT_XBGR4444 = 357698562, PIXELFORMAT_XBGR1555 = 357764866,
    PIXELFORMAT_BGR565 = 357896194, PIXELFORMAT_ABGR4444 = 359796738,
    PIXELFORMAT_ABGR1555 = 359862274, PIXELFORMAT_BGRA4444 = 360845314,
    PIXELFORMAT_BGRA5551 = 360976386, PIXELFORMAT_XRGB8888 = 370546692,
    PIXELFORMAT_XRGB2101010 = 370614276, PIXELFORMAT_RGBX8888 = 371595268,
    PIXELFORMAT_ARGB8888 = 372645892, PIXELFORMAT_ARGB2101010 = 372711428,
    PIXELFORMAT_RGBA8888 = 373694468, PIXELFORMAT_XBGR8888 = 374740996,
    PIXELFORMAT_XBGR2101010 = 374808580, PIXELFORMAT_BGRX8888 = 375789572,
    PIXELFORMAT_ABGR8888 = 376840196, PIXELFORMAT_ABGR2101010 = 376905732,
    PIXELFORMAT_BGRA8888 = 377888772, PIXELFORMAT_RGB24 = 386930691,
    PIXELFORMAT_BGR24 = 390076419, PIXELFORMAT_RGB48 = 403714054,
    PIXELFORMAT_RGBA64 = 404766728, PIXELFORMAT_ARGB64 = 405815304,
    PIXELFORMAT_BGR48 = 406859782, PIXELFORMAT_BGRA64 = 407912456,
    PIXELFORMAT_ABGR64 = 408961032, PIXELFORMAT_RGB48_FLOAT = 437268486,
    PIXELFORMAT_RGBA64_FLOAT = 438321160, PIXELFORMAT_ARGB64_FLOAT = 439369736,
    PIXELFORMAT_BGR48_FLOAT = 440414214, PIXELFORMAT_BGRA64_FLOAT = 441466888,
    PIXELFORMAT_ABGR64_FLOAT = 442515464, PIXELFORMAT_RGB96_FLOAT = 454057996,
    PIXELFORMAT_RGBA128_FLOAT = 455114768,
    PIXELFORMAT_ARGB128_FLOAT = 456163344, PIXELFORMAT_BGR96_FLOAT = 457203724,
    PIXELFORMAT_BGRA128_FLOAT = 458260496,
    PIXELFORMAT_ABGR128_FLOAT = 459309072, PIXELFORMAT_INDEX2LSB = 470811136,
    PIXELFORMAT_INDEX2MSB = 471859712, PIXELFORMAT_EXTERNAL_OES = 542328143,
    PIXELFORMAT_P010 = 808530000, PIXELFORMAT_NV21 = 825382478,
    PIXELFORMAT_NV12 = 842094158, PIXELFORMAT_YV12 = 842094169,
    PIXELFORMAT_YUY2 = 844715353, PIXELFORMAT_YVYU = 1431918169,
    PIXELFORMAT_IYUV = 1448433993, PIXELFORMAT_UYVY = 1498831189
when not declared(PIXELFORMAT_RGBA32):
  const
    PIXELFORMAT_RGBA32* = enum_PixelFormat_520094316.PIXELFORMAT_ABGR8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_RGBA32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_ARGB32):
  const
    PIXELFORMAT_ARGB32* = enum_PixelFormat_520094316.PIXELFORMAT_BGRA8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_ARGB32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_BGRA32):
  const
    PIXELFORMAT_BGRA32* = enum_PixelFormat_520094316.PIXELFORMAT_ARGB8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_BGRA32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_ABGR32):
  const
    PIXELFORMAT_ABGR32* = enum_PixelFormat_520094316.PIXELFORMAT_RGBA8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_ABGR32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_RGBX32):
  const
    PIXELFORMAT_RGBX32* = enum_PixelFormat_520094316.PIXELFORMAT_XBGR8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_RGBX32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_XRGB32):
  const
    PIXELFORMAT_XRGB32* = enum_PixelFormat_520094316.PIXELFORMAT_BGRX8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_XRGB32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_BGRX32):
  const
    PIXELFORMAT_BGRX32* = enum_PixelFormat_520094316.PIXELFORMAT_XRGB8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_BGRX32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_XBGR32):
  const
    PIXELFORMAT_XBGR32* = enum_PixelFormat_520094316.PIXELFORMAT_RGBX8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_XBGR32" &
        " already exists, not redeclaring")
type
  enum_ColorType_520094320* {.size: sizeof(cint).} = enum
    COLOR_TYPE_UNKNOWN = 0, COLOR_TYPE_RGB = 1, COLOR_TYPE_YCBCR = 2
type
  enum_ColorRange_520094324* {.size: sizeof(cint).} = enum
    COLOR_RANGE_UNKNOWN = 0, COLOR_RANGE_LIMITED = 1, COLOR_RANGE_FULL = 2
type
  enum_ColorPrimaries_520094328* {.size: sizeof(cint).} = enum
    COLOR_PRIMARIES_UNKNOWN = 0, COLOR_PRIMARIES_BT709 = 1,
    COLOR_PRIMARIES_UNSPECIFIED = 2, COLOR_PRIMARIES_BT470M = 4,
    COLOR_PRIMARIES_BT470BG = 5, COLOR_PRIMARIES_BT601 = 6,
    COLOR_PRIMARIES_SMPTE240 = 7, COLOR_PRIMARIES_GENERIC_FILM = 8,
    COLOR_PRIMARIES_BT2020 = 9, COLOR_PRIMARIES_XYZ = 10,
    COLOR_PRIMARIES_SMPTE431 = 11, COLOR_PRIMARIES_SMPTE432 = 12,
    COLOR_PRIMARIES_EBU3213 = 22, COLOR_PRIMARIES_CUSTOM = 31
type
  enum_TransferCharacteristics_520094332* {.size: sizeof(cint).} = enum
    TRANSFER_CHARACTERISTICS_UNKNOWN = 0, TRANSFER_CHARACTERISTICS_BT709 = 1,
    TRANSFER_CHARACTERISTICS_UNSPECIFIED = 2,
    TRANSFER_CHARACTERISTICS_GAMMA22 = 4, TRANSFER_CHARACTERISTICS_GAMMA28 = 5,
    TRANSFER_CHARACTERISTICS_BT601 = 6, TRANSFER_CHARACTERISTICS_SMPTE240 = 7,
    TRANSFER_CHARACTERISTICS_LINEAR = 8, TRANSFER_CHARACTERISTICS_LOG100 = 9,
    TRANSFER_CHARACTERISTICS_LOG100_SQRT10 = 10,
    TRANSFER_CHARACTERISTICS_IEC61966 = 11,
    TRANSFER_CHARACTERISTICS_BT1361 = 12, TRANSFER_CHARACTERISTICS_SRGB = 13,
    TRANSFER_CHARACTERISTICS_BT2020_10BIT = 14,
    TRANSFER_CHARACTERISTICS_BT2020_12BIT = 15,
    TRANSFER_CHARACTERISTICS_PQ = 16, TRANSFER_CHARACTERISTICS_SMPTE428 = 17,
    TRANSFER_CHARACTERISTICS_HLG = 18, TRANSFER_CHARACTERISTICS_CUSTOM = 31
type
  enum_MatrixCoefficients_520094336* {.size: sizeof(cint).} = enum
    MATRIX_COEFFICIENTS_IDENTITY = 0, MATRIX_COEFFICIENTS_BT709 = 1,
    MATRIX_COEFFICIENTS_UNSPECIFIED = 2, MATRIX_COEFFICIENTS_FCC = 4,
    MATRIX_COEFFICIENTS_BT470BG = 5, MATRIX_COEFFICIENTS_BT601 = 6,
    MATRIX_COEFFICIENTS_SMPTE240 = 7, MATRIX_COEFFICIENTS_YCGCO = 8,
    MATRIX_COEFFICIENTS_BT2020_NCL = 9, MATRIX_COEFFICIENTS_BT2020_CL = 10,
    MATRIX_COEFFICIENTS_SMPTE2085 = 11,
    MATRIX_COEFFICIENTS_CHROMA_DERIVED_NCL = 12,
    MATRIX_COEFFICIENTS_CHROMA_DERIVED_CL = 13, MATRIX_COEFFICIENTS_ICTCP = 14,
    MATRIX_COEFFICIENTS_CUSTOM = 31
type
  enum_ChromaLocation_520094340* {.size: sizeof(cint).} = enum
    CHROMA_LOCATION_NONE = 0, CHROMA_LOCATION_LEFT = 1,
    CHROMA_LOCATION_CENTER = 2, CHROMA_LOCATION_TOPLEFT = 3
type
  enum_Colorspace_520094344* {.size: sizeof(cint).} = enum
    COLORSPACE_UNKNOWN = 0, COLORSPACE_SRGB_LINEAR = 301991168,
    COLORSPACE_SRGB = 301991328, COLORSPACE_HDR10 = 301999616,
    COLORSPACE_BT709_LIMITED = 554697761, COLORSPACE_BT601_LIMITED = 554703046,
    COLORSPACE_BT2020_LIMITED = 554706441, COLORSPACE_JPEG = 570426566,
    COLORSPACE_BT709_FULL = 571474977, COLORSPACE_BT601_FULL = 571480262,
    COLORSPACE_BT2020_FULL = 571483657
when not declared(COLORSPACE_RGB_DEFAULT):
  const
    COLORSPACE_RGB_DEFAULT* = enum_Colorspace_520094344.COLORSPACE_SRGB
else:
  static :
    hint("Declaration of " & "COLORSPACE_RGB_DEFAULT" &
        " already exists, not redeclaring")
when not declared(COLORSPACE_YUV_DEFAULT):
  const
    COLORSPACE_YUV_DEFAULT* = enum_Colorspace_520094344.COLORSPACE_JPEG
else:
  static :
    hint("Declaration of " & "COLORSPACE_YUV_DEFAULT" &
        " already exists, not redeclaring")
type
  enum_ScaleMode_520094382* {.size: sizeof(cint).} = enum
    SCALEMODE_NEAREST_enumval = 0, SCALEMODE_LINEAR_enumval = 1
type
  enum_FlipMode_520094386* {.size: sizeof(cint).} = enum
    FLIP_NONE = 0, FLIP_HORIZONTAL = 1, FLIP_VERTICAL = 2
type
  enum_CameraPosition_520094402* {.size: sizeof(cint).} = enum
    CAMERA_POSITION_UNKNOWN = 0, CAMERA_POSITION_FRONT_FACING = 1,
    CAMERA_POSITION_BACK_FACING = 2
type
  enum_SystemTheme_520094414* {.size: sizeof(cint).} = enum
    SYSTEM_THEME_UNKNOWN = 0, SYSTEM_THEME_LIGHT = 1, SYSTEM_THEME_DARK = 2
type
  enum_DisplayOrientation_520094424* {.size: sizeof(cint).} = enum
    ORIENTATION_UNKNOWN = 0, ORIENTATION_LANDSCAPE = 1,
    ORIENTATION_LANDSCAPE_FLIPPED = 2, ORIENTATION_PORTRAIT = 3,
    ORIENTATION_PORTRAIT_FLIPPED = 4
type
  enum_FlashOperation_520094432* {.size: sizeof(cint).} = enum
    FLASH_CANCEL = 0, FLASH_BRIEFLY = 1, FLASH_UNTIL_FOCUSED = 2
type
  enum_GLAttr_520094454* {.size: sizeof(cint).} = enum
    GL_RED_SIZE = 0, GL_GREEN_SIZE = 1, GL_BLUE_SIZE = 2, GL_ALPHA_SIZE = 3,
    GL_BUFFER_SIZE = 4, GL_DOUBLEBUFFER = 5, GL_DEPTH_SIZE = 6,
    GL_STENCIL_SIZE = 7, GL_ACCUM_RED_SIZE = 8, GL_ACCUM_GREEN_SIZE = 9,
    GL_ACCUM_BLUE_SIZE = 10, GL_ACCUM_ALPHA_SIZE = 11, GL_STEREO = 12,
    GL_MULTISAMPLEBUFFERS = 13, GL_MULTISAMPLESAMPLES = 14,
    GL_ACCELERATED_VISUAL = 15, GL_RETAINED_BACKING = 16,
    GL_CONTEXT_MAJOR_VERSION = 17, GL_CONTEXT_MINOR_VERSION = 18,
    GL_CONTEXT_FLAGS = 19, GL_CONTEXT_PROFILE_MASK = 20,
    GL_SHARE_WITH_CURRENT_CONTEXT = 21, GL_FRAMEBUFFER_SRGB_CAPABLE = 22,
    GL_CONTEXT_RELEASE_BEHAVIOR = 23,
    GL_CONTEXT_RESET_NOTIFICATION_enumval = 24, GL_CONTEXT_NO_ERROR = 25,
    GL_FLOATBUFFERS = 26, GL_EGL_PLATFORM = 27
type
  enum_HitTestResult_520094466* {.size: sizeof(cint).} = enum
    HITTEST_NORMAL = 0, HITTEST_DRAGGABLE = 1, HITTEST_RESIZE_TOPLEFT = 2,
    HITTEST_RESIZE_TOP = 3, HITTEST_RESIZE_TOPRIGHT = 4,
    HITTEST_RESIZE_RIGHT = 5, HITTEST_RESIZE_BOTTOMRIGHT = 6,
    HITTEST_RESIZE_BOTTOM = 7, HITTEST_RESIZE_BOTTOMLEFT = 8,
    HITTEST_RESIZE_LEFT = 9
type
  enum_FileDialogType_520094478* {.size: sizeof(cint).} = enum
    FILEDIALOG_OPENFILE = 0, FILEDIALOG_SAVEFILE = 1, FILEDIALOG_OPENFOLDER = 2
type
  enum_PowerState_520094486* {.size: sizeof(cint).} = enum
    POWERSTATE_ERROR = -1, POWERSTATE_UNKNOWN = 0, POWERSTATE_ON_BATTERY = 1,
    POWERSTATE_NO_BATTERY = 2, POWERSTATE_CHARGING = 3, POWERSTATE_CHARGED = 4
type
  enum_SensorType_520094494* {.size: sizeof(cint).} = enum
    SENSOR_INVALID = -1, SENSOR_UNKNOWN = 0, SENSOR_ACCEL = 1, SENSOR_GYRO = 2,
    SENSOR_ACCEL_L = 3, SENSOR_GYRO_L = 4, SENSOR_ACCEL_R = 5, SENSOR_GYRO_R = 6
type
  enum_JoystickType_520094502* {.size: sizeof(cint).} = enum
    JOYSTICK_TYPE_UNKNOWN = 0, JOYSTICK_TYPE_GAMEPAD = 1,
    JOYSTICK_TYPE_WHEEL = 2, JOYSTICK_TYPE_ARCADE_STICK = 3,
    JOYSTICK_TYPE_FLIGHT_STICK = 4, JOYSTICK_TYPE_DANCE_PAD = 5,
    JOYSTICK_TYPE_GUITAR = 6, JOYSTICK_TYPE_DRUM_KIT = 7,
    JOYSTICK_TYPE_ARCADE_PAD = 8, JOYSTICK_TYPE_THROTTLE = 9,
    JOYSTICK_TYPE_COUNT = 10
type
  enum_JoystickConnectionState_520094506* {.size: sizeof(cint).} = enum
    JOYSTICK_CONNECTION_INVALID = -1, JOYSTICK_CONNECTION_UNKNOWN = 0,
    JOYSTICK_CONNECTION_WIRED = 1, JOYSTICK_CONNECTION_WIRELESS = 2
type
  enum_GamepadType_520094524* {.size: sizeof(cint).} = enum
    GAMEPAD_TYPE_UNKNOWN = 0, GAMEPAD_TYPE_STANDARD = 1,
    GAMEPAD_TYPE_XBOX360 = 2, GAMEPAD_TYPE_XBOXONE = 3, GAMEPAD_TYPE_PS3 = 4,
    GAMEPAD_TYPE_PS4 = 5, GAMEPAD_TYPE_PS5 = 6,
    GAMEPAD_TYPE_NINTENDO_SWITCH_PRO = 7,
    GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT = 8,
    GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT = 9,
    GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR = 10, GAMEPAD_TYPE_COUNT = 11
type
  enum_GamepadButton_520094528* {.size: sizeof(cint).} = enum
    GAMEPAD_BUTTON_INVALID = -1, GAMEPAD_BUTTON_SOUTH = 0,
    GAMEPAD_BUTTON_EAST = 1, GAMEPAD_BUTTON_WEST = 2, GAMEPAD_BUTTON_NORTH = 3,
    GAMEPAD_BUTTON_BACK = 4, GAMEPAD_BUTTON_GUIDE = 5, GAMEPAD_BUTTON_START = 6,
    GAMEPAD_BUTTON_LEFT_STICK = 7, GAMEPAD_BUTTON_RIGHT_STICK = 8,
    GAMEPAD_BUTTON_LEFT_SHOULDER = 9, GAMEPAD_BUTTON_RIGHT_SHOULDER = 10,
    GAMEPAD_BUTTON_DPAD_UP = 11, GAMEPAD_BUTTON_DPAD_DOWN = 12,
    GAMEPAD_BUTTON_DPAD_LEFT = 13, GAMEPAD_BUTTON_DPAD_RIGHT = 14,
    GAMEPAD_BUTTON_MISC1 = 15, GAMEPAD_BUTTON_RIGHT_PADDLE1 = 16,
    GAMEPAD_BUTTON_LEFT_PADDLE1 = 17, GAMEPAD_BUTTON_RIGHT_PADDLE2 = 18,
    GAMEPAD_BUTTON_LEFT_PADDLE2 = 19, GAMEPAD_BUTTON_TOUCHPAD = 20,
    GAMEPAD_BUTTON_MISC2 = 21, GAMEPAD_BUTTON_MISC3 = 22,
    GAMEPAD_BUTTON_MISC4 = 23, GAMEPAD_BUTTON_MISC5 = 24,
    GAMEPAD_BUTTON_MISC6 = 25, GAMEPAD_BUTTON_COUNT = 26
type
  enum_GamepadButtonLabel_520094532* {.size: sizeof(cint).} = enum
    GAMEPAD_BUTTON_LABEL_UNKNOWN = 0, GAMEPAD_BUTTON_LABEL_A = 1,
    GAMEPAD_BUTTON_LABEL_B = 2, GAMEPAD_BUTTON_LABEL_X = 3,
    GAMEPAD_BUTTON_LABEL_Y = 4, GAMEPAD_BUTTON_LABEL_CROSS = 5,
    GAMEPAD_BUTTON_LABEL_CIRCLE = 6, GAMEPAD_BUTTON_LABEL_SQUARE = 7,
    GAMEPAD_BUTTON_LABEL_TRIANGLE = 8
type
  enum_GamepadAxis_520094536* {.size: sizeof(cint).} = enum
    GAMEPAD_AXIS_INVALID = -1, GAMEPAD_AXIS_LEFTX = 0, GAMEPAD_AXIS_LEFTY = 1,
    GAMEPAD_AXIS_RIGHTX = 2, GAMEPAD_AXIS_RIGHTY = 3,
    GAMEPAD_AXIS_LEFT_TRIGGER = 4, GAMEPAD_AXIS_RIGHT_TRIGGER = 5,
    GAMEPAD_AXIS_COUNT = 6
type
  enum_GamepadBindingType_520094540* {.size: sizeof(cint).} = enum
    GAMEPAD_BINDTYPE_NONE = 0, GAMEPAD_BINDTYPE_BUTTON = 1,
    GAMEPAD_BINDTYPE_AXIS = 2, GAMEPAD_BINDTYPE_HAT = 3
type
  enum_Scancode_520094548* {.size: sizeof(cint).} = enum
    SCANCODE_UNKNOWN = 0, SCANCODE_A = 4, SCANCODE_B = 5, SCANCODE_C = 6,
    SCANCODE_D = 7, SCANCODE_E = 8, SCANCODE_F = 9, SCANCODE_G = 10,
    SCANCODE_H = 11, SCANCODE_I = 12, SCANCODE_J = 13, SCANCODE_K = 14,
    SCANCODE_L = 15, SCANCODE_M = 16, SCANCODE_N = 17, SCANCODE_O = 18,
    SCANCODE_P = 19, SCANCODE_Q = 20, SCANCODE_R = 21, SCANCODE_S = 22,
    SCANCODE_T = 23, SCANCODE_U = 24, SCANCODE_V = 25, SCANCODE_W = 26,
    SCANCODE_X = 27, SCANCODE_Y = 28, SCANCODE_Z = 29, SCANCODE_1 = 30,
    SCANCODE_2 = 31, SCANCODE_3 = 32, SCANCODE_4 = 33, SCANCODE_5 = 34,
    SCANCODE_6 = 35, SCANCODE_7 = 36, SCANCODE_8 = 37, SCANCODE_9 = 38,
    SCANCODE_0 = 39, SCANCODE_RETURN = 40, SCANCODE_ESCAPE = 41,
    SCANCODE_BACKSPACE = 42, SCANCODE_TAB = 43, SCANCODE_SPACE = 44,
    SCANCODE_MINUS = 45, SCANCODE_EQUALS = 46, SCANCODE_LEFTBRACKET = 47,
    SCANCODE_RIGHTBRACKET = 48, SCANCODE_BACKSLASH = 49,
    SCANCODE_NONUSHASH = 50, SCANCODE_SEMICOLON = 51, SCANCODE_APOSTROPHE = 52,
    SCANCODE_GRAVE = 53, SCANCODE_COMMA = 54, SCANCODE_PERIOD = 55,
    SCANCODE_SLASH = 56, SCANCODE_CAPSLOCK = 57, SCANCODE_F1 = 58,
    SCANCODE_F2 = 59, SCANCODE_F3 = 60, SCANCODE_F4 = 61, SCANCODE_F5 = 62,
    SCANCODE_F6 = 63, SCANCODE_F7 = 64, SCANCODE_F8 = 65, SCANCODE_F9 = 66,
    SCANCODE_F10 = 67, SCANCODE_F11 = 68, SCANCODE_F12 = 69,
    SCANCODE_PRINTSCREEN = 70, SCANCODE_SCROLLLOCK = 71, SCANCODE_PAUSE = 72,
    SCANCODE_INSERT = 73, SCANCODE_HOME = 74, SCANCODE_PAGEUP = 75,
    SCANCODE_DELETE = 76, SCANCODE_END = 77, SCANCODE_PAGEDOWN = 78,
    SCANCODE_RIGHT = 79, SCANCODE_LEFT = 80, SCANCODE_DOWN = 81,
    SCANCODE_UP = 82, SCANCODE_NUMLOCKCLEAR = 83, SCANCODE_KP_DIVIDE = 84,
    SCANCODE_KP_MULTIPLY = 85, SCANCODE_KP_MINUS = 86, SCANCODE_KP_PLUS = 87,
    SCANCODE_KP_ENTER = 88, SCANCODE_KP_1 = 89, SCANCODE_KP_2 = 90,
    SCANCODE_KP_3 = 91, SCANCODE_KP_4 = 92, SCANCODE_KP_5 = 93,
    SCANCODE_KP_6 = 94, SCANCODE_KP_7 = 95, SCANCODE_KP_8 = 96,
    SCANCODE_KP_9 = 97, SCANCODE_KP_0 = 98, SCANCODE_KP_PERIOD = 99,
    SCANCODE_NONUSBACKSLASH = 100, SCANCODE_APPLICATION = 101,
    SCANCODE_POWER = 102, SCANCODE_KP_EQUALS = 103, SCANCODE_F13 = 104,
    SCANCODE_F14 = 105, SCANCODE_F15 = 106, SCANCODE_F16 = 107,
    SCANCODE_F17 = 108, SCANCODE_F18 = 109, SCANCODE_F19 = 110,
    SCANCODE_F20 = 111, SCANCODE_F21 = 112, SCANCODE_F22 = 113,
    SCANCODE_F23 = 114, SCANCODE_F24 = 115, SCANCODE_EXECUTE = 116,
    SCANCODE_HELP = 117, SCANCODE_MENU = 118, SCANCODE_SELECT = 119,
    SCANCODE_STOP = 120, SCANCODE_AGAIN = 121, SCANCODE_UNDO = 122,
    SCANCODE_CUT = 123, SCANCODE_COPY = 124, SCANCODE_PASTE = 125,
    SCANCODE_FIND = 126, SCANCODE_MUTE = 127, SCANCODE_VOLUMEUP = 128,
    SCANCODE_VOLUMEDOWN = 129, SCANCODE_KP_COMMA = 133,
    SCANCODE_KP_EQUALSAS400 = 134, SCANCODE_INTERNATIONAL1 = 135,
    SCANCODE_INTERNATIONAL2 = 136, SCANCODE_INTERNATIONAL3 = 137,
    SCANCODE_INTERNATIONAL4 = 138, SCANCODE_INTERNATIONAL5 = 139,
    SCANCODE_INTERNATIONAL6 = 140, SCANCODE_INTERNATIONAL7 = 141,
    SCANCODE_INTERNATIONAL8 = 142, SCANCODE_INTERNATIONAL9 = 143,
    SCANCODE_LANG1 = 144, SCANCODE_LANG2 = 145, SCANCODE_LANG3 = 146,
    SCANCODE_LANG4 = 147, SCANCODE_LANG5 = 148, SCANCODE_LANG6 = 149,
    SCANCODE_LANG7 = 150, SCANCODE_LANG8 = 151, SCANCODE_LANG9 = 152,
    SCANCODE_ALTERASE = 153, SCANCODE_SYSREQ = 154, SCANCODE_CANCEL = 155,
    SCANCODE_CLEAR = 156, SCANCODE_PRIOR = 157, SCANCODE_RETURN2 = 158,
    SCANCODE_SEPARATOR = 159, SCANCODE_OUT = 160, SCANCODE_OPER = 161,
    SCANCODE_CLEARAGAIN = 162, SCANCODE_CRSEL = 163, SCANCODE_EXSEL = 164,
    SCANCODE_KP_00 = 176, SCANCODE_KP_000 = 177,
    SCANCODE_THOUSANDSSEPARATOR = 178, SCANCODE_DECIMALSEPARATOR = 179,
    SCANCODE_CURRENCYUNIT = 180, SCANCODE_CURRENCYSUBUNIT = 181,
    SCANCODE_KP_LEFTPAREN = 182, SCANCODE_KP_RIGHTPAREN = 183,
    SCANCODE_KP_LEFTBRACE = 184, SCANCODE_KP_RIGHTBRACE = 185,
    SCANCODE_KP_TAB = 186, SCANCODE_KP_BACKSPACE = 187, SCANCODE_KP_A = 188,
    SCANCODE_KP_B = 189, SCANCODE_KP_C = 190, SCANCODE_KP_D = 191,
    SCANCODE_KP_E = 192, SCANCODE_KP_F = 193, SCANCODE_KP_XOR = 194,
    SCANCODE_KP_POWER = 195, SCANCODE_KP_PERCENT = 196, SCANCODE_KP_LESS = 197,
    SCANCODE_KP_GREATER = 198, SCANCODE_KP_AMPERSAND = 199,
    SCANCODE_KP_DBLAMPERSAND = 200, SCANCODE_KP_VERTICALBAR = 201,
    SCANCODE_KP_DBLVERTICALBAR = 202, SCANCODE_KP_COLON = 203,
    SCANCODE_KP_HASH = 204, SCANCODE_KP_SPACE = 205, SCANCODE_KP_AT = 206,
    SCANCODE_KP_EXCLAM = 207, SCANCODE_KP_MEMSTORE = 208,
    SCANCODE_KP_MEMRECALL = 209, SCANCODE_KP_MEMCLEAR = 210,
    SCANCODE_KP_MEMADD = 211, SCANCODE_KP_MEMSUBTRACT = 212,
    SCANCODE_KP_MEMMULTIPLY = 213, SCANCODE_KP_MEMDIVIDE = 214,
    SCANCODE_KP_PLUSMINUS = 215, SCANCODE_KP_CLEAR = 216,
    SCANCODE_KP_CLEARENTRY = 217, SCANCODE_KP_BINARY = 218,
    SCANCODE_KP_OCTAL = 219, SCANCODE_KP_DECIMAL = 220,
    SCANCODE_KP_HEXADECIMAL = 221, SCANCODE_LCTRL = 224, SCANCODE_LSHIFT = 225,
    SCANCODE_LALT = 226, SCANCODE_LGUI = 227, SCANCODE_RCTRL = 228,
    SCANCODE_RSHIFT = 229, SCANCODE_RALT = 230, SCANCODE_RGUI = 231,
    SCANCODE_MODE = 257, SCANCODE_SLEEP = 258, SCANCODE_WAKE = 259,
    SCANCODE_CHANNEL_INCREMENT = 260, SCANCODE_CHANNEL_DECREMENT = 261,
    SCANCODE_MEDIA_PLAY = 262, SCANCODE_MEDIA_PAUSE = 263,
    SCANCODE_MEDIA_RECORD = 264, SCANCODE_MEDIA_FAST_FORWARD = 265,
    SCANCODE_MEDIA_REWIND = 266, SCANCODE_MEDIA_NEXT_TRACK = 267,
    SCANCODE_MEDIA_PREVIOUS_TRACK = 268, SCANCODE_MEDIA_STOP = 269,
    SCANCODE_MEDIA_EJECT = 270, SCANCODE_MEDIA_PLAY_PAUSE = 271,
    SCANCODE_MEDIA_SELECT_enumval = 272, SCANCODE_AC_NEW = 273,
    SCANCODE_AC_OPEN = 274, SCANCODE_AC_CLOSE = 275, SCANCODE_AC_EXIT = 276,
    SCANCODE_AC_SAVE = 277, SCANCODE_AC_PRINT = 278,
    SCANCODE_AC_PROPERTIES = 279, SCANCODE_AC_SEARCH = 280,
    SCANCODE_AC_HOME = 281, SCANCODE_AC_BACK = 282, SCANCODE_AC_FORWARD = 283,
    SCANCODE_AC_STOP = 284, SCANCODE_AC_REFRESH = 285,
    SCANCODE_AC_BOOKMARKS = 286, SCANCODE_SOFTLEFT = 287,
    SCANCODE_SOFTRIGHT = 288, SCANCODE_CALL = 289, SCANCODE_ENDCALL = 290,
    SCANCODE_RESERVED = 400, SCANCODE_COUNT = 512
type
  enum_TextInputType_520094558* {.size: sizeof(cint).} = enum
    TEXTINPUT_TYPE_TEXT = 0, TEXTINPUT_TYPE_TEXT_NAME = 1,
    TEXTINPUT_TYPE_TEXT_EMAIL = 2, TEXTINPUT_TYPE_TEXT_USERNAME = 3,
    TEXTINPUT_TYPE_TEXT_PASSWORD_HIDDEN = 4,
    TEXTINPUT_TYPE_TEXT_PASSWORD_VISIBLE = 5, TEXTINPUT_TYPE_NUMBER = 6,
    TEXTINPUT_TYPE_NUMBER_PASSWORD_HIDDEN = 7,
    TEXTINPUT_TYPE_NUMBER_PASSWORD_VISIBLE = 8
type
  enum_Capitalization_520094562* {.size: sizeof(cint).} = enum
    CAPITALIZE_NONE = 0, CAPITALIZE_SENTENCES = 1, CAPITALIZE_WORDS = 2,
    CAPITALIZE_LETTERS = 3
type
  enum_SystemCursor_520094570* {.size: sizeof(cint).} = enum
    SYSTEM_CURSOR_DEFAULT = 0, SYSTEM_CURSOR_TEXT = 1, SYSTEM_CURSOR_WAIT = 2,
    SYSTEM_CURSOR_CROSSHAIR = 3, SYSTEM_CURSOR_PROGRESS = 4,
    SYSTEM_CURSOR_NWSE_RESIZE = 5, SYSTEM_CURSOR_NESW_RESIZE = 6,
    SYSTEM_CURSOR_EW_RESIZE = 7, SYSTEM_CURSOR_NS_RESIZE = 8,
    SYSTEM_CURSOR_MOVE = 9, SYSTEM_CURSOR_NOT_ALLOWED = 10,
    SYSTEM_CURSOR_POINTER = 11, SYSTEM_CURSOR_NW_RESIZE = 12,
    SYSTEM_CURSOR_N_RESIZE = 13, SYSTEM_CURSOR_NE_RESIZE = 14,
    SYSTEM_CURSOR_E_RESIZE = 15, SYSTEM_CURSOR_SE_RESIZE = 16,
    SYSTEM_CURSOR_S_RESIZE = 17, SYSTEM_CURSOR_SW_RESIZE = 18,
    SYSTEM_CURSOR_W_RESIZE = 19, SYSTEM_CURSOR_COUNT = 20
type
  enum_MouseWheelDirection_520094574* {.size: sizeof(cint).} = enum
    MOUSEWHEEL_NORMAL = 0, MOUSEWHEEL_FLIPPED = 1
type
  enum_PenAxis_520094584* {.size: sizeof(cint).} = enum
    PEN_AXIS_PRESSURE = 0, PEN_AXIS_XTILT = 1, PEN_AXIS_YTILT = 2,
    PEN_AXIS_DISTANCE = 3, PEN_AXIS_ROTATION = 4, PEN_AXIS_SLIDER = 5,
    PEN_AXIS_TANGENTIAL_PRESSURE = 6, PEN_AXIS_COUNT = 7
type
  enum_TouchDeviceType_520094592* {.size: sizeof(cint).} = enum
    TOUCH_DEVICE_INVALID = -1, TOUCH_DEVICE_DIRECT = 0,
    TOUCH_DEVICE_INDIRECT_ABSOLUTE = 1, TOUCH_DEVICE_INDIRECT_RELATIVE = 2
type
  enum_EventType_520094600* {.size: sizeof(cint).} = enum
    EVENT_FIRST = 0, EVENT_QUIT = 256, EVENT_TERMINATING = 257,
    EVENT_LOW_MEMORY = 258, EVENT_WILL_ENTER_BACKGROUND = 259,
    EVENT_DID_ENTER_BACKGROUND = 260, EVENT_WILL_ENTER_FOREGROUND = 261,
    EVENT_DID_ENTER_FOREGROUND = 262, EVENT_LOCALE_CHANGED = 263,
    EVENT_SYSTEM_THEME_CHANGED = 264, EVENT_DISPLAY_ORIENTATION = 337,
    EVENT_DISPLAY_ADDED = 338, EVENT_DISPLAY_REMOVED = 339,
    EVENT_DISPLAY_MOVED = 340, EVENT_DISPLAY_DESKTOP_MODE_CHANGED = 341,
    EVENT_DISPLAY_CURRENT_MODE_CHANGED = 342,
    EVENT_DISPLAY_CONTENT_SCALE_CHANGED = 343, EVENT_WINDOW_SHOWN = 514,
    EVENT_WINDOW_HIDDEN = 515, EVENT_WINDOW_EXPOSED = 516,
    EVENT_WINDOW_MOVED = 517, EVENT_WINDOW_RESIZED = 518,
    EVENT_WINDOW_PIXEL_SIZE_CHANGED = 519,
    EVENT_WINDOW_METAL_VIEW_RESIZED = 520, EVENT_WINDOW_MINIMIZED = 521,
    EVENT_WINDOW_MAXIMIZED = 522, EVENT_WINDOW_RESTORED = 523,
    EVENT_WINDOW_MOUSE_ENTER = 524, EVENT_WINDOW_MOUSE_LEAVE = 525,
    EVENT_WINDOW_FOCUS_GAINED = 526, EVENT_WINDOW_FOCUS_LOST = 527,
    EVENT_WINDOW_CLOSE_REQUESTED = 528, EVENT_WINDOW_HIT_TEST = 529,
    EVENT_WINDOW_ICCPROF_CHANGED = 530, EVENT_WINDOW_DISPLAY_CHANGED = 531,
    EVENT_WINDOW_DISPLAY_SCALE_CHANGED = 532,
    EVENT_WINDOW_SAFE_AREA_CHANGED = 533, EVENT_WINDOW_OCCLUDED = 534,
    EVENT_WINDOW_ENTER_FULLSCREEN = 535, EVENT_WINDOW_LEAVE_FULLSCREEN = 536,
    EVENT_WINDOW_DESTROYED = 537, EVENT_WINDOW_HDR_STATE_CHANGED = 538,
    EVENT_KEY_DOWN = 768, EVENT_KEY_UP = 769, EVENT_TEXT_EDITING = 770,
    EVENT_TEXT_INPUT = 771, EVENT_KEYMAP_CHANGED = 772,
    EVENT_KEYBOARD_ADDED = 773, EVENT_KEYBOARD_REMOVED = 774,
    EVENT_TEXT_EDITING_CANDIDATES = 775, EVENT_MOUSE_MOTION = 1024,
    EVENT_MOUSE_BUTTON_DOWN = 1025, EVENT_MOUSE_BUTTON_UP = 1026,
    EVENT_MOUSE_WHEEL = 1027, EVENT_MOUSE_ADDED = 1028,
    EVENT_MOUSE_REMOVED = 1029, EVENT_JOYSTICK_AXIS_MOTION = 1536,
    EVENT_JOYSTICK_BALL_MOTION = 1537, EVENT_JOYSTICK_HAT_MOTION = 1538,
    EVENT_JOYSTICK_BUTTON_DOWN = 1539, EVENT_JOYSTICK_BUTTON_UP = 1540,
    EVENT_JOYSTICK_ADDED = 1541, EVENT_JOYSTICK_REMOVED = 1542,
    EVENT_JOYSTICK_BATTERY_UPDATED = 1543,
    EVENT_JOYSTICK_UPDATE_COMPLETE = 1544, EVENT_GAMEPAD_AXIS_MOTION = 1616,
    EVENT_GAMEPAD_BUTTON_DOWN = 1617, EVENT_GAMEPAD_BUTTON_UP = 1618,
    EVENT_GAMEPAD_ADDED = 1619, EVENT_GAMEPAD_REMOVED = 1620,
    EVENT_GAMEPAD_REMAPPED = 1621, EVENT_GAMEPAD_TOUCHPAD_DOWN = 1622,
    EVENT_GAMEPAD_TOUCHPAD_MOTION = 1623, EVENT_GAMEPAD_TOUCHPAD_UP = 1624,
    EVENT_GAMEPAD_SENSOR_UPDATE = 1625, EVENT_GAMEPAD_UPDATE_COMPLETE = 1626,
    EVENT_GAMEPAD_STEAM_HANDLE_UPDATED = 1627, EVENT_FINGER_DOWN = 1792,
    EVENT_FINGER_UP = 1793, EVENT_FINGER_MOTION = 1794,
    EVENT_CLIPBOARD_UPDATE = 2304, EVENT_DROP_FILE = 4096,
    EVENT_DROP_TEXT = 4097, EVENT_DROP_BEGIN = 4098, EVENT_DROP_COMPLETE = 4099,
    EVENT_DROP_POSITION = 4100, EVENT_AUDIO_DEVICE_ADDED = 4352,
    EVENT_AUDIO_DEVICE_REMOVED = 4353, EVENT_AUDIO_DEVICE_FORMAT_CHANGED = 4354,
    EVENT_SENSOR_UPDATE = 4608, EVENT_PEN_PROXIMITY_IN = 4864,
    EVENT_PEN_PROXIMITY_OUT = 4865, EVENT_PEN_DOWN = 4866, EVENT_PEN_UP = 4867,
    EVENT_PEN_BUTTON_DOWN = 4868, EVENT_PEN_BUTTON_UP = 4869,
    EVENT_PEN_MOTION = 4870, EVENT_PEN_AXIS = 4871,
    EVENT_CAMERA_DEVICE_ADDED = 5120, EVENT_CAMERA_DEVICE_REMOVED = 5121,
    EVENT_CAMERA_DEVICE_APPROVED = 5122, EVENT_CAMERA_DEVICE_DENIED = 5123,
    EVENT_RENDER_TARGETS_RESET = 8192, EVENT_RENDER_DEVICE_RESET = 8193,
    EVENT_RENDER_DEVICE_LOST = 8194, EVENT_PRIVATE0 = 16384,
    EVENT_PRIVATE1 = 16385, EVENT_PRIVATE2 = 16386, EVENT_PRIVATE3 = 16387,
    EVENT_POLL_SENTINEL = 32512, EVENT_USER = 32768, EVENT_LAST = 65535,
    EVENT_ENUM_PADDING = 2147483647
when not declared(EVENT_DISPLAY_FIRST):
  const
    EVENT_DISPLAY_FIRST* = enum_EventType_520094600.EVENT_DISPLAY_ORIENTATION
else:
  static :
    hint("Declaration of " & "EVENT_DISPLAY_FIRST" &
        " already exists, not redeclaring")
when not declared(EVENT_DISPLAY_LAST):
  const
    EVENT_DISPLAY_LAST* = enum_EventType_520094600.EVENT_DISPLAY_CONTENT_SCALE_CHANGED
else:
  static :
    hint("Declaration of " & "EVENT_DISPLAY_LAST" &
        " already exists, not redeclaring")
when not declared(EVENT_WINDOW_FIRST):
  const
    EVENT_WINDOW_FIRST* = enum_EventType_520094600.EVENT_WINDOW_SHOWN
else:
  static :
    hint("Declaration of " & "EVENT_WINDOW_FIRST" &
        " already exists, not redeclaring")
when not declared(EVENT_WINDOW_LAST):
  const
    EVENT_WINDOW_LAST* = enum_EventType_520094600.EVENT_WINDOW_HDR_STATE_CHANGED
else:
  static :
    hint("Declaration of " & "EVENT_WINDOW_LAST" &
        " already exists, not redeclaring")
type
  enum_EventAction_520094756* {.size: sizeof(cint).} = enum
    ADDEVENT = 0, PEEKEVENT = 1, GETEVENT = 2
type
  enum_Folder_520094762* {.size: sizeof(cint).} = enum
    FOLDER_HOME = 0, FOLDER_DESKTOP = 1, FOLDER_DOCUMENTS = 2,
    FOLDER_DOWNLOADS = 3, FOLDER_MUSIC = 4, FOLDER_PICTURES = 5,
    FOLDER_PUBLICSHARE = 6, FOLDER_SAVEDGAMES = 7, FOLDER_SCREENSHOTS = 8,
    FOLDER_TEMPLATES = 9, FOLDER_VIDEOS = 10, FOLDER_COUNT = 11
type
  enum_PathType_520094766* {.size: sizeof(cint).} = enum
    PATHTYPE_NONE = 0, PATHTYPE_FILE = 1, PATHTYPE_DIRECTORY = 2,
    PATHTYPE_OTHER = 3
type
  enum_EnumerationResult_520094776* {.size: sizeof(cint).} = enum
    ENUM_CONTINUE = 0, ENUM_SUCCESS = 1, ENUM_FAILURE = 2
type
  enum_GPUPrimitiveType_520094808* {.size: sizeof(cint).} = enum
    GPU_PRIMITIVETYPE_TRIANGLELIST = 0, GPU_PRIMITIVETYPE_TRIANGLESTRIP = 1,
    GPU_PRIMITIVETYPE_LINELIST = 2, GPU_PRIMITIVETYPE_LINESTRIP = 3,
    GPU_PRIMITIVETYPE_POINTLIST = 4
type
  enum_GPULoadOp_520094812* {.size: sizeof(cint).} = enum
    GPU_LOADOP_LOAD = 0, GPU_LOADOP_CLEAR = 1, GPU_LOADOP_DONT_CARE = 2
type
  enum_GPUStoreOp_520094816* {.size: sizeof(cint).} = enum
    GPU_STOREOP_STORE = 0, GPU_STOREOP_DONT_CARE = 1, GPU_STOREOP_RESOLVE = 2,
    GPU_STOREOP_RESOLVE_AND_STORE = 3
type
  enum_GPUIndexElementSize_520094820* {.size: sizeof(cint).} = enum
    GPU_INDEXELEMENTSIZE_16BIT = 0, GPU_INDEXELEMENTSIZE_32BIT = 1
type
  enum_GPUTextureFormat_520094824* {.size: sizeof(cint).} = enum
    GPU_TEXTUREFORMAT_INVALID = 0, GPU_TEXTUREFORMAT_A8_UNORM = 1,
    GPU_TEXTUREFORMAT_R8_UNORM = 2, GPU_TEXTUREFORMAT_R8G8_UNORM = 3,
    GPU_TEXTUREFORMAT_R8G8B8A8_UNORM = 4, GPU_TEXTUREFORMAT_R16_UNORM = 5,
    GPU_TEXTUREFORMAT_R16G16_UNORM = 6,
    GPU_TEXTUREFORMAT_R16G16B16A16_UNORM = 7,
    GPU_TEXTUREFORMAT_R10G10B10A2_UNORM = 8, GPU_TEXTUREFORMAT_B5G6R5_UNORM = 9,
    GPU_TEXTUREFORMAT_B5G5R5A1_UNORM = 10,
    GPU_TEXTUREFORMAT_B4G4R4A4_UNORM = 11,
    GPU_TEXTUREFORMAT_B8G8R8A8_UNORM = 12,
    GPU_TEXTUREFORMAT_BC1_RGBA_UNORM = 13,
    GPU_TEXTUREFORMAT_BC2_RGBA_UNORM = 14,
    GPU_TEXTUREFORMAT_BC3_RGBA_UNORM = 15, GPU_TEXTUREFORMAT_BC4_R_UNORM = 16,
    GPU_TEXTUREFORMAT_BC5_RG_UNORM = 17, GPU_TEXTUREFORMAT_BC7_RGBA_UNORM = 18,
    GPU_TEXTUREFORMAT_BC6H_RGB_FLOAT = 19,
    GPU_TEXTUREFORMAT_BC6H_RGB_UFLOAT = 20, GPU_TEXTUREFORMAT_R8_SNORM = 21,
    GPU_TEXTUREFORMAT_R8G8_SNORM = 22, GPU_TEXTUREFORMAT_R8G8B8A8_SNORM = 23,
    GPU_TEXTUREFORMAT_R16_SNORM = 24, GPU_TEXTUREFORMAT_R16G16_SNORM = 25,
    GPU_TEXTUREFORMAT_R16G16B16A16_SNORM = 26, GPU_TEXTUREFORMAT_R16_FLOAT = 27,
    GPU_TEXTUREFORMAT_R16G16_FLOAT = 28,
    GPU_TEXTUREFORMAT_R16G16B16A16_FLOAT = 29, GPU_TEXTUREFORMAT_R32_FLOAT = 30,
    GPU_TEXTUREFORMAT_R32G32_FLOAT = 31,
    GPU_TEXTUREFORMAT_R32G32B32A32_FLOAT = 32,
    GPU_TEXTUREFORMAT_R11G11B10_UFLOAT = 33, GPU_TEXTUREFORMAT_R8_UINT = 34,
    GPU_TEXTUREFORMAT_R8G8_UINT = 35, GPU_TEXTUREFORMAT_R8G8B8A8_UINT = 36,
    GPU_TEXTUREFORMAT_R16_UINT = 37, GPU_TEXTUREFORMAT_R16G16_UINT = 38,
    GPU_TEXTUREFORMAT_R16G16B16A16_UINT = 39, GPU_TEXTUREFORMAT_R32_UINT = 40,
    GPU_TEXTUREFORMAT_R32G32_UINT = 41,
    GPU_TEXTUREFORMAT_R32G32B32A32_UINT = 42, GPU_TEXTUREFORMAT_R8_INT = 43,
    GPU_TEXTUREFORMAT_R8G8_INT = 44, GPU_TEXTUREFORMAT_R8G8B8A8_INT = 45,
    GPU_TEXTUREFORMAT_R16_INT = 46, GPU_TEXTUREFORMAT_R16G16_INT = 47,
    GPU_TEXTUREFORMAT_R16G16B16A16_INT = 48, GPU_TEXTUREFORMAT_R32_INT = 49,
    GPU_TEXTUREFORMAT_R32G32_INT = 50, GPU_TEXTUREFORMAT_R32G32B32A32_INT = 51,
    GPU_TEXTUREFORMAT_R8G8B8A8_UNORM_SRGB = 52,
    GPU_TEXTUREFORMAT_B8G8R8A8_UNORM_SRGB = 53,
    GPU_TEXTUREFORMAT_BC1_RGBA_UNORM_SRGB = 54,
    GPU_TEXTUREFORMAT_BC2_RGBA_UNORM_SRGB = 55,
    GPU_TEXTUREFORMAT_BC3_RGBA_UNORM_SRGB = 56,
    GPU_TEXTUREFORMAT_BC7_RGBA_UNORM_SRGB = 57,
    GPU_TEXTUREFORMAT_D16_UNORM = 58, GPU_TEXTUREFORMAT_D24_UNORM = 59,
    GPU_TEXTUREFORMAT_D32_FLOAT = 60, GPU_TEXTUREFORMAT_D24_UNORM_S8_UINT = 61,
    GPU_TEXTUREFORMAT_D32_FLOAT_S8_UINT = 62,
    GPU_TEXTUREFORMAT_ASTC_4x4_UNORM = 63,
    GPU_TEXTUREFORMAT_ASTC_5x4_UNORM = 64,
    GPU_TEXTUREFORMAT_ASTC_5x5_UNORM = 65,
    GPU_TEXTUREFORMAT_ASTC_6x5_UNORM = 66,
    GPU_TEXTUREFORMAT_ASTC_6x6_UNORM = 67,
    GPU_TEXTUREFORMAT_ASTC_8x5_UNORM = 68,
    GPU_TEXTUREFORMAT_ASTC_8x6_UNORM = 69,
    GPU_TEXTUREFORMAT_ASTC_8x8_UNORM = 70,
    GPU_TEXTUREFORMAT_ASTC_10x5_UNORM = 71,
    GPU_TEXTUREFORMAT_ASTC_10x6_UNORM = 72,
    GPU_TEXTUREFORMAT_ASTC_10x8_UNORM = 73,
    GPU_TEXTUREFORMAT_ASTC_10x10_UNORM = 74,
    GPU_TEXTUREFORMAT_ASTC_12x10_UNORM = 75,
    GPU_TEXTUREFORMAT_ASTC_12x12_UNORM = 76,
    GPU_TEXTUREFORMAT_ASTC_4x4_UNORM_SRGB = 77,
    GPU_TEXTUREFORMAT_ASTC_5x4_UNORM_SRGB = 78,
    GPU_TEXTUREFORMAT_ASTC_5x5_UNORM_SRGB = 79,
    GPU_TEXTUREFORMAT_ASTC_6x5_UNORM_SRGB = 80,
    GPU_TEXTUREFORMAT_ASTC_6x6_UNORM_SRGB = 81,
    GPU_TEXTUREFORMAT_ASTC_8x5_UNORM_SRGB = 82,
    GPU_TEXTUREFORMAT_ASTC_8x6_UNORM_SRGB = 83,
    GPU_TEXTUREFORMAT_ASTC_8x8_UNORM_SRGB = 84,
    GPU_TEXTUREFORMAT_ASTC_10x5_UNORM_SRGB = 85,
    GPU_TEXTUREFORMAT_ASTC_10x6_UNORM_SRGB = 86,
    GPU_TEXTUREFORMAT_ASTC_10x8_UNORM_SRGB = 87,
    GPU_TEXTUREFORMAT_ASTC_10x10_UNORM_SRGB = 88,
    GPU_TEXTUREFORMAT_ASTC_12x10_UNORM_SRGB = 89,
    GPU_TEXTUREFORMAT_ASTC_12x12_UNORM_SRGB = 90,
    GPU_TEXTUREFORMAT_ASTC_4x4_FLOAT = 91,
    GPU_TEXTUREFORMAT_ASTC_5x4_FLOAT = 92,
    GPU_TEXTUREFORMAT_ASTC_5x5_FLOAT = 93,
    GPU_TEXTUREFORMAT_ASTC_6x5_FLOAT = 94,
    GPU_TEXTUREFORMAT_ASTC_6x6_FLOAT = 95,
    GPU_TEXTUREFORMAT_ASTC_8x5_FLOAT = 96,
    GPU_TEXTUREFORMAT_ASTC_8x6_FLOAT = 97,
    GPU_TEXTUREFORMAT_ASTC_8x8_FLOAT = 98,
    GPU_TEXTUREFORMAT_ASTC_10x5_FLOAT = 99,
    GPU_TEXTUREFORMAT_ASTC_10x6_FLOAT = 100,
    GPU_TEXTUREFORMAT_ASTC_10x8_FLOAT = 101,
    GPU_TEXTUREFORMAT_ASTC_10x10_FLOAT = 102,
    GPU_TEXTUREFORMAT_ASTC_12x10_FLOAT = 103,
    GPU_TEXTUREFORMAT_ASTC_12x12_FLOAT = 104
type
  enum_GPUTextureType_520094830* {.size: sizeof(cint).} = enum
    GPU_TEXTURETYPE_2D = 0, GPU_TEXTURETYPE_2D_ARRAY = 1,
    GPU_TEXTURETYPE_3D = 2, GPU_TEXTURETYPE_CUBE = 3,
    GPU_TEXTURETYPE_CUBE_ARRAY = 4
type
  enum_GPUSampleCount_520094834* {.size: sizeof(cint).} = enum
    GPU_SAMPLECOUNT_1 = 0, GPU_SAMPLECOUNT_2 = 1, GPU_SAMPLECOUNT_4 = 2,
    GPU_SAMPLECOUNT_8 = 3
type
  enum_GPUCubeMapFace_520094838* {.size: sizeof(cint).} = enum
    GPU_CUBEMAPFACE_POSITIVEX = 0, GPU_CUBEMAPFACE_NEGATIVEX = 1,
    GPU_CUBEMAPFACE_POSITIVEY = 2, GPU_CUBEMAPFACE_NEGATIVEY = 3,
    GPU_CUBEMAPFACE_POSITIVEZ = 4, GPU_CUBEMAPFACE_NEGATIVEZ = 5
type
  enum_GPUTransferBufferUsage_520094844* {.size: sizeof(cint).} = enum
    GPU_TRANSFERBUFFERUSAGE_UPLOAD = 0, GPU_TRANSFERBUFFERUSAGE_DOWNLOAD = 1
type
  enum_GPUShaderStage_520094848* {.size: sizeof(cint).} = enum
    GPU_SHADERSTAGE_VERTEX = 0, GPU_SHADERSTAGE_FRAGMENT = 1
type
  enum_GPUVertexElementFormat_520094854* {.size: sizeof(cint).} = enum
    GPU_VERTEXELEMENTFORMAT_INVALID = 0, GPU_VERTEXELEMENTFORMAT_INT = 1,
    GPU_VERTEXELEMENTFORMAT_INT2 = 2, GPU_VERTEXELEMENTFORMAT_INT3 = 3,
    GPU_VERTEXELEMENTFORMAT_INT4 = 4, GPU_VERTEXELEMENTFORMAT_UINT = 5,
    GPU_VERTEXELEMENTFORMAT_UINT2 = 6, GPU_VERTEXELEMENTFORMAT_UINT3 = 7,
    GPU_VERTEXELEMENTFORMAT_UINT4 = 8, GPU_VERTEXELEMENTFORMAT_FLOAT = 9,
    GPU_VERTEXELEMENTFORMAT_FLOAT2 = 10, GPU_VERTEXELEMENTFORMAT_FLOAT3 = 11,
    GPU_VERTEXELEMENTFORMAT_FLOAT4 = 12, GPU_VERTEXELEMENTFORMAT_BYTE2 = 13,
    GPU_VERTEXELEMENTFORMAT_BYTE4 = 14, GPU_VERTEXELEMENTFORMAT_UBYTE2 = 15,
    GPU_VERTEXELEMENTFORMAT_UBYTE4 = 16,
    GPU_VERTEXELEMENTFORMAT_BYTE2_NORM = 17,
    GPU_VERTEXELEMENTFORMAT_BYTE4_NORM = 18,
    GPU_VERTEXELEMENTFORMAT_UBYTE2_NORM = 19,
    GPU_VERTEXELEMENTFORMAT_UBYTE4_NORM = 20,
    GPU_VERTEXELEMENTFORMAT_SHORT2 = 21, GPU_VERTEXELEMENTFORMAT_SHORT4 = 22,
    GPU_VERTEXELEMENTFORMAT_USHORT2 = 23, GPU_VERTEXELEMENTFORMAT_USHORT4 = 24,
    GPU_VERTEXELEMENTFORMAT_SHORT2_NORM = 25,
    GPU_VERTEXELEMENTFORMAT_SHORT4_NORM = 26,
    GPU_VERTEXELEMENTFORMAT_USHORT2_NORM = 27,
    GPU_VERTEXELEMENTFORMAT_USHORT4_NORM = 28,
    GPU_VERTEXELEMENTFORMAT_HALF2 = 29, GPU_VERTEXELEMENTFORMAT_HALF4 = 30
type
  enum_GPUVertexInputRate_520094858* {.size: sizeof(cint).} = enum
    GPU_VERTEXINPUTRATE_VERTEX = 0, GPU_VERTEXINPUTRATE_INSTANCE = 1
type
  enum_GPUFillMode_520094862* {.size: sizeof(cint).} = enum
    GPU_FILLMODE_FILL = 0, GPU_FILLMODE_LINE = 1
type
  enum_GPUCullMode_520094866* {.size: sizeof(cint).} = enum
    GPU_CULLMODE_NONE = 0, GPU_CULLMODE_FRONT = 1, GPU_CULLMODE_BACK = 2
type
  enum_GPUFrontFace_520094870* {.size: sizeof(cint).} = enum
    GPU_FRONTFACE_COUNTER_CLOCKWISE = 0, GPU_FRONTFACE_CLOCKWISE = 1
type
  enum_GPUCompareOp_520094874* {.size: sizeof(cint).} = enum
    GPU_COMPAREOP_INVALID = 0, GPU_COMPAREOP_NEVER = 1, GPU_COMPAREOP_LESS = 2,
    GPU_COMPAREOP_EQUAL = 3, GPU_COMPAREOP_LESS_OR_EQUAL = 4,
    GPU_COMPAREOP_GREATER = 5, GPU_COMPAREOP_NOT_EQUAL = 6,
    GPU_COMPAREOP_GREATER_OR_EQUAL = 7, GPU_COMPAREOP_ALWAYS = 8
type
  enum_GPUStencilOp_520094878* {.size: sizeof(cint).} = enum
    GPU_STENCILOP_INVALID = 0, GPU_STENCILOP_KEEP = 1, GPU_STENCILOP_ZERO = 2,
    GPU_STENCILOP_REPLACE = 3, GPU_STENCILOP_INCREMENT_AND_CLAMP = 4,
    GPU_STENCILOP_DECREMENT_AND_CLAMP = 5, GPU_STENCILOP_INVERT = 6,
    GPU_STENCILOP_INCREMENT_AND_WRAP = 7, GPU_STENCILOP_DECREMENT_AND_WRAP = 8
type
  enum_GPUBlendOp_520094882* {.size: sizeof(cint).} = enum
    GPU_BLENDOP_INVALID = 0, GPU_BLENDOP_ADD = 1, GPU_BLENDOP_SUBTRACT = 2,
    GPU_BLENDOP_REVERSE_SUBTRACT = 3, GPU_BLENDOP_MIN = 4, GPU_BLENDOP_MAX = 5
type
  enum_GPUBlendFactor_520094886* {.size: sizeof(cint).} = enum
    GPU_BLENDFACTOR_INVALID = 0, GPU_BLENDFACTOR_ZERO = 1,
    GPU_BLENDFACTOR_ONE = 2, GPU_BLENDFACTOR_SRC_COLOR = 3,
    GPU_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 4, GPU_BLENDFACTOR_DST_COLOR = 5,
    GPU_BLENDFACTOR_ONE_MINUS_DST_COLOR = 6, GPU_BLENDFACTOR_SRC_ALPHA = 7,
    GPU_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 8, GPU_BLENDFACTOR_DST_ALPHA = 9,
    GPU_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 10,
    GPU_BLENDFACTOR_CONSTANT_COLOR = 11,
    GPU_BLENDFACTOR_ONE_MINUS_CONSTANT_COLOR = 12,
    GPU_BLENDFACTOR_SRC_ALPHA_SATURATE = 13
type
  enum_GPUFilter_520094892* {.size: sizeof(cint).} = enum
    GPU_FILTER_NEAREST = 0, GPU_FILTER_LINEAR = 1
type
  enum_GPUSamplerMipmapMode_520094896* {.size: sizeof(cint).} = enum
    GPU_SAMPLERMIPMAPMODE_NEAREST = 0, GPU_SAMPLERMIPMAPMODE_LINEAR = 1
type
  enum_GPUSamplerAddressMode_520094900* {.size: sizeof(cint).} = enum
    GPU_SAMPLERADDRESSMODE_REPEAT = 0,
    GPU_SAMPLERADDRESSMODE_MIRRORED_REPEAT = 1,
    GPU_SAMPLERADDRESSMODE_CLAMP_TO_EDGE = 2
type
  enum_GPUPresentMode_520094904* {.size: sizeof(cint).} = enum
    GPU_PRESENTMODE_VSYNC = 0, GPU_PRESENTMODE_IMMEDIATE = 1,
    GPU_PRESENTMODE_MAILBOX = 2
type
  enum_GPUSwapchainComposition_520094908* {.size: sizeof(cint).} = enum
    GPU_SWAPCHAINCOMPOSITION_SDR = 0, GPU_SWAPCHAINCOMPOSITION_SDR_LINEAR = 1,
    GPU_SWAPCHAINCOMPOSITION_HDR_EXTENDED_LINEAR = 2,
    GPU_SWAPCHAINCOMPOSITION_HDR10_ST2048 = 3
type
  enum_hid_bus_type_520095090* {.size: sizeof(cint).} = enum
    HID_API_BUS_UNKNOWN = 0, HID_API_BUS_USB = 1, HID_API_BUS_BLUETOOTH = 2,
    HID_API_BUS_I2C = 3, HID_API_BUS_SPI = 4
type
  enum_HintPriority_520095098* {.size: sizeof(cint).} = enum
    HINT_DEFAULT = 0, HINT_NORMAL = 1, HINT_OVERRIDE = 2
type
  enum_AppResult_520095106* {.size: sizeof(cint).} = enum
    APP_CONTINUE = 0, APP_SUCCESS = 1, APP_FAILURE = 2
type
  enum_LogCategory_520095126* {.size: sizeof(cint).} = enum
    LOG_CATEGORY_APPLICATION = 0, LOG_CATEGORY_ERROR = 1,
    LOG_CATEGORY_ASSERT = 2, LOG_CATEGORY_SYSTEM = 3, LOG_CATEGORY_AUDIO = 4,
    LOG_CATEGORY_VIDEO = 5, LOG_CATEGORY_RENDER = 6, LOG_CATEGORY_INPUT = 7,
    LOG_CATEGORY_TEST = 8, LOG_CATEGORY_GPU = 9, LOG_CATEGORY_RESERVED2 = 10,
    LOG_CATEGORY_RESERVED3 = 11, LOG_CATEGORY_RESERVED4 = 12,
    LOG_CATEGORY_RESERVED5 = 13, LOG_CATEGORY_RESERVED6 = 14,
    LOG_CATEGORY_RESERVED7 = 15, LOG_CATEGORY_RESERVED8 = 16,
    LOG_CATEGORY_RESERVED9 = 17, LOG_CATEGORY_RESERVED10 = 18,
    LOG_CATEGORY_CUSTOM = 19
type
  enum_LogPriority_520095130* {.size: sizeof(cint).} = enum
    LOG_PRIORITY_INVALID = 0, LOG_PRIORITY_TRACE = 1, LOG_PRIORITY_VERBOSE = 2,
    LOG_PRIORITY_DEBUG = 3, LOG_PRIORITY_INFO = 4, LOG_PRIORITY_WARN = 5,
    LOG_PRIORITY_ERROR = 6, LOG_PRIORITY_CRITICAL = 7, LOG_PRIORITY_COUNT = 8
type
  enum_MessageBoxColorType_520095148* {.size: sizeof(cint).} = enum
    MESSAGEBOX_COLOR_BACKGROUND = 0, MESSAGEBOX_COLOR_TEXT = 1,
    MESSAGEBOX_COLOR_BUTTON_BORDER = 2, MESSAGEBOX_COLOR_BUTTON_BACKGROUND = 3,
    MESSAGEBOX_COLOR_BUTTON_SELECTED = 4, MESSAGEBOX_COLOR_COUNT = 5
type
  enum_ProcessIO_520095164* {.size: sizeof(cint).} = enum
    PROCESS_STDIO_INHERITED = 0, PROCESS_STDIO_NULL = 1, PROCESS_STDIO_APP = 2,
    PROCESS_STDIO_REDIRECT = 3
type
  enum_TextureAccess_520095172* {.size: sizeof(cint).} = enum
    TEXTUREACCESS_STATIC = 0, TEXTUREACCESS_STREAMING = 1,
    TEXTUREACCESS_TARGET = 2
type
  enum_RendererLogicalPresentation_520095176* {.size: sizeof(cint).} = enum
    LOGICAL_PRESENTATION_DISABLED = 0, LOGICAL_PRESENTATION_STRETCH = 1,
    LOGICAL_PRESENTATION_LETTERBOX = 2, LOGICAL_PRESENTATION_OVERSCAN = 3,
    LOGICAL_PRESENTATION_INTEGER_SCALE = 4
type
  enum_Sandbox_520095200* {.size: sizeof(cint).} = enum
    SANDBOX_NONE = 0, SANDBOX_UNKNOWN_CONTAINER = 1, SANDBOX_FLATPAK = 2,
    SANDBOX_SNAP = 3, SANDBOX_MACOS = 4
type
  enum_DateFormat_520095208* {.size: sizeof(cint).} = enum
    DATE_FORMAT_YYYYMMDD = 0, DATE_FORMAT_DDMMYYYY = 1, DATE_FORMAT_MMDDYYYY = 2
type
  enum_TimeFormat_520095212* {.size: sizeof(cint).} = enum
    TIME_FORMAT_24HR = 0, TIME_FORMAT_12HR = 1
when not declared(WriteLE64_renamed_WriteU64LE):
  type
    WriteLE64_renamed_WriteU64LE* = object
else:
  static :
    hint("Declaration of " & "WriteLE64_renamed_WriteU64LE" &
        " already exists, not redeclaring")
when not declared(SwapLE16_renamed_Swap16LE):
  type
    SwapLE16_renamed_Swap16LE* = object
else:
  static :
    hint("Declaration of " & "SwapLE16_renamed_Swap16LE" &
        " already exists, not redeclaring")
when not declared(TEXTEDITING_renamed_EVENT_TEXT_EDITING):
  type
    TEXTEDITING_renamed_EVENT_TEXT_EDITING* = object
else:
  static :
    hint("Declaration of " & "TEXTEDITING_renamed_EVENT_TEXT_EDITING" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_PADDLE3_renamed_GAMEPAD_BUTTON_RIGHT_PADDLE2):
  type
    CONTROLLER_BUTTON_PADDLE3_renamed_GAMEPAD_BUTTON_RIGHT_PADDLE2* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_PADDLE3_renamed_GAMEPAD_BUTTON_RIGHT_PADDLE2" &
        " already exists, not redeclaring")
when not declared(CONTROLLERDEVICEADDED_renamed_EVENT_GAMEPAD_ADDED):
  type
    CONTROLLERDEVICEADDED_renamed_EVENT_GAMEPAD_ADDED* = object
else:
  static :
    hint("Declaration of " & "CONTROLLERDEVICEADDED_renamed_EVENT_GAMEPAD_ADDED" &
        " already exists, not redeclaring")
when not declared(RenderGetWindow_renamed_GetRenderWindow):
  type
    RenderGetWindow_renamed_GetRenderWindow* = object
else:
  static :
    hint("Declaration of " & "RenderGetWindow_renamed_GetRenderWindow" &
        " already exists, not redeclaring")
when not declared(AUDIO_S32_renamed_AUDIO_S32LE):
  type
    AUDIO_S32_renamed_AUDIO_S32LE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S32_renamed_AUDIO_S32LE" &
        " already exists, not redeclaring")
when not declared(HINT_DIRECTINPUT_ENABLED_renamed_HINT_JOYSTICK_DIRECTINPUT):
  type
    HINT_DIRECTINPUT_ENABLED_renamed_HINT_JOYSTICK_DIRECTINPUT* = object
else:
  static :
    hint("Declaration of " &
        "HINT_DIRECTINPUT_ENABLED_renamed_HINT_JOYSTICK_DIRECTINPUT" &
        " already exists, not redeclaring")
when not declared(RenderDrawRect_renamed_RenderRect):
  type
    RenderDrawRect_renamed_RenderRect* = object
else:
  static :
    hint("Declaration of " & "RenderDrawRect_renamed_RenderRect" &
        " already exists, not redeclaring")
when not declared(CLIPBOARDUPDATE_renamed_EVENT_CLIPBOARD_UPDATE):
  type
    CLIPBOARDUPDATE_renamed_EVENT_CLIPBOARD_UPDATE* = object
else:
  static :
    hint("Declaration of " & "CLIPBOARDUPDATE_renamed_EVENT_CLIPBOARD_UPDATE" &
        " already exists, not redeclaring")
when not declared(GameControllerGetTouchpadFinger_renamed_GetGamepadTouchpadFinger):
  type
    GameControllerGetTouchpadFinger_renamed_GetGamepadTouchpadFinger* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetTouchpadFinger_renamed_GetGamepadTouchpadFinger" &
        " already exists, not redeclaring")
when not declared(GameControllerHasAxis_renamed_GamepadHasAxis):
  type
    GameControllerHasAxis_renamed_GamepadHasAxis* = object
else:
  static :
    hint("Declaration of " & "GameControllerHasAxis_renamed_GamepadHasAxis" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_BGR444_renamed_PIXELFORMAT_XBGR4444):
  type
    PIXELFORMAT_BGR444_renamed_PIXELFORMAT_XBGR4444* = object
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_BGR444_renamed_PIXELFORMAT_XBGR4444" &
        " already exists, not redeclaring")
when not declared(AUDIO_F32SYS_renamed_AUDIO_F32):
  type
    AUDIO_F32SYS_renamed_AUDIO_F32* = object
else:
  static :
    hint("Declaration of " & "AUDIO_F32SYS_renamed_AUDIO_F32" &
        " already exists, not redeclaring")
when not declared(GetPointDisplayIndex_renamed_GetDisplayForPoint):
  type
    GetPointDisplayIndex_renamed_GetDisplayForPoint* = object
else:
  static :
    hint("Declaration of " & "GetPointDisplayIndex_renamed_GetDisplayForPoint" &
        " already exists, not redeclaring")
when not declared(struct_AsyncIOQueue):
  type
    struct_AsyncIOQueue* = object
else:
  static :
    hint("Declaration of " & "struct_AsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(GetTicks64_renamed_GetTicks):
  type
    GetTicks64_renamed_GetTicks* = object
else:
  static :
    hint("Declaration of " & "GetTicks64_renamed_GetTicks" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT):
  type
    CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_PS4_renamed_GAMEPAD_TYPE_PS4):
  type
    CONTROLLER_TYPE_PS4_renamed_GAMEPAD_TYPE_PS4* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_TYPE_PS4_renamed_GAMEPAD_TYPE_PS4" &
        " already exists, not redeclaring")
when not declared(SENSORUPDATE_renamed_EVENT_SENSOR_UPDATE):
  type
    SENSORUPDATE_renamed_EVENT_SENSOR_UPDATE* = object
else:
  static :
    hint("Declaration of " & "SENSORUPDATE_renamed_EVENT_SENSOR_UPDATE" &
        " already exists, not redeclaring")
when not declared(struct_Storage):
  type
    struct_Storage* = object
else:
  static :
    hint("Declaration of " & "struct_Storage" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_PS5_renamed_GAMEPAD_TYPE_PS5):
  type
    CONTROLLER_TYPE_PS5_renamed_GAMEPAD_TYPE_PS5* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_TYPE_PS5_renamed_GAMEPAD_TYPE_PS5" &
        " already exists, not redeclaring")
when not declared(UnionRect_renamed_GetRectUnion):
  type
    UnionRect_renamed_GetRectUnion* = object
else:
  static :
    hint("Declaration of " & "UnionRect_renamed_GetRectUnion" &
        " already exists, not redeclaring")
when not declared(GameControllerAddMappingsFromRW_renamed_AddGamepadMappingsFromIO):
  type
    GameControllerAddMappingsFromRW_renamed_AddGamepadMappingsFromIO* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerAddMappingsFromRW_renamed_AddGamepadMappingsFromIO" &
        " already exists, not redeclaring")
when not declared(AUDIO_S16LSB_renamed_AUDIO_S16LE):
  type
    AUDIO_S16LSB_renamed_AUDIO_S16LE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S16LSB_renamed_AUDIO_S16LE" &
        " already exists, not redeclaring")
when not declared(SIMDGetAlignment_renamed_GetSIMDAlignment):
  type
    SIMDGetAlignment_renamed_GetSIMDAlignment* = object
else:
  static :
    hint("Declaration of " & "SIMDGetAlignment_renamed_GetSIMDAlignment" &
        " already exists, not redeclaring")
when not declared(sem_renamed_Semaphore):
  type
    sem_renamed_Semaphore* = object
else:
  static :
    hint("Declaration of " & "sem_renamed_Semaphore" &
        " already exists, not redeclaring")
when not declared(ReadLE32_renamed_ReadU32LE):
  type
    ReadLE32_renamed_ReadU32LE* = object
else:
  static :
    hint("Declaration of " & "ReadLE32_renamed_ReadU32LE" &
        " already exists, not redeclaring")
when not declared(SensorUpdate_renamed_UpdateSensors):
  type
    SensorUpdate_renamed_UpdateSensors* = object
else:
  static :
    hint("Declaration of " & "SensorUpdate_renamed_UpdateSensors" &
        " already exists, not redeclaring")
when not declared(GameControllerMappingForDeviceIndex_renamed_GetGamepadMappingForDeviceIndex):
  type
    GameControllerMappingForDeviceIndex_renamed_GetGamepadMappingForDeviceIndex* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerMappingForDeviceIndex_renamed_GetGamepadMappingForDeviceIndex" &
        " already exists, not redeclaring")
when not declared(struct_GPUSampler):
  type
    struct_GPUSampler* = object
else:
  static :
    hint("Declaration of " & "struct_GPUSampler" &
        " already exists, not redeclaring")
when not declared(HasIntersection_renamed_HasRectIntersection):
  type
    HasIntersection_renamed_HasRectIntersection* = object
else:
  static :
    hint("Declaration of " & "HasIntersection_renamed_HasRectIntersection" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT):
  type
    CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT" &
        " already exists, not redeclaring")
when not declared(HapticRunEffect_renamed_RunHapticEffect):
  type
    HapticRunEffect_renamed_RunHapticEffect* = object
else:
  static :
    hint("Declaration of " & "HapticRunEffect_renamed_RunHapticEffect" &
        " already exists, not redeclaring")
when not declared(SDLK_z_renamed_SDLK_Z):
  type
    SDLK_z_renamed_SDLK_Z* = object
else:
  static :
    hint("Declaration of " & "SDLK_z_renamed_SDLK_Z" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_BOTTOM_renamed_SYSTEM_CURSOR_S_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_BOTTOM_renamed_SYSTEM_CURSOR_S_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_BOTTOM_renamed_SYSTEM_CURSOR_S_RESIZE" &
        " already exists, not redeclaring")
when not declared(SDLK_QUOTE_renamed_SDLK_APOSTROPHE):
  type
    SDLK_QUOTE_renamed_SDLK_APOSTROPHE* = object
else:
  static :
    hint("Declaration of " & "SDLK_QUOTE_renamed_SDLK_APOSTROPHE" &
        " already exists, not redeclaring")
when not declared(RenderSetScale_renamed_SetRenderScale):
  type
    RenderSetScale_renamed_SetRenderScale* = object
else:
  static :
    hint("Declaration of " & "RenderSetScale_renamed_SetRenderScale" &
        " already exists, not redeclaring")
when not declared(HapticQuery_renamed_GetHapticFeatures):
  type
    HapticQuery_renamed_GetHapticFeatures* = object
else:
  static :
    hint("Declaration of " & "HapticQuery_renamed_GetHapticFeatures" &
        " already exists, not redeclaring")
when not declared(PATCHLEVEL_renamed_MICRO_VERSION):
  type
    PATCHLEVEL_renamed_MICRO_VERSION* = object
else:
  static :
    hint("Declaration of " & "PATCHLEVEL_renamed_MICRO_VERSION" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_SIZEWE_renamed_SYSTEM_CURSOR_EW_RESIZE):
  type
    SYSTEM_CURSOR_SIZEWE_renamed_SYSTEM_CURSOR_EW_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_SIZEWE_renamed_SYSTEM_CURSOR_EW_RESIZE" &
        " already exists, not redeclaring")
when not declared(FRectEmpty_renamed_RectEmptyFloat):
  type
    FRectEmpty_renamed_RectEmptyFloat* = object
else:
  static :
    hint("Declaration of " & "FRectEmpty_renamed_RectEmptyFloat" &
        " already exists, not redeclaring")
when not declared(GameControllerGetProductVersion_renamed_GetGamepadProductVersion):
  type
    GameControllerGetProductVersion_renamed_GetGamepadProductVersion* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetProductVersion_renamed_GetGamepadProductVersion" &
        " already exists, not redeclaring")
when not declared(GameControllerSetSensorEnabled_renamed_SetGamepadSensorEnabled):
  type
    GameControllerSetSensorEnabled_renamed_SetGamepadSensorEnabled* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerSetSensorEnabled_renamed_SetGamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(KMOD_LSHIFT_renamed_KMOD_LSHIFT):
  type
    KMOD_LSHIFT_renamed_KMOD_LSHIFT* = object
else:
  static :
    hint("Declaration of " & "KMOD_LSHIFT_renamed_KMOD_LSHIFT" &
        " already exists, not redeclaring")
when not declared(GameControllerSetPlayerIndex_renamed_SetGamepadPlayerIndex):
  type
    GameControllerSetPlayerIndex_renamed_SetGamepadPlayerIndex* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerSetPlayerIndex_renamed_SetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_COLOR_MAX_renamed_MESSAGEBOX_COLOR_COUNT):
  type
    MESSAGEBOX_COLOR_MAX_renamed_MESSAGEBOX_COLOR_COUNT* = object
else:
  static :
    hint("Declaration of " &
        "MESSAGEBOX_COLOR_MAX_renamed_MESSAGEBOX_COLOR_COUNT" &
        " already exists, not redeclaring")
when not declared(AtomicSet_renamed_SetAtomicInt):
  type
    AtomicSet_renamed_SetAtomicInt* = object
else:
  static :
    hint("Declaration of " & "AtomicSet_renamed_SetAtomicInt" &
        " already exists, not redeclaring")
when not declared(SDLK_t_renamed_SDLK_T):
  type
    SDLK_t_renamed_SDLK_T* = object
else:
  static :
    hint("Declaration of " & "SDLK_t_renamed_SDLK_T" &
        " already exists, not redeclaring")
when not declared(AudioStreamGet_renamed_GetAudioStreamData):
  type
    AudioStreamGet_renamed_GetAudioStreamData* = object
else:
  static :
    hint("Declaration of " & "AudioStreamGet_renamed_GetAudioStreamData" &
        " already exists, not redeclaring")
when not declared(SDLK_n_renamed_SDLK_N):
  type
    SDLK_n_renamed_SDLK_N* = object
else:
  static :
    hint("Declaration of " & "SDLK_n_renamed_SDLK_N" &
        " already exists, not redeclaring")
when not declared(struct_GPUCopyPass):
  type
    struct_GPUCopyPass* = object
else:
  static :
    hint("Declaration of " & "struct_GPUCopyPass" &
        " already exists, not redeclaring")
when not declared(HapticSetAutocenter_renamed_SetHapticAutocenter):
  type
    HapticSetAutocenter_renamed_SetHapticAutocenter* = object
else:
  static :
    hint("Declaration of " & "HapticSetAutocenter_renamed_SetHapticAutocenter" &
        " already exists, not redeclaring")
when not declared(GameControllerSendEffect_renamed_SendGamepadEffect):
  type
    GameControllerSendEffect_renamed_SendGamepadEffect* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerSendEffect_renamed_SendGamepadEffect" &
        " already exists, not redeclaring")
when not declared(internal_Scanf_format_string_impl_private):
  type
    internal_Scanf_format_string_impl_private* = object
else:
  static :
    hint("Declaration of " & "internal_Scanf_format_string_impl_private" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BINDTYPE_HAT_renamed_GAMEPAD_BINDTYPE_HAT):
  type
    CONTROLLER_BINDTYPE_HAT_renamed_GAMEPAD_BINDTYPE_HAT* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BINDTYPE_HAT_renamed_GAMEPAD_BINDTYPE_HAT" &
        " already exists, not redeclaring")
when not declared(cond_renamed_Condition):
  type
    cond_renamed_Condition* = object
else:
  static :
    hint("Declaration of " & "cond_renamed_Condition" &
        " already exists, not redeclaring")
when not declared(RWFromFile_renamed_IOFromFile):
  type
    RWFromFile_renamed_IOFromFile* = object
else:
  static :
    hint("Declaration of " & "RWFromFile_renamed_IOFromFile" &
        " already exists, not redeclaring")
when not declared(SCANCODE_MEDIASELECT_renamed_SCANCODE_MEDIA_SELECT):
  type
    SCANCODE_MEDIASELECT_renamed_SCANCODE_MEDIA_SELECT* = object
else:
  static :
    hint("Declaration of " &
        "SCANCODE_MEDIASELECT_renamed_SCANCODE_MEDIA_SELECT" &
        " already exists, not redeclaring")
when not declared(GLcontextFlag_renamed_GLContextFlag):
  type
    GLcontextFlag_renamed_GLContextFlag* = object
else:
  static :
    hint("Declaration of " & "GLcontextFlag_renamed_GLContextFlag" &
        " already exists, not redeclaring")
when not declared(struct_hid_device):
  type
    struct_hid_device* = object
else:
  static :
    hint("Declaration of " & "struct_hid_device" &
        " already exists, not redeclaring")
when not declared(HapticStopAll_renamed_StopHapticEffects):
  type
    HapticStopAll_renamed_StopHapticEffects* = object
else:
  static :
    hint("Declaration of " & "HapticStopAll_renamed_StopHapticEffects" &
        " already exists, not redeclaring")
when not declared(RendererFlip_renamed_FlipMode):
  type
    RendererFlip_renamed_FlipMode* = object
else:
  static :
    hint("Declaration of " & "RendererFlip_renamed_FlipMode" &
        " already exists, not redeclaring")
when not declared(SCANCODE_AUDIOREWIND_renamed_SCANCODE_MEDIA_REWIND):
  type
    SCANCODE_AUDIOREWIND_renamed_SCANCODE_MEDIA_REWIND* = object
else:
  static :
    hint("Declaration of " &
        "SCANCODE_AUDIOREWIND_renamed_SCANCODE_MEDIA_REWIND" &
        " already exists, not redeclaring")
when not declared(CondWait_renamed_WaitCondition):
  type
    CondWait_renamed_WaitCondition* = object
else:
  static :
    hint("Declaration of " & "CondWait_renamed_WaitCondition" &
        " already exists, not redeclaring")
when not declared(JoystickIsVirtual_renamed_IsJoystickVirtual):
  type
    JoystickIsVirtual_renamed_IsJoystickVirtual* = object
else:
  static :
    hint("Declaration of " & "JoystickIsVirtual_renamed_IsJoystickVirtual" &
        " already exists, not redeclaring")
when not declared(SensorGetType_renamed_GetSensorType):
  type
    SensorGetType_renamed_GetSensorType* = object
else:
  static :
    hint("Declaration of " & "SensorGetType_renamed_GetSensorType" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_PADDLE4_renamed_GAMEPAD_BUTTON_LEFT_PADDLE2):
  type
    CONTROLLER_BUTTON_PADDLE4_renamed_GAMEPAD_BUTTON_LEFT_PADDLE2* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_PADDLE4_renamed_GAMEPAD_BUTTON_LEFT_PADDLE2" &
        " already exists, not redeclaring")
when not declared(GameControllerGetPlayerIndex_renamed_GetGamepadPlayerIndex):
  type
    GameControllerGetPlayerIndex_renamed_GetGamepadPlayerIndex* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetPlayerIndex_renamed_GetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(APP_DIDENTERBACKGROUND_renamed_EVENT_DID_ENTER_BACKGROUND):
  type
    APP_DIDENTERBACKGROUND_renamed_EVENT_DID_ENTER_BACKGROUND* = object
else:
  static :
    hint("Declaration of " &
        "APP_DIDENTERBACKGROUND_renamed_EVENT_DID_ENTER_BACKGROUND" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_PADDLE2_renamed_GAMEPAD_BUTTON_LEFT_PADDLE1):
  type
    CONTROLLER_BUTTON_PADDLE2_renamed_GAMEPAD_BUTTON_LEFT_PADDLE1* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_PADDLE2_renamed_GAMEPAD_BUTTON_LEFT_PADDLE1" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_LEFTX_renamed_GAMEPAD_AXIS_LEFTX):
  type
    CONTROLLER_AXIS_LEFTX_renamed_GAMEPAD_AXIS_LEFTX* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_AXIS_LEFTX_renamed_GAMEPAD_AXIS_LEFTX" &
        " already exists, not redeclaring")
when not declared(struct_DisplayModeData):
  type
    struct_DisplayModeData* = object
else:
  static :
    hint("Declaration of " & "struct_DisplayModeData" &
        " already exists, not redeclaring")
when not declared(TEXTEDITING_EXT_renamed_EVENT_TEXT_EDITING_EXT):
  type
    TEXTEDITING_EXT_renamed_EVENT_TEXT_EDITING_EXT* = object
else:
  static :
    hint("Declaration of " & "TEXTEDITING_EXT_renamed_EVENT_TEXT_EDITING_EXT" &
        " already exists, not redeclaring")
when not declared(struct_GLContextState):
  type
    struct_GLContextState* = object
else:
  static :
    hint("Declaration of " & "struct_GLContextState" &
        " already exists, not redeclaring")
when not declared(KMOD_MODE_renamed_KMOD_MODE):
  type
    KMOD_MODE_renamed_KMOD_MODE* = object
else:
  static :
    hint("Declaration of " & "KMOD_MODE_renamed_KMOD_MODE" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_XBOXONE_renamed_GAMEPAD_TYPE_XBOXONE):
  type
    CONTROLLER_TYPE_XBOXONE_renamed_GAMEPAD_TYPE_XBOXONE* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_XBOXONE_renamed_GAMEPAD_TYPE_XBOXONE" &
        " already exists, not redeclaring")
when not declared(SensorOpen_renamed_OpenSensor):
  type
    SensorOpen_renamed_OpenSensor* = object
else:
  static :
    hint("Declaration of " & "SensorOpen_renamed_OpenSensor" &
        " already exists, not redeclaring")
when not declared(GameControllerButton_renamed_GamepadButton):
  type
    GameControllerButton_renamed_GamepadButton* = object
else:
  static :
    hint("Declaration of " & "GameControllerButton_renamed_GamepadButton" &
        " already exists, not redeclaring")
when not declared(GameControllerGetAxisFromString_renamed_GetGamepadAxisFromString):
  type
    GameControllerGetAxisFromString_renamed_GetGamepadAxisFromString* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetAxisFromString_renamed_GetGamepadAxisFromString" &
        " already exists, not redeclaring")
when not declared(KMOD_CAPS_renamed_KMOD_CAPS):
  type
    KMOD_CAPS_renamed_KMOD_CAPS* = object
else:
  static :
    hint("Declaration of " & "KMOD_CAPS_renamed_KMOD_CAPS" &
        " already exists, not redeclaring")
when not declared(JoystickGetBall_renamed_GetJoystickBall):
  type
    JoystickGetBall_renamed_GetJoystickBall* = object
else:
  static :
    hint("Declaration of " & "JoystickGetBall_renamed_GetJoystickBall" &
        " already exists, not redeclaring")
when not declared(AndroidGetExternalStoragePath_renamed_GetAndroidExternalStoragePath):
  type
    AndroidGetExternalStoragePath_renamed_GetAndroidExternalStoragePath* = object
else:
  static :
    hint("Declaration of " &
        "AndroidGetExternalStoragePath_renamed_GetAndroidExternalStoragePath" &
        " already exists, not redeclaring")
when not declared(GameControllerMapping_renamed_GetGamepadMapping):
  type
    GameControllerMapping_renamed_GetGamepadMapping* = object
else:
  static :
    hint("Declaration of " & "GameControllerMapping_renamed_GetGamepadMapping" &
        " already exists, not redeclaring")
when not declared(HINT_LINUX_HAT_DEADZONES_renamed_HINT_JOYSTICK_LINUX_HAT_DEADZONES):
  type
    HINT_LINUX_HAT_DEADZONES_renamed_HINT_JOYSTICK_LINUX_HAT_DEADZONES* = object
else:
  static :
    hint("Declaration of " &
        "HINT_LINUX_HAT_DEADZONES_renamed_HINT_JOYSTICK_LINUX_HAT_DEADZONES" &
        " already exists, not redeclaring")
when not declared(RenderDrawPointF_renamed_RenderPoint):
  type
    RenderDrawPointF_renamed_RenderPoint* = object
else:
  static :
    hint("Declaration of " & "RenderDrawPointF_renamed_RenderPoint" &
        " already exists, not redeclaring")
when not declared(OnApplicationWillResignActive_renamed_OnApplicationWillEnterBackground):
  type
    OnApplicationWillResignActive_renamed_OnApplicationWillEnterBackground* = object
else:
  static :
    hint("Declaration of " &
        "OnApplicationWillResignActive_renamed_OnApplicationWillEnterBackground" &
        " already exists, not redeclaring")
when not declared(RenderDrawLinesF_renamed_RenderLines):
  type
    RenderDrawLinesF_renamed_RenderLines* = object
else:
  static :
    hint("Declaration of " & "RenderDrawLinesF_renamed_RenderLines" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT):
  type
    SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT* = object
else:
  static :
    hint("Declaration of " & "SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT" &
        " already exists, not redeclaring")
when not declared(ScaleModeNearest_renamed_SCALEMODE_NEAREST):
  type
    ScaleModeNearest_renamed_SCALEMODE_NEAREST* = object
else:
  static :
    hint("Declaration of " & "ScaleModeNearest_renamed_SCALEMODE_NEAREST" &
        " already exists, not redeclaring")
when not declared(APP_WILLENTERFOREGROUND_renamed_EVENT_WILL_ENTER_FOREGROUND):
  type
    APP_WILLENTERFOREGROUND_renamed_EVENT_WILL_ENTER_FOREGROUND* = object
else:
  static :
    hint("Declaration of " &
        "APP_WILLENTERFOREGROUND_renamed_EVENT_WILL_ENTER_FOREGROUND" &
        " already exists, not redeclaring")
when not declared(JOYDEVICEREMOVED_renamed_EVENT_JOYSTICK_REMOVED):
  type
    JOYDEVICEREMOVED_renamed_EVENT_JOYSTICK_REMOVED* = object
else:
  static :
    hint("Declaration of " & "JOYDEVICEREMOVED_renamed_EVENT_JOYSTICK_REMOVED" &
        " already exists, not redeclaring")
when not declared(AndroidSendMessage_renamed_SendAndroidMessage):
  type
    AndroidSendMessage_renamed_SendAndroidMessage* = object
else:
  static :
    hint("Declaration of " & "AndroidSendMessage_renamed_SendAndroidMessage" &
        " already exists, not redeclaring")
when not declared(SDLK_i_renamed_SDLK_I):
  type
    SDLK_i_renamed_SDLK_I* = object
else:
  static :
    hint("Declaration of " & "SDLK_i_renamed_SDLK_I" &
        " already exists, not redeclaring")
when not declared(GDKGetDefaultUser_renamed_GetGDKDefaultUser):
  type
    GDKGetDefaultUser_renamed_GetGDKDefaultUser* = object
else:
  static :
    hint("Declaration of " & "GDKGetDefaultUser_renamed_GetGDKDefaultUser" &
        " already exists, not redeclaring")
when not declared(WINDOW_SKIP_TASKBAR_renamed_WINDOW_UTILITY):
  type
    WINDOW_SKIP_TASKBAR_renamed_WINDOW_UTILITY* = object
else:
  static :
    hint("Declaration of " & "WINDOW_SKIP_TASKBAR_renamed_WINDOW_UTILITY" &
        " already exists, not redeclaring")
when not declared(internal_Printf_format_string_private):
  type
    internal_Printf_format_string_private* = object
else:
  static :
    hint("Declaration of " & "internal_Printf_format_string_private" &
        " already exists, not redeclaring")
when not declared(struct_GPUFence):
  type
    struct_GPUFence* = object
else:
  static :
    hint("Declaration of " & "struct_GPUFence" &
        " already exists, not redeclaring")
when not declared(GameControllerGetAppleSFSymbolsNameForAxis_renamed_GetGamepadAppleSFSymbolsNameForAxis):
  type
    GameControllerGetAppleSFSymbolsNameForAxis_renamed_GetGamepadAppleSFSymbolsNameForAxis* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetAppleSFSymbolsNameForAxis_renamed_GetGamepadAppleSFSymbolsNameForAxis" &
        " already exists, not redeclaring")
when not declared(LogGetOutputFunction_renamed_GetLogOutputFunction):
  type
    LogGetOutputFunction_renamed_GetLogOutputFunction* = object
else:
  static :
    hint("Declaration of " & "LogGetOutputFunction_renamed_GetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(GetClosestDisplayMode_renamed_GetClosestFullscreenDisplayMode):
  type
    GetClosestDisplayMode_renamed_GetClosestFullscreenDisplayMode* = object
else:
  static :
    hint("Declaration of " &
        "GetClosestDisplayMode_renamed_GetClosestFullscreenDisplayMode" &
        " already exists, not redeclaring")
when not declared(AndroidShowToast_renamed_ShowAndroidToast):
  type
    AndroidShowToast_renamed_ShowAndroidToast* = object
else:
  static :
    hint("Declaration of " & "AndroidShowToast_renamed_ShowAndroidToast" &
        " already exists, not redeclaring")
when not declared(USEREVENT_renamed_EVENT_USER):
  type
    USEREVENT_renamed_EVENT_USER* = object
else:
  static :
    hint("Declaration of " & "USEREVENT_renamed_EVENT_USER" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_RGB555_renamed_PIXELFORMAT_XRGB1555):
  type
    PIXELFORMAT_RGB555_renamed_PIXELFORMAT_XRGB1555* = object
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_RGB555_renamed_PIXELFORMAT_XRGB1555" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_VIRTUAL_renamed_GAMEPAD_TYPE_VIRTUAL):
  type
    CONTROLLER_TYPE_VIRTUAL_renamed_GAMEPAD_TYPE_VIRTUAL* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_VIRTUAL_renamed_GAMEPAD_TYPE_VIRTUAL" &
        " already exists, not redeclaring")
when not declared(GameControllerGetFirmwareVersion_renamed_GetGamepadFirmwareVersion):
  type
    GameControllerGetFirmwareVersion_renamed_GetGamepadFirmwareVersion* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetFirmwareVersion_renamed_GetGamepadFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(GameControllerClose_renamed_CloseGamepad):
  type
    GameControllerClose_renamed_CloseGamepad* = object
else:
  static :
    hint("Declaration of " & "GameControllerClose_renamed_CloseGamepad" &
        " already exists, not redeclaring")
when not declared(GameControllerMappingForGUID_renamed_GetGamepadMappingForGUID):
  type
    GameControllerMappingForGUID_renamed_GetGamepadMappingForGUID* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerMappingForGUID_renamed_GetGamepadMappingForGUID" &
        " already exists, not redeclaring")
when not declared(MIN_SINT64):
  type
    MIN_SINT64* = object
else:
  static :
    hint("Declaration of " & "MIN_SINT64" & " already exists, not redeclaring")
when not declared(DestroyCond_renamed_DestroyCondition):
  type
    DestroyCond_renamed_DestroyCondition* = object
else:
  static :
    hint("Declaration of " & "DestroyCond_renamed_DestroyCondition" &
        " already exists, not redeclaring")
when not declared(RenderDrawLineF_renamed_RenderLine):
  type
    RenderDrawLineF_renamed_RenderLine* = object
else:
  static :
    hint("Declaration of " & "RenderDrawLineF_renamed_RenderLine" &
        " already exists, not redeclaring")
when not declared(SDLK_w_renamed_SDLK_W):
  type
    SDLK_w_renamed_SDLK_W* = object
else:
  static :
    hint("Declaration of " & "SDLK_w_renamed_SDLK_W" &
        " already exists, not redeclaring")
when not declared(GameControllerAxis_renamed_GamepadAxis):
  type
    GameControllerAxis_renamed_GamepadAxis* = object
else:
  static :
    hint("Declaration of " & "GameControllerAxis_renamed_GamepadAxis" &
        " already exists, not redeclaring")
when not declared(RWclose_renamed_CloseIO):
  type
    RWclose_renamed_CloseIO* = object
else:
  static :
    hint("Declaration of " & "RWclose_renamed_CloseIO" &
        " already exists, not redeclaring")
when not declared(KEYUP_renamed_EVENT_KEY_UP):
  type
    KEYUP_renamed_EVENT_KEY_UP* = object
else:
  static :
    hint("Declaration of " & "KEYUP_renamed_EVENT_KEY_UP" &
        " already exists, not redeclaring")
when not declared(WriteLE32_renamed_WriteU32LE):
  type
    WriteLE32_renamed_WriteU32LE* = object
else:
  static :
    hint("Declaration of " & "WriteLE32_renamed_WriteU32LE" &
        " already exists, not redeclaring")
when not declared(MasksToPixelFormatEnum_renamed_GetPixelFormatForMasks):
  type
    MasksToPixelFormatEnum_renamed_GetPixelFormatForMasks* = object
else:
  static :
    hint("Declaration of " &
        "MasksToPixelFormatEnum_renamed_GetPixelFormatForMasks" &
        " already exists, not redeclaring")
when not declared(RENDER_DEVICE_RESET_renamed_EVENT_RENDER_DEVICE_RESET):
  type
    RENDER_DEVICE_RESET_renamed_EVENT_RENDER_DEVICE_RESET* = object
else:
  static :
    hint("Declaration of " &
        "RENDER_DEVICE_RESET_renamed_EVENT_RENDER_DEVICE_RESET" &
        " already exists, not redeclaring")
when not declared(JoystickGetType_renamed_GetJoystickType):
  type
    JoystickGetType_renamed_GetJoystickType* = object
else:
  static :
    hint("Declaration of " & "JoystickGetType_renamed_GetJoystickType" &
        " already exists, not redeclaring")
when not declared(SensorGetData_renamed_GetSensorData):
  type
    SensorGetData_renamed_GetSensorData* = object
else:
  static :
    hint("Declaration of " & "SensorGetData_renamed_GetSensorData" &
        " already exists, not redeclaring")
when not declared(RenderDrawRects_renamed_RenderRects):
  type
    RenderDrawRects_renamed_RenderRects* = object
else:
  static :
    hint("Declaration of " & "RenderDrawRects_renamed_RenderRects" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_MAXIMIZED_renamed_EVENT_WINDOW_MAXIMIZED):
  type
    WINDOWEVENT_MAXIMIZED_renamed_EVENT_WINDOW_MAXIMIZED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_MAXIMIZED_renamed_EVENT_WINDOW_MAXIMIZED" &
        " already exists, not redeclaring")
when not declared(JOYAXISMOTION_renamed_EVENT_JOYSTICK_AXIS_MOTION):
  type
    JOYAXISMOTION_renamed_EVENT_JOYSTICK_AXIS_MOTION* = object
else:
  static :
    hint("Declaration of " & "JOYAXISMOTION_renamed_EVENT_JOYSTICK_AXIS_MOTION" &
        " already exists, not redeclaring")
when not declared(LASTEVENT_renamed_EVENT_LAST):
  type
    LASTEVENT_renamed_EVENT_LAST* = object
else:
  static :
    hint("Declaration of " & "LASTEVENT_renamed_EVENT_LAST" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_SIZENESW_renamed_SYSTEM_CURSOR_NESW_RESIZE):
  type
    SYSTEM_CURSOR_SIZENESW_renamed_SYSTEM_CURSOR_NESW_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_SIZENESW_renamed_SYSTEM_CURSOR_NESW_RESIZE" &
        " already exists, not redeclaring")
when not declared(SDLK_b_renamed_SDLK_B):
  type
    SDLK_b_renamed_SDLK_B* = object
else:
  static :
    hint("Declaration of " & "SDLK_b_renamed_SDLK_B" &
        " already exists, not redeclaring")
when not declared(HasSurfaceRLE_renamed_SurfaceHasRLE):
  type
    HasSurfaceRLE_renamed_SurfaceHasRLE* = object
else:
  static :
    hint("Declaration of " & "HasSurfaceRLE_renamed_SurfaceHasRLE" &
        " already exists, not redeclaring")
when not declared(TLSSet_renamed_SetTLS):
  type
    TLSSet_renamed_SetTLS* = object
else:
  static :
    hint("Declaration of " & "TLSSet_renamed_SetTLS" &
        " already exists, not redeclaring")
when not declared(JoystickGetAxisInitialState_renamed_GetJoystickAxisInitialState):
  type
    JoystickGetAxisInitialState_renamed_GetJoystickAxisInitialState* = object
else:
  static :
    hint("Declaration of " &
        "JoystickGetAxisInitialState_renamed_GetJoystickAxisInitialState" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND):
  type
    SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND* = object
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND" &
        " already exists, not redeclaring")
when not declared(HapticClose_renamed_CloseHaptic):
  type
    HapticClose_renamed_CloseHaptic* = object
else:
  static :
    hint("Declaration of " & "HapticClose_renamed_CloseHaptic" &
        " already exists, not redeclaring")
when not declared(GUIDFromString_renamed_StringToGUID):
  type
    GUIDFromString_renamed_StringToGUID* = object
else:
  static :
    hint("Declaration of " & "GUIDFromString_renamed_StringToGUID" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR):
  type
    CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD):
  type
    SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD* = object
else:
  static :
    hint("Declaration of " &
        "SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD" &
        " already exists, not redeclaring")
when not declared(AtomicAdd_renamed_AddAtomicInt):
  type
    AtomicAdd_renamed_AddAtomicInt* = object
else:
  static :
    hint("Declaration of " & "AtomicAdd_renamed_AddAtomicInt" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_MAX_renamed_GAMEPAD_BUTTON_COUNT):
  type
    CONTROLLER_BUTTON_MAX_renamed_GAMEPAD_BUTTON_COUNT* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_MAX_renamed_GAMEPAD_BUTTON_COUNT" &
        " already exists, not redeclaring")
when not declared(RenderCopyExF_renamed_RenderTextureRotated):
  type
    RenderCopyExF_renamed_RenderTextureRotated* = object
else:
  static :
    hint("Declaration of " & "RenderCopyExF_renamed_RenderTextureRotated" &
        " already exists, not redeclaring")
when not declared(RenderDrawPoints_renamed_RenderPoints):
  type
    RenderDrawPoints_renamed_RenderPoints* = object
else:
  static :
    hint("Declaration of " & "RenderDrawPoints_renamed_RenderPoints" &
        " already exists, not redeclaring")
when not declared(struct_GPUTexture):
  type
    struct_GPUTexture* = object
else:
  static :
    hint("Declaration of " & "struct_GPUTexture" &
        " already exists, not redeclaring")
when not declared(SDLK_k_renamed_SDLK_K):
  type
    SDLK_k_renamed_SDLK_K* = object
else:
  static :
    hint("Declaration of " & "SDLK_k_renamed_SDLK_K" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_RESIZED_renamed_EVENT_WINDOW_RESIZED):
  type
    WINDOWEVENT_RESIZED_renamed_EVENT_WINDOW_RESIZED* = object
else:
  static :
    hint("Declaration of " & "WINDOWEVENT_RESIZED_renamed_EVENT_WINDOW_RESIZED" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_RIGHTSHOULDER_renamed_GAMEPAD_BUTTON_RIGHT_SHOULDER):
  type
    CONTROLLER_BUTTON_RIGHTSHOULDER_renamed_GAMEPAD_BUTTON_RIGHT_SHOULDER* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_RIGHTSHOULDER_renamed_GAMEPAD_BUTTON_RIGHT_SHOULDER" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_TOUCHPAD_renamed_GAMEPAD_BUTTON_TOUCHPAD):
  type
    CONTROLLER_BUTTON_TOUCHPAD_renamed_GAMEPAD_BUTTON_TOUCHPAD* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_TOUCHPAD_renamed_GAMEPAD_BUTTON_TOUCHPAD" &
        " already exists, not redeclaring")
when not declared(KMOD_CTRL_renamed_KMOD_CTRL):
  type
    KMOD_CTRL_renamed_KMOD_CTRL* = object
else:
  static :
    hint("Declaration of " & "KMOD_CTRL_renamed_KMOD_CTRL" &
        " already exists, not redeclaring")
when not declared(CONTROLLERAXISMOTION_renamed_EVENT_GAMEPAD_AXIS_MOTION):
  type
    CONTROLLERAXISMOTION_renamed_EVENT_GAMEPAD_AXIS_MOTION* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERAXISMOTION_renamed_EVENT_GAMEPAD_AXIS_MOTION" &
        " already exists, not redeclaring")
when not declared(CONTROLLERDEVICEREMOVED_renamed_EVENT_GAMEPAD_REMOVED):
  type
    CONTROLLERDEVICEREMOVED_renamed_EVENT_GAMEPAD_REMOVED* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERDEVICEREMOVED_renamed_EVENT_GAMEPAD_REMOVED" &
        " already exists, not redeclaring")
when not declared(RW_SEEK_END_renamed_IO_SEEK_END):
  type
    RW_SEEK_END_renamed_IO_SEEK_END* = object
else:
  static :
    hint("Declaration of " & "RW_SEEK_END_renamed_IO_SEEK_END" &
        " already exists, not redeclaring")
when not declared(ReadLE16_renamed_ReadU16LE):
  type
    ReadLE16_renamed_ReadU16LE* = object
else:
  static :
    hint("Declaration of " & "ReadLE16_renamed_ReadU16LE" &
        " already exists, not redeclaring")
when not declared(RenderDrawLines_renamed_RenderLines):
  type
    RenderDrawLines_renamed_RenderLines* = object
else:
  static :
    hint("Declaration of " & "RenderDrawLines_renamed_RenderLines" &
        " already exists, not redeclaring")
when not declared(RWread_renamed_ReadIO):
  type
    RWread_renamed_ReadIO* = object
else:
  static :
    hint("Declaration of " & "RWread_renamed_ReadIO" &
        " already exists, not redeclaring")
when not declared(SDLK_h_renamed_SDLK_H):
  type
    SDLK_h_renamed_SDLK_H* = object
else:
  static :
    hint("Declaration of " & "SDLK_h_renamed_SDLK_H" &
        " already exists, not redeclaring")
when not declared(DISPLAYEVENT_DISCONNECTED_renamed_EVENT_DISPLAY_REMOVED):
  type
    DISPLAYEVENT_DISCONNECTED_renamed_EVENT_DISPLAY_REMOVED* = object
else:
  static :
    hint("Declaration of " &
        "DISPLAYEVENT_DISCONNECTED_renamed_EVENT_DISPLAY_REMOVED" &
        " already exists, not redeclaring")
when not declared(AndroidGetJNIEnv_renamed_GetAndroidJNIEnv):
  type
    AndroidGetJNIEnv_renamed_GetAndroidJNIEnv* = object
else:
  static :
    hint("Declaration of " & "AndroidGetJNIEnv_renamed_GetAndroidJNIEnv" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BINDTYPE_AXIS_renamed_GAMEPAD_BINDTYPE_AXIS):
  type
    CONTROLLER_BINDTYPE_AXIS_renamed_GAMEPAD_BINDTYPE_AXIS* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BINDTYPE_AXIS_renamed_GAMEPAD_BINDTYPE_AXIS" &
        " already exists, not redeclaring")
when not declared(DROPFILE_renamed_EVENT_DROP_FILE):
  type
    DROPFILE_renamed_EVENT_DROP_FILE* = object
else:
  static :
    hint("Declaration of " & "DROPFILE_renamed_EVENT_DROP_FILE" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_ARROW_renamed_SYSTEM_CURSOR_DEFAULT):
  type
    SYSTEM_CURSOR_ARROW_renamed_SYSTEM_CURSOR_DEFAULT* = object
else:
  static :
    hint("Declaration of " & "SYSTEM_CURSOR_ARROW_renamed_SYSTEM_CURSOR_DEFAULT" &
        " already exists, not redeclaring")
when not declared(SwapBE32_renamed_Swap32BE):
  type
    SwapBE32_renamed_Swap32BE* = object
else:
  static :
    hint("Declaration of " & "SwapBE32_renamed_Swap32BE" &
        " already exists, not redeclaring")
when not declared(SDLK_o_renamed_SDLK_O):
  type
    SDLK_o_renamed_SDLK_O* = object
else:
  static :
    hint("Declaration of " & "SDLK_o_renamed_SDLK_O" &
        " already exists, not redeclaring")
when not declared(SDLK_v_renamed_SDLK_V):
  type
    SDLK_v_renamed_SDLK_V* = object
else:
  static :
    hint("Declaration of " & "SDLK_v_renamed_SDLK_V" &
        " already exists, not redeclaring")
when not declared(AtomicLock_renamed_LockSpinlock):
  type
    AtomicLock_renamed_LockSpinlock* = object
else:
  static :
    hint("Declaration of " & "AtomicLock_renamed_LockSpinlock" &
        " already exists, not redeclaring")
when not declared(ControllerAxisEvent_renamed_GamepadAxisEvent):
  type
    ControllerAxisEvent_renamed_GamepadAxisEvent* = object
else:
  static :
    hint("Declaration of " & "ControllerAxisEvent_renamed_GamepadAxisEvent" &
        " already exists, not redeclaring")
when not declared(SCANCODE_AUDIOSTOP_renamed_SCANCODE_MEDIA_STOP):
  type
    SCANCODE_AUDIOSTOP_renamed_SCANCODE_MEDIA_STOP* = object
else:
  static :
    hint("Declaration of " & "SCANCODE_AUDIOSTOP_renamed_SCANCODE_MEDIA_STOP" &
        " already exists, not redeclaring")
when not declared(iOSSetAnimationCallback_renamed_SetiOSAnimationCallback):
  type
    iOSSetAnimationCallback_renamed_SetiOSAnimationCallback* = object
else:
  static :
    hint("Declaration of " &
        "iOSSetAnimationCallback_renamed_SetiOSAnimationCallback" &
        " already exists, not redeclaring")
when not declared(GameControllerGetStringForAxis_renamed_GetGamepadStringForAxis):
  type
    GameControllerGetStringForAxis_renamed_GetGamepadStringForAxis* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetStringForAxis_renamed_GetGamepadStringForAxis" &
        " already exists, not redeclaring")
when not declared(GetRectDisplayIndex_renamed_GetDisplayForRect):
  type
    GetRectDisplayIndex_renamed_GetDisplayForRect* = object
else:
  static :
    hint("Declaration of " & "GetRectDisplayIndex_renamed_GetDisplayForRect" &
        " already exists, not redeclaring")
when not declared(SDLK_a_renamed_SDLK_A):
  type
    SDLK_a_renamed_SDLK_A* = object
else:
  static :
    hint("Declaration of " & "SDLK_a_renamed_SDLK_A" &
        " already exists, not redeclaring")
when not declared(GetDisplayOrientation_renamed_GetCurrentDisplayOrientation):
  type
    GetDisplayOrientation_renamed_GetCurrentDisplayOrientation* = object
else:
  static :
    hint("Declaration of " &
        "GetDisplayOrientation_renamed_GetCurrentDisplayOrientation" &
        " already exists, not redeclaring")
when not declared(CONTROLLERBUTTONUP_renamed_EVENT_GAMEPAD_BUTTON_UP):
  type
    CONTROLLERBUTTONUP_renamed_EVENT_GAMEPAD_BUTTON_UP* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERBUTTONUP_renamed_EVENT_GAMEPAD_BUTTON_UP" &
        " already exists, not redeclaring")
when not declared(FINGERDOWN_renamed_EVENT_FINGER_DOWN):
  type
    FINGERDOWN_renamed_EVENT_FINGER_DOWN* = object
else:
  static :
    hint("Declaration of " & "FINGERDOWN_renamed_EVENT_FINGER_DOWN" &
        " already exists, not redeclaring")
when not declared(ControllerDeviceEvent_renamed_GamepadDeviceEvent):
  type
    ControllerDeviceEvent_renamed_GamepadDeviceEvent* = object
else:
  static :
    hint("Declaration of " & "ControllerDeviceEvent_renamed_GamepadDeviceEvent" &
        " already exists, not redeclaring")
when not declared(DROPTEXT_renamed_EVENT_DROP_TEXT):
  type
    DROPTEXT_renamed_EVENT_DROP_TEXT* = object
else:
  static :
    hint("Declaration of " & "DROPTEXT_renamed_EVENT_DROP_TEXT" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK):
  type
    SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK* = object
else:
  static :
    hint("Declaration of " & "SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK" &
        " already exists, not redeclaring")
when not declared(JoystickNumHats_renamed_GetNumJoystickHats):
  type
    JoystickNumHats_renamed_GetNumJoystickHats* = object
else:
  static :
    hint("Declaration of " & "JoystickNumHats_renamed_GetNumJoystickHats" &
        " already exists, not redeclaring")
when not declared(ReadBE32_renamed_ReadU32BE):
  type
    ReadBE32_renamed_ReadU32BE* = object
else:
  static :
    hint("Declaration of " & "ReadBE32_renamed_ReadU32BE" &
        " already exists, not redeclaring")
when not declared(SDLK_y_renamed_SDLK_Y):
  type
    SDLK_y_renamed_SDLK_Y* = object
else:
  static :
    hint("Declaration of " & "SDLK_y_renamed_SDLK_Y" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_LEFT_renamed_SYSTEM_CURSOR_W_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_LEFT_renamed_SYSTEM_CURSOR_W_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_LEFT_renamed_SYSTEM_CURSOR_W_RESIZE" &
        " already exists, not redeclaring")
when not declared(SensorClose_renamed_CloseSensor):
  type
    SensorClose_renamed_CloseSensor* = object
else:
  static :
    hint("Declaration of " & "SensorClose_renamed_CloseSensor" &
        " already exists, not redeclaring")
when not declared(GameControllerUpdate_renamed_UpdateGamepads):
  type
    GameControllerUpdate_renamed_UpdateGamepads* = object
else:
  static :
    hint("Declaration of " & "GameControllerUpdate_renamed_UpdateGamepads" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_NINTENDO_SWITCH_PRO_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO):
  type
    CONTROLLER_TYPE_NINTENDO_SWITCH_PRO_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_NINTENDO_SWITCH_PRO_renamed_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO" &
        " already exists, not redeclaring")
when not declared(AudioStreamPut_renamed_PutAudioStreamData):
  type
    AudioStreamPut_renamed_PutAudioStreamData* = object
else:
  static :
    hint("Declaration of " & "AudioStreamPut_renamed_PutAudioStreamData" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_SIZE_CHANGED_renamed_EVENT_WINDOW_PIXEL_SIZE_CHANGED):
  type
    WINDOWEVENT_SIZE_CHANGED_renamed_EVENT_WINDOW_PIXEL_SIZE_CHANGED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_SIZE_CHANGED_renamed_EVENT_WINDOW_PIXEL_SIZE_CHANGED" &
        " already exists, not redeclaring")
when not declared(IsGameController_renamed_IsGamepad):
  type
    IsGameController_renamed_IsGamepad* = object
else:
  static :
    hint("Declaration of " & "IsGameController_renamed_IsGamepad" &
        " already exists, not redeclaring")
when not declared(NUM_LOG_PRIORITIES_renamed_LOG_PRIORITY_COUNT):
  type
    NUM_LOG_PRIORITIES_renamed_LOG_PRIORITY_COUNT* = object
else:
  static :
    hint("Declaration of " & "NUM_LOG_PRIORITIES_renamed_LOG_PRIORITY_COUNT" &
        " already exists, not redeclaring")
when not declared(HasColorKey_renamed_SurfaceHasColorKey):
  type
    HasColorKey_renamed_SurfaceHasColorKey* = object
else:
  static :
    hint("Declaration of " & "HasColorKey_renamed_SurfaceHasColorKey" &
        " already exists, not redeclaring")
when not declared(RENDER_TARGETS_RESET_renamed_EVENT_RENDER_TARGETS_RESET):
  type
    RENDER_TARGETS_RESET_renamed_EVENT_RENDER_TARGETS_RESET* = object
else:
  static :
    hint("Declaration of " &
        "RENDER_TARGETS_RESET_renamed_EVENT_RENDER_TARGETS_RESET" &
        " already exists, not redeclaring")
when not declared(HapticNumEffectsPlaying_renamed_GetMaxHapticEffectsPlaying):
  type
    HapticNumEffectsPlaying_renamed_GetMaxHapticEffectsPlaying* = object
else:
  static :
    hint("Declaration of " &
        "HapticNumEffectsPlaying_renamed_GetMaxHapticEffectsPlaying" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BINDTYPE_NONE_renamed_GAMEPAD_BINDTYPE_NONE):
  type
    CONTROLLER_BINDTYPE_NONE_renamed_GAMEPAD_BINDTYPE_NONE* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BINDTYPE_NONE_renamed_GAMEPAD_BINDTYPE_NONE" &
        " already exists, not redeclaring")
when not declared(HasWindowSurface_renamed_WindowHasSurface):
  type
    HasWindowSurface_renamed_WindowHasSurface* = object
else:
  static :
    hint("Declaration of " & "HasWindowSurface_renamed_WindowHasSurface" &
        " already exists, not redeclaring")
when not declared(JoystickGetAttached_renamed_JoystickConnected):
  type
    JoystickGetAttached_renamed_JoystickConnected* = object
else:
  static :
    hint("Declaration of " & "JoystickGetAttached_renamed_JoystickConnected" &
        " already exists, not redeclaring")
when not declared(RenderDrawLine_renamed_RenderLine):
  type
    RenderDrawLine_renamed_RenderLine* = object
else:
  static :
    hint("Declaration of " & "RenderDrawLine_renamed_RenderLine" &
        " already exists, not redeclaring")
when not declared(SDLK_m_renamed_SDLK_M):
  type
    SDLK_m_renamed_SDLK_M* = object
else:
  static :
    hint("Declaration of " & "SDLK_m_renamed_SDLK_M" &
        " already exists, not redeclaring")
when not declared(RenderSetLogicalSize_renamed_SetRenderLogicalPresentation):
  type
    RenderSetLogicalSize_renamed_SetRenderLogicalPresentation* = object
else:
  static :
    hint("Declaration of " &
        "RenderSetLogicalSize_renamed_SetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE_renamed_HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE):
  type
    HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE_renamed_HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE* = object
else:
  static :
    hint("Declaration of " &
        "HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE_renamed_HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" &
        " already exists, not redeclaring")
when not declared(struct_RWLock):
  type
    struct_RWLock* = object
else:
  static :
    hint("Declaration of " & "struct_RWLock" &
        " already exists, not redeclaring")
when not declared(HINT_ALLOW_TOPMOST_renamed_HINT_WINDOW_ALLOW_TOPMOST):
  type
    HINT_ALLOW_TOPMOST_renamed_HINT_WINDOW_ALLOW_TOPMOST* = object
else:
  static :
    hint("Declaration of " &
        "HINT_ALLOW_TOPMOST_renamed_HINT_WINDOW_ALLOW_TOPMOST" &
        " already exists, not redeclaring")
when not declared(JoystickName_renamed_GetJoystickName):
  type
    JoystickName_renamed_GetJoystickName* = object
else:
  static :
    hint("Declaration of " & "JoystickName_renamed_GetJoystickName" &
        " already exists, not redeclaring")
when not declared(RectEquals_renamed_RectsEqual):
  type
    RectEquals_renamed_RectsEqual* = object
else:
  static :
    hint("Declaration of " & "RectEquals_renamed_RectsEqual" &
        " already exists, not redeclaring")
when not declared(RenderIsClipEnabled_renamed_RenderClipEnabled):
  type
    RenderIsClipEnabled_renamed_RenderClipEnabled* = object
else:
  static :
    hint("Declaration of " & "RenderIsClipEnabled_renamed_RenderClipEnabled" &
        " already exists, not redeclaring")
when not declared(GameControllerGetButtonFromString_renamed_GetGamepadButtonFromString):
  type
    GameControllerGetButtonFromString_renamed_GetGamepadButtonFromString* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetButtonFromString_renamed_GetGamepadButtonFromString" &
        " already exists, not redeclaring")
when not declared(IsTextInputActive_renamed_TextInputActive):
  type
    IsTextInputActive_renamed_TextInputActive* = object
else:
  static :
    hint("Declaration of " & "IsTextInputActive_renamed_TextInputActive" &
        " already exists, not redeclaring")
when not declared(GameControllerGetStringForButton_renamed_GetGamepadStringForButton):
  type
    GameControllerGetStringForButton_renamed_GetGamepadStringForButton* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetStringForButton_renamed_GetGamepadStringForButton" &
        " already exists, not redeclaring")
when not declared(JoystickGetSerial_renamed_GetJoystickSerial):
  type
    JoystickGetSerial_renamed_GetJoystickSerial* = object
else:
  static :
    hint("Declaration of " & "JoystickGetSerial_renamed_GetJoystickSerial" &
        " already exists, not redeclaring")
when not declared(compiler_FILE_private):
  type
    compiler_FILE_private* = object
else:
  static :
    hint("Declaration of " & "compiler_FILE_private" &
        " already exists, not redeclaring")
when not declared(CreateCond_renamed_CreateCondition):
  type
    CreateCond_renamed_CreateCondition* = object
else:
  static :
    hint("Declaration of " & "CreateCond_renamed_CreateCondition" &
        " already exists, not redeclaring")
when not declared(SDLK_c_renamed_SDLK_C):
  type
    SDLK_c_renamed_SDLK_C* = object
else:
  static :
    hint("Declaration of " & "SDLK_c_renamed_SDLK_C" &
        " already exists, not redeclaring")
when not declared(MouseIsHaptic_renamed_IsMouseHaptic):
  type
    MouseIsHaptic_renamed_IsMouseHaptic* = object
else:
  static :
    hint("Declaration of " & "MouseIsHaptic_renamed_IsMouseHaptic" &
        " already exists, not redeclaring")
when not declared(SDLK_f_renamed_SDLK_F):
  type
    SDLK_f_renamed_SDLK_F* = object
else:
  static :
    hint("Declaration of " & "SDLK_f_renamed_SDLK_F" &
        " already exists, not redeclaring")
when not declared(JoystickGetVendor_renamed_GetJoystickVendor):
  type
    JoystickGetVendor_renamed_GetJoystickVendor* = object
else:
  static :
    hint("Declaration of " & "JoystickGetVendor_renamed_GetJoystickVendor" &
        " already exists, not redeclaring")
when not declared(JoystickNumBalls_renamed_GetNumJoystickBalls):
  type
    JoystickNumBalls_renamed_GetNumJoystickBalls* = object
else:
  static :
    hint("Declaration of " & "JoystickNumBalls_renamed_GetNumJoystickBalls" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_LEAVE_renamed_EVENT_WINDOW_MOUSE_LEAVE):
  type
    WINDOWEVENT_LEAVE_renamed_EVENT_WINDOW_MOUSE_LEAVE* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_LEAVE_renamed_EVENT_WINDOW_MOUSE_LEAVE" &
        " already exists, not redeclaring")
when not declared(threadID_renamed_ThreadID):
  type
    threadID_renamed_ThreadID* = object
else:
  static :
    hint("Declaration of " & "threadID_renamed_ThreadID" &
        " already exists, not redeclaring")
when not declared(struct_Process):
  type
    struct_Process* = object
else:
  static :
    hint("Declaration of " & "struct_Process" &
        " already exists, not redeclaring")
when not declared(LoadBMP_RW_renamed_LoadBMP_IO):
  type
    LoadBMP_RW_renamed_LoadBMP_IO* = object
else:
  static :
    hint("Declaration of " & "LoadBMP_RW_renamed_LoadBMP_IO" &
        " already exists, not redeclaring")
when not declared(RenderFillRectF_renamed_RenderFillRect):
  type
    RenderFillRectF_renamed_RenderFillRect* = object
else:
  static :
    hint("Declaration of " & "RenderFillRectF_renamed_RenderFillRect" &
        " already exists, not redeclaring")
when not declared(JOYBUTTONUP_renamed_EVENT_JOYSTICK_BUTTON_UP):
  type
    JOYBUTTONUP_renamed_EVENT_JOYSTICK_BUTTON_UP* = object
else:
  static :
    hint("Declaration of " & "JOYBUTTONUP_renamed_EVENT_JOYSTICK_BUTTON_UP" &
        " already exists, not redeclaring")
when not declared(RWFromMem_renamed_IOFromMem):
  type
    RWFromMem_renamed_IOFromMem* = object
else:
  static :
    hint("Declaration of " & "RWFromMem_renamed_IOFromMem" &
        " already exists, not redeclaring")
when not declared(KEYMAPCHANGED_renamed_EVENT_KEYMAP_CHANGED):
  type
    KEYMAPCHANGED_renamed_EVENT_KEYMAP_CHANGED* = object
else:
  static :
    hint("Declaration of " & "KEYMAPCHANGED_renamed_EVENT_KEYMAP_CHANGED" &
        " already exists, not redeclaring")
when not declared(INIT_GAMECONTROLLER_renamed_INIT_GAMEPAD):
  type
    INIT_GAMECONTROLLER_renamed_INIT_GAMEPAD* = object
else:
  static :
    hint("Declaration of " & "INIT_GAMECONTROLLER_renamed_INIT_GAMEPAD" &
        " already exists, not redeclaring")
when not declared(KMOD_LCTRL_renamed_KMOD_LCTRL):
  type
    KMOD_LCTRL_renamed_KMOD_LCTRL* = object
else:
  static :
    hint("Declaration of " & "KMOD_LCTRL_renamed_KMOD_LCTRL" &
        " already exists, not redeclaring")
when not declared(KMOD_RSHIFT_renamed_KMOD_RSHIFT):
  type
    KMOD_RSHIFT_renamed_KMOD_RSHIFT* = object
else:
  static :
    hint("Declaration of " & "KMOD_RSHIFT_renamed_KMOD_RSHIFT" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY):
  type
    SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY* = object
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY" &
        " already exists, not redeclaring")
when not declared(PREALLOC_renamed_SURFACE_PREALLOCATED):
  type
    PREALLOC_renamed_SURFACE_PREALLOCATED* = object
else:
  static :
    hint("Declaration of " & "PREALLOC_renamed_SURFACE_PREALLOCATED" &
        " already exists, not redeclaring")
when not declared(iPhoneSetAnimationCallback_renamed_iOSSetAnimationCallback):
  type
    iPhoneSetAnimationCallback_renamed_iOSSetAnimationCallback* = object
else:
  static :
    hint("Declaration of " &
        "iPhoneSetAnimationCallback_renamed_iOSSetAnimationCallback" &
        " already exists, not redeclaring")
when not declared(struct_Joystick):
  type
    struct_Joystick* = object
else:
  static :
    hint("Declaration of " & "struct_Joystick" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_INVALID_renamed_GAMEPAD_BUTTON_INVALID):
  type
    CONTROLLER_BUTTON_INVALID_renamed_GAMEPAD_BUTTON_INVALID* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_INVALID_renamed_GAMEPAD_BUTTON_INVALID" &
        " already exists, not redeclaring")
when not declared(RenderCopyF_renamed_RenderTexture):
  type
    RenderCopyF_renamed_RenderTexture* = object
else:
  static :
    hint("Declaration of " & "RenderCopyF_renamed_RenderTexture" &
        " already exists, not redeclaring")
when not declared(HapticOpenFromJoystick_renamed_OpenHapticFromJoystick):
  type
    HapticOpenFromJoystick_renamed_OpenHapticFromJoystick* = object
else:
  static :
    hint("Declaration of " &
        "HapticOpenFromJoystick_renamed_OpenHapticFromJoystick" &
        " already exists, not redeclaring")
when not declared(TLSCleanup_renamed_CleanupTLS):
  type
    TLSCleanup_renamed_CleanupTLS* = object
else:
  static :
    hint("Declaration of " & "TLSCleanup_renamed_CleanupTLS" &
        " already exists, not redeclaring")
when not declared(MOUSEWHEEL_renamed_EVENT_MOUSE_WHEEL):
  type
    MOUSEWHEEL_renamed_EVENT_MOUSE_WHEEL* = object
else:
  static :
    hint("Declaration of " & "MOUSEWHEEL_renamed_EVENT_MOUSE_WHEEL" &
        " already exists, not redeclaring")
when not declared(AUDIO_S16_renamed_AUDIO_S16LE):
  type
    AUDIO_S16_renamed_AUDIO_S16LE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S16_renamed_AUDIO_S16LE" &
        " already exists, not redeclaring")
when not declared(JOYDEVICEADDED_renamed_EVENT_JOYSTICK_ADDED):
  type
    JOYDEVICEADDED_renamed_EVENT_JOYSTICK_ADDED* = object
else:
  static :
    hint("Declaration of " & "JOYDEVICEADDED_renamed_EVENT_JOYSTICK_ADDED" &
        " already exists, not redeclaring")
when not declared(GameControllerGetButton_renamed_GetGamepadButton):
  type
    GameControllerGetButton_renamed_GetGamepadButton* = object
else:
  static :
    hint("Declaration of " & "GameControllerGetButton_renamed_GetGamepadButton" &
        " already exists, not redeclaring")
when not declared(SCANCODE_AUDIOMUTE_renamed_SCANCODE_MUTE):
  type
    SCANCODE_AUDIOMUTE_renamed_SCANCODE_MUTE* = object
else:
  static :
    hint("Declaration of " & "SCANCODE_AUDIOMUTE_renamed_SCANCODE_MUTE" &
        " already exists, not redeclaring")
when not declared(struct_Thread):
  type
    struct_Thread* = object
else:
  static :
    hint("Declaration of " & "struct_Thread" &
        " already exists, not redeclaring")
when not declared(struct_SharedObject):
  type
    struct_SharedObject* = object
else:
  static :
    hint("Declaration of " & "struct_SharedObject" &
        " already exists, not redeclaring")
when not declared(AUDIO_U8_renamed_AUDIO_U8):
  type
    AUDIO_U8_renamed_AUDIO_U8* = object
else:
  static :
    hint("Declaration of " & "AUDIO_U8_renamed_AUDIO_U8" &
        " already exists, not redeclaring")
when not declared(GameControllerGetType_renamed_GetGamepadType):
  type
    GameControllerGetType_renamed_GetGamepadType* = object
else:
  static :
    hint("Declaration of " & "GameControllerGetType_renamed_GetGamepadType" &
        " already exists, not redeclaring")
when not declared(PointInFRect_renamed_PointInRectFloat):
  type
    PointInFRect_renamed_PointInRectFloat* = object
else:
  static :
    hint("Declaration of " & "PointInFRect_renamed_PointInRectFloat" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_CLOSE_renamed_EVENT_WINDOW_CLOSE_REQUESTED):
  type
    WINDOWEVENT_CLOSE_renamed_EVENT_WINDOW_CLOSE_REQUESTED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_CLOSE_renamed_EVENT_WINDOW_CLOSE_REQUESTED" &
        " already exists, not redeclaring")
when not declared(SemWaitTimeout_renamed_WaitSemaphoreTimeout):
  type
    SemWaitTimeout_renamed_WaitSemaphoreTimeout* = object
else:
  static :
    hint("Declaration of " & "SemWaitTimeout_renamed_WaitSemaphoreTimeout" &
        " already exists, not redeclaring")
when not declared(SensorFromInstanceID_renamed_GetSensorFromID):
  type
    SensorFromInstanceID_renamed_GetSensorFromID* = object
else:
  static :
    hint("Declaration of " & "SensorFromInstanceID_renamed_GetSensorFromID" &
        " already exists, not redeclaring")
when not declared(GDKGetTaskQueue_renamed_GetGDKTaskQueue):
  type
    GDKGetTaskQueue_renamed_GetGDKTaskQueue* = object
else:
  static :
    hint("Declaration of " & "GDKGetTaskQueue_renamed_GetGDKTaskQueue" &
        " already exists, not redeclaring")
when not declared(AUDIODEVICEREMOVED_renamed_EVENT_AUDIO_DEVICE_REMOVED):
  type
    AUDIODEVICEREMOVED_renamed_EVENT_AUDIO_DEVICE_REMOVED* = object
else:
  static :
    hint("Declaration of " &
        "AUDIODEVICEREMOVED_renamed_EVENT_AUDIO_DEVICE_REMOVED" &
        " already exists, not redeclaring")
when not declared(struct_Gamepad):
  type
    struct_Gamepad* = object
else:
  static :
    hint("Declaration of " & "struct_Gamepad" &
        " already exists, not redeclaring")
when not declared(POLLSENTINEL_renamed_EVENT_POLL_SENTINEL):
  type
    POLLSENTINEL_renamed_EVENT_POLL_SENTINEL* = object
else:
  static :
    hint("Declaration of " & "POLLSENTINEL_renamed_EVENT_POLL_SENTINEL" &
        " already exists, not redeclaring")
when not declared(FALSE_renamed_false):
  type
    FALSE_renamed_false* = object
else:
  static :
    hint("Declaration of " & "FALSE_renamed_false" &
        " already exists, not redeclaring")
when not declared(KMOD_RALT_renamed_KMOD_RALT):
  type
    KMOD_RALT_renamed_KMOD_RALT* = object
else:
  static :
    hint("Declaration of " & "KMOD_RALT_renamed_KMOD_RALT" &
        " already exists, not redeclaring")
when not declared(SDLK_BACKQUOTE_renamed_SDLK_GRAVE):
  type
    SDLK_BACKQUOTE_renamed_SDLK_GRAVE* = object
else:
  static :
    hint("Declaration of " & "SDLK_BACKQUOTE_renamed_SDLK_GRAVE" &
        " already exists, not redeclaring")
when not declared(KMOD_LALT_renamed_KMOD_LALT):
  type
    KMOD_LALT_renamed_KMOD_LALT* = object
else:
  static :
    hint("Declaration of " & "KMOD_LALT_renamed_KMOD_LALT" &
        " already exists, not redeclaring")
when not declared(JoystickClose_renamed_CloseJoystick):
  type
    JoystickClose_renamed_CloseJoystick* = object
else:
  static :
    hint("Declaration of " & "JoystickClose_renamed_CloseJoystick" &
        " already exists, not redeclaring")
when not declared(HapticRumblePlay_renamed_PlayHapticRumble):
  type
    HapticRumblePlay_renamed_PlayHapticRumble* = object
else:
  static :
    hint("Declaration of " & "HapticRumblePlay_renamed_PlayHapticRumble" &
        " already exists, not redeclaring")
when not declared(HapticSetGain_renamed_SetHapticGain):
  type
    HapticSetGain_renamed_SetHapticGain* = object
else:
  static :
    hint("Declaration of " & "HapticSetGain_renamed_SetHapticGain" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_RIGHTSTICK_renamed_GAMEPAD_BUTTON_RIGHT_STICK):
  type
    CONTROLLER_BUTTON_RIGHTSTICK_renamed_GAMEPAD_BUTTON_RIGHT_STICK* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_RIGHTSTICK_renamed_GAMEPAD_BUTTON_RIGHT_STICK" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_ENTER_renamed_EVENT_WINDOW_MOUSE_ENTER):
  type
    WINDOWEVENT_ENTER_renamed_EVENT_WINDOW_MOUSE_ENTER* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_ENTER_renamed_EVENT_WINDOW_MOUSE_ENTER" &
        " already exists, not redeclaring")
when not declared(DXGIGetOutputInfo_renamed_GetDXGIOutputInfo):
  type
    DXGIGetOutputInfo_renamed_GetDXGIOutputInfo* = object
else:
  static :
    hint("Declaration of " & "DXGIGetOutputInfo_renamed_GetDXGIOutputInfo" &
        " already exists, not redeclaring")
when not declared(AudioStreamFlush_renamed_FlushAudioStream):
  type
    AudioStreamFlush_renamed_FlushAudioStream* = object
else:
  static :
    hint("Declaration of " & "AudioStreamFlush_renamed_FlushAudioStream" &
        " already exists, not redeclaring")
when not declared(JoystickDetachVirtual_renamed_DetachVirtualJoystick):
  type
    JoystickDetachVirtual_renamed_DetachVirtualJoystick* = object
else:
  static :
    hint("Declaration of " &
        "JoystickDetachVirtual_renamed_DetachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(GameControllerPath_renamed_GetGamepadPath):
  type
    GameControllerPath_renamed_GetGamepadPath* = object
else:
  static :
    hint("Declaration of " & "GameControllerPath_renamed_GetGamepadPath" &
        " already exists, not redeclaring")
when not declared(EnclosePoints_renamed_GetRectEnclosingPoints):
  type
    EnclosePoints_renamed_GetRectEnclosingPoints* = object
else:
  static :
    hint("Declaration of " & "EnclosePoints_renamed_GetRectEnclosingPoints" &
        " already exists, not redeclaring")
when not declared(JOYBATTERYUPDATED_renamed_EVENT_JOYSTICK_BATTERY_UPDATED):
  type
    JOYBATTERYUPDATED_renamed_EVENT_JOYSTICK_BATTERY_UPDATED* = object
else:
  static :
    hint("Declaration of " &
        "JOYBATTERYUPDATED_renamed_EVENT_JOYSTICK_BATTERY_UPDATED" &
        " already exists, not redeclaring")
when not declared(RenderGetScale_renamed_GetRenderScale):
  type
    RenderGetScale_renamed_GetRenderScale* = object
else:
  static :
    hint("Declaration of " & "RenderGetScale_renamed_GetRenderScale" &
        " already exists, not redeclaring")
when not declared(ReadBE64_renamed_ReadU64BE):
  type
    ReadBE64_renamed_ReadU64BE* = object
else:
  static :
    hint("Declaration of " & "ReadBE64_renamed_ReadU64BE" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_SHOWN_renamed_EVENT_WINDOW_SHOWN):
  type
    WINDOWEVENT_SHOWN_renamed_EVENT_WINDOW_SHOWN* = object
else:
  static :
    hint("Declaration of " & "WINDOWEVENT_SHOWN_renamed_EVENT_WINDOW_SHOWN" &
        " already exists, not redeclaring")
when not declared(GameControllerGetSteamHandle_renamed_GetGamepadSteamHandle):
  type
    GameControllerGetSteamHandle_renamed_GetGamepadSteamHandle* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetSteamHandle_renamed_GetGamepadSteamHandle" &
        " already exists, not redeclaring")
when not declared(KMOD_ALT_renamed_KMOD_ALT):
  type
    KMOD_ALT_renamed_KMOD_ALT* = object
else:
  static :
    hint("Declaration of " & "KMOD_ALT_renamed_KMOD_ALT" &
        " already exists, not redeclaring")
when not declared(JoystickGUID_renamed_GUID):
  type
    JoystickGUID_renamed_GUID* = object
else:
  static :
    hint("Declaration of " & "JoystickGUID_renamed_GUID" &
        " already exists, not redeclaring")
when not declared(RenderGetViewport_renamed_GetRenderViewport):
  type
    RenderGetViewport_renamed_GetRenderViewport* = object
else:
  static :
    hint("Declaration of " & "RenderGetViewport_renamed_GetRenderViewport" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_B_renamed_GAMEPAD_BUTTON_EAST):
  type
    CONTROLLER_BUTTON_B_renamed_GAMEPAD_BUTTON_EAST* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_BUTTON_B_renamed_GAMEPAD_BUTTON_EAST" &
        " already exists, not redeclaring")
when not declared(RenderDrawRectF_renamed_RenderRect):
  type
    RenderDrawRectF_renamed_RenderRect* = object
else:
  static :
    hint("Declaration of " & "RenderDrawRectF_renamed_RenderRect" &
        " already exists, not redeclaring")
when not declared(AndroidRequestPermissionCallback_renamed_RequestAndroidPermissionCallback):
  type
    AndroidRequestPermissionCallback_renamed_RequestAndroidPermissionCallback* = object
else:
  static :
    hint("Declaration of " &
        "AndroidRequestPermissionCallback_renamed_RequestAndroidPermissionCallback" &
        " already exists, not redeclaring")
when not declared(struct_IOStream):
  type
    struct_IOStream* = object
else:
  static :
    hint("Declaration of " & "struct_IOStream" &
        " already exists, not redeclaring")
when not declared(CONTROLLERSTEAMHANDLEUPDATED_renamed_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED):
  type
    CONTROLLERSTEAMHANDLEUPDATED_renamed_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERSTEAMHANDLEUPDATED_renamed_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED" &
        " already exists, not redeclaring")
when not declared(JoystickSendEffect_renamed_SendJoystickEffect):
  type
    JoystickSendEffect_renamed_SendJoystickEffect* = object
else:
  static :
    hint("Declaration of " & "JoystickSendEffect_renamed_SendJoystickEffect" &
        " already exists, not redeclaring")
when not declared(SIMD_ALIGNED_renamed_SURFACE_SIMD_ALIGNED):
  type
    SIMD_ALIGNED_renamed_SURFACE_SIMD_ALIGNED* = object
else:
  static :
    hint("Declaration of " & "SIMD_ALIGNED_renamed_SURFACE_SIMD_ALIGNED" &
        " already exists, not redeclaring")
when not declared(strtokr_renamed_strtok_r):
  type
    strtokr_renamed_strtok_r* = object
else:
  static :
    hint("Declaration of " & "strtokr_renamed_strtok_r" &
        " already exists, not redeclaring")
when not declared(struct_iconv_data_t):
  type
    struct_iconv_data_t* = object
else:
  static :
    hint("Declaration of " & "struct_iconv_data_t" &
        " already exists, not redeclaring")
when not declared(LogSetPriority_renamed_SetLogPriority):
  type
    LogSetPriority_renamed_SetLogPriority* = object
else:
  static :
    hint("Declaration of " & "LogSetPriority_renamed_SetLogPriority" &
        " already exists, not redeclaring")
when not declared(LOCALECHANGED_renamed_EVENT_LOCALE_CHANGED):
  type
    LOCALECHANGED_renamed_EVENT_LOCALE_CHANGED* = object
else:
  static :
    hint("Declaration of " & "LOCALECHANGED_renamed_EVENT_LOCALE_CHANGED" &
        " already exists, not redeclaring")
when not declared(PixelFormatEnumToMasks_renamed_GetMasksForPixelFormat):
  type
    PixelFormatEnumToMasks_renamed_GetMasksForPixelFormat* = object
else:
  static :
    hint("Declaration of " &
        "PixelFormatEnumToMasks_renamed_GetMasksForPixelFormat" &
        " already exists, not redeclaring")
when not declared(ReadBE16_renamed_ReadU16BE):
  type
    ReadBE16_renamed_ReadU16BE* = object
else:
  static :
    hint("Declaration of " & "ReadBE16_renamed_ReadU16BE" &
        " already exists, not redeclaring")
when not declared(RW_SEEK_SET_renamed_IO_SEEK_SET):
  type
    RW_SEEK_SET_renamed_IO_SEEK_SET* = object
else:
  static :
    hint("Declaration of " & "RW_SEEK_SET_renamed_IO_SEEK_SET" &
        " already exists, not redeclaring")
when not declared(struct_GPUComputePass):
  type
    struct_GPUComputePass* = object
else:
  static :
    hint("Declaration of " & "struct_GPUComputePass" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_EXPOSED_renamed_EVENT_WINDOW_EXPOSED):
  type
    WINDOWEVENT_EXPOSED_renamed_EVENT_WINDOW_EXPOSED* = object
else:
  static :
    hint("Declaration of " & "WINDOWEVENT_EXPOSED_renamed_EVENT_WINDOW_EXPOSED" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_TOPRIGHT_renamed_SYSTEM_CURSOR_NE_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_TOPRIGHT_renamed_SYSTEM_CURSOR_NE_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_TOPRIGHT_renamed_SYSTEM_CURSOR_NE_RESIZE" &
        " already exists, not redeclaring")
when not declared(GameControllerGetSensorData_renamed_GetGamepadSensorData):
  type
    GameControllerGetSensorData_renamed_GetGamepadSensorData* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetSensorData_renamed_GetGamepadSensorData" &
        " already exists, not redeclaring")
when not declared(SensorGetInstanceID_renamed_GetSensorID):
  type
    SensorGetInstanceID_renamed_GetSensorID* = object
else:
  static :
    hint("Declaration of " & "SensorGetInstanceID_renamed_GetSensorID" &
        " already exists, not redeclaring")
when not declared(FillRects_renamed_FillSurfaceRects):
  type
    FillRects_renamed_FillSurfaceRects* = object
else:
  static :
    hint("Declaration of " & "FillRects_renamed_FillSurfaceRects" &
        " already exists, not redeclaring")
when not declared(KMOD_GUI_renamed_KMOD_GUI):
  type
    KMOD_GUI_renamed_KMOD_GUI* = object
else:
  static :
    hint("Declaration of " & "KMOD_GUI_renamed_KMOD_GUI" &
        " already exists, not redeclaring")
when not declared(LogSetOutputFunction_renamed_SetLogOutputFunction):
  type
    LogSetOutputFunction_renamed_SetLogOutputFunction* = object
else:
  static :
    hint("Declaration of " & "LogSetOutputFunction_renamed_SetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(AtomicGetPtr_renamed_GetAtomicPointer):
  type
    AtomicGetPtr_renamed_GetAtomicPointer* = object
else:
  static :
    hint("Declaration of " & "AtomicGetPtr_renamed_GetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(HapticOpen_renamed_OpenHaptic):
  type
    HapticOpen_renamed_OpenHaptic* = object
else:
  static :
    hint("Declaration of " & "HapticOpen_renamed_OpenHaptic" &
        " already exists, not redeclaring")
when not declared(HapticOpenFromMouse_renamed_OpenHapticFromMouse):
  type
    HapticOpenFromMouse_renamed_OpenHapticFromMouse* = object
else:
  static :
    hint("Declaration of " & "HapticOpenFromMouse_renamed_OpenHapticFromMouse" &
        " already exists, not redeclaring")
when not declared(RW_SEEK_CUR_renamed_IO_SEEK_CUR):
  type
    RW_SEEK_CUR_renamed_IO_SEEK_CUR* = object
else:
  static :
    hint("Declaration of " & "RW_SEEK_CUR_renamed_IO_SEEK_CUR" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_INVALID_renamed_GAMEPAD_AXIS_INVALID):
  type
    CONTROLLER_AXIS_INVALID_renamed_GAMEPAD_AXIS_INVALID* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_AXIS_INVALID_renamed_GAMEPAD_AXIS_INVALID" &
        " already exists, not redeclaring")
when not declared(AndroidRequestPermission_renamed_RequestAndroidPermission):
  type
    AndroidRequestPermission_renamed_RequestAndroidPermission* = object
else:
  static :
    hint("Declaration of " &
        "AndroidRequestPermission_renamed_RequestAndroidPermission" &
        " already exists, not redeclaring")
when not declared(SDLK_EJECT_renamed_SDLK_MEDIA_EJECT):
  type
    SDLK_EJECT_renamed_SDLK_MEDIA_EJECT* = object
else:
  static :
    hint("Declaration of " & "SDLK_EJECT_renamed_SDLK_MEDIA_EJECT" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_IBEAM_renamed_SYSTEM_CURSOR_TEXT):
  type
    SYSTEM_CURSOR_IBEAM_renamed_SYSTEM_CURSOR_TEXT* = object
else:
  static :
    hint("Declaration of " & "SYSTEM_CURSOR_IBEAM_renamed_SYSTEM_CURSOR_TEXT" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_LEFTSHOULDER_renamed_GAMEPAD_BUTTON_LEFT_SHOULDER):
  type
    CONTROLLER_BUTTON_LEFTSHOULDER_renamed_GAMEPAD_BUTTON_LEFT_SHOULDER* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_LEFTSHOULDER_renamed_GAMEPAD_BUTTON_LEFT_SHOULDER" &
        " already exists, not redeclaring")
when not declared(DISPLAYEVENT_MOVED_renamed_EVENT_DISPLAY_MOVED):
  type
    DISPLAYEVENT_MOVED_renamed_EVENT_DISPLAY_MOVED* = object
else:
  static :
    hint("Declaration of " & "DISPLAYEVENT_MOVED_renamed_EVENT_DISPLAY_MOVED" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_RESTORED_renamed_EVENT_WINDOW_RESTORED):
  type
    WINDOWEVENT_RESTORED_renamed_EVENT_WINDOW_RESTORED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_RESTORED_renamed_EVENT_WINDOW_RESTORED" &
        " already exists, not redeclaring")
when not declared(JoystickNumAxes_renamed_GetNumJoystickAxes):
  type
    JoystickNumAxes_renamed_GetNumJoystickAxes* = object
else:
  static :
    hint("Declaration of " & "JoystickNumAxes_renamed_GetNumJoystickAxes" &
        " already exists, not redeclaring")
when not declared(SDLK_l_renamed_SDLK_L):
  type
    SDLK_l_renamed_SDLK_L* = object
else:
  static :
    hint("Declaration of " & "SDLK_l_renamed_SDLK_L" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_BOTTOMRIGHT_renamed_SYSTEM_CURSOR_SE_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_BOTTOMRIGHT_renamed_SYSTEM_CURSOR_SE_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_BOTTOMRIGHT_renamed_SYSTEM_CURSOR_SE_RESIZE" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_RGB888_renamed_PIXELFORMAT_XRGB8888):
  type
    PIXELFORMAT_RGB888_renamed_PIXELFORMAT_XRGB8888* = object
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_RGB888_renamed_PIXELFORMAT_XRGB8888" &
        " already exists, not redeclaring")
when not declared(JoystickNumButtons_renamed_GetNumJoystickButtons):
  type
    JoystickNumButtons_renamed_GetNumJoystickButtons* = object
else:
  static :
    hint("Declaration of " & "JoystickNumButtons_renamed_GetNumJoystickButtons" &
        " already exists, not redeclaring")
when not declared(JoystickFromInstanceID_renamed_GetJoystickFromID):
  type
    JoystickFromInstanceID_renamed_GetJoystickFromID* = object
else:
  static :
    hint("Declaration of " & "JoystickFromInstanceID_renamed_GetJoystickFromID" &
        " already exists, not redeclaring")
when not declared(LogGetPriority_renamed_GetLogPriority):
  type
    LogGetPriority_renamed_GetLogPriority* = object
else:
  static :
    hint("Declaration of " & "LogGetPriority_renamed_GetLogPriority" &
        " already exists, not redeclaring")
when not declared(GameControllerType_renamed_GamepadType):
  type
    GameControllerType_renamed_GamepadType* = object
else:
  static :
    hint("Declaration of " & "GameControllerType_renamed_GamepadType" &
        " already exists, not redeclaring")
when not declared(SemWait_renamed_WaitSemaphore):
  type
    SemWait_renamed_WaitSemaphore* = object
else:
  static :
    hint("Declaration of " & "SemWait_renamed_WaitSemaphore" &
        " already exists, not redeclaring")
when not declared(DISPLAYEVENT_ORIENTATION_renamed_EVENT_DISPLAY_ORIENTATION):
  type
    DISPLAYEVENT_ORIENTATION_renamed_EVENT_DISPLAY_ORIENTATION* = object
else:
  static :
    hint("Declaration of " &
        "DISPLAYEVENT_ORIENTATION_renamed_EVENT_DISPLAY_ORIENTATION" &
        " already exists, not redeclaring")
when not declared(GameControllerGetNumTouchpads_renamed_GetNumGamepadTouchpads):
  type
    GameControllerGetNumTouchpads_renamed_GetNumGamepadTouchpads* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetNumTouchpads_renamed_GetNumGamepadTouchpads" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_HIDDEN_renamed_EVENT_WINDOW_HIDDEN):
  type
    WINDOWEVENT_HIDDEN_renamed_EVENT_WINDOW_HIDDEN* = object
else:
  static :
    hint("Declaration of " & "WINDOWEVENT_HIDDEN_renamed_EVENT_WINDOW_HIDDEN" &
        " already exists, not redeclaring")
when not declared(JoystickGetAxis_renamed_GetJoystickAxis):
  type
    JoystickGetAxis_renamed_GetJoystickAxis* = object
else:
  static :
    hint("Declaration of " & "JoystickGetAxis_renamed_GetJoystickAxis" &
        " already exists, not redeclaring")
when not declared(FINGERUP_renamed_EVENT_FINGER_UP):
  type
    FINGERUP_renamed_EVENT_FINGER_UP* = object
else:
  static :
    hint("Declaration of " & "FINGERUP_renamed_EVENT_FINGER_UP" &
        " already exists, not redeclaring")
when not declared(RenderGetMetalLayer_renamed_GetRenderMetalLayer):
  type
    RenderGetMetalLayer_renamed_GetRenderMetalLayer* = object
else:
  static :
    hint("Declaration of " & "RenderGetMetalLayer_renamed_GetRenderMetalLayer" &
        " already exists, not redeclaring")
when not declared(SetColorKey_renamed_SetSurfaceColorKey):
  type
    SetColorKey_renamed_SetSurfaceColorKey* = object
else:
  static :
    hint("Declaration of " & "SetColorKey_renamed_SetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(RWseek_renamed_SeekIO):
  type
    RWseek_renamed_SeekIO* = object
else:
  static :
    hint("Declaration of " & "RWseek_renamed_SeekIO" &
        " already exists, not redeclaring")
when not declared(BUTTON_renamed_BUTTON_MASK):
  type
    BUTTON_renamed_BUTTON_MASK* = object
else:
  static :
    hint("Declaration of " & "BUTTON_renamed_BUTTON_MASK" &
        " already exists, not redeclaring")
when not declared(struct_AudioStream):
  type
    struct_AudioStream* = object
else:
  static :
    hint("Declaration of " & "struct_AudioStream" &
        " already exists, not redeclaring")
when not declared(GameControllerGetSerial_renamed_GetGamepadSerial):
  type
    GameControllerGetSerial_renamed_GetGamepadSerial* = object
else:
  static :
    hint("Declaration of " & "GameControllerGetSerial_renamed_GetGamepadSerial" &
        " already exists, not redeclaring")
when not declared(JoystickSetVirtualAxis_renamed_SetJoystickVirtualAxis):
  type
    JoystickSetVirtualAxis_renamed_SetJoystickVirtualAxis* = object
else:
  static :
    hint("Declaration of " &
        "JoystickSetVirtualAxis_renamed_SetJoystickVirtualAxis" &
        " already exists, not redeclaring")
when not declared(JoystickUpdate_renamed_UpdateJoysticks):
  type
    JoystickUpdate_renamed_UpdateJoysticks* = object
else:
  static :
    hint("Declaration of " & "JoystickUpdate_renamed_UpdateJoysticks" &
        " already exists, not redeclaring")
when not declared(AllocPalette_renamed_CreatePalette):
  type
    AllocPalette_renamed_CreatePalette* = object
else:
  static :
    hint("Declaration of " & "AllocPalette_renamed_CreatePalette" &
        " already exists, not redeclaring")
when not declared(IntersectFRect_renamed_GetRectIntersectionFloat):
  type
    IntersectFRect_renamed_GetRectIntersectionFloat* = object
else:
  static :
    hint("Declaration of " & "IntersectFRect_renamed_GetRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_BACK_renamed_GAMEPAD_BUTTON_BACK):
  type
    CONTROLLER_BUTTON_BACK_renamed_GAMEPAD_BUTTON_BACK* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_BACK_renamed_GAMEPAD_BUTTON_BACK" &
        " already exists, not redeclaring")
when not declared(GameControllerHasButton_renamed_GamepadHasButton):
  type
    GameControllerHasButton_renamed_GamepadHasButton* = object
else:
  static :
    hint("Declaration of " & "GameControllerHasButton_renamed_GamepadHasButton" &
        " already exists, not redeclaring")
when not declared(BlitScaled_renamed_BlitSurfaceScaled):
  type
    BlitScaled_renamed_BlitSurfaceScaled* = object
else:
  static :
    hint("Declaration of " & "BlitScaled_renamed_BlitSurfaceScaled" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_SIZENWSE_renamed_SYSTEM_CURSOR_NWSE_RESIZE):
  type
    SYSTEM_CURSOR_SIZENWSE_renamed_SYSTEM_CURSOR_NWSE_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_SIZENWSE_renamed_SYSTEM_CURSOR_NWSE_RESIZE" &
        " already exists, not redeclaring")
when not declared(GameControllerBindType_renamed_GamepadBindingType):
  type
    GameControllerBindType_renamed_GamepadBindingType* = object
else:
  static :
    hint("Declaration of " & "GameControllerBindType_renamed_GamepadBindingType" &
        " already exists, not redeclaring")
when not declared(GetCPUCount_renamed_GetNumLogicalCPUCores):
  type
    GetCPUCount_renamed_GetNumLogicalCPUCores* = object
else:
  static :
    hint("Declaration of " & "GetCPUCount_renamed_GetNumLogicalCPUCores" &
        " already exists, not redeclaring")
when not declared(RenderCopyEx_renamed_RenderTextureRotated):
  type
    RenderCopyEx_renamed_RenderTextureRotated* = object
else:
  static :
    hint("Declaration of " & "RenderCopyEx_renamed_RenderTextureRotated" &
        " already exists, not redeclaring")
when not declared(JoystickAttachVirtualEx_renamed_AttachVirtualJoystick):
  type
    JoystickAttachVirtualEx_renamed_AttachVirtualJoystick* = object
else:
  static :
    hint("Declaration of " &
        "JoystickAttachVirtualEx_renamed_AttachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(FreePalette_renamed_DestroyPalette):
  type
    FreePalette_renamed_DestroyPalette* = object
else:
  static :
    hint("Declaration of " & "FreePalette_renamed_DestroyPalette" &
        " already exists, not redeclaring")
when not declared(JOYBUTTONDOWN_renamed_EVENT_JOYSTICK_BUTTON_DOWN):
  type
    JOYBUTTONDOWN_renamed_EVENT_JOYSTICK_BUTTON_DOWN* = object
else:
  static :
    hint("Declaration of " & "JOYBUTTONDOWN_renamed_EVENT_JOYSTICK_BUTTON_DOWN" &
        " already exists, not redeclaring")
when not declared(CONTROLLERBUTTONDOWN_renamed_EVENT_GAMEPAD_BUTTON_DOWN):
  type
    CONTROLLERBUTTONDOWN_renamed_EVENT_GAMEPAD_BUTTON_DOWN* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERBUTTONDOWN_renamed_EVENT_GAMEPAD_BUTTON_DOWN" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_BGR888_renamed_PIXELFORMAT_XBGR8888):
  type
    PIXELFORMAT_BGR888_renamed_PIXELFORMAT_XBGR8888* = object
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_BGR888_renamed_PIXELFORMAT_XBGR8888" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_BGR555_renamed_PIXELFORMAT_XBGR1555):
  type
    PIXELFORMAT_BGR555_renamed_PIXELFORMAT_XBGR1555* = object
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_BGR555_renamed_PIXELFORMAT_XBGR1555" &
        " already exists, not redeclaring")
when not declared(HapticNumAxes_renamed_GetNumHapticAxes):
  type
    HapticNumAxes_renamed_GetNumHapticAxes* = object
else:
  static :
    hint("Declaration of " & "HapticNumAxes_renamed_GetNumHapticAxes" &
        " already exists, not redeclaring")
when not declared(JoystickFromPlayerIndex_renamed_GetJoystickFromPlayerIndex):
  type
    JoystickFromPlayerIndex_renamed_GetJoystickFromPlayerIndex* = object
else:
  static :
    hint("Declaration of " &
        "JoystickFromPlayerIndex_renamed_GetJoystickFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(WINDOW_ALLOW_HIGHDPI_renamed_WINDOW_HIGH_PIXEL_DENSITY):
  type
    WINDOW_ALLOW_HIGHDPI_renamed_WINDOW_HIGH_PIXEL_DENSITY* = object
else:
  static :
    hint("Declaration of " &
        "WINDOW_ALLOW_HIGHDPI_renamed_WINDOW_HIGH_PIXEL_DENSITY" &
        " already exists, not redeclaring")
when not declared(AUDIO_S32LSB_renamed_AUDIO_S32LE):
  type
    AUDIO_S32LSB_renamed_AUDIO_S32LE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S32LSB_renamed_AUDIO_S32LE" &
        " already exists, not redeclaring")
when not declared(SCANCODE_AUDIONEXT_renamed_SCANCODE_MEDIA_NEXT_TRACK):
  type
    SCANCODE_AUDIONEXT_renamed_SCANCODE_MEDIA_NEXT_TRACK* = object
else:
  static :
    hint("Declaration of " &
        "SCANCODE_AUDIONEXT_renamed_SCANCODE_MEDIA_NEXT_TRACK" &
        " already exists, not redeclaring")
when not declared(union_XEvent):
  type
    union_XEvent* = object
else:
  static :
    hint("Declaration of " & "union_XEvent" & " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_GUIDE_renamed_GAMEPAD_BUTTON_GUIDE):
  type
    CONTROLLER_BUTTON_GUIDE_renamed_GAMEPAD_BUTTON_GUIDE* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_GUIDE_renamed_GAMEPAD_BUTTON_GUIDE" &
        " already exists, not redeclaring")
when not declared(DelEventWatch_renamed_RemoveEventWatch):
  type
    DelEventWatch_renamed_RemoveEventWatch* = object
else:
  static :
    hint("Declaration of " & "DelEventWatch_renamed_RemoveEventWatch" &
        " already exists, not redeclaring")
when not declared(GameControllerGetSensorDataRate_renamed_GetGamepadSensorDataRate):
  type
    GameControllerGetSensorDataRate_renamed_GetGamepadSensorDataRate* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetSensorDataRate_renamed_GetGamepadSensorDataRate" &
        " already exists, not redeclaring")
when not declared(SDLK_e_renamed_SDLK_E):
  type
    SDLK_e_renamed_SDLK_E* = object
else:
  static :
    hint("Declaration of " & "SDLK_e_renamed_SDLK_E" &
        " already exists, not redeclaring")
when not declared(KMOD_RGUI_renamed_KMOD_RGUI):
  type
    KMOD_RGUI_renamed_KMOD_RGUI* = object
else:
  static :
    hint("Declaration of " & "KMOD_RGUI_renamed_KMOD_RGUI" &
        " already exists, not redeclaring")
when not declared(LinuxSetThreadPriority_renamed_SetLinuxThreadPriority):
  type
    LinuxSetThreadPriority_renamed_SetLinuxThreadPriority* = object
else:
  static :
    hint("Declaration of " &
        "LinuxSetThreadPriority_renamed_SetLinuxThreadPriority" &
        " already exists, not redeclaring")
when not declared(TABLESIZE_renamed_arraysize):
  type
    TABLESIZE_renamed_arraysize* = object
else:
  static :
    hint("Declaration of " & "TABLESIZE_renamed_arraysize" &
        " already exists, not redeclaring")
when not declared(GameController_renamed_Gamepad):
  type
    GameController_renamed_Gamepad* = object
else:
  static :
    hint("Declaration of " & "GameController_renamed_Gamepad" &
        " already exists, not redeclaring")
when not declared(TLSGet_renamed_GetTLS):
  type
    TLSGet_renamed_GetTLS* = object
else:
  static :
    hint("Declaration of " & "TLSGet_renamed_GetTLS" &
        " already exists, not redeclaring")
when not declared(SDLK_u_renamed_SDLK_U):
  type
    SDLK_u_renamed_SDLK_U* = object
else:
  static :
    hint("Declaration of " & "SDLK_u_renamed_SDLK_U" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_MISC1_renamed_GAMEPAD_BUTTON_MISC1):
  type
    CONTROLLER_BUTTON_MISC1_renamed_GAMEPAD_BUTTON_MISC1* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_MISC1_renamed_GAMEPAD_BUTTON_MISC1" &
        " already exists, not redeclaring")
when not declared(JoystickGetPlayerIndex_renamed_GetJoystickPlayerIndex):
  type
    JoystickGetPlayerIndex_renamed_GetJoystickPlayerIndex* = object
else:
  static :
    hint("Declaration of " &
        "JoystickGetPlayerIndex_renamed_GetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(struct_GPUComputePipeline):
  type
    struct_GPUComputePipeline* = object
else:
  static :
    hint("Declaration of " & "struct_GPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(CONTROLLERSENSORUPDATE_renamed_EVENT_GAMEPAD_SENSOR_UPDATE):
  type
    CONTROLLERSENSORUPDATE_renamed_EVENT_GAMEPAD_SENSOR_UPDATE* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERSENSORUPDATE_renamed_EVENT_GAMEPAD_SENSOR_UPDATE" &
        " already exists, not redeclaring")
when not declared(HapticUpdateEffect_renamed_UpdateHapticEffect):
  type
    HapticUpdateEffect_renamed_UpdateHapticEffect* = object
else:
  static :
    hint("Declaration of " & "HapticUpdateEffect_renamed_UpdateHapticEffect" &
        " already exists, not redeclaring")
when not declared(SDLK_x_renamed_SDLK_X):
  type
    SDLK_x_renamed_SDLK_X* = object
else:
  static :
    hint("Declaration of " & "SDLK_x_renamed_SDLK_X" &
        " already exists, not redeclaring")
when not declared(SemTryWait_renamed_TryWaitSemaphore):
  type
    SemTryWait_renamed_TryWaitSemaphore* = object
else:
  static :
    hint("Declaration of " & "SemTryWait_renamed_TryWaitSemaphore" &
        " already exists, not redeclaring")
when not declared(AUDIO_F32LSB_renamed_AUDIO_F32LE):
  type
    AUDIO_F32LSB_renamed_AUDIO_F32LE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_F32LSB_renamed_AUDIO_F32LE" &
        " already exists, not redeclaring")
when not declared(NewAudioStream_renamed_CreateAudioStream):
  type
    NewAudioStream_renamed_CreateAudioStream* = object
else:
  static :
    hint("Declaration of " & "NewAudioStream_renamed_CreateAudioStream" &
        " already exists, not redeclaring")
when not declared(struct_GPUDevice):
  type
    struct_GPUDevice* = object
else:
  static :
    hint("Declaration of " & "struct_GPUDevice" &
        " already exists, not redeclaring")
when not declared(ConvertSurfaceFormat_renamed_ConvertSurface):
  type
    ConvertSurfaceFormat_renamed_ConvertSurface* = object
else:
  static :
    hint("Declaration of " & "ConvertSurfaceFormat_renamed_ConvertSurface" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_DPAD_RIGHT_renamed_GAMEPAD_BUTTON_DPAD_RIGHT):
  type
    CONTROLLER_BUTTON_DPAD_RIGHT_renamed_GAMEPAD_BUTTON_DPAD_RIGHT* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_DPAD_RIGHT_renamed_GAMEPAD_BUTTON_DPAD_RIGHT" &
        " already exists, not redeclaring")
when not declared(AndroidGetActivity_renamed_GetAndroidActivity):
  type
    AndroidGetActivity_renamed_GetAndroidActivity* = object
else:
  static :
    hint("Declaration of " & "AndroidGetActivity_renamed_GetAndroidActivity" &
        " already exists, not redeclaring")
when not declared(GameControllerGetAxis_renamed_GetGamepadAxis):
  type
    GameControllerGetAxis_renamed_GetGamepadAxis* = object
else:
  static :
    hint("Declaration of " & "GameControllerGetAxis_renamed_GetGamepadAxis" &
        " already exists, not redeclaring")
when not declared(compiler_func_private):
  type
    compiler_func_private* = object
else:
  static :
    hint("Declaration of " & "compiler_func_private" &
        " already exists, not redeclaring")
when not declared(GameControllerRumble_renamed_RumbleGamepad):
  type
    GameControllerRumble_renamed_RumbleGamepad* = object
else:
  static :
    hint("Declaration of " & "GameControllerRumble_renamed_RumbleGamepad" &
        " already exists, not redeclaring")
when not declared(APP_LOWMEMORY_renamed_EVENT_LOW_MEMORY):
  type
    APP_LOWMEMORY_renamed_EVENT_LOW_MEMORY* = object
else:
  static :
    hint("Declaration of " & "APP_LOWMEMORY_renamed_EVENT_LOW_MEMORY" &
        " already exists, not redeclaring")
when not declared(RenderGetClipRect_renamed_GetRenderClipRect):
  type
    RenderGetClipRect_renamed_GetRenderClipRect* = object
else:
  static :
    hint("Declaration of " & "RenderGetClipRect_renamed_GetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(Direct3D9GetAdapterIndex_renamed_GetDirect3D9AdapterIndex):
  type
    Direct3D9GetAdapterIndex_renamed_GetDirect3D9AdapterIndex* = object
else:
  static :
    hint("Declaration of " &
        "Direct3D9GetAdapterIndex_renamed_GetDirect3D9AdapterIndex" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_X_renamed_GAMEPAD_BUTTON_WEST):
  type
    CONTROLLER_BUTTON_X_renamed_GAMEPAD_BUTTON_WEST* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_BUTTON_X_renamed_GAMEPAD_BUTTON_WEST" &
        " already exists, not redeclaring")
when not declared(struct_GPUCommandBuffer):
  type
    struct_GPUCommandBuffer* = object
else:
  static :
    hint("Declaration of " & "struct_GPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(SDLK_r_renamed_SDLK_R):
  type
    SDLK_r_renamed_SDLK_R* = object
else:
  static :
    hint("Declaration of " & "SDLK_r_renamed_SDLK_R" &
        " already exists, not redeclaring")
when not declared(MOUSEMOTION_renamed_EVENT_MOUSE_MOTION):
  type
    MOUSEMOTION_renamed_EVENT_MOUSE_MOTION* = object
else:
  static :
    hint("Declaration of " & "MOUSEMOTION_renamed_EVENT_MOUSE_MOTION" &
        " already exists, not redeclaring")
when not declared(SDLK_d_renamed_SDLK_D):
  type
    SDLK_d_renamed_SDLK_D* = object
else:
  static :
    hint("Declaration of " & "SDLK_d_renamed_SDLK_D" &
        " already exists, not redeclaring")
when not declared(CONTROLLERTOUCHPADDOWN_renamed_EVENT_GAMEPAD_TOUCHPAD_DOWN):
  type
    CONTROLLERTOUCHPADDOWN_renamed_EVENT_GAMEPAD_TOUCHPAD_DOWN* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERTOUCHPADDOWN_renamed_EVENT_GAMEPAD_TOUCHPAD_DOWN" &
        " already exists, not redeclaring")
when not declared(CONTROLLERDEVICEREMAPPED_renamed_EVENT_GAMEPAD_REMAPPED):
  type
    CONTROLLERDEVICEREMAPPED_renamed_EVENT_GAMEPAD_REMAPPED* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERDEVICEREMAPPED_renamed_EVENT_GAMEPAD_REMAPPED" &
        " already exists, not redeclaring")
when not declared(FINGERMOTION_renamed_EVENT_FINGER_MOTION):
  type
    FINGERMOTION_renamed_EVENT_FINGER_MOTION* = object
else:
  static :
    hint("Declaration of " & "FINGERMOTION_renamed_EVENT_FINGER_MOTION" &
        " already exists, not redeclaring")
when not declared(HapticDestroyEffect_renamed_DestroyHapticEffect):
  type
    HapticDestroyEffect_renamed_DestroyHapticEffect* = object
else:
  static :
    hint("Declaration of " & "HapticDestroyEffect_renamed_DestroyHapticEffect" &
        " already exists, not redeclaring")
when not declared(CONTROLLERTOUCHPADUP_renamed_EVENT_GAMEPAD_TOUCHPAD_UP):
  type
    CONTROLLERTOUCHPADUP_renamed_EVENT_GAMEPAD_TOUCHPAD_UP* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERTOUCHPADUP_renamed_EVENT_GAMEPAD_TOUCHPAD_UP" &
        " already exists, not redeclaring")
when not declared(HapticRumbleInit_renamed_InitHapticRumble):
  type
    HapticRumbleInit_renamed_InitHapticRumble* = object
else:
  static :
    hint("Declaration of " & "HapticRumbleInit_renamed_InitHapticRumble" &
        " already exists, not redeclaring")
when not declared(SDLK_g_renamed_SDLK_G):
  type
    SDLK_g_renamed_SDLK_G* = object
else:
  static :
    hint("Declaration of " & "SDLK_g_renamed_SDLK_G" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_SIZEALL_renamed_SYSTEM_CURSOR_MOVE):
  type
    SYSTEM_CURSOR_SIZEALL_renamed_SYSTEM_CURSOR_MOVE* = object
else:
  static :
    hint("Declaration of " & "SYSTEM_CURSOR_SIZEALL_renamed_SYSTEM_CURSOR_MOVE" &
        " already exists, not redeclaring")
when not declared(KMOD_RCTRL_renamed_KMOD_RCTRL):
  type
    KMOD_RCTRL_renamed_KMOD_RCTRL* = object
else:
  static :
    hint("Declaration of " & "KMOD_RCTRL_renamed_KMOD_RCTRL" &
        " already exists, not redeclaring")
when not declared(SCANCODE_AUDIOPREV_renamed_SCANCODE_MEDIA_PREVIOUS_TRACK):
  type
    SCANCODE_AUDIOPREV_renamed_SCANCODE_MEDIA_PREVIOUS_TRACK* = object
else:
  static :
    hint("Declaration of " &
        "SCANCODE_AUDIOPREV_renamed_SCANCODE_MEDIA_PREVIOUS_TRACK" &
        " already exists, not redeclaring")
when not declared(CondSignal_renamed_SignalCondition):
  type
    CondSignal_renamed_SignalCondition* = object
else:
  static :
    hint("Declaration of " & "CondSignal_renamed_SignalCondition" &
        " already exists, not redeclaring")
when not declared(iOSSetEventPump_renamed_SetiOSEventPump):
  type
    iOSSetEventPump_renamed_SetiOSEventPump* = object
else:
  static :
    hint("Declaration of " & "iOSSetEventPump_renamed_SetiOSEventPump" &
        " already exists, not redeclaring")
when not declared(JoystickGetProduct_renamed_GetJoystickProduct):
  type
    JoystickGetProduct_renamed_GetJoystickProduct* = object
else:
  static :
    hint("Declaration of " & "JoystickGetProduct_renamed_GetJoystickProduct" &
        " already exists, not redeclaring")
when not declared(SCANCODE_AUDIOFASTFORWARD_renamed_SCANCODE_MEDIA_FAST_FORWARD):
  type
    SCANCODE_AUDIOFASTFORWARD_renamed_SCANCODE_MEDIA_FAST_FORWARD* = object
else:
  static :
    hint("Declaration of " &
        "SCANCODE_AUDIOFASTFORWARD_renamed_SCANCODE_MEDIA_FAST_FORWARD" &
        " already exists, not redeclaring")
when not declared(SensorGetNonPortableType_renamed_GetSensorNonPortableType):
  type
    SensorGetNonPortableType_renamed_GetSensorNonPortableType* = object
else:
  static :
    hint("Declaration of " &
        "SensorGetNonPortableType_renamed_GetSensorNonPortableType" &
        " already exists, not redeclaring")
when not declared(SetClipRect_renamed_SetSurfaceClipRect):
  type
    SetClipRect_renamed_SetSurfaceClipRect* = object
else:
  static :
    hint("Declaration of " & "SetClipRect_renamed_SetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(SetThreadPriority_renamed_SetCurrentThreadPriority):
  type
    SetThreadPriority_renamed_SetCurrentThreadPriority* = object
else:
  static :
    hint("Declaration of " &
        "SetThreadPriority_renamed_SetCurrentThreadPriority" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_DPAD_DOWN_renamed_GAMEPAD_BUTTON_DPAD_DOWN):
  type
    CONTROLLER_BUTTON_DPAD_DOWN_renamed_GAMEPAD_BUTTON_DPAD_DOWN* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_DPAD_DOWN_renamed_GAMEPAD_BUTTON_DPAD_DOWN" &
        " already exists, not redeclaring")
when not declared(HapticNumEffects_renamed_GetMaxHapticEffects):
  type
    HapticNumEffects_renamed_GetMaxHapticEffects* = object
else:
  static :
    hint("Declaration of " & "HapticNumEffects_renamed_GetMaxHapticEffects" &
        " already exists, not redeclaring")
when not declared(SCANCODE_AUDIOPLAY_renamed_SCANCODE_MEDIA_PLAY):
  type
    SCANCODE_AUDIOPLAY_renamed_SCANCODE_MEDIA_PLAY* = object
else:
  static :
    hint("Declaration of " & "SCANCODE_AUDIOPLAY_renamed_SCANCODE_MEDIA_PLAY" &
        " already exists, not redeclaring")
when not declared(struct_GPUGraphicsPipeline):
  type
    struct_GPUGraphicsPipeline* = object
else:
  static :
    hint("Declaration of " & "struct_GPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(SIZE_MAX_anon):
  type
    SIZE_MAX_anon* = object
else:
  static :
    hint("Declaration of " & "SIZE_MAX_anon" &
        " already exists, not redeclaring")
when not declared(GameControllerAddMapping_renamed_AddGamepadMapping):
  type
    GameControllerAddMapping_renamed_AddGamepadMapping* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerAddMapping_renamed_AddGamepadMapping" &
        " already exists, not redeclaring")
when not declared(GameControllerGetVendor_renamed_GetGamepadVendor):
  type
    GameControllerGetVendor_renamed_GetGamepadVendor* = object
else:
  static :
    hint("Declaration of " & "GameControllerGetVendor_renamed_GetGamepadVendor" &
        " already exists, not redeclaring")
when not declared(SDLK_q_renamed_SDLK_Q):
  type
    SDLK_q_renamed_SDLK_Q* = object
else:
  static :
    hint("Declaration of " & "SDLK_q_renamed_SDLK_Q" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_MINIMIZED_renamed_EVENT_WINDOW_MINIMIZED):
  type
    WINDOWEVENT_MINIMIZED_renamed_EVENT_WINDOW_MINIMIZED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_MINIMIZED_renamed_EVENT_WINDOW_MINIMIZED" &
        " already exists, not redeclaring")
when not declared(SwapBE64_renamed_Swap64BE):
  type
    SwapBE64_renamed_Swap64BE* = object
else:
  static :
    hint("Declaration of " & "SwapBE64_renamed_Swap64BE" &
        " already exists, not redeclaring")
when not declared(MOUSEBUTTONUP_renamed_EVENT_MOUSE_BUTTON_UP):
  type
    MOUSEBUTTONUP_renamed_EVENT_MOUSE_BUTTON_UP* = object
else:
  static :
    hint("Declaration of " & "MOUSEBUTTONUP_renamed_EVENT_MOUSE_BUTTON_UP" &
        " already exists, not redeclaring")
when not declared(LoadWAV_RW_renamed_LoadWAV_IO):
  type
    LoadWAV_RW_renamed_LoadWAV_IO* = object
else:
  static :
    hint("Declaration of " & "LoadWAV_RW_renamed_LoadWAV_IO" &
        " already exists, not redeclaring")
when not declared(TEXTINPUT_renamed_EVENT_TEXT_INPUT):
  type
    TEXTINPUT_renamed_EVENT_TEXT_INPUT* = object
else:
  static :
    hint("Declaration of " & "TEXTINPUT_renamed_EVENT_TEXT_INPUT" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_TRIGGERLEFT_renamed_GAMEPAD_AXIS_LEFT_TRIGGER):
  type
    CONTROLLER_AXIS_TRIGGERLEFT_renamed_GAMEPAD_AXIS_LEFT_TRIGGER* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_AXIS_TRIGGERLEFT_renamed_GAMEPAD_AXIS_LEFT_TRIGGER" &
        " already exists, not redeclaring")
when not declared(HapticStopEffect_renamed_StopHapticEffect):
  type
    HapticStopEffect_renamed_StopHapticEffect* = object
else:
  static :
    hint("Declaration of " & "HapticStopEffect_renamed_StopHapticEffect" &
        " already exists, not redeclaring")
when not declared(GameControllerGetAppleSFSymbolsNameForButton_renamed_GetGamepadAppleSFSymbolsNameForButton):
  type
    GameControllerGetAppleSFSymbolsNameForButton_renamed_GetGamepadAppleSFSymbolsNameForButton* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetAppleSFSymbolsNameForButton_renamed_GetGamepadAppleSFSymbolsNameForButton" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_HAND_renamed_SYSTEM_CURSOR_POINTER):
  type
    SYSTEM_CURSOR_HAND_renamed_SYSTEM_CURSOR_POINTER* = object
else:
  static :
    hint("Declaration of " & "SYSTEM_CURSOR_HAND_renamed_SYSTEM_CURSOR_POINTER" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_RGB444_renamed_PIXELFORMAT_XRGB4444):
  type
    PIXELFORMAT_RGB444_renamed_PIXELFORMAT_XRGB4444* = object
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_RGB444_renamed_PIXELFORMAT_XRGB4444" &
        " already exists, not redeclaring")
when not declared(AUDIO_F32MSB_renamed_AUDIO_F32BE):
  type
    AUDIO_F32MSB_renamed_AUDIO_F32BE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_F32MSB_renamed_AUDIO_F32BE" &
        " already exists, not redeclaring")
when not declared(WINDOW_INPUT_GRABBED_renamed_WINDOW_MOUSE_GRABBED):
  type
    WINDOW_INPUT_GRABBED_renamed_WINDOW_MOUSE_GRABBED* = object
else:
  static :
    hint("Declaration of " & "WINDOW_INPUT_GRABBED_renamed_WINDOW_MOUSE_GRABBED" &
        " already exists, not redeclaring")
when not declared(GL_DeleteContext_renamed_GL_DestroyContext):
  type
    GL_DeleteContext_renamed_GL_DestroyContext* = object
else:
  static :
    hint("Declaration of " & "GL_DeleteContext_renamed_GL_DestroyContext" &
        " already exists, not redeclaring")
when not declared(DROPCOMPLETE_renamed_EVENT_DROP_COMPLETE):
  type
    DROPCOMPLETE_renamed_EVENT_DROP_COMPLETE* = object
else:
  static :
    hint("Declaration of " & "DROPCOMPLETE_renamed_EVENT_DROP_COMPLETE" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP):
  type
    SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP* = object
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP" &
        " already exists, not redeclaring")
when not declared(FreeAudioStream_renamed_DestroyAudioStream):
  type
    FreeAudioStream_renamed_DestroyAudioStream* = object
else:
  static :
    hint("Declaration of " & "FreeAudioStream_renamed_DestroyAudioStream" &
        " already exists, not redeclaring")
when not declared(HINT_LINUX_DIGITAL_HATS_renamed_HINT_JOYSTICK_LINUX_DIGITAL_HATS):
  type
    HINT_LINUX_DIGITAL_HATS_renamed_HINT_JOYSTICK_LINUX_DIGITAL_HATS* = object
else:
  static :
    hint("Declaration of " &
        "HINT_LINUX_DIGITAL_HATS_renamed_HINT_JOYSTICK_LINUX_DIGITAL_HATS" &
        " already exists, not redeclaring")
when not declared(JoystickSetLED_renamed_SetJoystickLED):
  type
    JoystickSetLED_renamed_SetJoystickLED* = object
else:
  static :
    hint("Declaration of " & "JoystickSetLED_renamed_SetJoystickLED" &
        " already exists, not redeclaring")
when not declared(HapticUnpause_renamed_ResumeHaptic):
  type
    HapticUnpause_renamed_ResumeHaptic* = object
else:
  static :
    hint("Declaration of " & "HapticUnpause_renamed_ResumeHaptic" &
        " already exists, not redeclaring")
when not declared(mutex_renamed_Mutex):
  type
    mutex_renamed_Mutex* = object
else:
  static :
    hint("Declaration of " & "mutex_renamed_Mutex" &
        " already exists, not redeclaring")
when not declared(FreeWAV_renamed_free):
  type
    FreeWAV_renamed_free* = object
else:
  static :
    hint("Declaration of " & "FreeWAV_renamed_free" &
        " already exists, not redeclaring")
when not declared(IntersectFRectAndLine_renamed_GetRectAndLineIntersectionFloat):
  type
    IntersectFRectAndLine_renamed_GetRectAndLineIntersectionFloat* = object
else:
  static :
    hint("Declaration of " &
        "IntersectFRectAndLine_renamed_GetRectAndLineIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(KMOD_NUM_renamed_KMOD_NUM):
  type
    KMOD_NUM_renamed_KMOD_NUM* = object
else:
  static :
    hint("Declaration of " & "KMOD_NUM_renamed_KMOD_NUM" &
        " already exists, not redeclaring")
when not declared(RenderSetViewport_renamed_SetRenderViewport):
  type
    RenderSetViewport_renamed_SetRenderViewport* = object
else:
  static :
    hint("Declaration of " & "RenderSetViewport_renamed_SetRenderViewport" &
        " already exists, not redeclaring")
when not declared(compiler_cdecl):
  type
    compiler_cdecl* = object
else:
  static :
    hint("Declaration of " & "compiler_cdecl" &
        " already exists, not redeclaring")
when not declared(UpperBlit_renamed_BlitSurface):
  type
    UpperBlit_renamed_BlitSurface* = object
else:
  static :
    hint("Declaration of " & "UpperBlit_renamed_BlitSurface" &
        " already exists, not redeclaring")
when not declared(compiler_inline):
  type
    compiler_inline* = object
else:
  static :
    hint("Declaration of " & "compiler_inline" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_UNKNOWN_renamed_GAMEPAD_TYPE_STANDARD):
  type
    CONTROLLER_TYPE_UNKNOWN_renamed_GAMEPAD_TYPE_STANDARD* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_UNKNOWN_renamed_GAMEPAD_TYPE_STANDARD" &
        " already exists, not redeclaring")
when not declared(GameControllerGetJoystick_renamed_GetGamepadJoystick):
  type
    GameControllerGetJoystick_renamed_GetGamepadJoystick* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetJoystick_renamed_GetGamepadJoystick" &
        " already exists, not redeclaring")
when not declared(JoystickGetGUID_renamed_GetJoystickGUID):
  type
    JoystickGetGUID_renamed_GetJoystickGUID* = object
else:
  static :
    hint("Declaration of " & "JoystickGetGUID_renamed_GetJoystickGUID" &
        " already exists, not redeclaring")
when not declared(KMOD_LGUI_renamed_KMOD_LGUI):
  type
    KMOD_LGUI_renamed_KMOD_LGUI* = object
else:
  static :
    hint("Declaration of " & "KMOD_LGUI_renamed_KMOD_LGUI" &
        " already exists, not redeclaring")
when not declared(ControllerTouchpadEvent_renamed_GamepadTouchpadEvent):
  type
    ControllerTouchpadEvent_renamed_GamepadTouchpadEvent* = object
else:
  static :
    hint("Declaration of " &
        "ControllerTouchpadEvent_renamed_GamepadTouchpadEvent" &
        " already exists, not redeclaring")
when not declared(LowerBlitScaled_renamed_BlitSurfaceUncheckedScaled):
  type
    LowerBlitScaled_renamed_BlitSurfaceUncheckedScaled* = object
else:
  static :
    hint("Declaration of " &
        "LowerBlitScaled_renamed_BlitSurfaceUncheckedScaled" &
        " already exists, not redeclaring")
when not declared(bool_renamed_bool):
  type
    bool_renamed_bool* = object
else:
  static :
    hint("Declaration of " & "bool_renamed_bool" &
        " already exists, not redeclaring")
when not declared(AtomicGet_renamed_GetAtomicInt):
  type
    AtomicGet_renamed_GetAtomicInt* = object
else:
  static :
    hint("Declaration of " & "AtomicGet_renamed_GetAtomicInt" &
        " already exists, not redeclaring")
when not declared(WriteBE64_renamed_WriteU64BE):
  type
    WriteBE64_renamed_WriteU64BE* = object
else:
  static :
    hint("Declaration of " & "WriteBE64_renamed_WriteU64BE" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_RIGHTX_renamed_GAMEPAD_AXIS_RIGHTX):
  type
    CONTROLLER_AXIS_RIGHTX_renamed_GAMEPAD_AXIS_RIGHTX* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_AXIS_RIGHTX_renamed_GAMEPAD_AXIS_RIGHTX" &
        " already exists, not redeclaring")
when not declared(GameControllerFromPlayerIndex_renamed_GetGamepadFromPlayerIndex):
  type
    GameControllerFromPlayerIndex_renamed_GetGamepadFromPlayerIndex* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerFromPlayerIndex_renamed_GetGamepadFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_ICCPROF_CHANGED_renamed_EVENT_WINDOW_ICCPROF_CHANGED):
  type
    WINDOWEVENT_ICCPROF_CHANGED_renamed_EVENT_WINDOW_ICCPROF_CHANGED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_ICCPROF_CHANGED_renamed_EVENT_WINDOW_ICCPROF_CHANGED" &
        " already exists, not redeclaring")
when not declared(HapticGetEffectStatus_renamed_GetHapticEffectStatus):
  type
    HapticGetEffectStatus_renamed_GetHapticEffectStatus* = object
else:
  static :
    hint("Declaration of " &
        "HapticGetEffectStatus_renamed_GetHapticEffectStatus" &
        " already exists, not redeclaring")
when not declared(KEYDOWN_renamed_EVENT_KEY_DOWN):
  type
    KEYDOWN_renamed_EVENT_KEY_DOWN* = object
else:
  static :
    hint("Declaration of " & "KEYDOWN_renamed_EVENT_KEY_DOWN" &
        " already exists, not redeclaring")
when not declared(eventaction_renamed_EventAction):
  type
    eventaction_renamed_EventAction* = object
else:
  static :
    hint("Declaration of " & "eventaction_renamed_EventAction" &
        " already exists, not redeclaring")
when not declared(JOYSTICK_TYPE_GAMECONTROLLER_renamed_JOYSTICK_TYPE_GAMEPAD):
  type
    JOYSTICK_TYPE_GAMECONTROLLER_renamed_JOYSTICK_TYPE_GAMEPAD* = object
else:
  static :
    hint("Declaration of " &
        "JOYSTICK_TYPE_GAMECONTROLLER_renamed_JOYSTICK_TYPE_GAMEPAD" &
        " already exists, not redeclaring")
when not declared(IsScreenKeyboardShown_renamed_ScreenKeyboardShown):
  type
    IsScreenKeyboardShown_renamed_ScreenKeyboardShown* = object
else:
  static :
    hint("Declaration of " & "IsScreenKeyboardShown_renamed_ScreenKeyboardShown" &
        " already exists, not redeclaring")
when not declared(compiler_forceinline):
  type
    compiler_forceinline* = object
else:
  static :
    hint("Declaration of " & "compiler_forceinline" &
        " already exists, not redeclaring")
when not declared(ControllerButtonEvent_renamed_GamepadButtonEvent):
  type
    ControllerButtonEvent_renamed_GamepadButtonEvent* = object
else:
  static :
    hint("Declaration of " & "ControllerButtonEvent_renamed_GamepadButtonEvent" &
        " already exists, not redeclaring")
when not declared(LogResetPriorities_renamed_ResetLogPriorities):
  type
    LogResetPriorities_renamed_ResetLogPriorities* = object
else:
  static :
    hint("Declaration of " & "LogResetPriorities_renamed_ResetLogPriorities" &
        " already exists, not redeclaring")
when not declared(FreeCursor_renamed_DestroyCursor):
  type
    FreeCursor_renamed_DestroyCursor* = object
else:
  static :
    hint("Declaration of " & "FreeCursor_renamed_DestroyCursor" &
        " already exists, not redeclaring")
when not declared(NUM_SCANCODES_renamed_SCANCODE_COUNT):
  type
    NUM_SCANCODES_renamed_SCANCODE_COUNT* = object
else:
  static :
    hint("Declaration of " & "NUM_SCANCODES_renamed_SCANCODE_COUNT" &
        " already exists, not redeclaring")
when not declared(RenderSetClipRect_renamed_SetRenderClipRect):
  type
    RenderSetClipRect_renamed_SetRenderClipRect* = object
else:
  static :
    hint("Declaration of " & "RenderSetClipRect_renamed_SetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(GetWindowDisplayMode_renamed_GetWindowFullscreenMode):
  type
    GetWindowDisplayMode_renamed_GetWindowFullscreenMode* = object
else:
  static :
    hint("Declaration of " &
        "GetWindowDisplayMode_renamed_GetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_HIT_TEST_renamed_EVENT_WINDOW_HIT_TEST):
  type
    WINDOWEVENT_HIT_TEST_renamed_EVENT_WINDOW_HIT_TEST* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_HIT_TEST_renamed_EVENT_WINDOW_HIT_TEST" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_Y_renamed_GAMEPAD_BUTTON_NORTH):
  type
    CONTROLLER_BUTTON_Y_renamed_GAMEPAD_BUTTON_NORTH* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_BUTTON_Y_renamed_GAMEPAD_BUTTON_NORTH" &
        " already exists, not redeclaring")
when not declared(RWFromConstMem_renamed_IOFromConstMem):
  type
    RWFromConstMem_renamed_IOFromConstMem* = object
else:
  static :
    hint("Declaration of " & "RWFromConstMem_renamed_IOFromConstMem" &
        " already exists, not redeclaring")
when not declared(AUDIO_F32_renamed_AUDIO_F32LE):
  type
    AUDIO_F32_renamed_AUDIO_F32LE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_F32_renamed_AUDIO_F32LE" &
        " already exists, not redeclaring")
when not declared(AUDIO_S16MSB_renamed_AUDIO_S16BE):
  type
    AUDIO_S16MSB_renamed_AUDIO_S16BE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S16MSB_renamed_AUDIO_S16BE" &
        " already exists, not redeclaring")
when not declared(AUDIO_S8_renamed_AUDIO_S8):
  type
    AUDIO_S8_renamed_AUDIO_S8* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S8_renamed_AUDIO_S8" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_DEFAULT_renamed_HINT_GDK_TEXTINPUT_DEFAULT_TEXT):
  type
    HINT_GDK_TEXTINPUT_DEFAULT_renamed_HINT_GDK_TEXTINPUT_DEFAULT_TEXT* = object
else:
  static :
    hint("Declaration of " &
        "HINT_GDK_TEXTINPUT_DEFAULT_renamed_HINT_GDK_TEXTINPUT_DEFAULT_TEXT" &
        " already exists, not redeclaring")
when not declared(SDLK_j_renamed_SDLK_J):
  type
    SDLK_j_renamed_SDLK_J* = object
else:
  static :
    hint("Declaration of " & "SDLK_j_renamed_SDLK_J" &
        " already exists, not redeclaring")
when not declared(WriteBE16_renamed_WriteU16BE):
  type
    WriteBE16_renamed_WriteU16BE* = object
else:
  static :
    hint("Declaration of " & "WriteBE16_renamed_WriteU16BE" &
        " already exists, not redeclaring")
when not declared(IntersectRect_renamed_GetRectIntersection):
  type
    IntersectRect_renamed_GetRectIntersection* = object
else:
  static :
    hint("Declaration of " & "IntersectRect_renamed_GetRectIntersection" &
        " already exists, not redeclaring")
when not declared(SensorGetName_renamed_GetSensorName):
  type
    SensorGetName_renamed_GetSensorName* = object
else:
  static :
    hint("Declaration of " & "SensorGetName_renamed_GetSensorName" &
        " already exists, not redeclaring")
when not declared(struct_Window):
  type
    struct_Window* = object
else:
  static :
    hint("Declaration of " & "struct_Window" &
        " already exists, not redeclaring")
when not declared(UpperBlitScaled_renamed_BlitSurfaceScaled):
  type
    UpperBlitScaled_renamed_BlitSurfaceScaled* = object
else:
  static :
    hint("Declaration of " & "UpperBlitScaled_renamed_BlitSurfaceScaled" &
        " already exists, not redeclaring")
when not declared(GameControllerAddMappingsFromFile_renamed_AddGamepadMappingsFromFile):
  type
    GameControllerAddMappingsFromFile_renamed_AddGamepadMappingsFromFile* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerAddMappingsFromFile_renamed_AddGamepadMappingsFromFile" &
        " already exists, not redeclaring")
when not declared(GameControllerName_renamed_GetGamepadName):
  type
    GameControllerName_renamed_GetGamepadName* = object
else:
  static :
    hint("Declaration of " & "GameControllerName_renamed_GetGamepadName" &
        " already exists, not redeclaring")
when not declared(OnApplicationDidBecomeActive_renamed_OnApplicationDidEnterForeground):
  type
    OnApplicationDidBecomeActive_renamed_OnApplicationDidEnterForeground* = object
else:
  static :
    hint("Declaration of " &
        "OnApplicationDidBecomeActive_renamed_OnApplicationDidEnterForeground" &
        " already exists, not redeclaring")
when not declared(RenderGetLogicalSize_renamed_GetRenderLogicalPresentation):
  type
    RenderGetLogicalSize_renamed_GetRenderLogicalPresentation* = object
else:
  static :
    hint("Declaration of " &
        "RenderGetLogicalSize_renamed_GetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(RWops_renamed_IOStream):
  type
    RWops_renamed_IOStream* = object
else:
  static :
    hint("Declaration of " & "RWops_renamed_IOStream" &
        " already exists, not redeclaring")
when not declared(GameControllerIsSensorEnabled_renamed_GamepadSensorEnabled):
  type
    GameControllerIsSensorEnabled_renamed_GamepadSensorEnabled* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerIsSensorEnabled_renamed_GamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(LogSetAllPriority_renamed_SetLogPriorities):
  type
    LogSetAllPriority_renamed_SetLogPriorities* = object
else:
  static :
    hint("Declaration of " & "LogSetAllPriority_renamed_SetLogPriorities" &
        " already exists, not redeclaring")
when not declared(JoystickOpen_renamed_OpenJoystick):
  type
    JoystickOpen_renamed_OpenJoystick* = object
else:
  static :
    hint("Declaration of " & "JoystickOpen_renamed_OpenJoystick" &
        " already exists, not redeclaring")
when not declared(FillRect_renamed_FillSurfaceRect):
  type
    FillRect_renamed_FillSurfaceRect* = object
else:
  static :
    hint("Declaration of " & "FillRect_renamed_FillSurfaceRect" &
        " already exists, not redeclaring")
when not declared(ReadLE64_renamed_ReadU64LE):
  type
    ReadLE64_renamed_ReadU64LE* = object
else:
  static :
    hint("Declaration of " & "ReadLE64_renamed_ReadU64LE" &
        " already exists, not redeclaring")
when not declared(struct_GPUTransferBuffer):
  type
    struct_GPUTransferBuffer* = object
else:
  static :
    hint("Declaration of " & "struct_GPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(JOYHATMOTION_renamed_EVENT_JOYSTICK_HAT_MOTION):
  type
    JOYHATMOTION_renamed_EVENT_JOYSTICK_HAT_MOTION* = object
else:
  static :
    hint("Declaration of " & "JOYHATMOTION_renamed_EVENT_JOYSTICK_HAT_MOTION" &
        " already exists, not redeclaring")
when not declared(JoystickRumbleTriggers_renamed_RumbleJoystickTriggers):
  type
    JoystickRumbleTriggers_renamed_RumbleJoystickTriggers* = object
else:
  static :
    hint("Declaration of " &
        "JoystickRumbleTriggers_renamed_RumbleJoystickTriggers" &
        " already exists, not redeclaring")
when not declared(AndroidGetExternalStorageState_renamed_GetAndroidExternalStorageState):
  type
    AndroidGetExternalStorageState_renamed_GetAndroidExternalStorageState* = object
else:
  static :
    hint("Declaration of " &
        "AndroidGetExternalStorageState_renamed_GetAndroidExternalStorageState" &
        " already exists, not redeclaring")
when not declared(AtomicSetPtr_renamed_SetAtomicPointer):
  type
    AtomicSetPtr_renamed_SetAtomicPointer* = object
else:
  static :
    hint("Declaration of " & "AtomicSetPtr_renamed_SetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(SemPost_renamed_SignalSemaphore):
  type
    SemPost_renamed_SignalSemaphore* = object
else:
  static :
    hint("Declaration of " & "SemPost_renamed_SignalSemaphore" &
        " already exists, not redeclaring")
when not declared(GLprofile_renamed_GLProfile):
  type
    GLprofile_renamed_GLProfile* = object
else:
  static :
    hint("Declaration of " & "GLprofile_renamed_GLProfile" &
        " already exists, not redeclaring")
when not declared(GetRendererOutputSize_renamed_GetCurrentRenderOutputSize):
  type
    GetRendererOutputSize_renamed_GetCurrentRenderOutputSize* = object
else:
  static :
    hint("Declaration of " &
        "GetRendererOutputSize_renamed_GetCurrentRenderOutputSize" &
        " already exists, not redeclaring")
when not declared(RWsize_renamed_GetIOSize):
  type
    RWsize_renamed_GetIOSize* = object
else:
  static :
    hint("Declaration of " & "RWsize_renamed_GetIOSize" &
        " already exists, not redeclaring")
when not declared(WriteBE32_renamed_WriteU32BE):
  type
    WriteBE32_renamed_WriteU32BE* = object
else:
  static :
    hint("Declaration of " & "WriteBE32_renamed_WriteU32BE" &
        " already exists, not redeclaring")
when not declared(SCANCODE_EJECT_renamed_SCANCODE_MEDIA_EJECT):
  type
    SCANCODE_EJECT_renamed_SCANCODE_MEDIA_EJECT* = object
else:
  static :
    hint("Declaration of " & "SCANCODE_EJECT_renamed_SCANCODE_MEDIA_EJECT" &
        " already exists, not redeclaring")
when not declared(JOYBALLMOTION_renamed_EVENT_JOYSTICK_BALL_MOTION):
  type
    JOYBALLMOTION_renamed_EVENT_JOYSTICK_BALL_MOTION* = object
else:
  static :
    hint("Declaration of " & "JOYBALLMOTION_renamed_EVENT_JOYSTICK_BALL_MOTION" &
        " already exists, not redeclaring")
when not declared(SetWindowDisplayMode_renamed_SetWindowFullscreenMode):
  type
    SetWindowDisplayMode_renamed_SetWindowFullscreenMode* = object
else:
  static :
    hint("Declaration of " &
        "SetWindowDisplayMode_renamed_SetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(APP_DIDENTERFOREGROUND_renamed_EVENT_DID_ENTER_FOREGROUND):
  type
    APP_DIDENTERFOREGROUND_renamed_EVENT_DID_ENTER_FOREGROUND* = object
else:
  static :
    hint("Declaration of " &
        "APP_DIDENTERFOREGROUND_renamed_EVENT_DID_ENTER_FOREGROUND" &
        " already exists, not redeclaring")
when not declared(RWtell_renamed_TellIO):
  type
    RWtell_renamed_TellIO* = object
else:
  static :
    hint("Declaration of " & "RWtell_renamed_TellIO" &
        " already exists, not redeclaring")
when not declared(GameControllerHasSensor_renamed_GamepadHasSensor):
  type
    GameControllerHasSensor_renamed_GamepadHasSensor* = object
else:
  static :
    hint("Declaration of " & "GameControllerHasSensor_renamed_GamepadHasSensor" &
        " already exists, not redeclaring")
when not declared(GetColorKey_renamed_GetSurfaceColorKey):
  type
    GetColorKey_renamed_GetSurfaceColorKey* = object
else:
  static :
    hint("Declaration of " & "GetColorKey_renamed_GetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(struct_Mutex):
  type
    struct_Mutex* = object
else:
  static :
    hint("Declaration of " & "struct_Mutex" & " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_PS3_renamed_GAMEPAD_TYPE_PS3):
  type
    CONTROLLER_TYPE_PS3_renamed_GAMEPAD_TYPE_PS3* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_TYPE_PS3_renamed_GAMEPAD_TYPE_PS3" &
        " already exists, not redeclaring")
when not declared(SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE):
  type
    SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE* = object
else:
  static :
    hint("Declaration of " & "SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE" &
        " already exists, not redeclaring")
when not declared(GameControllerGetProduct_renamed_GetGamepadProduct):
  type
    GameControllerGetProduct_renamed_GetGamepadProduct* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetProduct_renamed_GetGamepadProduct" &
        " already exists, not redeclaring")
when not declared(IntersectRectAndLine_renamed_GetRectAndLineIntersection):
  type
    IntersectRectAndLine_renamed_GetRectAndLineIntersection* = object
else:
  static :
    hint("Declaration of " &
        "IntersectRectAndLine_renamed_GetRectAndLineIntersection" &
        " already exists, not redeclaring")
when not declared(LinuxSetThreadPriorityAndPolicy_renamed_SetLinuxThreadPriorityAndPolicy):
  type
    LinuxSetThreadPriorityAndPolicy_renamed_SetLinuxThreadPriorityAndPolicy* = object
else:
  static :
    hint("Declaration of " &
        "LinuxSetThreadPriorityAndPolicy_renamed_SetLinuxThreadPriorityAndPolicy" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_BOTTOMLEFT_renamed_SYSTEM_CURSOR_SW_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_BOTTOMLEFT_renamed_SYSTEM_CURSOR_SW_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_BOTTOMLEFT_renamed_SYSTEM_CURSOR_SW_RESIZE" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BINDTYPE_BUTTON_renamed_GAMEPAD_BINDTYPE_BUTTON):
  type
    CONTROLLER_BINDTYPE_BUTTON_renamed_GAMEPAD_BINDTYPE_BUTTON* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BINDTYPE_BUTTON_renamed_GAMEPAD_BINDTYPE_BUTTON" &
        " already exists, not redeclaring")
when not declared(RenderCopy_renamed_RenderTexture):
  type
    RenderCopy_renamed_RenderTexture* = object
else:
  static :
    hint("Declaration of " & "RenderCopy_renamed_RenderTexture" &
        " already exists, not redeclaring")
when not declared(JoystickInstanceID_renamed_GetJoystickID):
  type
    JoystickInstanceID_renamed_GetJoystickID* = object
else:
  static :
    hint("Declaration of " & "JoystickInstanceID_renamed_GetJoystickID" &
        " already exists, not redeclaring")
when not declared(GLattr_renamed_GLAttr):
  type
    GLattr_renamed_GLAttr* = object
else:
  static :
    hint("Declaration of " & "GLattr_renamed_GLAttr" &
        " already exists, not redeclaring")
when not declared(RenderFillRectsF_renamed_RenderFillRects):
  type
    RenderFillRectsF_renamed_RenderFillRects* = object
else:
  static :
    hint("Declaration of " & "RenderFillRectsF_renamed_RenderFillRects" &
        " already exists, not redeclaring")
when not declared(struct_Camera):
  type
    struct_Camera* = object
else:
  static :
    hint("Declaration of " & "struct_Camera" &
        " already exists, not redeclaring")
when not declared(AudioStreamClear_renamed_ClearAudioStream):
  type
    AudioStreamClear_renamed_ClearAudioStream* = object
else:
  static :
    hint("Declaration of " & "AudioStreamClear_renamed_ClearAudioStream" &
        " already exists, not redeclaring")
when not declared(JoystickGetFirmwareVersion_renamed_GetJoystickFirmwareVersion):
  type
    JoystickGetFirmwareVersion_renamed_GetJoystickFirmwareVersion* = object
else:
  static :
    hint("Declaration of " &
        "JoystickGetFirmwareVersion_renamed_GetJoystickFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(JoystickSetPlayerIndex_renamed_SetJoystickPlayerIndex):
  type
    JoystickSetPlayerIndex_renamed_SetJoystickPlayerIndex* = object
else:
  static :
    hint("Declaration of " &
        "JoystickSetPlayerIndex_renamed_SetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(SDLK_p_renamed_SDLK_P):
  type
    SDLK_p_renamed_SDLK_P* = object
else:
  static :
    hint("Declaration of " & "SDLK_p_renamed_SDLK_P" &
        " already exists, not redeclaring")
when not declared(iPhoneSetEventPump_renamed_iOSSetEventPump):
  type
    iPhoneSetEventPump_renamed_iOSSetEventPump* = object
else:
  static :
    hint("Declaration of " & "iPhoneSetEventPump_renamed_iOSSetEventPump" &
        " already exists, not redeclaring")
when not declared(struct_Haptic):
  type
    struct_Haptic* = object
else:
  static :
    hint("Declaration of " & "struct_Haptic" &
        " already exists, not redeclaring")
when not declared(GameControllerRumbleTriggers_renamed_RumbleGamepadTriggers):
  type
    GameControllerRumbleTriggers_renamed_RumbleGamepadTriggers* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerRumbleTriggers_renamed_RumbleGamepadTriggers" &
        " already exists, not redeclaring")
when not declared(KMOD_SHIFT_renamed_KMOD_SHIFT):
  type
    KMOD_SHIFT_renamed_KMOD_SHIFT* = object
else:
  static :
    hint("Declaration of " & "KMOD_SHIFT_renamed_KMOD_SHIFT" &
        " already exists, not redeclaring")
when not declared(MOUSEBUTTONDOWN_renamed_EVENT_MOUSE_BUTTON_DOWN):
  type
    MOUSEBUTTONDOWN_renamed_EVENT_MOUSE_BUTTON_DOWN* = object
else:
  static :
    hint("Declaration of " & "MOUSEBUTTONDOWN_renamed_EVENT_MOUSE_BUTTON_DOWN" &
        " already exists, not redeclaring")
when not declared(AllocFormat_renamed_GetPixelFormatDetails):
  type
    AllocFormat_renamed_GetPixelFormatDetails* = object
else:
  static :
    hint("Declaration of " & "AllocFormat_renamed_GetPixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(GetClipRect_renamed_GetSurfaceClipRect):
  type
    GetClipRect_renamed_GetSurfaceClipRect* = object
else:
  static :
    hint("Declaration of " & "GetClipRect_renamed_GetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(CondWaitTimeout_renamed_WaitConditionTimeout):
  type
    CondWaitTimeout_renamed_WaitConditionTimeout* = object
else:
  static :
    hint("Declaration of " & "CondWaitTimeout_renamed_WaitConditionTimeout" &
        " already exists, not redeclaring")
when not declared(RenderLogicalToWindow_renamed_RenderCoordinatesToWindow):
  type
    RenderLogicalToWindow_renamed_RenderCoordinatesToWindow* = object
else:
  static :
    hint("Declaration of " &
        "RenderLogicalToWindow_renamed_RenderCoordinatesToWindow" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_NO_renamed_SYSTEM_CURSOR_NOT_ALLOWED):
  type
    SYSTEM_CURSOR_NO_renamed_SYSTEM_CURSOR_NOT_ALLOWED* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_NO_renamed_SYSTEM_CURSOR_NOT_ALLOWED" &
        " already exists, not redeclaring")
when not declared(AtomicTryLock_renamed_TryLockSpinlock):
  type
    AtomicTryLock_renamed_TryLockSpinlock* = object
else:
  static :
    hint("Declaration of " & "AtomicTryLock_renamed_TryLockSpinlock" &
        " already exists, not redeclaring")
when not declared(KMOD_NONE_renamed_KMOD_NONE):
  type
    KMOD_NONE_renamed_KMOD_NONE* = object
else:
  static :
    hint("Declaration of " & "KMOD_NONE_renamed_KMOD_NONE" &
        " already exists, not redeclaring")
when not declared(SDLK_s_renamed_SDLK_S):
  type
    SDLK_s_renamed_SDLK_S* = object
else:
  static :
    hint("Declaration of " & "SDLK_s_renamed_SDLK_S" &
        " already exists, not redeclaring")
when not declared(struct_Semaphore):
  type
    struct_Semaphore* = object
else:
  static :
    hint("Declaration of " & "struct_Semaphore" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_RIGHT_renamed_SYSTEM_CURSOR_E_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_RIGHT_renamed_SYSTEM_CURSOR_E_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_RIGHT_renamed_SYSTEM_CURSOR_E_RESIZE" &
        " already exists, not redeclaring")
when not declared(GLcontextReleaseFlag_renamed_GLContextReleaseFlag):
  type
    GLcontextReleaseFlag_renamed_GLContextReleaseFlag* = object
else:
  static :
    hint("Declaration of " & "GLcontextReleaseFlag_renamed_GLContextReleaseFlag" &
        " already exists, not redeclaring")
when not declared(HINT_LINUX_JOYSTICK_CLASSIC_renamed_HINT_JOYSTICK_LINUX_CLASSIC):
  type
    HINT_LINUX_JOYSTICK_CLASSIC_renamed_HINT_JOYSTICK_LINUX_CLASSIC* = object
else:
  static :
    hint("Declaration of " &
        "HINT_LINUX_JOYSTICK_CLASSIC_renamed_HINT_JOYSTICK_LINUX_CLASSIC" &
        " already exists, not redeclaring")
when not declared(size_add_overflow_renamed_size_add_check_overflow):
  type
    size_add_overflow_renamed_size_add_check_overflow* = object
else:
  static :
    hint("Declaration of " & "size_add_overflow_renamed_size_add_check_overflow" &
        " already exists, not redeclaring")
when not declared(RenderDrawPoint_renamed_RenderPoint):
  type
    RenderDrawPoint_renamed_RenderPoint* = object
else:
  static :
    hint("Declaration of " & "RenderDrawPoint_renamed_RenderPoint" &
        " already exists, not redeclaring")
when not declared(HapticRumbleStop_renamed_StopHapticRumble):
  type
    HapticRumbleStop_renamed_StopHapticRumble* = object
else:
  static :
    hint("Declaration of " & "HapticRumbleStop_renamed_StopHapticRumble" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_FOCUS_LOST_renamed_EVENT_WINDOW_FOCUS_LOST):
  type
    WINDOWEVENT_FOCUS_LOST_renamed_EVENT_WINDOW_FOCUS_LOST* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_FOCUS_LOST_renamed_EVENT_WINDOW_FOCUS_LOST" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_A_renamed_GAMEPAD_BUTTON_SOUTH):
  type
    CONTROLLER_BUTTON_A_renamed_GAMEPAD_BUTTON_SOUTH* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_BUTTON_A_renamed_GAMEPAD_BUTTON_SOUTH" &
        " already exists, not redeclaring")
when not declared(JoystickSetVirtualHat_renamed_SetJoystickVirtualHat):
  type
    JoystickSetVirtualHat_renamed_SetJoystickVirtualHat* = object
else:
  static :
    hint("Declaration of " &
        "JoystickSetVirtualHat_renamed_SetJoystickVirtualHat" &
        " already exists, not redeclaring")
when not declared(JoystickRumble_renamed_RumbleJoystick):
  type
    JoystickRumble_renamed_RumbleJoystick* = object
else:
  static :
    hint("Declaration of " & "JoystickRumble_renamed_RumbleJoystick" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_MAX_renamed_GAMEPAD_AXIS_COUNT):
  type
    CONTROLLER_AXIS_MAX_renamed_GAMEPAD_AXIS_COUNT* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_AXIS_MAX_renamed_GAMEPAD_AXIS_COUNT" &
        " already exists, not redeclaring")
when not declared(AtomicUnlock_renamed_UnlockSpinlock):
  type
    AtomicUnlock_renamed_UnlockSpinlock* = object
else:
  static :
    hint("Declaration of " & "AtomicUnlock_renamed_UnlockSpinlock" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_LEFTSTICK_renamed_GAMEPAD_BUTTON_LEFT_STICK):
  type
    CONTROLLER_BUTTON_LEFTSTICK_renamed_GAMEPAD_BUTTON_LEFT_STICK* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_LEFTSTICK_renamed_GAMEPAD_BUTTON_LEFT_STICK" &
        " already exists, not redeclaring")
when not declared(DelHintCallback_renamed_RemoveHintCallback):
  type
    DelHintCallback_renamed_RemoveHintCallback* = object
else:
  static :
    hint("Declaration of " & "DelHintCallback_renamed_RemoveHintCallback" &
        " already exists, not redeclaring")
when not declared(JoystickGetButton_renamed_GetJoystickButton):
  type
    JoystickGetButton_renamed_GetJoystickButton* = object
else:
  static :
    hint("Declaration of " & "JoystickGetButton_renamed_GetJoystickButton" &
        " already exists, not redeclaring")
when not declared(JoystickGetGUIDFromString_renamed_GUIDFromString):
  type
    JoystickGetGUIDFromString_renamed_GUIDFromString* = object
else:
  static :
    hint("Declaration of " & "JoystickGetGUIDFromString_renamed_GUIDFromString" &
        " already exists, not redeclaring")
when not declared(struct_tagMSG):
  type
    struct_tagMSG* = object
else:
  static :
    hint("Declaration of " & "struct_tagMSG" &
        " already exists, not redeclaring")
when not declared(JoystickGetHat_renamed_GetJoystickHat):
  type
    JoystickGetHat_renamed_GetJoystickHat* = object
else:
  static :
    hint("Declaration of " & "JoystickGetHat_renamed_GetJoystickHat" &
        " already exists, not redeclaring")
when not declared(DROPBEGIN_renamed_EVENT_DROP_BEGIN):
  type
    DROPBEGIN_renamed_EVENT_DROP_BEGIN* = object
else:
  static :
    hint("Declaration of " & "DROPBEGIN_renamed_EVENT_DROP_BEGIN" &
        " already exists, not redeclaring")
when not declared(RenderWindowToLogical_renamed_RenderCoordinatesFromWindow):
  type
    RenderWindowToLogical_renamed_RenderCoordinatesFromWindow* = object
else:
  static :
    hint("Declaration of " &
        "RenderWindowToLogical_renamed_RenderCoordinatesFromWindow" &
        " already exists, not redeclaring")
when not declared(AndroidBackButton_renamed_SendAndroidBackButton):
  type
    AndroidBackButton_renamed_SendAndroidBackButton* = object
else:
  static :
    hint("Declaration of " & "AndroidBackButton_renamed_SendAndroidBackButton" &
        " already exists, not redeclaring")
when not declared(struct_Cursor):
  type
    struct_Cursor* = object
else:
  static :
    hint("Declaration of " & "struct_Cursor" &
        " already exists, not redeclaring")
when not declared(APP_WILLENTERBACKGROUND_renamed_EVENT_WILL_ENTER_BACKGROUND):
  type
    APP_WILLENTERBACKGROUND_renamed_EVENT_WILL_ENTER_BACKGROUND* = object
else:
  static :
    hint("Declaration of " &
        "APP_WILLENTERBACKGROUND_renamed_EVENT_WILL_ENTER_BACKGROUND" &
        " already exists, not redeclaring")
when not declared(COMPILEDVERSION_renamed_VERSION):
  type
    COMPILEDVERSION_renamed_VERSION* = object
else:
  static :
    hint("Declaration of " & "COMPILEDVERSION_renamed_VERSION" &
        " already exists, not redeclaring")
when not declared(AUDIODEVICEADDED_renamed_EVENT_AUDIO_DEVICE_ADDED):
  type
    AUDIODEVICEADDED_renamed_EVENT_AUDIO_DEVICE_ADDED* = object
else:
  static :
    hint("Declaration of " & "AUDIODEVICEADDED_renamed_EVENT_AUDIO_DEVICE_ADDED" &
        " already exists, not redeclaring")
when not declared(GameControllerSetLED_renamed_SetGamepadLED):
  type
    GameControllerSetLED_renamed_SetGamepadLED* = object
else:
  static :
    hint("Declaration of " & "GameControllerSetLED_renamed_SetGamepadLED" &
        " already exists, not redeclaring")
when not declared(QUIT_renamed_EVENT_QUIT):
  type
    QUIT_renamed_EVENT_QUIT* = object
else:
  static :
    hint("Declaration of " & "QUIT_renamed_EVENT_QUIT" &
        " already exists, not redeclaring")
when not declared(struct_Condition):
  type
    struct_Condition* = object
else:
  static :
    hint("Declaration of " & "struct_Condition" &
        " already exists, not redeclaring")
when not declared(struct_GPUShader):
  type
    struct_GPUShader* = object
else:
  static :
    hint("Declaration of " & "struct_GPUShader" &
        " already exists, not redeclaring")
when not declared(UnionFRect_renamed_GetRectUnionFloat):
  type
    UnionFRect_renamed_GetRectUnionFloat* = object
else:
  static :
    hint("Declaration of " & "UnionFRect_renamed_GetRectUnionFloat" &
        " already exists, not redeclaring")
when not declared(GameControllerGetAttached_renamed_GamepadConnected):
  type
    GameControllerGetAttached_renamed_GamepadConnected* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetAttached_renamed_GamepadConnected" &
        " already exists, not redeclaring")
when not declared(AndroidGetInternalStoragePath_renamed_GetAndroidInternalStoragePath):
  type
    AndroidGetInternalStoragePath_renamed_GetAndroidInternalStoragePath* = object
else:
  static :
    hint("Declaration of " &
        "AndroidGetInternalStoragePath_renamed_GetAndroidInternalStoragePath" &
        " already exists, not redeclaring")
when not declared(WriteLE16_renamed_WriteU16LE):
  type
    WriteLE16_renamed_WriteU16LE* = object
else:
  static :
    hint("Declaration of " & "WriteLE16_renamed_WriteU16LE" &
        " already exists, not redeclaring")
when not declared(RWwrite_renamed_WriteIO):
  type
    RWwrite_renamed_WriteIO* = object
else:
  static :
    hint("Declaration of " & "RWwrite_renamed_WriteIO" &
        " already exists, not redeclaring")
when not declared(struct_AsyncIO):
  type
    struct_AsyncIO* = object
else:
  static :
    hint("Declaration of " & "struct_AsyncIO" &
        " already exists, not redeclaring")
when not declared(AudioStreamAvailable_renamed_GetAudioStreamAvailable):
  type
    AudioStreamAvailable_renamed_GetAudioStreamAvailable* = object
else:
  static :
    hint("Declaration of " &
        "AudioStreamAvailable_renamed_GetAudioStreamAvailable" &
        " already exists, not redeclaring")
when not declared(DISPLAYEVENT_CONNECTED_renamed_EVENT_DISPLAY_ADDED):
  type
    DISPLAYEVENT_CONNECTED_renamed_EVENT_DISPLAY_ADDED* = object
else:
  static :
    hint("Declaration of " &
        "DISPLAYEVENT_CONNECTED_renamed_EVENT_DISPLAY_ADDED" &
        " already exists, not redeclaring")
when not declared(RenderDrawPointsF_renamed_RenderPoints):
  type
    RenderDrawPointsF_renamed_RenderPoints* = object
else:
  static :
    hint("Declaration of " & "RenderDrawPointsF_renamed_RenderPoints" &
        " already exists, not redeclaring")
when not declared(struct_GPURenderPass):
  type
    struct_GPURenderPass* = object
else:
  static :
    hint("Declaration of " & "struct_GPURenderPass" &
        " already exists, not redeclaring")
when not declared(APP_TERMINATING_renamed_EVENT_TERMINATING):
  type
    APP_TERMINATING_renamed_EVENT_TERMINATING* = object
else:
  static :
    hint("Declaration of " & "APP_TERMINATING_renamed_EVENT_TERMINATING" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WAITARROW_renamed_SYSTEM_CURSOR_PROGRESS):
  type
    SYSTEM_CURSOR_WAITARROW_renamed_SYSTEM_CURSOR_PROGRESS* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WAITARROW_renamed_SYSTEM_CURSOR_PROGRESS" &
        " already exists, not redeclaring")
when not declared(AUDIO_S32SYS_renamed_AUDIO_S32):
  type
    AUDIO_S32SYS_renamed_AUDIO_S32* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S32SYS_renamed_AUDIO_S32" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_MOVED_renamed_EVENT_WINDOW_MOVED):
  type
    WINDOWEVENT_MOVED_renamed_EVENT_WINDOW_MOVED* = object
else:
  static :
    hint("Declaration of " & "WINDOWEVENT_MOVED_renamed_EVENT_WINDOW_MOVED" &
        " already exists, not redeclaring")
when not declared(GameControllerOpen_renamed_OpenGamepad):
  type
    GameControllerOpen_renamed_OpenGamepad* = object
else:
  static :
    hint("Declaration of " & "GameControllerOpen_renamed_OpenGamepad" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_START_renamed_GAMEPAD_BUTTON_START):
  type
    CONTROLLER_BUTTON_START_renamed_GAMEPAD_BUTTON_START* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_START_renamed_GAMEPAD_BUTTON_START" &
        " already exists, not redeclaring")
when not declared(CondBroadcast_renamed_BroadcastCondition):
  type
    CondBroadcast_renamed_BroadcastCondition* = object
else:
  static :
    hint("Declaration of " & "CondBroadcast_renamed_BroadcastCondition" &
        " already exists, not redeclaring")
when not declared(GameControllerGetNumTouchpadFingers_renamed_GetNumGamepadTouchpadFingers):
  type
    GameControllerGetNumTouchpadFingers_renamed_GetNumGamepadTouchpadFingers* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerGetNumTouchpadFingers_renamed_GetNumGamepadTouchpadFingers" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_FOCUS_GAINED_renamed_EVENT_WINDOW_FOCUS_GAINED):
  type
    WINDOWEVENT_FOCUS_GAINED_renamed_EVENT_WINDOW_FOCUS_GAINED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_FOCUS_GAINED_renamed_EVENT_WINDOW_FOCUS_GAINED" &
        " already exists, not redeclaring")
when not declared(TRUE_renamed_true):
  type
    TRUE_renamed_true* = object
else:
  static :
    hint("Declaration of " & "TRUE_renamed_true" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_TOPLEFT_renamed_SYSTEM_CURSOR_NW_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_TOPLEFT_renamed_SYSTEM_CURSOR_NW_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_TOPLEFT_renamed_SYSTEM_CURSOR_NW_RESIZE" &
        " already exists, not redeclaring")
when not declared(FIRSTEVENT_renamed_EVENT_FIRST):
  type
    FIRSTEVENT_renamed_EVENT_FIRST* = object
else:
  static :
    hint("Declaration of " & "FIRSTEVENT_renamed_EVENT_FIRST" &
        " already exists, not redeclaring")
when not declared(CONTROLLERTOUCHPADMOTION_renamed_EVENT_GAMEPAD_TOUCHPAD_MOTION):
  type
    CONTROLLERTOUCHPADMOTION_renamed_EVENT_GAMEPAD_TOUCHPAD_MOTION* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLERTOUCHPADMOTION_renamed_EVENT_GAMEPAD_TOUCHPAD_MOTION" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_DPAD_UP_renamed_GAMEPAD_BUTTON_DPAD_UP):
  type
    CONTROLLER_BUTTON_DPAD_UP_renamed_GAMEPAD_BUTTON_DPAD_UP* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_DPAD_UP_renamed_GAMEPAD_BUTTON_DPAD_UP" &
        " already exists, not redeclaring")
when not declared(KMOD_SCROLL_renamed_KMOD_SCROLL):
  type
    KMOD_SCROLL_renamed_KMOD_SCROLL* = object
else:
  static :
    hint("Declaration of " & "KMOD_SCROLL_renamed_KMOD_SCROLL" &
        " already exists, not redeclaring")
when not declared(AUDIO_S32MSB_renamed_AUDIO_S32BE):
  type
    AUDIO_S32MSB_renamed_AUDIO_S32BE* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S32MSB_renamed_AUDIO_S32BE" &
        " already exists, not redeclaring")
when not declared(EncloseFPoints_renamed_GetRectEnclosingPointsFloat):
  type
    EncloseFPoints_renamed_GetRectEnclosingPointsFloat* = object
else:
  static :
    hint("Declaration of " &
        "EncloseFPoints_renamed_GetRectEnclosingPointsFloat" &
        " already exists, not redeclaring")
when not declared(RenderDrawRectsF_renamed_RenderRects):
  type
    RenderDrawRectsF_renamed_RenderRects* = object
else:
  static :
    hint("Declaration of " & "RenderDrawRectsF_renamed_RenderRects" &
        " already exists, not redeclaring")
when not declared(SaveBMP_RW_renamed_SaveBMP_IO):
  type
    SaveBMP_RW_renamed_SaveBMP_IO* = object
else:
  static :
    hint("Declaration of " & "SaveBMP_RW_renamed_SaveBMP_IO" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_DPAD_LEFT_renamed_GAMEPAD_BUTTON_DPAD_LEFT):
  type
    CONTROLLER_BUTTON_DPAD_LEFT_renamed_GAMEPAD_BUTTON_DPAD_LEFT* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_DPAD_LEFT_renamed_GAMEPAD_BUTTON_DPAD_LEFT" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOMUTE_renamed_SDLK_MUTE):
  type
    SDLK_AUDIOMUTE_renamed_SDLK_MUTE* = object
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOMUTE_renamed_SDLK_MUTE" &
        " already exists, not redeclaring")
when not declared(MAX_SINT64):
  type
    MAX_SINT64* = object
else:
  static :
    hint("Declaration of " & "MAX_SINT64" & " already exists, not redeclaring")
when not declared(SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK):
  type
    SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK* = object
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK" &
        " already exists, not redeclaring")
when not declared(FRectEquals_renamed_RectsEqualFloat):
  type
    FRectEquals_renamed_RectsEqualFloat* = object
else:
  static :
    hint("Declaration of " & "FRectEquals_renamed_RectsEqualFloat" &
        " already exists, not redeclaring")
when not declared(HasIntersectionF_renamed_HasRectIntersectionFloat):
  type
    HasIntersectionF_renamed_HasRectIntersectionFloat* = object
else:
  static :
    hint("Declaration of " & "HasIntersectionF_renamed_HasRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_TYPE_XBOX360_renamed_GAMEPAD_TYPE_XBOX360):
  type
    CONTROLLER_TYPE_XBOX360_renamed_GAMEPAD_TYPE_XBOX360* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_TYPE_XBOX360_renamed_GAMEPAD_TYPE_XBOX360" &
        " already exists, not redeclaring")
when not declared(GetWindowDisplayIndex_renamed_GetDisplayForWindow):
  type
    GetWindowDisplayIndex_renamed_GetDisplayForWindow* = object
else:
  static :
    hint("Declaration of " & "GetWindowDisplayIndex_renamed_GetDisplayForWindow" &
        " already exists, not redeclaring")
when not declared(struct_Environment):
  type
    struct_Environment* = object
else:
  static :
    hint("Declaration of " & "struct_Environment" &
        " already exists, not redeclaring")
when not declared(struct_GPUBuffer):
  type
    struct_GPUBuffer* = object
else:
  static :
    hint("Declaration of " & "struct_GPUBuffer" &
        " already exists, not redeclaring")
when not declared(SwapLE64_renamed_Swap64LE):
  type
    SwapLE64_renamed_Swap64LE* = object
else:
  static :
    hint("Declaration of " & "SwapLE64_renamed_Swap64LE" &
        " already exists, not redeclaring")
when not declared(AUDIO_S16SYS_renamed_AUDIO_S16):
  type
    AUDIO_S16SYS_renamed_AUDIO_S16* = object
else:
  static :
    hint("Declaration of " & "AUDIO_S16SYS_renamed_AUDIO_S16" &
        " already exists, not redeclaring")
when not declared(HapticPause_renamed_PauseHaptic):
  type
    HapticPause_renamed_PauseHaptic* = object
else:
  static :
    hint("Declaration of " & "HapticPause_renamed_PauseHaptic" &
        " already exists, not redeclaring")
when not declared(JoystickPath_renamed_GetJoystickPath):
  type
    JoystickPath_renamed_GetJoystickPath* = object
else:
  static :
    hint("Declaration of " & "JoystickPath_renamed_GetJoystickPath" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_SIZENS_renamed_SYSTEM_CURSOR_NS_RESIZE):
  type
    SYSTEM_CURSOR_SIZENS_renamed_SYSTEM_CURSOR_NS_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_SIZENS_renamed_SYSTEM_CURSOR_NS_RESIZE" &
        " already exists, not redeclaring")
when not declared(MixAudioFormat_renamed_MixAudio):
  type
    MixAudioFormat_renamed_MixAudio* = object
else:
  static :
    hint("Declaration of " & "MixAudioFormat_renamed_MixAudio" &
        " already exists, not redeclaring")
when not declared(JoystickIsHaptic_renamed_IsJoystickHaptic):
  type
    JoystickIsHaptic_renamed_IsJoystickHaptic* = object
else:
  static :
    hint("Declaration of " & "JoystickIsHaptic_renamed_IsJoystickHaptic" &
        " already exists, not redeclaring")
when not declared(size_mul_overflow_renamed_size_mul_check_overflow):
  type
    size_mul_overflow_renamed_size_mul_check_overflow* = object
else:
  static :
    hint("Declaration of " & "size_mul_overflow_renamed_size_mul_check_overflow" &
        " already exists, not redeclaring")
when not declared(FreeSurface_renamed_DestroySurface):
  type
    FreeSurface_renamed_DestroySurface* = object
else:
  static :
    hint("Declaration of " & "FreeSurface_renamed_DestroySurface" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_RIGHTY_renamed_GAMEPAD_AXIS_RIGHTY):
  type
    CONTROLLER_AXIS_RIGHTY_renamed_GAMEPAD_AXIS_RIGHTY* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_AXIS_RIGHTY_renamed_GAMEPAD_AXIS_RIGHTY" &
        " already exists, not redeclaring")
when not declared(struct_Sensor):
  type
    struct_Sensor* = object
else:
  static :
    hint("Declaration of " & "struct_Sensor" &
        " already exists, not redeclaring")
when not declared(NUM_SYSTEM_CURSORS_renamed_SYSTEM_CURSOR_COUNT):
  type
    NUM_SYSTEM_CURSORS_renamed_SYSTEM_CURSOR_COUNT* = object
else:
  static :
    hint("Declaration of " & "NUM_SYSTEM_CURSORS_renamed_SYSTEM_CURSOR_COUNT" &
        " already exists, not redeclaring")
when not declared(IsScreenSaverEnabled_renamed_ScreenSaverEnabled):
  type
    IsScreenSaverEnabled_renamed_ScreenSaverEnabled* = object
else:
  static :
    hint("Declaration of " & "IsScreenSaverEnabled_renamed_ScreenSaverEnabled" &
        " already exists, not redeclaring")
when not declared(compiler_LINE_private):
  type
    compiler_LINE_private* = object
else:
  static :
    hint("Declaration of " & "compiler_LINE_private" &
        " already exists, not redeclaring")
when not declared(ControllerSensorEvent_renamed_GamepadSensorEvent):
  type
    ControllerSensorEvent_renamed_GamepadSensorEvent* = object
else:
  static :
    hint("Declaration of " & "ControllerSensorEvent_renamed_GamepadSensorEvent" &
        " already exists, not redeclaring")
when not declared(AtomicCAS_renamed_CompareAndSwapAtomicInt):
  type
    AtomicCAS_renamed_CompareAndSwapAtomicInt* = object
else:
  static :
    hint("Declaration of " & "AtomicCAS_renamed_CompareAndSwapAtomicInt" &
        " already exists, not redeclaring")
when not declared(WINDOWEVENT_DISPLAY_CHANGED_renamed_EVENT_WINDOW_DISPLAY_CHANGED):
  type
    WINDOWEVENT_DISPLAY_CHANGED_renamed_EVENT_WINDOW_DISPLAY_CHANGED* = object
else:
  static :
    hint("Declaration of " &
        "WINDOWEVENT_DISPLAY_CHANGED_renamed_EVENT_WINDOW_DISPLAY_CHANGED" &
        " already exists, not redeclaring")
when not declared(HapticNewEffect_renamed_CreateHapticEffect):
  type
    HapticNewEffect_renamed_CreateHapticEffect* = object
else:
  static :
    hint("Declaration of " & "HapticNewEffect_renamed_CreateHapticEffect" &
        " already exists, not redeclaring")
when not declared(JoystickSetVirtualButton_renamed_SetJoystickVirtualButton):
  type
    JoystickSetVirtualButton_renamed_SetJoystickVirtualButton* = object
else:
  static :
    hint("Declaration of " &
        "JoystickSetVirtualButton_renamed_SetJoystickVirtualButton" &
        " already exists, not redeclaring")
when not declared(SemValue_renamed_GetSemaphoreValue):
  type
    SemValue_renamed_GetSemaphoreValue* = object
else:
  static :
    hint("Declaration of " & "SemValue_renamed_GetSemaphoreValue" &
        " already exists, not redeclaring")
when not declared(RenderFlush_renamed_FlushRenderer):
  type
    RenderFlush_renamed_FlushRenderer* = object
else:
  static :
    hint("Declaration of " & "RenderFlush_renamed_FlushRenderer" &
        " already exists, not redeclaring")
when not declared(Colour_renamed_Color):
  type
    Colour_renamed_Color* = object
else:
  static :
    hint("Declaration of " & "Colour_renamed_Color" &
        " already exists, not redeclaring")
when not declared(HINT_LINUX_JOYSTICK_DEADZONES_renamed_HINT_JOYSTICK_LINUX_DEADZONES):
  type
    HINT_LINUX_JOYSTICK_DEADZONES_renamed_HINT_JOYSTICK_LINUX_DEADZONES* = object
else:
  static :
    hint("Declaration of " &
        "HINT_LINUX_JOYSTICK_DEADZONES_renamed_HINT_JOYSTICK_LINUX_DEADZONES" &
        " already exists, not redeclaring")
when not declared(SwapBE16_renamed_Swap16BE):
  type
    SwapBE16_renamed_Swap16BE* = object
else:
  static :
    hint("Declaration of " & "SwapBE16_renamed_Swap16BE" &
        " already exists, not redeclaring")
when not declared(JoystickGetProductVersion_renamed_GetJoystickProductVersion):
  type
    JoystickGetProductVersion_renamed_GetJoystickProductVersion* = object
else:
  static :
    hint("Declaration of " &
        "JoystickGetProductVersion_renamed_GetJoystickProductVersion" &
        " already exists, not redeclaring")
when not declared(LowerBlit_renamed_BlitSurfaceUnchecked):
  type
    LowerBlit_renamed_BlitSurfaceUnchecked* = object
else:
  static :
    hint("Declaration of " & "LowerBlit_renamed_BlitSurfaceUnchecked" &
        " already exists, not redeclaring")
when not declared(FRectEqualsEpsilon_renamed_RectsEqualEpsilon):
  type
    FRectEqualsEpsilon_renamed_RectsEqualEpsilon* = object
else:
  static :
    hint("Declaration of " & "FRectEqualsEpsilon_renamed_RectsEqualEpsilon" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_LEFTY_renamed_GAMEPAD_AXIS_LEFTY):
  type
    CONTROLLER_AXIS_LEFTY_renamed_GAMEPAD_AXIS_LEFTY* = object
else:
  static :
    hint("Declaration of " & "CONTROLLER_AXIS_LEFTY_renamed_GAMEPAD_AXIS_LEFTY" &
        " already exists, not redeclaring")
when not declared(atomic_t_renamed_AtomicInt):
  type
    atomic_t_renamed_AtomicInt* = object
else:
  static :
    hint("Declaration of " & "atomic_t_renamed_AtomicInt" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_AXIS_TRIGGERRIGHT_renamed_GAMEPAD_AXIS_RIGHT_TRIGGER):
  type
    CONTROLLER_AXIS_TRIGGERRIGHT_renamed_GAMEPAD_AXIS_RIGHT_TRIGGER* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_AXIS_TRIGGERRIGHT_renamed_GAMEPAD_AXIS_RIGHT_TRIGGER" &
        " already exists, not redeclaring")
when not declared(GameControllerFromInstanceID_renamed_GetGamepadFromID):
  type
    GameControllerFromInstanceID_renamed_GetGamepadFromID* = object
else:
  static :
    hint("Declaration of " &
        "GameControllerFromInstanceID_renamed_GetGamepadFromID" &
        " already exists, not redeclaring")
when not declared(RenderGetMetalCommandEncoder_renamed_GetRenderMetalCommandEncoder):
  type
    RenderGetMetalCommandEncoder_renamed_GetRenderMetalCommandEncoder* = object
else:
  static :
    hint("Declaration of " &
        "RenderGetMetalCommandEncoder_renamed_GetRenderMetalCommandEncoder" &
        " already exists, not redeclaring")
when not declared(SYSTEM_CURSOR_WINDOW_TOP_renamed_SYSTEM_CURSOR_N_RESIZE):
  type
    SYSTEM_CURSOR_WINDOW_TOP_renamed_SYSTEM_CURSOR_N_RESIZE* = object
else:
  static :
    hint("Declaration of " &
        "SYSTEM_CURSOR_WINDOW_TOP_renamed_SYSTEM_CURSOR_N_RESIZE" &
        " already exists, not redeclaring")
when not declared(struct_Renderer):
  type
    struct_Renderer* = object
else:
  static :
    hint("Declaration of " & "struct_Renderer" &
        " already exists, not redeclaring")
when not declared(SwapLE32_renamed_Swap32LE):
  type
    SwapLE32_renamed_Swap32LE* = object
else:
  static :
    hint("Declaration of " & "SwapLE32_renamed_Swap32LE" &
        " already exists, not redeclaring")
when not declared(RenderSetVSync_renamed_SetRenderVSync):
  type
    RenderSetVSync_renamed_SetRenderVSync* = object
else:
  static :
    hint("Declaration of " & "RenderSetVSync_renamed_SetRenderVSync" &
        " already exists, not redeclaring")
when not declared(AtomicCASPtr_renamed_CompareAndSwapAtomicPointer):
  type
    AtomicCASPtr_renamed_CompareAndSwapAtomicPointer* = object
else:
  static :
    hint("Declaration of " & "AtomicCASPtr_renamed_CompareAndSwapAtomicPointer" &
        " already exists, not redeclaring")
when not declared(CONTROLLER_BUTTON_PADDLE1_renamed_GAMEPAD_BUTTON_RIGHT_PADDLE1):
  type
    CONTROLLER_BUTTON_PADDLE1_renamed_GAMEPAD_BUTTON_RIGHT_PADDLE1* = object
else:
  static :
    hint("Declaration of " &
        "CONTROLLER_BUTTON_PADDLE1_renamed_GAMEPAD_BUTTON_RIGHT_PADDLE1" &
        " already exists, not redeclaring")
when not declared(ScaleModeLinear_renamed_SCALEMODE_LINEAR):
  type
    ScaleModeLinear_renamed_SCALEMODE_LINEAR* = object
else:
  static :
    hint("Declaration of " & "ScaleModeLinear_renamed_SCALEMODE_LINEAR" &
        " already exists, not redeclaring")
type
  Sint8_520094134 = int8     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:328:16
  Uint8_520094136 = uint8    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:337:17
  Sint16_520094138 = int16   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:346:17
  Uint16_520094140 = uint16  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:355:18
  Sint32_520094142 = int32   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:364:17
  Uint32_520094144 = uint32  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:373:18
  Sint64_520094146 = int64   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:384:17
  Uint64_520094148 = uint64  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:395:18
  Time_520094150 = Sint64_520094147 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:412:16
  struct_alignment_test_520094152 {.pure, inheritable, bycopy.} = object
    a*: Uint8_520094137      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:604:16
    b*: pointer
  alignment_test_520094154 = struct_alignment_test_520094153 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:608:3
  DUMMY_ENUM_520094158 = enum_DUMMY_ENUM_520094157 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:627:3
  malloc_func_520094160 = proc (a0: csize_t): pointer {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:811:25
  calloc_func_520094162 = proc (a0: csize_t; a1: csize_t): pointer {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:832:25
  realloc_func_520094164 = proc (a0: pointer; a1: csize_t): pointer {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:853:25
  free_func_520094166 = proc (a0: pointer): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:871:24
  Environment_520094168 = struct_Environment ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:1014:32
  CompareCallback_520094170 = proc (a0: pointer; a1: pointer): cint {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:1242:23
  CompareCallback_r_520094172 = proc (a0: pointer; a1: pointer; a2: pointer): cint {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:1355:23
  wchar_t_520094174 = cushort ## Generated based on C:\Program Files\LLVM\lib\clang\15.0.7\include\stddef.h:74:24
  iconv_t_520094176 = ptr struct_iconv_data_t ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:4182:34
  FunctionPointer_520094178 = proc (): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:4461:16
  AssertState_520094182 = enum_AssertState_520094181 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_assert.h:215:3
  struct_AssertData_520094184 {.pure, inheritable, bycopy.} = object
    always_ignore*: bool     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_assert.h:226:16
    trigger_count*: cuint
    condition*: cstring
    filename*: cstring
    linenum*: cint
    function*: cstring
    next*: ptr struct_AssertData_520094185
  AssertData_520094186 = struct_AssertData_520094185 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_assert.h:235:3
  AssertionHandler_520094188 = proc (a0: ptr AssertData_520094187; a1: pointer): AssertState_520094183 {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_assert.h:441:35
  AsyncIO_520094190 = struct_AsyncIO ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_asyncio.h:124:28
  AsyncIOTaskType_520094194 = enum_AsyncIOTaskType_520094193 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_asyncio.h:136:3
  AsyncIOResult_520094198 = enum_AsyncIOResult_520094197 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_asyncio.h:148:3
  struct_AsyncIOOutcome_520094200 {.pure, inheritable, bycopy.} = object
    asyncio*: ptr AsyncIO_520094191 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_asyncio.h:155:16
    type_field*: AsyncIOTaskType_520094195
    result*: AsyncIOResult_520094199
    buffer*: pointer
    offset*: Uint64_520094149
    bytes_requested*: Uint64_520094149
    bytes_transferred*: Uint64_520094149
    userdata*: pointer
  AsyncIOOutcome_520094202 = struct_AsyncIOOutcome_520094201 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_asyncio.h:165:3
  AsyncIOQueue_520094204 = struct_AsyncIOQueue ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_asyncio.h:183:33
  SpinLock_520094206 = cint  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_atomic.h:82:13
  struct_AtomicInt_520094208 {.pure, inheritable, bycopy.} = object
    value*: cint             ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_atomic.h:334:16
  AtomicInt_520094210 = struct_AtomicInt_520094209 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_atomic.h:334:45
  struct_AtomicU32_520094212 {.pure, inheritable, bycopy.} = object
    value*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_atomic.h:479:16
  AtomicU32_520094214 = struct_AtomicU32_520094213 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_atomic.h:479:48
  PropertiesID_520094216 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_properties.h:66:16
  PropertyType_520094220 = enum_PropertyType_520094219 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_properties.h:81:3
  CleanupPropertyCallback_520094222 = proc (a0: pointer; a1: pointer): void {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_properties.h:187:24
  EnumeratePropertiesCallback_520094224 = proc (a0: pointer; a1: PropertiesID_520094217;
      a2: cstring): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_properties.h:499:24
  Thread_520094226 = struct_Thread ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:58:27
  ThreadID_520094228 = Uint64_520094149 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:72:16
  TLSID_520094230 = AtomicInt_520094211 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:85:23
  ThreadPriority_520094234 = enum_ThreadPriority_520094233 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:103:3
  ThreadFunction_520094236 = proc (a0: pointer): cint {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:113:24
  TLSDestructorCallback_520094238 = proc (a0: pointer): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:487:24
  Mutex_520094240 = struct_Mutex ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mutex.h:137:26
  RWLock_520094242 = struct_RWLock ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mutex.h:268:27
  Semaphore_520094244 = struct_Semaphore ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mutex.h:499:30
  Condition_520094246 = struct_Condition ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mutex.h:642:30
  InitStatus_520094250 = enum_InitStatus_520094249 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mutex.h:778:3
  struct_InitState_520094252 {.pure, inheritable, bycopy.} = object
    status*: AtomicInt_520094211 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mutex.h:836:16
    thread*: ThreadID_520094229
    reserved*: pointer
  InitState_520094254 = struct_InitState_520094253 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mutex.h:841:3
  IOStatus_520094258 = enum_IOStatus_520094257 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:61:3
  IOWhence_520094262 = enum_IOWhence_520094261 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:76:3
  struct_IOStreamInterface_520094264 {.pure, inheritable, bycopy.} = object
    version*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:92:16
    size*: proc (a0: pointer): Sint64_520094147 {.cdecl.}
    seek*: proc (a0: pointer; a1: Sint64_520094147; a2: IOWhence_520094263): Sint64_520094147 {.
        cdecl.}
    read*: proc (a0: pointer; a1: pointer; a2: csize_t; a3: ptr IOStatus_520094259): csize_t {.
        cdecl.}
    write*: proc (a0: pointer; a1: pointer; a2: csize_t; a3: ptr IOStatus_520094259): csize_t {.
        cdecl.}
    flush*: proc (a0: pointer; a1: ptr IOStatus_520094259): bool {.cdecl.}
    close*: proc (a0: pointer): bool {.cdecl.}
  IOStreamInterface_520094266 = struct_IOStreamInterface_520094265 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:160:3
  IOStream_520094268 = struct_IOStream ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:182:29
  AudioFormat_520094272 = enum_AudioFormat_520094271 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:197:3
  AudioDeviceID_520094274 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:320:16
  struct_AudioSpec_520094276 {.pure, inheritable, bycopy.} = object
    format*: AudioFormat_520094273 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:351:16
    channels*: cint
    freq*: cint
  AudioSpec_520094278 = struct_AudioSpec_520094277 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:356:3
  AudioStream_520094280 = struct_AudioStream ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:397:32
  AudioStreamCallback_520094282 = proc (a0: pointer; a1: ptr AudioStream_520094281;
                                        a2: cint; a3: cint): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:1621:24
  AudioPostmixCallback_520094284 = proc (a0: pointer; a1: ptr AudioSpec_520094279;
      a2: ptr cfloat; a3: cint): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:1838:24
  BlendMode_520094286 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:52:16
  BlendOperation_520094290 = enum_BlendOperation_520094289 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:76:3
  BlendFactor_520094294 = enum_BlendFactor_520094293 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:100:3
  PixelType_520094298 = enum_PixelType_520094297 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:98:3
  BitmapOrder_520094302 = enum_BitmapOrder_520094301 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:110:3
  PackedOrder_520094306 = enum_PackedOrder_520094305 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:128:3
  ArrayOrder_520094310 = enum_ArrayOrder_520094309 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:144:3
  PackedLayout_520094314 = enum_PackedLayout_520094313 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:162:3
  PixelFormat_520094318 = enum_PixelFormat_520094317 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:420:3
  ColorType_520094322 = enum_ColorType_520094321 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:456:3
  ColorRange_520094326 = enum_ColorRange_520094325 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:469:3
  ColorPrimaries_520094330 = enum_ColorPrimaries_520094329 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:493:3
  TransferCharacteristics_520094334 = enum_TransferCharacteristics_520094333 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:523:3
  MatrixCoefficients_520094338 = enum_MatrixCoefficients_520094337 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:549:3
  ChromaLocation_520094342 = enum_ChromaLocation_520094341 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:562:3
  Colorspace_520094346 = enum_Colorspace_520094345 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:687:3
  struct_Color_520094348 {.pure, inheritable, bycopy.} = object
    r*: Uint8_520094137      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:699:16
    g*: Uint8_520094137
    b*: Uint8_520094137
    a*: Uint8_520094137
  Color_520094350 = struct_Color_520094349 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:705:3
  struct_FColor_520094352 {.pure, inheritable, bycopy.} = object
    r*: cfloat               ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:713:16
    g*: cfloat
    b*: cfloat
    a*: cfloat
  FColor_520094354 = struct_FColor_520094353 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:719:3
  struct_Palette_520094356 {.pure, inheritable, bycopy.} = object
    ncolors*: cint           ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:728:16
    colors*: ptr Color_520094351
    version*: Uint32_520094145
    refcount*: cint
  Palette_520094358 = struct_Palette_520094357 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:734:3
  struct_PixelFormatDetails_520094360 {.pure, inheritable, bycopy.} = object
    format*: PixelFormat_520094319 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:741:16
    bits_per_pixel*: Uint8_520094137
    bytes_per_pixel*: Uint8_520094137
    padding*: array[2'i64, Uint8_520094137]
    Rmask*: Uint32_520094145
    Gmask*: Uint32_520094145
    Bmask*: Uint32_520094145
    Amask*: Uint32_520094145
    Rbits*: Uint8_520094137
    Gbits*: Uint8_520094137
    Bbits*: Uint8_520094137
    Abits*: Uint8_520094137
    Rshift*: Uint8_520094137
    Gshift*: Uint8_520094137
    Bshift*: Uint8_520094137
    Ashift*: Uint8_520094137
  PixelFormatDetails_520094362 = struct_PixelFormatDetails_520094361 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:759:3
  struct_Point_520094364 {.pure, inheritable, bycopy.} = object
    x*: cint                 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:49:16
    y*: cint
  Point_520094366 = struct_Point_520094365 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:53:3
  struct_FPoint_520094368 {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:63:16
    y*: cfloat
  FPoint_520094370 = struct_FPoint_520094369 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:67:3
  struct_Rect_520094372 {.pure, inheritable, bycopy.} = object
    x*: cint                 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:83:16
    y*: cint
    w*: cint
    h*: cint
  Rect_520094374 = struct_Rect_520094373 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:87:3
  struct_FRect_520094376 {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:106:16
    y*: cfloat
    w*: cfloat
    h*: cfloat
  FRect_520094378 = struct_FRect_520094377 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_rect.h:112:3
  SurfaceFlags_520094380 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:64:16
  ScaleMode_520094384 = enum_ScaleMode_520094383 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:87:3
  FlipMode_520094388 = enum_FlipMode_520094387 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:99:3
  struct_Surface_520094390 {.pure, inheritable, bycopy.} = object
    flags*: SurfaceFlags_520094381 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:128:8
    format*: PixelFormat_520094319
    w*: cint
    h*: cint
    pitch*: cint
    pixels*: pointer
    refcount*: cint
    reserved*: pointer
  Surface_520094392 = struct_Surface_520094391 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:143:28
  CameraID_520094394 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_camera.h:95:16
  Camera_520094396 = struct_Camera ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_camera.h:102:27
  struct_CameraSpec_520094398 {.pure, inheritable, bycopy.} = object
    format*: PixelFormat_520094319 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_camera.h:115:16
    colorspace*: Colorspace_520094347
    width*: cint
    height*: cint
    framerate_numerator*: cint
    framerate_denominator*: cint
  CameraSpec_520094400 = struct_CameraSpec_520094399 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_camera.h:123:3
  CameraPosition_520094404 = enum_CameraPosition_520094403 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_camera.h:137:3
  ClipboardDataCallback_520094406 = proc (a0: pointer; a1: cstring;
      a2: ptr csize_t): pointer {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_clipboard.h:211:31
  ClipboardCleanupCallback_520094408 = proc (a0: pointer): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_clipboard.h:223:24
  DisplayID_520094410 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:75:16
  WindowID_520094412 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:84:16
  SystemTheme_520094416 = enum_SystemTheme_520094415 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:113:3
  DisplayModeData_520094418 = struct_DisplayModeData ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:116:36
  struct_DisplayMode_520094420 {.pure, inheritable, bycopy.} = object
    displayID*: DisplayID_520094411 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:129:16
    format*: PixelFormat_520094319
    w*: cint
    h*: cint
    pixel_density*: cfloat
    refresh_rate*: cfloat
    refresh_rate_numerator*: cint
    refresh_rate_denominator*: cint
    internal*: ptr DisplayModeData_520094419
  DisplayMode_520094422 = struct_DisplayMode_520094421 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:142:3
  DisplayOrientation_520094426 = enum_DisplayOrientation_520094425 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:156:3
  Window_520094428 = struct_Window ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:165:27
  WindowFlags_520094430 = Uint64_520094149 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:179:16
  FlashOperation_520094434 = enum_FlashOperation_520094433 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:240:3
  GLContext_520094436 = ptr struct_GLContextState ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:249:36
  EGLDisplay_520094438 = pointer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:256:15
  EGLConfig_520094440 = pointer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:257:15
  EGLSurface_520094442 = pointer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:258:15
  EGLAttrib_520094444 = intptr_t_520094447 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:259:18
  intptr_t_520094446 = clonglong ## Generated based on C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\vcruntime.h:190:30
  EGLint_520094448 = cint    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:260:13
  EGLAttribArrayCallback_520094450 = proc (a0: pointer): ptr EGLAttrib_520094445 {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:285:34
  EGLIntArrayCallback_520094452 = proc (a0: pointer; a1: EGLDisplay_520094439;
                                        a2: EGLConfig_520094441): ptr EGLint_520094449 {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:316:31
  GLAttr_typedef_520094456 = enum_GLAttr_520094455 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:365:3
  GLProfile_typedef_520094458 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:372:16
  GLContextFlag_typedef_520094460 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:384:16
  GLContextReleaseFlag_typedef_520094462 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:398:16
  GLContextResetNotification_520094464 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:409:16
  HitTestResult_520094468 = enum_HitTestResult_520094467 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:2589:3
  HitTest_520094470 = proc (a0: ptr Window_520094429; a1: ptr Point_520094367;
                            a2: pointer): HitTestResult_520094469 {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:2601:37
  struct_DialogFileFilter_520094472 {.pure, inheritable, bycopy.} = object
    name*: cstring           ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:70:16
    pattern*: cstring
  DialogFileFilter_520094474 = struct_DialogFileFilter_520094473 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:74:3
  DialogFileCallback_520094476 = proc (a0: pointer; a1: ptr cstring; a2: cint): void {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:109:24
  FileDialogType_520094480 = enum_FileDialogType_520094479 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:271:3
  struct_GUID_520094482 {.pure, inheritable, bycopy.} = object
    data*: array[16'i64, Uint8_520094137] ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_guid.h:61:16
  GUID_520094484 = struct_GUID_520094483 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_guid.h:63:3
  PowerState_520094488 = enum_PowerState_520094487 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_power.h:55:3
  Sensor_520094490 = struct_Sensor ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_sensor.h:47:27
  SensorID_520094492 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_sensor.h:57:16
  SensorType_520094496 = enum_SensorType_520094495 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_sensor.h:135:3
  Joystick_520094498 = struct_Joystick ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:86:29
  JoystickID_520094500 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:98:16
  JoystickType_520094504 = enum_JoystickType_520094503 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:125:3
  JoystickConnectionState_520094508 = enum_JoystickConnectionState_520094507 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:141:3
  struct_VirtualJoystickTouchpadDesc_520094510 {.pure, inheritable, bycopy.} = object
    nfingers*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:390:16
    padding*: array[3'i64, Uint16_520094141]
  VirtualJoystickTouchpadDesc_520094512 = struct_VirtualJoystickTouchpadDesc_520094511 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:394:3
  struct_VirtualJoystickSensorDesc_520094514 {.pure, inheritable, bycopy.} = object
    type_field*: SensorType_520094497 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:403:16
    rate*: cfloat
  VirtualJoystickSensorDesc_520094516 = struct_VirtualJoystickSensorDesc_520094515 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:407:3
  struct_VirtualJoystickDesc_520094518 {.pure, inheritable, bycopy.} = object
    version*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:422:16
    type_field*: Uint16_520094141
    padding*: Uint16_520094141
    vendor_id*: Uint16_520094141
    product_id*: Uint16_520094141
    naxes*: Uint16_520094141
    nbuttons*: Uint16_520094141
    nballs*: Uint16_520094141
    nhats*: Uint16_520094141
    ntouchpads*: Uint16_520094141
    nsensors*: Uint16_520094141
    padding2*: array[2'i64, Uint16_520094141]
    button_mask*: Uint32_520094145
    axis_mask*: Uint32_520094145
    name*: cstring
    touchpads*: ptr VirtualJoystickTouchpadDesc_520094513
    sensors*: ptr VirtualJoystickSensorDesc_520094517
    userdata*: pointer
    Update*: proc (a0: pointer): void {.cdecl.}
    SetPlayerIndex*: proc (a0: pointer; a1: cint): void {.cdecl.}
    Rumble*: proc (a0: pointer; a1: Uint16_520094141; a2: Uint16_520094141): bool {.
        cdecl.}
    RumbleTriggers*: proc (a0: pointer; a1: Uint16_520094141; a2: Uint16_520094141): bool {.
        cdecl.}
    SetLED*: proc (a0: pointer; a1: Uint8_520094137; a2: Uint8_520094137;
                   a3: Uint8_520094137): bool {.cdecl.}
    SendEffect*: proc (a0: pointer; a1: pointer; a2: cint): bool {.cdecl.}
    SetSensorsEnabled*: proc (a0: pointer; a1: bool): bool {.cdecl.}
    Cleanup*: proc (a0: pointer): void {.cdecl.}
  VirtualJoystickDesc_520094520 = struct_VirtualJoystickDesc_520094519 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:453:3
  Gamepad_520094522 = struct_Gamepad ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:79:28
  GamepadType_520094526 = enum_GamepadType_520094525 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:104:3
  GamepadButton_520094530 = enum_GamepadButton_520094529 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:159:3
  GamepadButtonLabel_520094534 = enum_GamepadButtonLabel_520094533 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:183:3
  GamepadAxis_520094538 = enum_GamepadAxis_520094537 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:209:3
  GamepadBindingType_520094542 = enum_GamepadBindingType_520094541 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:227:3
  struct_GamepadBinding_input_t_axis_t {.pure, inheritable, bycopy.} = object
    axis*: cint
    axis_min*: cint
    axis_max*: cint
  struct_GamepadBinding_input_t_hat_t {.pure, inheritable, bycopy.} = object
    hat*: cint
    hat_mask*: cint
  struct_GamepadBinding_input_t {.union, bycopy.} = object
    button*: cint
    axis*: struct_GamepadBinding_input_t_axis_t
    hat*: struct_GamepadBinding_input_t_hat_t
  struct_GamepadBinding_output_t_axis_t {.pure, inheritable, bycopy.} = object
    axis*: GamepadAxis_520094539
    axis_min*: cint
    axis_max*: cint
  struct_GamepadBinding_output_t {.union, bycopy.} = object
    button*: GamepadButton_520094531
    axis*: struct_GamepadBinding_output_t_axis_t
  struct_GamepadBinding_520094544 {.pure, inheritable, bycopy.} = object
    input_type*: GamepadBindingType_520094543 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:244:16
    input*: struct_GamepadBinding_input_t
    output_type*: GamepadBindingType_520094543
    output*: struct_GamepadBinding_output_t
  GamepadBinding_520094546 = struct_GamepadBinding_520094545 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:279:3
  Scancode_520094550 = enum_Scancode_520094549 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_scancode.h:427:3
  Keycode_520094552 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:52:16
  Keymod_520094554 = Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:311:16
  KeyboardID_520094556 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:60:16
  TextInputType_520094560 = enum_TextInputType_520094559 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:401:3
  Capitalization_520094564 = enum_Capitalization_520094563 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:420:3
  MouseID_520094566 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:52:16
  Cursor_520094568 = struct_Cursor ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:61:27
  SystemCursor_520094572 = enum_SystemCursor_520094571 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:91:3
  MouseWheelDirection_520094576 = enum_MouseWheelDirection_520094575 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:102:3
  MouseButtonFlags_520094578 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:119:16
  PenID_520094580 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pen.h:60:16
  PenInputFlags_520094582 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pen.h:68:16
  PenAxis_520094586 = enum_PenAxis_520094585 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pen.h:103:3
  TouchID_520094588 = Uint64_520094149 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_touch.h:41:16
  FingerID_520094590 = Uint64_520094149 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_touch.h:42:16
  TouchDeviceType_520094594 = enum_TouchDeviceType_520094593 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_touch.h:50:3
  struct_Finger_520094596 {.pure, inheritable, bycopy.} = object
    id*: FingerID_520094591  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_touch.h:63:16
    x*: cfloat
    y*: cfloat
    pressure*: cfloat
  Finger_520094598 = struct_Finger_520094597 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_touch.h:69:3
  EventType_520094602 = enum_EventType_520094601 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:279:3
  struct_CommonEvent_520094604 {.pure, inheritable, bycopy.} = object
    type_field*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:286:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
  CommonEvent_520094606 = struct_CommonEvent_520094605 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:291:3
  struct_DisplayEvent_520094608 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:298:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    displayID*: DisplayID_520094411
    data1*: Sint32_520094143
    data2*: Sint32_520094143
  DisplayEvent_520094610 = struct_DisplayEvent_520094609 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:306:3
  struct_WindowEvent_520094612 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:313:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    data1*: Sint32_520094143
    data2*: Sint32_520094143
  WindowEvent_520094614 = struct_WindowEvent_520094613 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:321:3
  struct_KeyboardDeviceEvent_520094616 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:328:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: KeyboardID_520094557
  KeyboardDeviceEvent_520094618 = struct_KeyboardDeviceEvent_520094617 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:334:3
  struct_KeyboardEvent_520094620 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:350:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: KeyboardID_520094557
    scancode*: Scancode_520094551
    key*: Keycode_520094553
    mod_field*: Keymod_520094555
    raw*: Uint16_520094141
    down*: bool
    repeat*: bool
  KeyboardEvent_520094622 = struct_KeyboardEvent_520094621 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:363:3
  struct_TextEditingEvent_520094624 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:374:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    text*: cstring
    start*: Sint32_520094143
    length*: Sint32_520094143
  TextEditingEvent_520094626 = struct_TextEditingEvent_520094625 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:383:3
  struct_TextEditingCandidatesEvent_520094628 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:390:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    candidates*: ptr cstring
    num_candidates*: Sint32_520094143
    selected_candidate*: Sint32_520094143
    horizontal*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  TextEditingCandidatesEvent_520094630 = struct_TextEditingCandidatesEvent_520094629 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:403:3
  struct_TextInputEvent_520094632 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:416:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    text*: cstring
  TextInputEvent_520094634 = struct_TextInputEvent_520094633 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:423:3
  struct_MouseDeviceEvent_520094636 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:430:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: MouseID_520094567
  MouseDeviceEvent_520094638 = struct_MouseDeviceEvent_520094637 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:436:3
  struct_MouseMotionEvent_520094640 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:443:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: MouseID_520094567
    state*: MouseButtonFlags_520094579
    x*: cfloat
    y*: cfloat
    xrel*: cfloat
    yrel*: cfloat
  MouseMotionEvent_520094642 = struct_MouseMotionEvent_520094641 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:455:3
  struct_MouseButtonEvent_520094644 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:462:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: MouseID_520094567
    button*: Uint8_520094137
    down*: bool
    clicks*: Uint8_520094137
    padding*: Uint8_520094137
    x*: cfloat
    y*: cfloat
  MouseButtonEvent_520094646 = struct_MouseButtonEvent_520094645 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:475:3
  struct_MouseWheelEvent_520094648 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:482:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: MouseID_520094567
    x*: cfloat
    y*: cfloat
    direction*: MouseWheelDirection_520094577
    mouse_x*: cfloat
    mouse_y*: cfloat
  MouseWheelEvent_520094650 = struct_MouseWheelEvent_520094649 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:494:3
  struct_JoyAxisEvent_520094652 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:501:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    axis*: Uint8_520094137
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
    value*: Sint16_520094139
    padding4*: Uint16_520094141
  JoyAxisEvent_520094654 = struct_JoyAxisEvent_520094653 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:513:3
  struct_JoyBallEvent_520094656 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:520:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    ball*: Uint8_520094137
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
    xrel*: Sint16_520094139
    yrel*: Sint16_520094139
  JoyBallEvent_520094658 = struct_JoyBallEvent_520094657 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:532:3
  struct_JoyHatEvent_520094660 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:539:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    hat*: Uint8_520094137
    value*: Uint8_520094137
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
  JoyHatEvent_520094662 = struct_JoyHatEvent_520094661 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:555:3
  struct_JoyButtonEvent_520094664 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:562:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    button*: Uint8_520094137
    down*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
  JoyButtonEvent_520094666 = struct_JoyButtonEvent_520094665 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:572:3
  struct_JoyDeviceEvent_520094668 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:584:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
  JoyDeviceEvent_520094670 = struct_JoyDeviceEvent_520094669 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:590:3
  struct_JoyBatteryEvent_520094672 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:597:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    state*: PowerState_520094489
    percent*: cint
  JoyBatteryEvent_520094674 = struct_JoyBatteryEvent_520094673 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:605:3
  struct_GamepadAxisEvent_520094676 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:612:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    axis*: Uint8_520094137
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
    value*: Sint16_520094139
    padding4*: Uint16_520094141
  GamepadAxisEvent_520094678 = struct_GamepadAxisEvent_520094677 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:624:3
  struct_GamepadButtonEvent_520094680 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:632:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    button*: Uint8_520094137
    down*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
  GamepadButtonEvent_520094682 = struct_GamepadButtonEvent_520094681 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:642:3
  struct_GamepadDeviceEvent_520094684 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:659:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
  GamepadDeviceEvent_520094686 = struct_GamepadDeviceEvent_520094685 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:665:3
  struct_GamepadTouchpadEvent_520094688 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:672:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    touchpad*: Sint32_520094143
    finger*: Sint32_520094143
    x*: cfloat
    y*: cfloat
    pressure*: cfloat
  GamepadTouchpadEvent_520094690 = struct_GamepadTouchpadEvent_520094689 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:683:3
  struct_GamepadSensorEvent_520094692 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:690:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: JoystickID_520094501
    sensor*: Sint32_520094143
    data*: array[3'i64, cfloat]
    sensor_timestamp*: Uint64_520094149
  GamepadSensorEvent_520094694 = struct_GamepadSensorEvent_520094693 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:699:3
  struct_AudioDeviceEvent_520094696 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:706:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: AudioDeviceID_520094275
    recording*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  AudioDeviceEvent_520094698 = struct_AudioDeviceEvent_520094697 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:716:3
  struct_CameraDeviceEvent_520094700 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:723:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: CameraID_520094395
  CameraDeviceEvent_520094702 = struct_CameraDeviceEvent_520094701 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:729:3
  struct_RenderEvent_520094704 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:737:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
  RenderEvent_520094706 = struct_RenderEvent_520094705 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:743:3
  struct_TouchFingerEvent_520094708 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:765:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    touchID*: TouchID_520094589
    fingerID*: FingerID_520094591
    x*: cfloat
    y*: cfloat
    dx*: cfloat
    dy*: cfloat
    pressure*: cfloat
    windowID*: WindowID_520094413
  TouchFingerEvent_520094710 = struct_TouchFingerEvent_520094709 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:778:3
  struct_PenProximityEvent_520094712 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:795:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: PenID_520094581
  PenProximityEvent_520094714 = struct_PenProximityEvent_520094713 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:802:3
  struct_PenMotionEvent_520094716 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:815:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: PenID_520094581
    pen_state*: PenInputFlags_520094583
    x*: cfloat
    y*: cfloat
  PenMotionEvent_520094718 = struct_PenMotionEvent_520094717 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:825:3
  struct_PenTouchEvent_520094720 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:835:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: PenID_520094581
    pen_state*: PenInputFlags_520094583
    x*: cfloat
    y*: cfloat
    eraser*: bool
    down*: bool
  PenTouchEvent_520094722 = struct_PenTouchEvent_520094721 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:847:3
  struct_PenButtonEvent_520094724 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:857:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: PenID_520094581
    pen_state*: PenInputFlags_520094583
    x*: cfloat
    y*: cfloat
    button*: Uint8_520094137
    down*: bool
  PenButtonEvent_520094726 = struct_PenButtonEvent_520094725 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:869:3
  struct_PenAxisEvent_520094728 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:879:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    which*: PenID_520094581
    pen_state*: PenInputFlags_520094583
    x*: cfloat
    y*: cfloat
    axis*: PenAxis_520094587
    value*: cfloat
  PenAxisEvent_520094730 = struct_PenAxisEvent_520094729 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:891:3
  struct_DropEvent_520094732 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:899:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    x*: cfloat
    y*: cfloat
    source*: cstring
    data*: cstring
  DropEvent_520094734 = struct_DropEvent_520094733 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:909:3
  struct_ClipboardEvent_520094736 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:917:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    owner*: bool
    n_mime_types*: Sint32_520094143
    mime_types*: ptr cstring
  ClipboardEvent_520094738 = struct_ClipboardEvent_520094737 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:925:3
  struct_SensorEvent_520094740 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:932:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    which*: SensorID_520094493
    data*: array[6'i64, cfloat]
    sensor_timestamp*: Uint64_520094149
  SensorEvent_520094742 = struct_SensorEvent_520094741 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:940:3
  struct_QuitEvent_520094744 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_520094603 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:947:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
  QuitEvent_520094746 = struct_QuitEvent_520094745 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:952:3
  struct_UserEvent_520094748 {.pure, inheritable, bycopy.} = object
    type_field*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:965:16
    reserved*: Uint32_520094145
    timestamp*: Uint64_520094149
    windowID*: WindowID_520094413
    code*: Sint32_520094143
    data1*: pointer
    data2*: pointer
  UserEvent_typedef_520094750 = struct_UserEvent_520094749 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:974:3
  union_Event_520094752 {.union, bycopy.} = object
    type_field*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:985:15
    common*: CommonEvent_520094607
    display*: DisplayEvent_520094611
    window*: WindowEvent_520094615
    kdevice*: KeyboardDeviceEvent_520094619
    key*: KeyboardEvent_520094623
    edit*: TextEditingEvent_520094627
    edit_candidates*: TextEditingCandidatesEvent_520094631
    text*: TextInputEvent_520094635
    mdevice*: MouseDeviceEvent_520094639
    motion*: MouseMotionEvent_520094643
    button*: MouseButtonEvent_520094647
    wheel*: MouseWheelEvent_520094651
    jdevice*: JoyDeviceEvent_520094671
    jaxis*: JoyAxisEvent_520094655
    jball*: JoyBallEvent_520094659
    jhat*: JoyHatEvent_520094663
    jbutton*: JoyButtonEvent_520094667
    jbattery*: JoyBatteryEvent_520094675
    gdevice*: GamepadDeviceEvent_520094687
    gaxis*: GamepadAxisEvent_520094679
    gbutton*: GamepadButtonEvent_520094683
    gtouchpad*: GamepadTouchpadEvent_520094691
    gsensor*: GamepadSensorEvent_520094695
    adevice*: AudioDeviceEvent_520094699
    cdevice*: CameraDeviceEvent_520094703
    sensor*: SensorEvent_520094743
    quit*: QuitEvent_520094747
    user*: UserEvent_typedef_520094751
    tfinger*: TouchFingerEvent_520094711
    pproximity*: PenProximityEvent_520094715
    ptouch*: PenTouchEvent_520094723
    pmotion*: PenMotionEvent_520094719
    pbutton*: PenButtonEvent_520094727
    paxis*: PenAxisEvent_520094731
    render*: RenderEvent_520094707
    drop*: DropEvent_520094735
    clipboard*: ClipboardEvent_520094739
    padding*: array[128'i64, Uint8_520094137]
  Event_520094754 = union_Event_520094753 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:1040:3
  EventAction_520094758 = enum_EventAction_520094757 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:1082:3
  EventFilter_520094760 = proc (a0: pointer; a1: ptr Event_520094755): bool {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_events.h:1376:24
  Folder_520094764 = enum_Folder_520094763 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_filesystem.h:192:3
  PathType_520094768 = enum_PathType_520094767 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_filesystem.h:228:3
  struct_PathInfo_520094770 {.pure, inheritable, bycopy.} = object
    type_field*: PathType_520094769 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_filesystem.h:230:16
    size*: Uint64_520094149
    create_time*: Time_520094151
    modify_time*: Time_520094151
    access_time*: Time_520094151
  PathInfo_520094772 = struct_PathInfo_520094771 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_filesystem.h:237:3
  GlobFlags_520094774 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_filesystem.h:247:16
  EnumerationResult_520094778 = enum_EnumerationResult_520094777 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_filesystem.h:279:3
  EnumerateDirectoryCallback_520094780 = proc (a0: pointer; a1: cstring;
      a2: cstring): EnumerationResult_520094779 {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_filesystem.h:302:41
  GPUDevice_520094782 = struct_GPUDevice ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:186:30
  GPUBuffer_520094784 = struct_GPUBuffer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:211:30
  GPUTransferBuffer_520094786 = struct_GPUTransferBuffer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:229:38
  GPUTexture_520094788 = struct_GPUTexture ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:250:31
  GPUSampler_520094790 = struct_GPUSampler ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:262:31
  GPUShader_520094792 = struct_GPUShader ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:273:30
  GPUComputePipeline_520094794 = struct_GPUComputePipeline ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:286:39
  GPUGraphicsPipeline_520094796 = struct_GPUGraphicsPipeline ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:299:40
  GPUCommandBuffer_520094798 = struct_GPUCommandBuffer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:324:37
  GPURenderPass_520094800 = struct_GPURenderPass ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:337:34
  GPUComputePass_520094802 = struct_GPUComputePass ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:350:35
  GPUCopyPass_520094804 = struct_GPUCopyPass ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:363:32
  GPUFence_520094806 = struct_GPUFence ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:375:29
  GPUPrimitiveType_520094810 = enum_GPUPrimitiveType_520094809 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:391:3
  GPULoadOp_520094814 = enum_GPULoadOp_520094813 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:406:3
  GPUStoreOp_520094818 = enum_GPUStoreOp_520094817 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:422:3
  GPUIndexElementSize_520094822 = enum_GPUIndexElementSize_520094821 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:435:3
  GPUTextureFormat_520094826 = enum_GPUTextureFormat_520094825 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:646:3
  GPUTextureUsageFlags_520094828 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:668:16
  GPUTextureType_520094832 = enum_GPUTextureType_520094831 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:692:3
  GPUSampleCount_520094836 = enum_GPUSampleCount_520094835 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:711:3
  GPUCubeMapFace_520094840 = enum_GPUCubeMapFace_520094839 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:729:3
  GPUBufferUsageFlags_520094842 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:744:16
  GPUTransferBufferUsage_520094846 = enum_GPUTransferBufferUsage_520094845 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:767:3
  GPUShaderStage_520094850 = enum_GPUShaderStage_520094849 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:780:3
  GPUShaderFormat_520094852 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:791:16
  GPUVertexElementFormat_520094856 = enum_GPUVertexElementFormat_520094855 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:865:3
  GPUVertexInputRate_520094860 = enum_GPUVertexInputRate_520094859 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:878:3
  GPUFillMode_520094864 = enum_GPUFillMode_520094863 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:891:3
  GPUCullMode_520094868 = enum_GPUCullMode_520094867 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:905:3
  GPUFrontFace_520094872 = enum_GPUFrontFace_520094871 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:919:3
  GPUCompareOp_520094876 = enum_GPUCompareOp_520094875 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:939:3
  GPUStencilOp_520094880 = enum_GPUStencilOp_520094879 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:960:3
  GPUBlendOp_520094884 = enum_GPUBlendOp_520094883 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:981:3
  GPUBlendFactor_520094888 = enum_GPUBlendFactor_520094887 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1010:3
  GPUColorComponentFlags_520094890 = Uint8_520094137 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1019:15
  GPUFilter_520094894 = enum_GPUFilter_520094893 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1037:3
  GPUSamplerMipmapMode_520094898 = enum_GPUSamplerMipmapMode_520094897 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1050:3
  GPUSamplerAddressMode_520094902 = enum_GPUSamplerAddressMode_520094901 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1065:3
  GPUPresentMode_520094906 = enum_GPUPresentMode_520094905 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1097:3
  GPUSwapchainComposition_520094910 = enum_GPUSwapchainComposition_520094909 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1130:3
  struct_GPUViewport_520094912 {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1141:16
    y*: cfloat
    w*: cfloat
    h*: cfloat
    min_depth*: cfloat
    max_depth*: cfloat
  GPUViewport_520094914 = struct_GPUViewport_520094913 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1149:3
  struct_GPUTextureTransferInfo_520094916 {.pure, inheritable, bycopy.} = object
    transfer_buffer*: ptr GPUTransferBuffer_520094787 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1160:16
    offset*: Uint32_520094145
    pixels_per_row*: Uint32_520094145
    rows_per_layer*: Uint32_520094145
  GPUTextureTransferInfo_520094918 = struct_GPUTextureTransferInfo_520094917 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1166:3
  struct_GPUTransferBufferLocation_520094920 {.pure, inheritable, bycopy.} = object
    transfer_buffer*: ptr GPUTransferBuffer_520094787 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1178:16
    offset*: Uint32_520094145
  GPUTransferBufferLocation_520094922 = struct_GPUTransferBufferLocation_520094921 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1182:3
  struct_GPUTextureLocation_520094924 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_520094789 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1193:16
    mip_level*: Uint32_520094145
    layer*: Uint32_520094145
    x*: Uint32_520094145
    y*: Uint32_520094145
    z*: Uint32_520094145
  GPUTextureLocation_520094926 = struct_GPUTextureLocation_520094925 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1201:3
  struct_GPUTextureRegion_520094928 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_520094789 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1213:16
    mip_level*: Uint32_520094145
    layer*: Uint32_520094145
    x*: Uint32_520094145
    y*: Uint32_520094145
    z*: Uint32_520094145
    w*: Uint32_520094145
    h*: Uint32_520094145
    d*: Uint32_520094145
  GPUTextureRegion_520094930 = struct_GPUTextureRegion_520094929 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1224:3
  struct_GPUBlitRegion_520094932 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_520094789 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1233:16
    mip_level*: Uint32_520094145
    layer_or_depth_plane*: Uint32_520094145
    x*: Uint32_520094145
    y*: Uint32_520094145
    w*: Uint32_520094145
    h*: Uint32_520094145
  GPUBlitRegion_520094934 = struct_GPUBlitRegion_520094933 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1242:3
  struct_GPUBufferLocation_520094936 {.pure, inheritable, bycopy.} = object
    buffer*: ptr GPUBuffer_520094785 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1253:16
    offset*: Uint32_520094145
  GPUBufferLocation_520094938 = struct_GPUBufferLocation_520094937 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1257:3
  struct_GPUBufferRegion_520094940 {.pure, inheritable, bycopy.} = object
    buffer*: ptr GPUBuffer_520094785 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1269:16
    offset*: Uint32_520094145
    size*: Uint32_520094145
  GPUBufferRegion_520094942 = struct_GPUBufferRegion_520094941 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1274:3
  struct_GPUIndirectDrawCommand_520094944 {.pure, inheritable, bycopy.} = object
    num_vertices*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1288:16
    num_instances*: Uint32_520094145
    first_vertex*: Uint32_520094145
    first_instance*: Uint32_520094145
  GPUIndirectDrawCommand_520094946 = struct_GPUIndirectDrawCommand_520094945 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1294:3
  struct_GPUIndexedIndirectDrawCommand_520094948 {.pure, inheritable, bycopy.} = object
    num_indices*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1308:16
    num_instances*: Uint32_520094145
    first_index*: Uint32_520094145
    vertex_offset*: Sint32_520094143
    first_instance*: Uint32_520094145
  GPUIndexedIndirectDrawCommand_520094950 = struct_GPUIndexedIndirectDrawCommand_520094949 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1315:3
  struct_GPUIndirectDispatchCommand_520094952 {.pure, inheritable, bycopy.} = object
    groupcount_x*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1324:16
    groupcount_y*: Uint32_520094145
    groupcount_z*: Uint32_520094145
  GPUIndirectDispatchCommand_520094954 = struct_GPUIndirectDispatchCommand_520094953 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1329:3
  struct_GPUSamplerCreateInfo_520094956 {.pure, inheritable, bycopy.} = object
    min_filter*: GPUFilter_520094895 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1340:16
    mag_filter*: GPUFilter_520094895
    mipmap_mode*: GPUSamplerMipmapMode_520094899
    address_mode_u*: GPUSamplerAddressMode_520094903
    address_mode_v*: GPUSamplerAddressMode_520094903
    address_mode_w*: GPUSamplerAddressMode_520094903
    mip_lod_bias*: cfloat
    max_anisotropy*: cfloat
    compare_op*: GPUCompareOp_520094877
    min_lod*: cfloat
    max_lod*: cfloat
    enable_anisotropy*: bool
    enable_compare*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    props*: PropertiesID_520094217
  GPUSamplerCreateInfo_520094958 = struct_GPUSamplerCreateInfo_520094957 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1359:3
  struct_GPUVertexBufferDescription_520094960 {.pure, inheritable, bycopy.} = object
    slot*: Uint32_520094145  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1379:16
    pitch*: Uint32_520094145
    input_rate*: GPUVertexInputRate_520094861
    instance_step_rate*: Uint32_520094145
  GPUVertexBufferDescription_520094962 = struct_GPUVertexBufferDescription_520094961 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1385:3
  struct_GPUVertexAttribute_520094964 {.pure, inheritable, bycopy.} = object
    location*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1398:16
    buffer_slot*: Uint32_520094145
    format*: GPUVertexElementFormat_520094857
    offset*: Uint32_520094145
  GPUVertexAttribute_520094966 = struct_GPUVertexAttribute_520094965 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1404:3
  struct_GPUVertexInputState_520094968 {.pure, inheritable, bycopy.} = object
    vertex_buffer_descriptions*: ptr GPUVertexBufferDescription_520094963 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1414:16
    num_vertex_buffers*: Uint32_520094145
    vertex_attributes*: ptr GPUVertexAttribute_520094967
    num_vertex_attributes*: Uint32_520094145
  GPUVertexInputState_520094970 = struct_GPUVertexInputState_520094969 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1420:3
  struct_GPUStencilOpState_520094972 {.pure, inheritable, bycopy.} = object
    fail_op*: GPUStencilOp_520094881 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1429:16
    pass_op*: GPUStencilOp_520094881
    depth_fail_op*: GPUStencilOp_520094881
    compare_op*: GPUCompareOp_520094877
  GPUStencilOpState_520094974 = struct_GPUStencilOpState_520094973 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1435:3
  struct_GPUColorTargetBlendState_520094976 {.pure, inheritable, bycopy.} = object
    src_color_blendfactor*: GPUBlendFactor_520094889 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1444:16
    dst_color_blendfactor*: GPUBlendFactor_520094889
    color_blend_op*: GPUBlendOp_520094885
    src_alpha_blendfactor*: GPUBlendFactor_520094889
    dst_alpha_blendfactor*: GPUBlendFactor_520094889
    alpha_blend_op*: GPUBlendOp_520094885
    color_write_mask*: GPUColorComponentFlags_520094891
    enable_blend*: bool
    enable_color_write_mask*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
  GPUColorTargetBlendState_520094978 = struct_GPUColorTargetBlendState_520094977 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1457:3
  struct_GPUShaderCreateInfo_520094980 {.pure, inheritable, bycopy.} = object
    code_size*: csize_t      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1467:16
    code*: ptr Uint8_520094137
    entrypoint*: cstring
    format*: GPUShaderFormat_520094853
    stage*: GPUShaderStage_520094851
    num_samplers*: Uint32_520094145
    num_storage_textures*: Uint32_520094145
    num_storage_buffers*: Uint32_520094145
    num_uniform_buffers*: Uint32_520094145
    props*: PropertiesID_520094217
  GPUShaderCreateInfo_520094982 = struct_GPUShaderCreateInfo_520094981 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1480:3
  struct_GPUTextureCreateInfo_520094984 {.pure, inheritable, bycopy.} = object
    type_field*: GPUTextureType_520094833 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1493:16
    format*: GPUTextureFormat_520094827
    usage*: GPUTextureUsageFlags_520094829
    width*: Uint32_520094145
    height*: Uint32_520094145
    layer_count_or_depth*: Uint32_520094145
    num_levels*: Uint32_520094145
    sample_count*: GPUSampleCount_520094837
    props*: PropertiesID_520094217
  GPUTextureCreateInfo_520094986 = struct_GPUTextureCreateInfo_520094985 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1505:3
  struct_GPUBufferCreateInfo_520094988 {.pure, inheritable, bycopy.} = object
    usage*: GPUBufferUsageFlags_520094843 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1524:16
    size*: Uint32_520094145
    props*: PropertiesID_520094217
  GPUBufferCreateInfo_520094990 = struct_GPUBufferCreateInfo_520094989 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1530:3
  struct_GPUTransferBufferCreateInfo_520094992 {.pure, inheritable, bycopy.} = object
    usage*: GPUTransferBufferUsage_520094847 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1539:16
    size*: Uint32_520094145
    props*: PropertiesID_520094217
  GPUTransferBufferCreateInfo_520094994 = struct_GPUTransferBufferCreateInfo_520094993 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1545:3
  struct_GPURasterizerState_520094996 {.pure, inheritable, bycopy.} = object
    fill_mode*: GPUFillMode_520094865 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1562:16
    cull_mode*: GPUCullMode_520094869
    front_face*: GPUFrontFace_520094873
    depth_bias_constant_factor*: cfloat
    depth_bias_clamp*: cfloat
    depth_bias_slope_factor*: cfloat
    enable_depth_bias*: bool
    enable_depth_clip*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
  GPURasterizerState_520094998 = struct_GPURasterizerState_520094997 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1574:3
  struct_GPUMultisampleState_520095000 {.pure, inheritable, bycopy.} = object
    sample_count*: GPUSampleCount_520094837 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1584:16
    sample_mask*: Uint32_520094145
    enable_mask*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  GPUMultisampleState_520095002 = struct_GPUMultisampleState_520095001 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1592:3
  struct_GPUDepthStencilState_520095004 {.pure, inheritable, bycopy.} = object
    compare_op*: GPUCompareOp_520094877 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1602:16
    back_stencil_state*: GPUStencilOpState_520094975
    front_stencil_state*: GPUStencilOpState_520094975
    compare_mask*: Uint8_520094137
    write_mask*: Uint8_520094137
    enable_depth_test*: bool
    enable_depth_write*: bool
    enable_stencil_test*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  GPUDepthStencilState_520095006 = struct_GPUDepthStencilState_520095005 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1615:3
  struct_GPUColorTargetDescription_520095008 {.pure, inheritable, bycopy.} = object
    format*: GPUTextureFormat_520094827 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1625:16
    blend_state*: GPUColorTargetBlendState_520094979
  GPUColorTargetDescription_520095010 = struct_GPUColorTargetDescription_520095009 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1629:3
  struct_GPUGraphicsPipelineTargetInfo_520095012 {.pure, inheritable, bycopy.} = object
    color_target_descriptions*: ptr GPUColorTargetDescription_520095011 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1639:16
    num_color_targets*: Uint32_520094145
    depth_stencil_format*: GPUTextureFormat_520094827
    has_depth_stencil_target*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  GPUGraphicsPipelineTargetInfo_520095014 = struct_GPUGraphicsPipelineTargetInfo_520095013 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1648:3
  struct_GPUGraphicsPipelineCreateInfo_520095016 {.pure, inheritable, bycopy.} = object
    vertex_shader*: ptr GPUShader_520094793 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1657:16
    fragment_shader*: ptr GPUShader_520094793
    vertex_input_state*: GPUVertexInputState_520094971
    primitive_type*: GPUPrimitiveType_520094811
    rasterizer_state*: GPURasterizerState_520094999
    multisample_state*: GPUMultisampleState_520095003
    depth_stencil_state*: GPUDepthStencilState_520095007
    target_info*: GPUGraphicsPipelineTargetInfo_520095015
    props*: PropertiesID_520094217
  GPUGraphicsPipelineCreateInfo_520095018 = struct_GPUGraphicsPipelineCreateInfo_520095017 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1669:3
  struct_GPUComputePipelineCreateInfo_520095020 {.pure, inheritable, bycopy.} = object
    code_size*: csize_t      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1678:16
    code*: ptr Uint8_520094137
    entrypoint*: cstring
    format*: GPUShaderFormat_520094853
    num_samplers*: Uint32_520094145
    num_readonly_storage_textures*: Uint32_520094145
    num_readonly_storage_buffers*: Uint32_520094145
    num_readwrite_storage_textures*: Uint32_520094145
    num_readwrite_storage_buffers*: Uint32_520094145
    num_uniform_buffers*: Uint32_520094145
    threadcount_x*: Uint32_520094145
    threadcount_y*: Uint32_520094145
    threadcount_z*: Uint32_520094145
    props*: PropertiesID_520094217
  GPUComputePipelineCreateInfo_520095022 = struct_GPUComputePipelineCreateInfo_520095021 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1695:3
  struct_GPUColorTargetInfo_520095024 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_520094789 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1732:16
    mip_level*: Uint32_520094145
    layer_or_depth_plane*: Uint32_520094145
    clear_color*: FColor_520094355
    load_op*: GPULoadOp_520094815
    store_op*: GPUStoreOp_520094819
    resolve_texture*: ptr GPUTexture_520094789
    resolve_mip_level*: Uint32_520094145
    resolve_layer*: Uint32_520094145
    cycle*: bool
    cycle_resolve_texture*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
  GPUColorTargetInfo_520095026 = struct_GPUColorTargetInfo_520095025 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1747:3
  struct_GPUDepthStencilTargetInfo_520095028 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_520094789 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1793:16
    clear_depth*: cfloat
    load_op*: GPULoadOp_520094815
    store_op*: GPUStoreOp_520094819
    stencil_load_op*: GPULoadOp_520094815
    stencil_store_op*: GPUStoreOp_520094819
    cycle*: bool
    clear_stencil*: Uint8_520094137
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
  GPUDepthStencilTargetInfo_520095030 = struct_GPUDepthStencilTargetInfo_520095029 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1805:3
  struct_GPUBlitInfo_520095032 {.pure, inheritable, bycopy.} = object
    source*: GPUBlitRegion_520094935 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1814:16
    destination*: GPUBlitRegion_520094935
    load_op*: GPULoadOp_520094815
    clear_color*: FColor_520094355
    flip_mode*: FlipMode_520094389
    filter*: GPUFilter_520094895
    cycle*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  GPUBlitInfo_520095034 = struct_GPUBlitInfo_520095033 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1825:3
  struct_GPUBufferBinding_520095036 {.pure, inheritable, bycopy.} = object
    buffer*: ptr GPUBuffer_520094785 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1837:16
    offset*: Uint32_520094145
  GPUBufferBinding_520095038 = struct_GPUBufferBinding_520095037 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1841:3
  struct_GPUTextureSamplerBinding_520095040 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_520094789 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1851:16
    sampler*: ptr GPUSampler_520094791
  GPUTextureSamplerBinding_520095042 = struct_GPUTextureSamplerBinding_520095041 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1855:3
  struct_GPUStorageBufferReadWriteBinding_520095044 {.pure, inheritable, bycopy.} = object
    buffer*: ptr GPUBuffer_520094785 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1865:16
    cycle*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  GPUStorageBufferReadWriteBinding_520095046 = struct_GPUStorageBufferReadWriteBinding_520095045 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1872:3
  struct_GPUStorageTextureReadWriteBinding_520095048 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_520094789 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1882:16
    mip_level*: Uint32_520094145
    layer*: Uint32_520094145
    cycle*: bool
    padding1*: Uint8_520094137
    padding2*: Uint8_520094137
    padding3*: Uint8_520094137
  GPUStorageTextureReadWriteBinding_520095050 = struct_GPUStorageTextureReadWriteBinding_520095049 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1891:3
  Haptic_520095052 = struct_Haptic ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:150:27
  struct_HapticDirection_520095054 {.pure, inheritable, bycopy.} = object
    type_field*: Uint8_520094137 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:534:16
    dir*: array[3'i64, Sint32_520094143]
  HapticDirection_520095056 = struct_HapticDirection_520095055 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:538:3
  struct_HapticConstant_520095058 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:554:16
    direction*: HapticDirection_520095057
    length*: Uint32_520094145
    delay*: Uint16_520094141
    button*: Uint16_520094141
    interval*: Uint16_520094141
    level*: Sint16_520094139
    attack_length*: Uint16_520094141
    attack_level*: Uint16_520094141
    fade_length*: Uint16_520094141
    fade_level*: Uint16_520094141
  HapticConstant_520095060 = struct_HapticConstant_520095059 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:576:3
  struct_HapticPeriodic_520095062 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:640:16
    direction*: HapticDirection_520095057
    length*: Uint32_520094145
    delay*: Uint16_520094141
    button*: Uint16_520094141
    interval*: Uint16_520094141
    period*: Uint16_520094141
    magnitude*: Sint16_520094139
    offset*: Sint16_520094139
    phase*: Uint16_520094141
    attack_length*: Uint16_520094141
    attack_level*: Uint16_520094141
    fade_length*: Uint16_520094141
    fade_level*: Uint16_520094141
  HapticPeriodic_520095064 = struct_HapticPeriodic_520095063 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:667:3
  struct_HapticCondition_520095066 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:696:16
    direction*: HapticDirection_520095057
    length*: Uint32_520094145
    delay*: Uint16_520094141
    button*: Uint16_520094141
    interval*: Uint16_520094141
    right_sat*: array[3'i64, Uint16_520094141]
    left_sat*: array[3'i64, Uint16_520094141]
    right_coeff*: array[3'i64, Sint16_520094139]
    left_coeff*: array[3'i64, Sint16_520094139]
    deadband*: array[3'i64, Uint16_520094141]
    center*: array[3'i64, Sint16_520094139]
  HapticCondition_520095068 = struct_HapticCondition_520095067 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:718:3
  struct_HapticRamp_520095070 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:735:16
    direction*: HapticDirection_520095057
    length*: Uint32_520094145
    delay*: Uint16_520094141
    button*: Uint16_520094141
    interval*: Uint16_520094141
    start*: Sint16_520094139
    end_field*: Sint16_520094139
    attack_length*: Uint16_520094141
    attack_level*: Uint16_520094141
    fade_length*: Uint16_520094141
    fade_level*: Uint16_520094141
  HapticRamp_520095072 = struct_HapticRamp_520095071 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:758:3
  struct_HapticLeftRight_520095074 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:774:16
    length*: Uint32_520094145
    large_magnitude*: Uint16_520094141
    small_magnitude*: Uint16_520094141
  HapticLeftRight_520095076 = struct_HapticLeftRight_520095075 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:785:3
  struct_HapticCustom_520095078 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:804:16
    direction*: HapticDirection_520095057
    length*: Uint32_520094145
    delay*: Uint16_520094141
    button*: Uint16_520094141
    interval*: Uint16_520094141
    channels*: Uint8_520094137
    period*: Uint16_520094141
    samples*: Uint16_520094141
    data*: ptr Uint16_520094141
    attack_length*: Uint16_520094141
    attack_level*: Uint16_520094141
    fade_length*: Uint16_520094141
    fade_level*: Uint16_520094141
  HapticCustom_520095080 = struct_HapticCustom_520095079 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:829:3
  union_HapticEffect_520095082 {.union, bycopy.} = object
    type_field*: Uint16_520094141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:903:15
    constant*: HapticConstant_520095061
    periodic*: HapticPeriodic_520095065
    condition*: HapticCondition_520095069
    ramp*: HapticRamp_520095073
    leftright*: HapticLeftRight_520095077
    custom*: HapticCustom_520095081
  HapticEffect_520095084 = union_HapticEffect_520095083 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:913:3
  HapticID_520095086 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:925:16
  hid_device_520095088 = struct_hid_device ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hidapi.h:70:31
  hid_bus_type_520095092 = enum_hid_bus_type_520095091 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hidapi.h:103:3
  struct_hid_device_info_520095094 {.pure, inheritable, bycopy.} = object
    path*: cstring           ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hidapi.h:112:16
    vendor_id*: cushort
    product_id*: cushort
    serial_number*: ptr wchar_t_520094175
    release_number*: cushort
    manufacturer_string*: ptr wchar_t_520094175
    product_string*: ptr wchar_t_520094175
    usage_page*: cushort
    usage*: cushort
    interface_number*: cint
    interface_class*: cint
    interface_subclass*: cint
    interface_protocol*: cint
    bus_type*: hid_bus_type_520095093
    next*: ptr struct_hid_device_info_520095095
  hid_device_info_520095096 = struct_hid_device_info_520095095 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hidapi.h:155:3
  HintPriority_520095100 = enum_HintPriority_520095099 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4200:3
  HintCallback_520095102 = proc (a0: pointer; a1: cstring; a2: cstring;
                                 a3: cstring): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4338:23
  InitFlags_520095104 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:78:16
  AppResult_520095108 = enum_AppResult_520095107 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:114:3
  AppInit_func_520095110 = proc (a0: ptr pointer; a1: cint;
                                 a2: ptr UncheckedArray[cstring]): AppResult_520095109 {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:116:33
  AppIterate_func_520095112 = proc (a0: pointer): AppResult_520095109 {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:117:33
  AppEvent_func_520095114 = proc (a0: pointer; a1: ptr Event_520094755): AppResult_520095109 {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:118:33
  AppQuit_func_520095116 = proc (a0: pointer; a1: AppResult_520095109): void {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:119:24
  MainThreadCallback_520095118 = proc (a0: pointer): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:271:24
  SharedObject_520095120 = struct_SharedObject ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_loadso.h:77:33
  struct_Locale_520095122 {.pure, inheritable, bycopy.} = object
    language*: cstring       ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_locale.h:60:16
    country*: cstring
  Locale_520095124 = struct_Locale_520095123 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_locale.h:64:3
  LogCategory_520095128 = enum_LogCategory_520095127 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_log.h:114:3
  LogPriority_520095132 = enum_LogPriority_520095131 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_log.h:132:3
  LogOutputFunction_520095134 = proc (a0: pointer; a1: cint; a2: LogPriority_520095133;
                                      a3: cstring): void {.cdecl.} ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_log.h:474:24
  MessageBoxFlags_520095136 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:48:16
  MessageBoxButtonFlags_520095138 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:61:16
  struct_MessageBoxButtonData_520095140 {.pure, inheritable, bycopy.} = object
    flags*: MessageBoxButtonFlags_520095139 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:71:16
    buttonID*: cint
    text*: cstring
  MessageBoxButtonData_520095142 = struct_MessageBoxButtonData_520095141 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:76:3
  struct_MessageBoxColor_520095144 {.pure, inheritable, bycopy.} = object
    r*: Uint8_520094137      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:83:16
    g*: Uint8_520094137
    b*: Uint8_520094137
  MessageBoxColor_520095146 = struct_MessageBoxColor_520095145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:86:3
  MessageBoxColorType_520095150 = enum_MessageBoxColorType_520095149 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:100:3
  struct_MessageBoxColorScheme_520095152 {.pure, inheritable, bycopy.} = object
    colors*: array[5'i64, MessageBoxColor_520095147] ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:107:16
  MessageBoxColorScheme_520095154 = struct_MessageBoxColorScheme_520095153 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:110:3
  struct_MessageBoxData_520095156 {.pure, inheritable, bycopy.} = object
    flags*: MessageBoxFlags_520095137 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:117:16
    window*: ptr Window_520094429
    title*: cstring
    message*: cstring
    numbuttons*: cint
    buttons*: ptr MessageBoxButtonData_520095143
    colorScheme*: ptr MessageBoxColorScheme_520095155
  MessageBoxData_520095158 = struct_MessageBoxData_520095157 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:128:3
  MetalView_520095160 = pointer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_metal.h:44:15
  Process_520095162 = struct_Process ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:57:28
  ProcessIO_520095166 = enum_ProcessIO_520095165 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:149:3
  struct_Vertex_520095168 {.pure, inheritable, bycopy.} = object
    position*: FPoint_520094371 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:81:16
    color*: FColor_520094355
    tex_coord*: FPoint_520094371
  Vertex_520095170 = struct_Vertex_520095169 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:86:3
  TextureAccess_520095174 = enum_TextureAccess_520095173 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:98:3
  RendererLogicalPresentation_520095178 = enum_RendererLogicalPresentation_520095177 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:112:3
  Renderer_520095180 = struct_Renderer ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:119:29
  struct_Texture_520095182 {.pure, inheritable, bycopy.} = object
    format*: PixelFormat_520094319 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:133:8
    w*: cint
    h*: cint
    refcount*: cint
  Texture_520095184 = struct_Texture_520095183 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:143:28
  struct_StorageInterface_520095186 {.pure, inheritable, bycopy.} = object
    version*: Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_storage.h:61:16
    close*: proc (a0: pointer): bool {.cdecl.}
    ready*: proc (a0: pointer): bool {.cdecl.}
    enumerate*: proc (a0: pointer; a1: cstring; a2: EnumerateDirectoryCallback_520094781;
                      a3: pointer): bool {.cdecl.}
    info*: proc (a0: pointer; a1: cstring; a2: ptr PathInfo_520094773): bool {.
        cdecl.}
    read_file*: proc (a0: pointer; a1: cstring; a2: pointer; a3: Uint64_520094149): bool {.
        cdecl.}
    write_file*: proc (a0: pointer; a1: cstring; a2: pointer; a3: Uint64_520094149): bool {.
        cdecl.}
    mkdir*: proc (a0: pointer; a1: cstring): bool {.cdecl.}
    remove*: proc (a0: pointer; a1: cstring): bool {.cdecl.}
    rename*: proc (a0: pointer; a1: cstring; a2: cstring): bool {.cdecl.}
    copy*: proc (a0: pointer; a1: cstring; a2: cstring): bool {.cdecl.}
    space_remaining*: proc (a0: pointer): Uint64_520094149 {.cdecl.}
  StorageInterface_520095188 = struct_StorageInterface_520095187 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_storage.h:98:3
  Storage_520095190 = struct_Storage ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_storage.h:119:28
  MSG_520095192 = struct_tagMSG ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_system.h:48:23
  WindowsMessageHook_520095194 = proc (a0: pointer; a1: ptr MSG_520095193): bool {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_system.h:72:24
  XEvent_520095196 = union_XEvent ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_system.h:132:23
  X11EventHook_520095198 = proc (a0: pointer; a1: ptr XEvent_520095197): bool {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_system.h:133:24
  Sandbox_520095202 = enum_Sandbox_520095201 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_system.h:590:3
  struct_DateTime_520095204 {.pure, inheritable, bycopy.} = object
    year*: cint              ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_time.h:46:16
    month*: cint
    day*: cint
    hour*: cint
    minute*: cint
    second*: cint
    nanosecond*: cint
    day_of_week*: cint
    utc_offset*: cint
  DateTime_520095206 = struct_DateTime_520095205 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_time.h:57:3
  DateFormat_520095210 = enum_DateFormat_520095209 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_time.h:71:3
  TimeFormat_520095214 = enum_TimeFormat_520095213 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_time.h:84:3
  TimerID_520095216 = Uint32_520094145 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:159:16
  TimerCallback_520095218 = proc (a0: pointer; a1: TimerID_520095217; a2: Uint32_520094145): Uint32_520094145 {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:185:26
  NSTimerCallback_520095220 = proc (a0: pointer; a1: TimerID_520095217;
                                    a2: Uint64_520094149): Uint64_520094149 {.
      cdecl.}                ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:247:26
  uintptr_t_520095222 = culonglong ## Generated based on C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\vadefs.h:61:35
  internal_beginthreadex_proc_type_520095224 = proc (a0: pointer): cuint {.cdecl.} ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\process.h:85:30
  struct_GPUDepthStencilState_520095005 = (when declared(
      struct_GPUDepthStencilState):
    when ownSizeof(struct_GPUDepthStencilState) !=
        ownSizeof(struct_GPUDepthStencilState_520095004):
      static :
        warning("Declaration of " & "struct_GPUDepthStencilState" &
            " exists but with different size")
    struct_GPUDepthStencilState
   else:
    struct_GPUDepthStencilState_520095004)
  QuitEvent_520094747 = (when declared(QuitEvent):
    when ownSizeof(QuitEvent) != ownSizeof(QuitEvent_520094746):
      static :
        warning("Declaration of " & "QuitEvent" &
            " exists but with different size")
    QuitEvent
   else:
    QuitEvent_520094746)
  GPUFillMode_520094865 = (when declared(GPUFillMode):
    when ownSizeof(GPUFillMode) != ownSizeof(GPUFillMode_520094864):
      static :
        warning("Declaration of " & "GPUFillMode" &
            " exists but with different size")
    GPUFillMode
   else:
    GPUFillMode_520094864)
  GLAttr_typedef_520094457 = (when declared(GLAttr_typedef):
    when ownSizeof(GLAttr_typedef) != ownSizeof(GLAttr_typedef_520094456):
      static :
        warning("Declaration of " & "GLAttr_typedef" &
            " exists but with different size")
    GLAttr_typedef
   else:
    GLAttr_typedef_520094456)
  enum_Sandbox_520095201 = (when declared(enum_Sandbox):
    when ownSizeof(enum_Sandbox) != ownSizeof(enum_Sandbox_520095200):
      static :
        warning("Declaration of " & "enum_Sandbox" &
            " exists but with different size")
    enum_Sandbox
   else:
    enum_Sandbox_520095200)
  BlendFactor_520094295 = (when declared(BlendFactor):
    when ownSizeof(BlendFactor) != ownSizeof(BlendFactor_520094294):
      static :
        warning("Declaration of " & "BlendFactor" &
            " exists but with different size")
    BlendFactor
   else:
    BlendFactor_520094294)
  struct_GPUColorTargetBlendState_520094977 = (when declared(
      struct_GPUColorTargetBlendState):
    when ownSizeof(struct_GPUColorTargetBlendState) !=
        ownSizeof(struct_GPUColorTargetBlendState_520094976):
      static :
        warning("Declaration of " & "struct_GPUColorTargetBlendState" &
            " exists but with different size")
    struct_GPUColorTargetBlendState
   else:
    struct_GPUColorTargetBlendState_520094976)
  GPUIndexElementSize_520094823 = (when declared(GPUIndexElementSize):
    when ownSizeof(GPUIndexElementSize) != ownSizeof(GPUIndexElementSize_520094822):
      static :
        warning("Declaration of " & "GPUIndexElementSize" &
            " exists but with different size")
    GPUIndexElementSize
   else:
    GPUIndexElementSize_520094822)
  enum_ProcessIO_520095165 = (when declared(enum_ProcessIO):
    when ownSizeof(enum_ProcessIO) != ownSizeof(enum_ProcessIO_520095164):
      static :
        warning("Declaration of " & "enum_ProcessIO" &
            " exists but with different size")
    enum_ProcessIO
   else:
    enum_ProcessIO_520095164)
  enum_PackedOrder_520094305 = (when declared(enum_PackedOrder):
    when ownSizeof(enum_PackedOrder) != ownSizeof(enum_PackedOrder_520094304):
      static :
        warning("Declaration of " & "enum_PackedOrder" &
            " exists but with different size")
    enum_PackedOrder
   else:
    enum_PackedOrder_520094304)
  PropertyType_520094221 = (when declared(PropertyType):
    when ownSizeof(PropertyType) != ownSizeof(PropertyType_520094220):
      static :
        warning("Declaration of " & "PropertyType" &
            " exists but with different size")
    PropertyType
   else:
    PropertyType_520094220)
  GamepadType_520094527 = (when declared(GamepadType):
    when ownSizeof(GamepadType) != ownSizeof(GamepadType_520094526):
      static :
        warning("Declaration of " & "GamepadType" &
            " exists but with different size")
    GamepadType
   else:
    GamepadType_520094526)
  EGLint_520094449 = (when declared(EGLint):
    when ownSizeof(EGLint) != ownSizeof(EGLint_520094448):
      static :
        warning("Declaration of " & "EGLint" & " exists but with different size")
    EGLint
   else:
    EGLint_520094448)
  GPUTransferBufferLocation_520094923 = (when declared(GPUTransferBufferLocation):
    when ownSizeof(GPUTransferBufferLocation) !=
        ownSizeof(GPUTransferBufferLocation_520094922):
      static :
        warning("Declaration of " & "GPUTransferBufferLocation" &
            " exists but with different size")
    GPUTransferBufferLocation
   else:
    GPUTransferBufferLocation_520094922)
  enum_Capitalization_520094563 = (when declared(enum_Capitalization):
    when ownSizeof(enum_Capitalization) != ownSizeof(enum_Capitalization_520094562):
      static :
        warning("Declaration of " & "enum_Capitalization" &
            " exists but with different size")
    enum_Capitalization
   else:
    enum_Capitalization_520094562)
  GPUPrimitiveType_520094811 = (when declared(GPUPrimitiveType):
    when ownSizeof(GPUPrimitiveType) != ownSizeof(GPUPrimitiveType_520094810):
      static :
        warning("Declaration of " & "GPUPrimitiveType" &
            " exists but with different size")
    GPUPrimitiveType
   else:
    GPUPrimitiveType_520094810)
  GPUCompareOp_520094877 = (when declared(GPUCompareOp):
    when ownSizeof(GPUCompareOp) != ownSizeof(GPUCompareOp_520094876):
      static :
        warning("Declaration of " & "GPUCompareOp" &
            " exists but with different size")
    GPUCompareOp
   else:
    GPUCompareOp_520094876)
  IOStreamInterface_520094267 = (when declared(IOStreamInterface):
    when ownSizeof(IOStreamInterface) != ownSizeof(IOStreamInterface_520094266):
      static :
        warning("Declaration of " & "IOStreamInterface" &
            " exists but with different size")
    IOStreamInterface
   else:
    IOStreamInterface_520094266)
  GPUMultisampleState_520095003 = (when declared(GPUMultisampleState):
    when ownSizeof(GPUMultisampleState) != ownSizeof(GPUMultisampleState_520095002):
      static :
        warning("Declaration of " & "GPUMultisampleState" &
            " exists but with different size")
    GPUMultisampleState
   else:
    GPUMultisampleState_520095002)
  InitFlags_520095105 = (when declared(InitFlags):
    when ownSizeof(InitFlags) != ownSizeof(InitFlags_520095104):
      static :
        warning("Declaration of " & "InitFlags" &
            " exists but with different size")
    InitFlags
   else:
    InitFlags_520095104)
  hid_device_520095089 = (when declared(hid_device):
    when ownSizeof(hid_device) != ownSizeof(hid_device_520095088):
      static :
        warning("Declaration of " & "hid_device" &
            " exists but with different size")
    hid_device
   else:
    hid_device_520095088)
  ClipboardCleanupCallback_520094409 = (when declared(ClipboardCleanupCallback):
    when ownSizeof(ClipboardCleanupCallback) !=
        ownSizeof(ClipboardCleanupCallback_520094408):
      static :
        warning("Declaration of " & "ClipboardCleanupCallback" &
            " exists but with different size")
    ClipboardCleanupCallback
   else:
    ClipboardCleanupCallback_520094408)
  EGLAttrib_520094445 = (when declared(EGLAttrib):
    when ownSizeof(EGLAttrib) != ownSizeof(EGLAttrib_520094444):
      static :
        warning("Declaration of " & "EGLAttrib" &
            " exists but with different size")
    EGLAttrib
   else:
    EGLAttrib_520094444)
  RendererLogicalPresentation_520095179 = (when declared(
      RendererLogicalPresentation):
    when ownSizeof(RendererLogicalPresentation) !=
        ownSizeof(RendererLogicalPresentation_520095178):
      static :
        warning("Declaration of " & "RendererLogicalPresentation" &
            " exists but with different size")
    RendererLogicalPresentation
   else:
    RendererLogicalPresentation_520095178)
  struct_JoyButtonEvent_520094665 = (when declared(struct_JoyButtonEvent):
    when ownSizeof(struct_JoyButtonEvent) != ownSizeof(struct_JoyButtonEvent_520094664):
      static :
        warning("Declaration of " & "struct_JoyButtonEvent" &
            " exists but with different size")
    struct_JoyButtonEvent
   else:
    struct_JoyButtonEvent_520094664)
  enum_JoystickType_520094503 = (when declared(enum_JoystickType):
    when ownSizeof(enum_JoystickType) != ownSizeof(enum_JoystickType_520094502):
      static :
        warning("Declaration of " & "enum_JoystickType" &
            " exists but with different size")
    enum_JoystickType
   else:
    enum_JoystickType_520094502)
  enum_MouseWheelDirection_520094575 = (when declared(enum_MouseWheelDirection):
    when ownSizeof(enum_MouseWheelDirection) !=
        ownSizeof(enum_MouseWheelDirection_520094574):
      static :
        warning("Declaration of " & "enum_MouseWheelDirection" &
            " exists but with different size")
    enum_MouseWheelDirection
   else:
    enum_MouseWheelDirection_520094574)
  enum_GPUFillMode_520094863 = (when declared(enum_GPUFillMode):
    when ownSizeof(enum_GPUFillMode) != ownSizeof(enum_GPUFillMode_520094862):
      static :
        warning("Declaration of " & "enum_GPUFillMode" &
            " exists but with different size")
    enum_GPUFillMode
   else:
    enum_GPUFillMode_520094862)
  struct_VirtualJoystickSensorDesc_520094515 = (when declared(
      struct_VirtualJoystickSensorDesc):
    when ownSizeof(struct_VirtualJoystickSensorDesc) !=
        ownSizeof(struct_VirtualJoystickSensorDesc_520094514):
      static :
        warning("Declaration of " & "struct_VirtualJoystickSensorDesc" &
            " exists but with different size")
    struct_VirtualJoystickSensorDesc
   else:
    struct_VirtualJoystickSensorDesc_520094514)
  SystemCursor_520094573 = (when declared(SystemCursor):
    when ownSizeof(SystemCursor) != ownSizeof(SystemCursor_520094572):
      static :
        warning("Declaration of " & "SystemCursor" &
            " exists but with different size")
    SystemCursor
   else:
    SystemCursor_520094572)
  struct_GamepadSensorEvent_520094693 = (when declared(struct_GamepadSensorEvent):
    when ownSizeof(struct_GamepadSensorEvent) !=
        ownSizeof(struct_GamepadSensorEvent_520094692):
      static :
        warning("Declaration of " & "struct_GamepadSensorEvent" &
            " exists but with different size")
    struct_GamepadSensorEvent
   else:
    struct_GamepadSensorEvent_520094692)
  enum_GPUVertexInputRate_520094859 = (when declared(enum_GPUVertexInputRate):
    when ownSizeof(enum_GPUVertexInputRate) !=
        ownSizeof(enum_GPUVertexInputRate_520094858):
      static :
        warning("Declaration of " & "enum_GPUVertexInputRate" &
            " exists but with different size")
    enum_GPUVertexInputRate
   else:
    enum_GPUVertexInputRate_520094858)
  GPUIndirectDispatchCommand_520094955 = (when declared(
      GPUIndirectDispatchCommand):
    when ownSizeof(GPUIndirectDispatchCommand) !=
        ownSizeof(GPUIndirectDispatchCommand_520094954):
      static :
        warning("Declaration of " & "GPUIndirectDispatchCommand" &
            " exists but with different size")
    GPUIndirectDispatchCommand
   else:
    GPUIndirectDispatchCommand_520094954)
  Uint8_520094137 = (when declared(Uint8):
    when ownSizeof(Uint8) != ownSizeof(Uint8_520094136):
      static :
        warning("Declaration of " & "Uint8" & " exists but with different size")
    Uint8
   else:
    Uint8_520094136)
  struct_AsyncIOOutcome_520094201 = (when declared(struct_AsyncIOOutcome):
    when ownSizeof(struct_AsyncIOOutcome) != ownSizeof(struct_AsyncIOOutcome_520094200):
      static :
        warning("Declaration of " & "struct_AsyncIOOutcome" &
            " exists but with different size")
    struct_AsyncIOOutcome
   else:
    struct_AsyncIOOutcome_520094200)
  SurfaceFlags_520094381 = (when declared(SurfaceFlags):
    when ownSizeof(SurfaceFlags) != ownSizeof(SurfaceFlags_520094380):
      static :
        warning("Declaration of " & "SurfaceFlags" &
            " exists but with different size")
    SurfaceFlags
   else:
    SurfaceFlags_520094380)
  struct_VirtualJoystickTouchpadDesc_520094511 = (when declared(
      struct_VirtualJoystickTouchpadDesc):
    when ownSizeof(struct_VirtualJoystickTouchpadDesc) !=
        ownSizeof(struct_VirtualJoystickTouchpadDesc_520094510):
      static :
        warning("Declaration of " & "struct_VirtualJoystickTouchpadDesc" &
            " exists but with different size")
    struct_VirtualJoystickTouchpadDesc
   else:
    struct_VirtualJoystickTouchpadDesc_520094510)
  ThreadPriority_520094235 = (when declared(ThreadPriority):
    when ownSizeof(ThreadPriority) != ownSizeof(ThreadPriority_520094234):
      static :
        warning("Declaration of " & "ThreadPriority" &
            " exists but with different size")
    ThreadPriority
   else:
    ThreadPriority_520094234)
  GPUStencilOp_520094881 = (when declared(GPUStencilOp):
    when ownSizeof(GPUStencilOp) != ownSizeof(GPUStencilOp_520094880):
      static :
        warning("Declaration of " & "GPUStencilOp" &
            " exists but with different size")
    GPUStencilOp
   else:
    GPUStencilOp_520094880)
  struct_GPUBlitInfo_520095033 = (when declared(struct_GPUBlitInfo):
    when ownSizeof(struct_GPUBlitInfo) != ownSizeof(struct_GPUBlitInfo_520095032):
      static :
        warning("Declaration of " & "struct_GPUBlitInfo" &
            " exists but with different size")
    struct_GPUBlitInfo
   else:
    struct_GPUBlitInfo_520095032)
  struct_GPUComputePipelineCreateInfo_520095021 = (when declared(
      struct_GPUComputePipelineCreateInfo):
    when ownSizeof(struct_GPUComputePipelineCreateInfo) !=
        ownSizeof(struct_GPUComputePipelineCreateInfo_520095020):
      static :
        warning("Declaration of " & "struct_GPUComputePipelineCreateInfo" &
            " exists but with different size")
    struct_GPUComputePipelineCreateInfo
   else:
    struct_GPUComputePipelineCreateInfo_520095020)
  struct_GPUTextureSamplerBinding_520095041 = (when declared(
      struct_GPUTextureSamplerBinding):
    when ownSizeof(struct_GPUTextureSamplerBinding) !=
        ownSizeof(struct_GPUTextureSamplerBinding_520095040):
      static :
        warning("Declaration of " & "struct_GPUTextureSamplerBinding" &
            " exists but with different size")
    struct_GPUTextureSamplerBinding
   else:
    struct_GPUTextureSamplerBinding_520095040)
  struct_hid_device_info_520095095 = (when declared(struct_hid_device_info):
    when ownSizeof(struct_hid_device_info) != ownSizeof(struct_hid_device_info_520095094):
      static :
        warning("Declaration of " & "struct_hid_device_info" &
            " exists but with different size")
    struct_hid_device_info
   else:
    struct_hid_device_info_520095094)
  struct_alignment_test_520094153 = (when declared(struct_alignment_test):
    when ownSizeof(struct_alignment_test) != ownSizeof(struct_alignment_test_520094152):
      static :
        warning("Declaration of " & "struct_alignment_test" &
            " exists but with different size")
    struct_alignment_test
   else:
    struct_alignment_test_520094152)
  Sandbox_520095203 = (when declared(Sandbox):
    when ownSizeof(Sandbox) != ownSizeof(Sandbox_520095202):
      static :
        warning("Declaration of " & "Sandbox" &
            " exists but with different size")
    Sandbox
   else:
    Sandbox_520095202)
  PenAxisEvent_520094731 = (when declared(PenAxisEvent):
    when ownSizeof(PenAxisEvent) != ownSizeof(PenAxisEvent_520094730):
      static :
        warning("Declaration of " & "PenAxisEvent" &
            " exists but with different size")
    PenAxisEvent
   else:
    PenAxisEvent_520094730)
  GPUVertexBufferDescription_520094963 = (when declared(
      GPUVertexBufferDescription):
    when ownSizeof(GPUVertexBufferDescription) !=
        ownSizeof(GPUVertexBufferDescription_520094962):
      static :
        warning("Declaration of " & "GPUVertexBufferDescription" &
            " exists but with different size")
    GPUVertexBufferDescription
   else:
    GPUVertexBufferDescription_520094962)
  ProcessIO_520095167 = (when declared(ProcessIO):
    when ownSizeof(ProcessIO) != ownSizeof(ProcessIO_520095166):
      static :
        warning("Declaration of " & "ProcessIO" &
            " exists but with different size")
    ProcessIO
   else:
    ProcessIO_520095166)
  PenInputFlags_520094583 = (when declared(PenInputFlags):
    when ownSizeof(PenInputFlags) != ownSizeof(PenInputFlags_520094582):
      static :
        warning("Declaration of " & "PenInputFlags" &
            " exists but with different size")
    PenInputFlags
   else:
    PenInputFlags_520094582)
  enum_PropertyType_520094219 = (when declared(enum_PropertyType):
    when ownSizeof(enum_PropertyType) != ownSizeof(enum_PropertyType_520094218):
      static :
        warning("Declaration of " & "enum_PropertyType" &
            " exists but with different size")
    enum_PropertyType
   else:
    enum_PropertyType_520094218)
  AsyncIOTaskType_520094195 = (when declared(AsyncIOTaskType):
    when ownSizeof(AsyncIOTaskType) != ownSizeof(AsyncIOTaskType_520094194):
      static :
        warning("Declaration of " & "AsyncIOTaskType" &
            " exists but with different size")
    AsyncIOTaskType
   else:
    AsyncIOTaskType_520094194)
  struct_GPUVertexInputState_520094969 = (when declared(
      struct_GPUVertexInputState):
    when ownSizeof(struct_GPUVertexInputState) !=
        ownSizeof(struct_GPUVertexInputState_520094968):
      static :
        warning("Declaration of " & "struct_GPUVertexInputState" &
            " exists but with different size")
    struct_GPUVertexInputState
   else:
    struct_GPUVertexInputState_520094968)
  ColorType_520094323 = (when declared(ColorType):
    when ownSizeof(ColorType) != ownSizeof(ColorType_520094322):
      static :
        warning("Declaration of " & "ColorType" &
            " exists but with different size")
    ColorType
   else:
    ColorType_520094322)
  Rect_520094375 = (when declared(Rect):
    when ownSizeof(Rect) != ownSizeof(Rect_520094374):
      static :
        warning("Declaration of " & "Rect" & " exists but with different size")
    Rect
   else:
    Rect_520094374)
  AudioDeviceID_520094275 = (when declared(AudioDeviceID):
    when ownSizeof(AudioDeviceID) != ownSizeof(AudioDeviceID_520094274):
      static :
        warning("Declaration of " & "AudioDeviceID" &
            " exists but with different size")
    AudioDeviceID
   else:
    AudioDeviceID_520094274)
  struct_GPUIndirectDispatchCommand_520094953 = (when declared(
      struct_GPUIndirectDispatchCommand):
    when ownSizeof(struct_GPUIndirectDispatchCommand) !=
        ownSizeof(struct_GPUIndirectDispatchCommand_520094952):
      static :
        warning("Declaration of " & "struct_GPUIndirectDispatchCommand" &
            " exists but with different size")
    struct_GPUIndirectDispatchCommand
   else:
    struct_GPUIndirectDispatchCommand_520094952)
  GPUViewport_520094915 = (when declared(GPUViewport):
    when ownSizeof(GPUViewport) != ownSizeof(GPUViewport_520094914):
      static :
        warning("Declaration of " & "GPUViewport" &
            " exists but with different size")
    GPUViewport
   else:
    GPUViewport_520094914)
  AtomicU32_520094215 = (when declared(AtomicU32):
    when ownSizeof(AtomicU32) != ownSizeof(AtomicU32_520094214):
      static :
        warning("Declaration of " & "AtomicU32" &
            " exists but with different size")
    AtomicU32
   else:
    AtomicU32_520094214)
  calloc_func_520094163 = (when declared(calloc_func):
    when ownSizeof(calloc_func) != ownSizeof(calloc_func_520094162):
      static :
        warning("Declaration of " & "calloc_func" &
            " exists but with different size")
    calloc_func
   else:
    calloc_func_520094162)
  enum_ThreadPriority_520094233 = (when declared(enum_ThreadPriority):
    when ownSizeof(enum_ThreadPriority) != ownSizeof(enum_ThreadPriority_520094232):
      static :
        warning("Declaration of " & "enum_ThreadPriority" &
            " exists but with different size")
    enum_ThreadPriority
   else:
    enum_ThreadPriority_520094232)
  struct_PenProximityEvent_520094713 = (when declared(struct_PenProximityEvent):
    when ownSizeof(struct_PenProximityEvent) !=
        ownSizeof(struct_PenProximityEvent_520094712):
      static :
        warning("Declaration of " & "struct_PenProximityEvent" &
            " exists but with different size")
    struct_PenProximityEvent
   else:
    struct_PenProximityEvent_520094712)
  struct_Texture_520095183 = (when declared(struct_Texture):
    when ownSizeof(struct_Texture) != ownSizeof(struct_Texture_520095182):
      static :
        warning("Declaration of " & "struct_Texture" &
            " exists but with different size")
    struct_Texture
   else:
    struct_Texture_520095182)
  HapticPeriodic_520095065 = (when declared(HapticPeriodic):
    when ownSizeof(HapticPeriodic) != ownSizeof(HapticPeriodic_520095064):
      static :
        warning("Declaration of " & "HapticPeriodic" &
            " exists but with different size")
    HapticPeriodic
   else:
    HapticPeriodic_520095064)
  KeyboardEvent_520094623 = (when declared(KeyboardEvent):
    when ownSizeof(KeyboardEvent) != ownSizeof(KeyboardEvent_520094622):
      static :
        warning("Declaration of " & "KeyboardEvent" &
            " exists but with different size")
    KeyboardEvent
   else:
    KeyboardEvent_520094622)
  struct_UserEvent_520094749 = (when declared(struct_UserEvent):
    when ownSizeof(struct_UserEvent) != ownSizeof(struct_UserEvent_520094748):
      static :
        warning("Declaration of " & "struct_UserEvent" &
            " exists but with different size")
    struct_UserEvent
   else:
    struct_UserEvent_520094748)
  struct_GPUTransferBufferLocation_520094921 = (when declared(
      struct_GPUTransferBufferLocation):
    when ownSizeof(struct_GPUTransferBufferLocation) !=
        ownSizeof(struct_GPUTransferBufferLocation_520094920):
      static :
        warning("Declaration of " & "struct_GPUTransferBufferLocation" &
            " exists but with different size")
    struct_GPUTransferBufferLocation
   else:
    struct_GPUTransferBufferLocation_520094920)
  struct_GPUIndirectDrawCommand_520094945 = (when declared(
      struct_GPUIndirectDrawCommand):
    when ownSizeof(struct_GPUIndirectDrawCommand) !=
        ownSizeof(struct_GPUIndirectDrawCommand_520094944):
      static :
        warning("Declaration of " & "struct_GPUIndirectDrawCommand" &
            " exists but with different size")
    struct_GPUIndirectDrawCommand
   else:
    struct_GPUIndirectDrawCommand_520094944)
  MessageBoxColorType_520095151 = (when declared(MessageBoxColorType):
    when ownSizeof(MessageBoxColorType) != ownSizeof(MessageBoxColorType_520095150):
      static :
        warning("Declaration of " & "MessageBoxColorType" &
            " exists but with different size")
    MessageBoxColorType
   else:
    MessageBoxColorType_520095150)
  MessageBoxColor_520095147 = (when declared(MessageBoxColor):
    when ownSizeof(MessageBoxColor) != ownSizeof(MessageBoxColor_520095146):
      static :
        warning("Declaration of " & "MessageBoxColor" &
            " exists but with different size")
    MessageBoxColor
   else:
    MessageBoxColor_520095146)
  enum_TransferCharacteristics_520094333 = (when declared(
      enum_TransferCharacteristics):
    when ownSizeof(enum_TransferCharacteristics) !=
        ownSizeof(enum_TransferCharacteristics_520094332):
      static :
        warning("Declaration of " & "enum_TransferCharacteristics" &
            " exists but with different size")
    enum_TransferCharacteristics
   else:
    enum_TransferCharacteristics_520094332)
  struct_GPUStencilOpState_520094973 = (when declared(struct_GPUStencilOpState):
    when ownSizeof(struct_GPUStencilOpState) !=
        ownSizeof(struct_GPUStencilOpState_520094972):
      static :
        warning("Declaration of " & "struct_GPUStencilOpState" &
            " exists but with different size")
    struct_GPUStencilOpState
   else:
    struct_GPUStencilOpState_520094972)
  struct_GPUBufferCreateInfo_520094989 = (when declared(
      struct_GPUBufferCreateInfo):
    when ownSizeof(struct_GPUBufferCreateInfo) !=
        ownSizeof(struct_GPUBufferCreateInfo_520094988):
      static :
        warning("Declaration of " & "struct_GPUBufferCreateInfo" &
            " exists but with different size")
    struct_GPUBufferCreateInfo
   else:
    struct_GPUBufferCreateInfo_520094988)
  LogOutputFunction_520095135 = (when declared(LogOutputFunction):
    when ownSizeof(LogOutputFunction) != ownSizeof(LogOutputFunction_520095134):
      static :
        warning("Declaration of " & "LogOutputFunction" &
            " exists but with different size")
    LogOutputFunction
   else:
    LogOutputFunction_520095134)
  enum_InitStatus_520094249 = (when declared(enum_InitStatus):
    when ownSizeof(enum_InitStatus) != ownSizeof(enum_InitStatus_520094248):
      static :
        warning("Declaration of " & "enum_InitStatus" &
            " exists but with different size")
    enum_InitStatus
   else:
    enum_InitStatus_520094248)
  EventType_520094603 = (when declared(EventType):
    when ownSizeof(EventType) != ownSizeof(EventType_520094602):
      static :
        warning("Declaration of " & "EventType" &
            " exists but with different size")
    EventType
   else:
    EventType_520094602)
  struct_KeyboardEvent_520094621 = (when declared(struct_KeyboardEvent):
    when ownSizeof(struct_KeyboardEvent) != ownSizeof(struct_KeyboardEvent_520094620):
      static :
        warning("Declaration of " & "struct_KeyboardEvent" &
            " exists but with different size")
    struct_KeyboardEvent
   else:
    struct_KeyboardEvent_520094620)
  TimeFormat_520095215 = (when declared(TimeFormat):
    when ownSizeof(TimeFormat) != ownSizeof(TimeFormat_520095214):
      static :
        warning("Declaration of " & "TimeFormat" &
            " exists but with different size")
    TimeFormat
   else:
    TimeFormat_520095214)
  struct_GPUTextureTransferInfo_520094917 = (when declared(
      struct_GPUTextureTransferInfo):
    when ownSizeof(struct_GPUTextureTransferInfo) !=
        ownSizeof(struct_GPUTextureTransferInfo_520094916):
      static :
        warning("Declaration of " & "struct_GPUTextureTransferInfo" &
            " exists but with different size")
    struct_GPUTextureTransferInfo
   else:
    struct_GPUTextureTransferInfo_520094916)
  TouchDeviceType_520094595 = (when declared(TouchDeviceType):
    when ownSizeof(TouchDeviceType) != ownSizeof(TouchDeviceType_520094594):
      static :
        warning("Declaration of " & "TouchDeviceType" &
            " exists but with different size")
    TouchDeviceType
   else:
    TouchDeviceType_520094594)
  struct_GPUDepthStencilTargetInfo_520095029 = (when declared(
      struct_GPUDepthStencilTargetInfo):
    when ownSizeof(struct_GPUDepthStencilTargetInfo) !=
        ownSizeof(struct_GPUDepthStencilTargetInfo_520095028):
      static :
        warning("Declaration of " & "struct_GPUDepthStencilTargetInfo" &
            " exists but with different size")
    struct_GPUDepthStencilTargetInfo
   else:
    struct_GPUDepthStencilTargetInfo_520095028)
  WindowsMessageHook_520095195 = (when declared(WindowsMessageHook):
    when ownSizeof(WindowsMessageHook) != ownSizeof(WindowsMessageHook_520095194):
      static :
        warning("Declaration of " & "WindowsMessageHook" &
            " exists but with different size")
    WindowsMessageHook
   else:
    WindowsMessageHook_520095194)
  struct_GPUTextureRegion_520094929 = (when declared(struct_GPUTextureRegion):
    when ownSizeof(struct_GPUTextureRegion) !=
        ownSizeof(struct_GPUTextureRegion_520094928):
      static :
        warning("Declaration of " & "struct_GPUTextureRegion" &
            " exists but with different size")
    struct_GPUTextureRegion
   else:
    struct_GPUTextureRegion_520094928)
  struct_GPUBufferLocation_520094937 = (when declared(struct_GPUBufferLocation):
    when ownSizeof(struct_GPUBufferLocation) !=
        ownSizeof(struct_GPUBufferLocation_520094936):
      static :
        warning("Declaration of " & "struct_GPUBufferLocation" &
            " exists but with different size")
    struct_GPUBufferLocation
   else:
    struct_GPUBufferLocation_520094936)
  struct_TextEditingCandidatesEvent_520094629 = (when declared(
      struct_TextEditingCandidatesEvent):
    when ownSizeof(struct_TextEditingCandidatesEvent) !=
        ownSizeof(struct_TextEditingCandidatesEvent_520094628):
      static :
        warning("Declaration of " & "struct_TextEditingCandidatesEvent" &
            " exists but with different size")
    struct_TextEditingCandidatesEvent
   else:
    struct_TextEditingCandidatesEvent_520094628)
  BlendMode_520094287 = (when declared(BlendMode):
    when ownSizeof(BlendMode) != ownSizeof(BlendMode_520094286):
      static :
        warning("Declaration of " & "BlendMode" &
            " exists but with different size")
    BlendMode
   else:
    BlendMode_520094286)
  DisplayOrientation_520094427 = (when declared(DisplayOrientation):
    when ownSizeof(DisplayOrientation) != ownSizeof(DisplayOrientation_520094426):
      static :
        warning("Declaration of " & "DisplayOrientation" &
            " exists but with different size")
    DisplayOrientation
   else:
    DisplayOrientation_520094426)
  UserEvent_typedef_520094751 = (when declared(UserEvent_typedef):
    when ownSizeof(UserEvent_typedef) != ownSizeof(UserEvent_typedef_520094750):
      static :
        warning("Declaration of " & "UserEvent_typedef" &
            " exists but with different size")
    UserEvent_typedef
   else:
    UserEvent_typedef_520094750)
  GPUDepthStencilState_520095007 = (when declared(GPUDepthStencilState):
    when ownSizeof(GPUDepthStencilState) != ownSizeof(GPUDepthStencilState_520095006):
      static :
        warning("Declaration of " & "GPUDepthStencilState" &
            " exists but with different size")
    GPUDepthStencilState
   else:
    GPUDepthStencilState_520095006)
  enum_FileDialogType_520094479 = (when declared(enum_FileDialogType):
    when ownSizeof(enum_FileDialogType) != ownSizeof(enum_FileDialogType_520094478):
      static :
        warning("Declaration of " & "enum_FileDialogType" &
            " exists but with different size")
    enum_FileDialogType
   else:
    enum_FileDialogType_520094478)
  enum_GPUStencilOp_520094879 = (when declared(enum_GPUStencilOp):
    when ownSizeof(enum_GPUStencilOp) != ownSizeof(enum_GPUStencilOp_520094878):
      static :
        warning("Declaration of " & "enum_GPUStencilOp" &
            " exists but with different size")
    enum_GPUStencilOp
   else:
    enum_GPUStencilOp_520094878)
  GamepadButton_520094531 = (when declared(GamepadButton):
    when ownSizeof(GamepadButton) != ownSizeof(GamepadButton_520094530):
      static :
        warning("Declaration of " & "GamepadButton" &
            " exists but with different size")
    GamepadButton
   else:
    GamepadButton_520094530)
  Gamepad_520094523 = (when declared(Gamepad):
    when ownSizeof(Gamepad) != ownSizeof(Gamepad_520094522):
      static :
        warning("Declaration of " & "Gamepad" &
            " exists but with different size")
    Gamepad
   else:
    Gamepad_520094522)
  GPUDepthStencilTargetInfo_520095031 = (when declared(GPUDepthStencilTargetInfo):
    when ownSizeof(GPUDepthStencilTargetInfo) !=
        ownSizeof(GPUDepthStencilTargetInfo_520095030):
      static :
        warning("Declaration of " & "GPUDepthStencilTargetInfo" &
            " exists but with different size")
    GPUDepthStencilTargetInfo
   else:
    GPUDepthStencilTargetInfo_520095030)
  TimerCallback_520095219 = (when declared(TimerCallback):
    when ownSizeof(TimerCallback) != ownSizeof(TimerCallback_520095218):
      static :
        warning("Declaration of " & "TimerCallback" &
            " exists but with different size")
    TimerCallback
   else:
    TimerCallback_520095218)
  GPUTransferBufferUsage_520094847 = (when declared(GPUTransferBufferUsage):
    when ownSizeof(GPUTransferBufferUsage) != ownSizeof(GPUTransferBufferUsage_520094846):
      static :
        warning("Declaration of " & "GPUTransferBufferUsage" &
            " exists but with different size")
    GPUTransferBufferUsage
   else:
    GPUTransferBufferUsage_520094846)
  enum_GPUBlendOp_520094883 = (when declared(enum_GPUBlendOp):
    when ownSizeof(enum_GPUBlendOp) != ownSizeof(enum_GPUBlendOp_520094882):
      static :
        warning("Declaration of " & "enum_GPUBlendOp" &
            " exists but with different size")
    enum_GPUBlendOp
   else:
    enum_GPUBlendOp_520094882)
  NSTimerCallback_520095221 = (when declared(NSTimerCallback):
    when ownSizeof(NSTimerCallback) != ownSizeof(NSTimerCallback_520095220):
      static :
        warning("Declaration of " & "NSTimerCallback" &
            " exists but with different size")
    NSTimerCallback
   else:
    NSTimerCallback_520095220)
  hid_device_info_520095097 = (when declared(hid_device_info):
    when ownSizeof(hid_device_info) != ownSizeof(hid_device_info_520095096):
      static :
        warning("Declaration of " & "hid_device_info" &
            " exists but with different size")
    hid_device_info
   else:
    hid_device_info_520095096)
  VirtualJoystickTouchpadDesc_520094513 = (when declared(
      VirtualJoystickTouchpadDesc):
    when ownSizeof(VirtualJoystickTouchpadDesc) !=
        ownSizeof(VirtualJoystickTouchpadDesc_520094512):
      static :
        warning("Declaration of " & "VirtualJoystickTouchpadDesc" &
            " exists but with different size")
    VirtualJoystickTouchpadDesc
   else:
    VirtualJoystickTouchpadDesc_520094512)
  enum_IOStatus_520094257 = (when declared(enum_IOStatus):
    when ownSizeof(enum_IOStatus) != ownSizeof(enum_IOStatus_520094256):
      static :
        warning("Declaration of " & "enum_IOStatus" &
            " exists but with different size")
    enum_IOStatus
   else:
    enum_IOStatus_520094256)
  DisplayModeData_520094419 = (when declared(DisplayModeData):
    when ownSizeof(DisplayModeData) != ownSizeof(DisplayModeData_520094418):
      static :
        warning("Declaration of " & "DisplayModeData" &
            " exists but with different size")
    DisplayModeData
   else:
    DisplayModeData_520094418)
  Uint16_520094141 = (when declared(Uint16):
    when ownSizeof(Uint16) != ownSizeof(Uint16_520094140):
      static :
        warning("Declaration of " & "Uint16" & " exists but with different size")
    Uint16
   else:
    Uint16_520094140)
  JoystickConnectionState_520094509 = (when declared(JoystickConnectionState):
    when ownSizeof(JoystickConnectionState) !=
        ownSizeof(JoystickConnectionState_520094508):
      static :
        warning("Declaration of " & "JoystickConnectionState" &
            " exists but with different size")
    JoystickConnectionState
   else:
    JoystickConnectionState_520094508)
  GlobFlags_520094775 = (when declared(GlobFlags):
    when ownSizeof(GlobFlags) != ownSizeof(GlobFlags_520094774):
      static :
        warning("Declaration of " & "GlobFlags" &
            " exists but with different size")
    GlobFlags
   else:
    GlobFlags_520094774)
  enum_GPULoadOp_520094813 = (when declared(enum_GPULoadOp):
    when ownSizeof(enum_GPULoadOp) != ownSizeof(enum_GPULoadOp_520094812):
      static :
        warning("Declaration of " & "enum_GPULoadOp" &
            " exists but with different size")
    enum_GPULoadOp
   else:
    enum_GPULoadOp_520094812)
  GPUTextureUsageFlags_520094829 = (when declared(GPUTextureUsageFlags):
    when ownSizeof(GPUTextureUsageFlags) != ownSizeof(GPUTextureUsageFlags_520094828):
      static :
        warning("Declaration of " & "GPUTextureUsageFlags" &
            " exists but with different size")
    GPUTextureUsageFlags
   else:
    GPUTextureUsageFlags_520094828)
  HintPriority_520095101 = (when declared(HintPriority):
    when ownSizeof(HintPriority) != ownSizeof(HintPriority_520095100):
      static :
        warning("Declaration of " & "HintPriority" &
            " exists but with different size")
    HintPriority
   else:
    HintPriority_520095100)
  SensorEvent_520094743 = (when declared(SensorEvent):
    when ownSizeof(SensorEvent) != ownSizeof(SensorEvent_520094742):
      static :
        warning("Declaration of " & "SensorEvent" &
            " exists but with different size")
    SensorEvent
   else:
    SensorEvent_520094742)
  GPUGraphicsPipelineTargetInfo_520095015 = (when declared(
      GPUGraphicsPipelineTargetInfo):
    when ownSizeof(GPUGraphicsPipelineTargetInfo) !=
        ownSizeof(GPUGraphicsPipelineTargetInfo_520095014):
      static :
        warning("Declaration of " & "GPUGraphicsPipelineTargetInfo" &
            " exists but with different size")
    GPUGraphicsPipelineTargetInfo
   else:
    GPUGraphicsPipelineTargetInfo_520095014)
  FlipMode_520094389 = (when declared(FlipMode):
    when ownSizeof(FlipMode) != ownSizeof(FlipMode_520094388):
      static :
        warning("Declaration of " & "FlipMode" &
            " exists but with different size")
    FlipMode
   else:
    FlipMode_520094388)
  MessageBoxFlags_520095137 = (when declared(MessageBoxFlags):
    when ownSizeof(MessageBoxFlags) != ownSizeof(MessageBoxFlags_520095136):
      static :
        warning("Declaration of " & "MessageBoxFlags" &
            " exists but with different size")
    MessageBoxFlags
   else:
    MessageBoxFlags_520095136)
  enum_GamepadBindingType_520094541 = (when declared(enum_GamepadBindingType):
    when ownSizeof(enum_GamepadBindingType) !=
        ownSizeof(enum_GamepadBindingType_520094540):
      static :
        warning("Declaration of " & "enum_GamepadBindingType" &
            " exists but with different size")
    enum_GamepadBindingType
   else:
    enum_GamepadBindingType_520094540)
  Condition_520094247 = (when declared(Condition):
    when ownSizeof(Condition) != ownSizeof(Condition_520094246):
      static :
        warning("Declaration of " & "Condition" &
            " exists but with different size")
    Condition
   else:
    Condition_520094246)
  PathType_520094769 = (when declared(PathType):
    when ownSizeof(PathType) != ownSizeof(PathType_520094768):
      static :
        warning("Declaration of " & "PathType" &
            " exists but with different size")
    PathType
   else:
    PathType_520094768)
  ArrayOrder_520094311 = (when declared(ArrayOrder):
    when ownSizeof(ArrayOrder) != ownSizeof(ArrayOrder_520094310):
      static :
        warning("Declaration of " & "ArrayOrder" &
            " exists but with different size")
    ArrayOrder
   else:
    ArrayOrder_520094310)
  GPUTextureTransferInfo_520094919 = (when declared(GPUTextureTransferInfo):
    when ownSizeof(GPUTextureTransferInfo) != ownSizeof(GPUTextureTransferInfo_520094918):
      static :
        warning("Declaration of " & "GPUTextureTransferInfo" &
            " exists but with different size")
    GPUTextureTransferInfo
   else:
    GPUTextureTransferInfo_520094918)
  MessageBoxButtonData_520095143 = (when declared(MessageBoxButtonData):
    when ownSizeof(MessageBoxButtonData) != ownSizeof(MessageBoxButtonData_520095142):
      static :
        warning("Declaration of " & "MessageBoxButtonData" &
            " exists but with different size")
    MessageBoxButtonData
   else:
    MessageBoxButtonData_520095142)
  enum_TextureAccess_520095173 = (when declared(enum_TextureAccess):
    when ownSizeof(enum_TextureAccess) != ownSizeof(enum_TextureAccess_520095172):
      static :
        warning("Declaration of " & "enum_TextureAccess" &
            " exists but with different size")
    enum_TextureAccess
   else:
    enum_TextureAccess_520095172)
  struct_MouseButtonEvent_520094645 = (when declared(struct_MouseButtonEvent):
    when ownSizeof(struct_MouseButtonEvent) !=
        ownSizeof(struct_MouseButtonEvent_520094644):
      static :
        warning("Declaration of " & "struct_MouseButtonEvent" &
            " exists but with different size")
    struct_MouseButtonEvent
   else:
    struct_MouseButtonEvent_520094644)
  GPUCubeMapFace_520094841 = (when declared(GPUCubeMapFace):
    when ownSizeof(GPUCubeMapFace) != ownSizeof(GPUCubeMapFace_520094840):
      static :
        warning("Declaration of " & "GPUCubeMapFace" &
            " exists but with different size")
    GPUCubeMapFace
   else:
    GPUCubeMapFace_520094840)
  struct_KeyboardDeviceEvent_520094617 = (when declared(
      struct_KeyboardDeviceEvent):
    when ownSizeof(struct_KeyboardDeviceEvent) !=
        ownSizeof(struct_KeyboardDeviceEvent_520094616):
      static :
        warning("Declaration of " & "struct_KeyboardDeviceEvent" &
            " exists but with different size")
    struct_KeyboardDeviceEvent
   else:
    struct_KeyboardDeviceEvent_520094616)
  GPUFilter_520094895 = (when declared(GPUFilter):
    when ownSizeof(GPUFilter) != ownSizeof(GPUFilter_520094894):
      static :
        warning("Declaration of " & "GPUFilter" &
            " exists but with different size")
    GPUFilter
   else:
    GPUFilter_520094894)
  GPUTextureRegion_520094931 = (when declared(GPUTextureRegion):
    when ownSizeof(GPUTextureRegion) != ownSizeof(GPUTextureRegion_520094930):
      static :
        warning("Declaration of " & "GPUTextureRegion" &
            " exists but with different size")
    GPUTextureRegion
   else:
    GPUTextureRegion_520094930)
  HintCallback_520095103 = (when declared(HintCallback):
    when ownSizeof(HintCallback) != ownSizeof(HintCallback_520095102):
      static :
        warning("Declaration of " & "HintCallback" &
            " exists but with different size")
    HintCallback
   else:
    HintCallback_520095102)
  GUID_520094485 = (when declared(GUID):
    when ownSizeof(GUID) != ownSizeof(GUID_520094484):
      static :
        warning("Declaration of " & "GUID" & " exists but with different size")
    GUID
   else:
    GUID_520094484)
  Event_520094755 = (when declared(Event):
    when ownSizeof(Event) != ownSizeof(Event_520094754):
      static :
        warning("Declaration of " & "Event" & " exists but with different size")
    Event
   else:
    Event_520094754)
  Time_520094151 = (when declared(Time):
    when ownSizeof(Time) != ownSizeof(Time_520094150):
      static :
        warning("Declaration of " & "Time" & " exists but with different size")
    Time
   else:
    Time_520094150)
  enum_SystemCursor_520094571 = (when declared(enum_SystemCursor):
    when ownSizeof(enum_SystemCursor) != ownSizeof(enum_SystemCursor_520094570):
      static :
        warning("Declaration of " & "enum_SystemCursor" &
            " exists but with different size")
    enum_SystemCursor
   else:
    enum_SystemCursor_520094570)
  enum_EnumerationResult_520094777 = (when declared(enum_EnumerationResult):
    when ownSizeof(enum_EnumerationResult) != ownSizeof(enum_EnumerationResult_520094776):
      static :
        warning("Declaration of " & "enum_EnumerationResult" &
            " exists but with different size")
    enum_EnumerationResult
   else:
    enum_EnumerationResult_520094776)
  LogPriority_520095133 = (when declared(LogPriority):
    when ownSizeof(LogPriority) != ownSizeof(LogPriority_520095132):
      static :
        warning("Declaration of " & "LogPriority" &
            " exists but with different size")
    LogPriority
   else:
    LogPriority_520095132)
  enum_PowerState_520094487 = (when declared(enum_PowerState):
    when ownSizeof(enum_PowerState) != ownSizeof(enum_PowerState_520094486):
      static :
        warning("Declaration of " & "enum_PowerState" &
            " exists but with different size")
    enum_PowerState
   else:
    enum_PowerState_520094486)
  enum_SensorType_520094495 = (when declared(enum_SensorType):
    when ownSizeof(enum_SensorType) != ownSizeof(enum_SensorType_520094494):
      static :
        warning("Declaration of " & "enum_SensorType" &
            " exists but with different size")
    enum_SensorType
   else:
    enum_SensorType_520094494)
  SensorID_520094493 = (when declared(SensorID):
    when ownSizeof(SensorID) != ownSizeof(SensorID_520094492):
      static :
        warning("Declaration of " & "SensorID" &
            " exists but with different size")
    SensorID
   else:
    SensorID_520094492)
  GPUColorTargetBlendState_520094979 = (when declared(GPUColorTargetBlendState):
    when ownSizeof(GPUColorTargetBlendState) !=
        ownSizeof(GPUColorTargetBlendState_520094978):
      static :
        warning("Declaration of " & "GPUColorTargetBlendState" &
            " exists but with different size")
    GPUColorTargetBlendState
   else:
    GPUColorTargetBlendState_520094978)
  enum_GPUSwapchainComposition_520094909 = (when declared(
      enum_GPUSwapchainComposition):
    when ownSizeof(enum_GPUSwapchainComposition) !=
        ownSizeof(enum_GPUSwapchainComposition_520094908):
      static :
        warning("Declaration of " & "enum_GPUSwapchainComposition" &
            " exists but with different size")
    enum_GPUSwapchainComposition
   else:
    enum_GPUSwapchainComposition_520094908)
  struct_HapticLeftRight_520095075 = (when declared(struct_HapticLeftRight):
    when ownSizeof(struct_HapticLeftRight) != ownSizeof(struct_HapticLeftRight_520095074):
      static :
        warning("Declaration of " & "struct_HapticLeftRight" &
            " exists but with different size")
    struct_HapticLeftRight
   else:
    struct_HapticLeftRight_520095074)
  AssertData_520094187 = (when declared(AssertData):
    when ownSizeof(AssertData) != ownSizeof(AssertData_520094186):
      static :
        warning("Declaration of " & "AssertData" &
            " exists but with different size")
    AssertData
   else:
    AssertData_520094186)
  EventAction_520094759 = (when declared(EventAction):
    when ownSizeof(EventAction) != ownSizeof(EventAction_520094758):
      static :
        warning("Declaration of " & "EventAction" &
            " exists but with different size")
    EventAction
   else:
    EventAction_520094758)
  MouseMotionEvent_520094643 = (when declared(MouseMotionEvent):
    when ownSizeof(MouseMotionEvent) != ownSizeof(MouseMotionEvent_520094642):
      static :
        warning("Declaration of " & "MouseMotionEvent" &
            " exists but with different size")
    MouseMotionEvent
   else:
    MouseMotionEvent_520094642)
  struct_MouseMotionEvent_520094641 = (when declared(struct_MouseMotionEvent):
    when ownSizeof(struct_MouseMotionEvent) !=
        ownSizeof(struct_MouseMotionEvent_520094640):
      static :
        warning("Declaration of " & "struct_MouseMotionEvent" &
            " exists but with different size")
    struct_MouseMotionEvent
   else:
    struct_MouseMotionEvent_520094640)
  AudioDeviceEvent_520094699 = (when declared(AudioDeviceEvent):
    when ownSizeof(AudioDeviceEvent) != ownSizeof(AudioDeviceEvent_520094698):
      static :
        warning("Declaration of " & "AudioDeviceEvent" &
            " exists but with different size")
    AudioDeviceEvent
   else:
    AudioDeviceEvent_520094698)
  Keymod_520094555 = (when declared(Keymod):
    when ownSizeof(Keymod) != ownSizeof(Keymod_520094554):
      static :
        warning("Declaration of " & "Keymod" & " exists but with different size")
    Keymod
   else:
    Keymod_520094554)
  struct_GPUColorTargetDescription_520095009 = (when declared(
      struct_GPUColorTargetDescription):
    when ownSizeof(struct_GPUColorTargetDescription) !=
        ownSizeof(struct_GPUColorTargetDescription_520095008):
      static :
        warning("Declaration of " & "struct_GPUColorTargetDescription" &
            " exists but with different size")
    struct_GPUColorTargetDescription
   else:
    struct_GPUColorTargetDescription_520095008)
  enum_DUMMY_ENUM_520094157 = (when declared(enum_DUMMY_ENUM):
    when ownSizeof(enum_DUMMY_ENUM) != ownSizeof(enum_DUMMY_ENUM_520094156):
      static :
        warning("Declaration of " & "enum_DUMMY_ENUM" &
            " exists but with different size")
    enum_DUMMY_ENUM
   else:
    enum_DUMMY_ENUM_520094156)
  Cursor_520094569 = (when declared(Cursor):
    when ownSizeof(Cursor) != ownSizeof(Cursor_520094568):
      static :
        warning("Declaration of " & "Cursor" & " exists but with different size")
    Cursor
   else:
    Cursor_520094568)
  Storage_520095191 = (when declared(Storage):
    when ownSizeof(Storage) != ownSizeof(Storage_520095190):
      static :
        warning("Declaration of " & "Storage" &
            " exists but with different size")
    Storage
   else:
    Storage_520095190)
  enum_EventAction_520094757 = (when declared(enum_EventAction):
    when ownSizeof(enum_EventAction) != ownSizeof(enum_EventAction_520094756):
      static :
        warning("Declaration of " & "enum_EventAction" &
            " exists but with different size")
    enum_EventAction
   else:
    enum_EventAction_520094756)
  struct_GamepadButtonEvent_520094681 = (when declared(struct_GamepadButtonEvent):
    when ownSizeof(struct_GamepadButtonEvent) !=
        ownSizeof(struct_GamepadButtonEvent_520094680):
      static :
        warning("Declaration of " & "struct_GamepadButtonEvent" &
            " exists but with different size")
    struct_GamepadButtonEvent
   else:
    struct_GamepadButtonEvent_520094680)
  GPUTransferBuffer_520094787 = (when declared(GPUTransferBuffer):
    when ownSizeof(GPUTransferBuffer) != ownSizeof(GPUTransferBuffer_520094786):
      static :
        warning("Declaration of " & "GPUTransferBuffer" &
            " exists but with different size")
    GPUTransferBuffer
   else:
    GPUTransferBuffer_520094786)
  GLContext_520094437 = (when declared(GLContext):
    when ownSizeof(GLContext) != ownSizeof(GLContext_520094436):
      static :
        warning("Declaration of " & "GLContext" &
            " exists but with different size")
    GLContext
   else:
    GLContext_520094436)
  struct_RenderEvent_520094705 = (when declared(struct_RenderEvent):
    when ownSizeof(struct_RenderEvent) != ownSizeof(struct_RenderEvent_520094704):
      static :
        warning("Declaration of " & "struct_RenderEvent" &
            " exists but with different size")
    struct_RenderEvent
   else:
    struct_RenderEvent_520094704)
  struct_JoyDeviceEvent_520094669 = (when declared(struct_JoyDeviceEvent):
    when ownSizeof(struct_JoyDeviceEvent) != ownSizeof(struct_JoyDeviceEvent_520094668):
      static :
        warning("Declaration of " & "struct_JoyDeviceEvent" &
            " exists but with different size")
    struct_JoyDeviceEvent
   else:
    struct_JoyDeviceEvent_520094668)
  iconv_t_520094177 = (when declared(iconv_t):
    when ownSizeof(iconv_t) != ownSizeof(iconv_t_520094176):
      static :
        warning("Declaration of " & "iconv_t" &
            " exists but with different size")
    iconv_t
   else:
    iconv_t_520094176)
  ColorRange_520094327 = (when declared(ColorRange):
    when ownSizeof(ColorRange) != ownSizeof(ColorRange_520094326):
      static :
        warning("Declaration of " & "ColorRange" &
            " exists but with different size")
    ColorRange
   else:
    ColorRange_520094326)
  struct_GPUSamplerCreateInfo_520094957 = (when declared(
      struct_GPUSamplerCreateInfo):
    when ownSizeof(struct_GPUSamplerCreateInfo) !=
        ownSizeof(struct_GPUSamplerCreateInfo_520094956):
      static :
        warning("Declaration of " & "struct_GPUSamplerCreateInfo" &
            " exists but with different size")
    struct_GPUSamplerCreateInfo
   else:
    struct_GPUSamplerCreateInfo_520094956)
  Texture_520095185 = (when declared(Texture):
    when ownSizeof(Texture) != ownSizeof(Texture_520095184):
      static :
        warning("Declaration of " & "Texture" &
            " exists but with different size")
    Texture
   else:
    Texture_520095184)
  SensorType_520094497 = (when declared(SensorType):
    when ownSizeof(SensorType) != ownSizeof(SensorType_520094496):
      static :
        warning("Declaration of " & "SensorType" &
            " exists but with different size")
    SensorType
   else:
    SensorType_520094496)
  enum_Folder_520094763 = (when declared(enum_Folder):
    when ownSizeof(enum_Folder) != ownSizeof(enum_Folder_520094762):
      static :
        warning("Declaration of " & "enum_Folder" &
            " exists but with different size")
    enum_Folder
   else:
    enum_Folder_520094762)
  enum_AsyncIOResult_520094197 = (when declared(enum_AsyncIOResult):
    when ownSizeof(enum_AsyncIOResult) != ownSizeof(enum_AsyncIOResult_520094196):
      static :
        warning("Declaration of " & "enum_AsyncIOResult" &
            " exists but with different size")
    enum_AsyncIOResult
   else:
    enum_AsyncIOResult_520094196)
  PackedOrder_520094307 = (when declared(PackedOrder):
    when ownSizeof(PackedOrder) != ownSizeof(PackedOrder_520094306):
      static :
        warning("Declaration of " & "PackedOrder" &
            " exists but with different size")
    PackedOrder
   else:
    PackedOrder_520094306)
  ClipboardEvent_520094739 = (when declared(ClipboardEvent):
    when ownSizeof(ClipboardEvent) != ownSizeof(ClipboardEvent_520094738):
      static :
        warning("Declaration of " & "ClipboardEvent" &
            " exists but with different size")
    ClipboardEvent
   else:
    ClipboardEvent_520094738)
  GPUColorTargetInfo_520095027 = (when declared(GPUColorTargetInfo):
    when ownSizeof(GPUColorTargetInfo) != ownSizeof(GPUColorTargetInfo_520095026):
      static :
        warning("Declaration of " & "GPUColorTargetInfo" &
            " exists but with different size")
    GPUColorTargetInfo
   else:
    GPUColorTargetInfo_520095026)
  JoystickType_520094505 = (when declared(JoystickType):
    when ownSizeof(JoystickType) != ownSizeof(JoystickType_520094504):
      static :
        warning("Declaration of " & "JoystickType" &
            " exists but with different size")
    JoystickType
   else:
    JoystickType_520094504)
  struct_CommonEvent_520094605 = (when declared(struct_CommonEvent):
    when ownSizeof(struct_CommonEvent) != ownSizeof(struct_CommonEvent_520094604):
      static :
        warning("Declaration of " & "struct_CommonEvent" &
            " exists but with different size")
    struct_CommonEvent
   else:
    struct_CommonEvent_520094604)
  enum_GPUTransferBufferUsage_520094845 = (when declared(
      enum_GPUTransferBufferUsage):
    when ownSizeof(enum_GPUTransferBufferUsage) !=
        ownSizeof(enum_GPUTransferBufferUsage_520094844):
      static :
        warning("Declaration of " & "enum_GPUTransferBufferUsage" &
            " exists but with different size")
    enum_GPUTransferBufferUsage
   else:
    enum_GPUTransferBufferUsage_520094844)
  GPUVertexInputRate_520094861 = (when declared(GPUVertexInputRate):
    when ownSizeof(GPUVertexInputRate) != ownSizeof(GPUVertexInputRate_520094860):
      static :
        warning("Declaration of " & "GPUVertexInputRate" &
            " exists but with different size")
    GPUVertexInputRate
   else:
    GPUVertexInputRate_520094860)
  FRect_520094379 = (when declared(FRect):
    when ownSizeof(FRect) != ownSizeof(FRect_520094378):
      static :
        warning("Declaration of " & "FRect" & " exists but with different size")
    FRect
   else:
    FRect_520094378)
  struct_PenButtonEvent_520094725 = (when declared(struct_PenButtonEvent):
    when ownSizeof(struct_PenButtonEvent) != ownSizeof(struct_PenButtonEvent_520094724):
      static :
        warning("Declaration of " & "struct_PenButtonEvent" &
            " exists but with different size")
    struct_PenButtonEvent
   else:
    struct_PenButtonEvent_520094724)
  GamepadBindingType_520094543 = (when declared(GamepadBindingType):
    when ownSizeof(GamepadBindingType) != ownSizeof(GamepadBindingType_520094542):
      static :
        warning("Declaration of " & "GamepadBindingType" &
            " exists but with different size")
    GamepadBindingType
   else:
    GamepadBindingType_520094542)
  struct_GPUGraphicsPipelineCreateInfo_520095017 = (when declared(
      struct_GPUGraphicsPipelineCreateInfo):
    when ownSizeof(struct_GPUGraphicsPipelineCreateInfo) !=
        ownSizeof(struct_GPUGraphicsPipelineCreateInfo_520095016):
      static :
        warning("Declaration of " & "struct_GPUGraphicsPipelineCreateInfo" &
            " exists but with different size")
    struct_GPUGraphicsPipelineCreateInfo
   else:
    struct_GPUGraphicsPipelineCreateInfo_520095016)
  CompareCallback_520094171 = (when declared(CompareCallback):
    when ownSizeof(CompareCallback) != ownSizeof(CompareCallback_520094170):
      static :
        warning("Declaration of " & "CompareCallback" &
            " exists but with different size")
    CompareCallback
   else:
    CompareCallback_520094170)
  AsyncIOOutcome_520094203 = (when declared(AsyncIOOutcome):
    when ownSizeof(AsyncIOOutcome) != ownSizeof(AsyncIOOutcome_520094202):
      static :
        warning("Declaration of " & "AsyncIOOutcome" &
            " exists but with different size")
    AsyncIOOutcome
   else:
    AsyncIOOutcome_520094202)
  ThreadFunction_520094237 = (when declared(ThreadFunction):
    when ownSizeof(ThreadFunction) != ownSizeof(ThreadFunction_520094236):
      static :
        warning("Declaration of " & "ThreadFunction" &
            " exists but with different size")
    ThreadFunction
   else:
    ThreadFunction_520094236)
  MouseWheelEvent_520094651 = (when declared(MouseWheelEvent):
    when ownSizeof(MouseWheelEvent) != ownSizeof(MouseWheelEvent_520094650):
      static :
        warning("Declaration of " & "MouseWheelEvent" &
            " exists but with different size")
    MouseWheelEvent
   else:
    MouseWheelEvent_520094650)
  PenButtonEvent_520094727 = (when declared(PenButtonEvent):
    when ownSizeof(PenButtonEvent) != ownSizeof(PenButtonEvent_520094726):
      static :
        warning("Declaration of " & "PenButtonEvent" &
            " exists but with different size")
    PenButtonEvent
   else:
    PenButtonEvent_520094726)
  struct_DropEvent_520094733 = (when declared(struct_DropEvent):
    when ownSizeof(struct_DropEvent) != ownSizeof(struct_DropEvent_520094732):
      static :
        warning("Declaration of " & "struct_DropEvent" &
            " exists but with different size")
    struct_DropEvent
   else:
    struct_DropEvent_520094732)
  struct_QuitEvent_520094745 = (when declared(struct_QuitEvent):
    when ownSizeof(struct_QuitEvent) != ownSizeof(struct_QuitEvent_520094744):
      static :
        warning("Declaration of " & "struct_QuitEvent" &
            " exists but with different size")
    struct_QuitEvent
   else:
    struct_QuitEvent_520094744)
  struct_ClipboardEvent_520094737 = (when declared(struct_ClipboardEvent):
    when ownSizeof(struct_ClipboardEvent) != ownSizeof(struct_ClipboardEvent_520094736):
      static :
        warning("Declaration of " & "struct_ClipboardEvent" &
            " exists but with different size")
    struct_ClipboardEvent
   else:
    struct_ClipboardEvent_520094736)
  FlashOperation_520094435 = (when declared(FlashOperation):
    when ownSizeof(FlashOperation) != ownSizeof(FlashOperation_520094434):
      static :
        warning("Declaration of " & "FlashOperation" &
            " exists but with different size")
    FlashOperation
   else:
    FlashOperation_520094434)
  EGLAttribArrayCallback_520094451 = (when declared(EGLAttribArrayCallback):
    when ownSizeof(EGLAttribArrayCallback) != ownSizeof(EGLAttribArrayCallback_520094450):
      static :
        warning("Declaration of " & "EGLAttribArrayCallback" &
            " exists but with different size")
    EGLAttribArrayCallback
   else:
    EGLAttribArrayCallback_520094450)
  WindowEvent_520094615 = (when declared(WindowEvent):
    when ownSizeof(WindowEvent) != ownSizeof(WindowEvent_520094614):
      static :
        warning("Declaration of " & "WindowEvent" &
            " exists but with different size")
    WindowEvent
   else:
    WindowEvent_520094614)
  GPUTransferBufferCreateInfo_520094995 = (when declared(
      GPUTransferBufferCreateInfo):
    when ownSizeof(GPUTransferBufferCreateInfo) !=
        ownSizeof(GPUTransferBufferCreateInfo_520094994):
      static :
        warning("Declaration of " & "GPUTransferBufferCreateInfo" &
            " exists but with different size")
    GPUTransferBufferCreateInfo
   else:
    GPUTransferBufferCreateInfo_520094994)
  enum_GPUVertexElementFormat_520094855 = (when declared(
      enum_GPUVertexElementFormat):
    when ownSizeof(enum_GPUVertexElementFormat) !=
        ownSizeof(enum_GPUVertexElementFormat_520094854):
      static :
        warning("Declaration of " & "enum_GPUVertexElementFormat" &
            " exists but with different size")
    enum_GPUVertexElementFormat
   else:
    enum_GPUVertexElementFormat_520094854)
  enum_GPUIndexElementSize_520094821 = (when declared(enum_GPUIndexElementSize):
    when ownSizeof(enum_GPUIndexElementSize) !=
        ownSizeof(enum_GPUIndexElementSize_520094820):
      static :
        warning("Declaration of " & "enum_GPUIndexElementSize" &
            " exists but with different size")
    enum_GPUIndexElementSize
   else:
    enum_GPUIndexElementSize_520094820)
  MessageBoxButtonFlags_520095139 = (when declared(MessageBoxButtonFlags):
    when ownSizeof(MessageBoxButtonFlags) != ownSizeof(MessageBoxButtonFlags_520095138):
      static :
        warning("Declaration of " & "MessageBoxButtonFlags" &
            " exists but with different size")
    MessageBoxButtonFlags
   else:
    MessageBoxButtonFlags_520095138)
  TLSID_520094231 = (when declared(TLSID):
    when ownSizeof(TLSID) != ownSizeof(TLSID_520094230):
      static :
        warning("Declaration of " & "TLSID" & " exists but with different size")
    TLSID
   else:
    TLSID_520094230)
  CleanupPropertyCallback_520094223 = (when declared(CleanupPropertyCallback):
    when ownSizeof(CleanupPropertyCallback) !=
        ownSizeof(CleanupPropertyCallback_520094222):
      static :
        warning("Declaration of " & "CleanupPropertyCallback" &
            " exists but with different size")
    CleanupPropertyCallback
   else:
    CleanupPropertyCallback_520094222)
  GPUBuffer_520094785 = (when declared(GPUBuffer):
    when ownSizeof(GPUBuffer) != ownSizeof(GPUBuffer_520094784):
      static :
        warning("Declaration of " & "GPUBuffer" &
            " exists but with different size")
    GPUBuffer
   else:
    GPUBuffer_520094784)
  GLContextReleaseFlag_typedef_520094463 = (when declared(
      GLContextReleaseFlag_typedef):
    when ownSizeof(GLContextReleaseFlag_typedef) !=
        ownSizeof(GLContextReleaseFlag_typedef_520094462):
      static :
        warning("Declaration of " & "GLContextReleaseFlag_typedef" &
            " exists but with different size")
    GLContextReleaseFlag_typedef
   else:
    GLContextReleaseFlag_typedef_520094462)
  enum_GPUTextureType_520094831 = (when declared(enum_GPUTextureType):
    when ownSizeof(enum_GPUTextureType) != ownSizeof(enum_GPUTextureType_520094830):
      static :
        warning("Declaration of " & "enum_GPUTextureType" &
            " exists but with different size")
    enum_GPUTextureType
   else:
    enum_GPUTextureType_520094830)
  struct_GamepadBinding_520094545 = (when declared(struct_GamepadBinding):
    when ownSizeof(struct_GamepadBinding) != ownSizeof(struct_GamepadBinding_520094544):
      static :
        warning("Declaration of " & "struct_GamepadBinding" &
            " exists but with different size")
    struct_GamepadBinding
   else:
    struct_GamepadBinding_520094544)
  struct_MessageBoxColor_520095145 = (when declared(struct_MessageBoxColor):
    when ownSizeof(struct_MessageBoxColor) != ownSizeof(struct_MessageBoxColor_520095144):
      static :
        warning("Declaration of " & "struct_MessageBoxColor" &
            " exists but with different size")
    struct_MessageBoxColor
   else:
    struct_MessageBoxColor_520095144)
  GPUStencilOpState_520094975 = (when declared(GPUStencilOpState):
    when ownSizeof(GPUStencilOpState) != ownSizeof(GPUStencilOpState_520094974):
      static :
        warning("Declaration of " & "GPUStencilOpState" &
            " exists but with different size")
    GPUStencilOpState
   else:
    GPUStencilOpState_520094974)
  TLSDestructorCallback_520094239 = (when declared(TLSDestructorCallback):
    when ownSizeof(TLSDestructorCallback) != ownSizeof(TLSDestructorCallback_520094238):
      static :
        warning("Declaration of " & "TLSDestructorCallback" &
            " exists but with different size")
    TLSDestructorCallback
   else:
    TLSDestructorCallback_520094238)
  enum_PackedLayout_520094313 = (when declared(enum_PackedLayout):
    when ownSizeof(enum_PackedLayout) != ownSizeof(enum_PackedLayout_520094312):
      static :
        warning("Declaration of " & "enum_PackedLayout" &
            " exists but with different size")
    enum_PackedLayout
   else:
    enum_PackedLayout_520094312)
  enum_FlashOperation_520094433 = (when declared(enum_FlashOperation):
    when ownSizeof(enum_FlashOperation) != ownSizeof(enum_FlashOperation_520094432):
      static :
        warning("Declaration of " & "enum_FlashOperation" &
            " exists but with different size")
    enum_FlashOperation
   else:
    enum_FlashOperation_520094432)
  enum_GamepadButtonLabel_520094533 = (when declared(enum_GamepadButtonLabel):
    when ownSizeof(enum_GamepadButtonLabel) !=
        ownSizeof(enum_GamepadButtonLabel_520094532):
      static :
        warning("Declaration of " & "enum_GamepadButtonLabel" &
            " exists but with different size")
    enum_GamepadButtonLabel
   else:
    enum_GamepadButtonLabel_520094532)
  Keycode_520094553 = (when declared(Keycode):
    when ownSizeof(Keycode) != ownSizeof(Keycode_520094552):
      static :
        warning("Declaration of " & "Keycode" &
            " exists but with different size")
    Keycode
   else:
    Keycode_520094552)
  GPUFence_520094807 = (when declared(GPUFence):
    when ownSizeof(GPUFence) != ownSizeof(GPUFence_520094806):
      static :
        warning("Declaration of " & "GPUFence" &
            " exists but with different size")
    GPUFence
   else:
    GPUFence_520094806)
  enum_ColorPrimaries_520094329 = (when declared(enum_ColorPrimaries):
    when ownSizeof(enum_ColorPrimaries) != ownSizeof(enum_ColorPrimaries_520094328):
      static :
        warning("Declaration of " & "enum_ColorPrimaries" &
            " exists but with different size")
    enum_ColorPrimaries
   else:
    enum_ColorPrimaries_520094328)
  struct_HapticPeriodic_520095063 = (when declared(struct_HapticPeriodic):
    when ownSizeof(struct_HapticPeriodic) != ownSizeof(struct_HapticPeriodic_520095062):
      static :
        warning("Declaration of " & "struct_HapticPeriodic" &
            " exists but with different size")
    struct_HapticPeriodic
   else:
    struct_HapticPeriodic_520095062)
  enum_CameraPosition_520094403 = (when declared(enum_CameraPosition):
    when ownSizeof(enum_CameraPosition) != ownSizeof(enum_CameraPosition_520094402):
      static :
        warning("Declaration of " & "enum_CameraPosition" &
            " exists but with different size")
    enum_CameraPosition
   else:
    enum_CameraPosition_520094402)
  struct_Point_520094365 = (when declared(struct_Point):
    when ownSizeof(struct_Point) != ownSizeof(struct_Point_520094364):
      static :
        warning("Declaration of " & "struct_Point" &
            " exists but with different size")
    struct_Point
   else:
    struct_Point_520094364)
  GPUComputePipeline_520094795 = (when declared(GPUComputePipeline):
    when ownSizeof(GPUComputePipeline) != ownSizeof(GPUComputePipeline_520094794):
      static :
        warning("Declaration of " & "GPUComputePipeline" &
            " exists but with different size")
    GPUComputePipeline
   else:
    GPUComputePipeline_520094794)
  enum_GamepadButton_520094529 = (when declared(enum_GamepadButton):
    when ownSizeof(enum_GamepadButton) != ownSizeof(enum_GamepadButton_520094528):
      static :
        warning("Declaration of " & "enum_GamepadButton" &
            " exists but with different size")
    enum_GamepadButton
   else:
    enum_GamepadButton_520094528)
  MSG_520095193 = (when declared(MSG):
    when ownSizeof(MSG) != ownSizeof(MSG_520095192):
      static :
        warning("Declaration of " & "MSG" & " exists but with different size")
    MSG
   else:
    MSG_520095192)
  struct_AssertData_520094185 = (when declared(struct_AssertData):
    when ownSizeof(struct_AssertData) != ownSizeof(struct_AssertData_520094184):
      static :
        warning("Declaration of " & "struct_AssertData" &
            " exists but with different size")
    struct_AssertData
   else:
    struct_AssertData_520094184)
  enum_BlendOperation_520094289 = (when declared(enum_BlendOperation):
    when ownSizeof(enum_BlendOperation) != ownSizeof(enum_BlendOperation_520094288):
      static :
        warning("Declaration of " & "enum_BlendOperation" &
            " exists but with different size")
    enum_BlendOperation
   else:
    enum_BlendOperation_520094288)
  struct_GUID_520094483 = (when declared(struct_GUID):
    when ownSizeof(struct_GUID) != ownSizeof(struct_GUID_520094482):
      static :
        warning("Declaration of " & "struct_GUID" &
            " exists but with different size")
    struct_GUID
   else:
    struct_GUID_520094482)
  AssertionHandler_520094189 = (when declared(AssertionHandler):
    when ownSizeof(AssertionHandler) != ownSizeof(AssertionHandler_520094188):
      static :
        warning("Declaration of " & "AssertionHandler" &
            " exists but with different size")
    AssertionHandler
   else:
    AssertionHandler_520094188)
  enum_GPUSampleCount_520094835 = (when declared(enum_GPUSampleCount):
    when ownSizeof(enum_GPUSampleCount) != ownSizeof(enum_GPUSampleCount_520094834):
      static :
        warning("Declaration of " & "enum_GPUSampleCount" &
            " exists but with different size")
    enum_GPUSampleCount
   else:
    enum_GPUSampleCount_520094834)
  enum_GPUPresentMode_520094905 = (when declared(enum_GPUPresentMode):
    when ownSizeof(enum_GPUPresentMode) != ownSizeof(enum_GPUPresentMode_520094904):
      static :
        warning("Declaration of " & "enum_GPUPresentMode" &
            " exists but with different size")
    enum_GPUPresentMode
   else:
    enum_GPUPresentMode_520094904)
  GPUBlitInfo_520095035 = (when declared(GPUBlitInfo):
    when ownSizeof(GPUBlitInfo) != ownSizeof(GPUBlitInfo_520095034):
      static :
        warning("Declaration of " & "GPUBlitInfo" &
            " exists but with different size")
    GPUBlitInfo
   else:
    GPUBlitInfo_520095034)
  GPUStorageBufferReadWriteBinding_520095047 = (when declared(
      GPUStorageBufferReadWriteBinding):
    when ownSizeof(GPUStorageBufferReadWriteBinding) !=
        ownSizeof(GPUStorageBufferReadWriteBinding_520095046):
      static :
        warning("Declaration of " & "GPUStorageBufferReadWriteBinding" &
            " exists but with different size")
    GPUStorageBufferReadWriteBinding
   else:
    GPUStorageBufferReadWriteBinding_520095046)
  enum_PixelFormat_520094317 = (when declared(enum_PixelFormat):
    when ownSizeof(enum_PixelFormat) != ownSizeof(enum_PixelFormat_520094316):
      static :
        warning("Declaration of " & "enum_PixelFormat" &
            " exists but with different size")
    enum_PixelFormat
   else:
    enum_PixelFormat_520094316)
  struct_Palette_520094357 = (when declared(struct_Palette):
    when ownSizeof(struct_Palette) != ownSizeof(struct_Palette_520094356):
      static :
        warning("Declaration of " & "struct_Palette" &
            " exists but with different size")
    struct_Palette
   else:
    struct_Palette_520094356)
  PixelFormatDetails_520094363 = (when declared(PixelFormatDetails):
    when ownSizeof(PixelFormatDetails) != ownSizeof(PixelFormatDetails_520094362):
      static :
        warning("Declaration of " & "PixelFormatDetails" &
            " exists but with different size")
    PixelFormatDetails
   else:
    PixelFormatDetails_520094362)
  struct_GamepadDeviceEvent_520094685 = (when declared(struct_GamepadDeviceEvent):
    when ownSizeof(struct_GamepadDeviceEvent) !=
        ownSizeof(struct_GamepadDeviceEvent_520094684):
      static :
        warning("Declaration of " & "struct_GamepadDeviceEvent" &
            " exists but with different size")
    struct_GamepadDeviceEvent
   else:
    struct_GamepadDeviceEvent_520094684)
  struct_HapticConstant_520095059 = (when declared(struct_HapticConstant):
    when ownSizeof(struct_HapticConstant) != ownSizeof(struct_HapticConstant_520095058):
      static :
        warning("Declaration of " & "struct_HapticConstant" &
            " exists but with different size")
    struct_HapticConstant
   else:
    struct_HapticConstant_520095058)
  struct_GPUStorageBufferReadWriteBinding_520095045 = (when declared(
      struct_GPUStorageBufferReadWriteBinding):
    when ownSizeof(struct_GPUStorageBufferReadWriteBinding) !=
        ownSizeof(struct_GPUStorageBufferReadWriteBinding_520095044):
      static :
        warning("Declaration of " & "struct_GPUStorageBufferReadWriteBinding" &
            " exists but with different size")
    struct_GPUStorageBufferReadWriteBinding
   else:
    struct_GPUStorageBufferReadWriteBinding_520095044)
  enum_GPUFilter_520094893 = (when declared(enum_GPUFilter):
    when ownSizeof(enum_GPUFilter) != ownSizeof(enum_GPUFilter_520094892):
      static :
        warning("Declaration of " & "enum_GPUFilter" &
            " exists but with different size")
    enum_GPUFilter
   else:
    enum_GPUFilter_520094892)
  TextEditingEvent_520094627 = (when declared(TextEditingEvent):
    when ownSizeof(TextEditingEvent) != ownSizeof(TextEditingEvent_520094626):
      static :
        warning("Declaration of " & "TextEditingEvent" &
            " exists but with different size")
    TextEditingEvent
   else:
    TextEditingEvent_520094626)
  struct_GPUShaderCreateInfo_520094981 = (when declared(
      struct_GPUShaderCreateInfo):
    when ownSizeof(struct_GPUShaderCreateInfo) !=
        ownSizeof(struct_GPUShaderCreateInfo_520094980):
      static :
        warning("Declaration of " & "struct_GPUShaderCreateInfo" &
            " exists but with different size")
    struct_GPUShaderCreateInfo
   else:
    struct_GPUShaderCreateInfo_520094980)
  Thread_520094227 = (when declared(Thread):
    when ownSizeof(Thread) != ownSizeof(Thread_520094226):
      static :
        warning("Declaration of " & "Thread" & " exists but with different size")
    Thread
   else:
    Thread_520094226)
  LogCategory_520095129 = (when declared(LogCategory):
    when ownSizeof(LogCategory) != ownSizeof(LogCategory_520095128):
      static :
        warning("Declaration of " & "LogCategory" &
            " exists but with different size")
    LogCategory
   else:
    LogCategory_520095128)
  Palette_520094359 = (when declared(Palette):
    when ownSizeof(Palette) != ownSizeof(Palette_520094358):
      static :
        warning("Declaration of " & "Palette" &
            " exists but with different size")
    Palette
   else:
    Palette_520094358)
  DialogFileCallback_520094477 = (when declared(DialogFileCallback):
    when ownSizeof(DialogFileCallback) != ownSizeof(DialogFileCallback_520094476):
      static :
        warning("Declaration of " & "DialogFileCallback" &
            " exists but with different size")
    DialogFileCallback
   else:
    DialogFileCallback_520094476)
  DateTime_520095207 = (when declared(DateTime):
    when ownSizeof(DateTime) != ownSizeof(DateTime_520095206):
      static :
        warning("Declaration of " & "DateTime" &
            " exists but with different size")
    DateTime
   else:
    DateTime_520095206)
  enum_RendererLogicalPresentation_520095177 = (when declared(
      enum_RendererLogicalPresentation):
    when ownSizeof(enum_RendererLogicalPresentation) !=
        ownSizeof(enum_RendererLogicalPresentation_520095176):
      static :
        warning("Declaration of " & "enum_RendererLogicalPresentation" &
            " exists but with different size")
    enum_RendererLogicalPresentation
   else:
    enum_RendererLogicalPresentation_520095176)
  enum_GPUSamplerMipmapMode_520094897 = (when declared(enum_GPUSamplerMipmapMode):
    when ownSizeof(enum_GPUSamplerMipmapMode) !=
        ownSizeof(enum_GPUSamplerMipmapMode_520094896):
      static :
        warning("Declaration of " & "enum_GPUSamplerMipmapMode" &
            " exists but with different size")
    enum_GPUSamplerMipmapMode
   else:
    enum_GPUSamplerMipmapMode_520094896)
  TextEditingCandidatesEvent_520094631 = (when declared(
      TextEditingCandidatesEvent):
    when ownSizeof(TextEditingCandidatesEvent) !=
        ownSizeof(TextEditingCandidatesEvent_520094630):
      static :
        warning("Declaration of " & "TextEditingCandidatesEvent" &
            " exists but with different size")
    TextEditingCandidatesEvent
   else:
    TextEditingCandidatesEvent_520094630)
  Renderer_520095181 = (when declared(Renderer):
    when ownSizeof(Renderer) != ownSizeof(Renderer_520095180):
      static :
        warning("Declaration of " & "Renderer" &
            " exists but with different size")
    Renderer
   else:
    Renderer_520095180)
  GPUCullMode_520094869 = (when declared(GPUCullMode):
    when ownSizeof(GPUCullMode) != ownSizeof(GPUCullMode_520094868):
      static :
        warning("Declaration of " & "GPUCullMode" &
            " exists but with different size")
    GPUCullMode
   else:
    GPUCullMode_520094868)
  AudioFormat_520094273 = (when declared(AudioFormat):
    when ownSizeof(AudioFormat) != ownSizeof(AudioFormat_520094272):
      static :
        warning("Declaration of " & "AudioFormat" &
            " exists but with different size")
    AudioFormat
   else:
    AudioFormat_520094272)
  PenID_520094581 = (when declared(PenID):
    when ownSizeof(PenID) != ownSizeof(PenID_520094580):
      static :
        warning("Declaration of " & "PenID" & " exists but with different size")
    PenID
   else:
    PenID_520094580)
  enum_ChromaLocation_520094341 = (when declared(enum_ChromaLocation):
    when ownSizeof(enum_ChromaLocation) != ownSizeof(enum_ChromaLocation_520094340):
      static :
        warning("Declaration of " & "enum_ChromaLocation" &
            " exists but with different size")
    enum_ChromaLocation
   else:
    enum_ChromaLocation_520094340)
  HapticDirection_520095057 = (when declared(HapticDirection):
    when ownSizeof(HapticDirection) != ownSizeof(HapticDirection_520095056):
      static :
        warning("Declaration of " & "HapticDirection" &
            " exists but with different size")
    HapticDirection
   else:
    HapticDirection_520095056)
  enum_PathType_520094767 = (when declared(enum_PathType):
    when ownSizeof(enum_PathType) != ownSizeof(enum_PathType_520094766):
      static :
        warning("Declaration of " & "enum_PathType" &
            " exists but with different size")
    enum_PathType
   else:
    enum_PathType_520094766)
  enum_HintPriority_520095099 = (when declared(enum_HintPriority):
    when ownSizeof(enum_HintPriority) != ownSizeof(enum_HintPriority_520095098):
      static :
        warning("Declaration of " & "enum_HintPriority" &
            " exists but with different size")
    enum_HintPriority
   else:
    enum_HintPriority_520095098)
  DisplayEvent_520094611 = (when declared(DisplayEvent):
    when ownSizeof(DisplayEvent) != ownSizeof(DisplayEvent_520094610):
      static :
        warning("Declaration of " & "DisplayEvent" &
            " exists but with different size")
    DisplayEvent
   else:
    DisplayEvent_520094610)
  struct_GPUColorTargetInfo_520095025 = (when declared(struct_GPUColorTargetInfo):
    when ownSizeof(struct_GPUColorTargetInfo) !=
        ownSizeof(struct_GPUColorTargetInfo_520095024):
      static :
        warning("Declaration of " & "struct_GPUColorTargetInfo" &
            " exists but with different size")
    struct_GPUColorTargetInfo
   else:
    struct_GPUColorTargetInfo_520095024)
  DateFormat_520095211 = (when declared(DateFormat):
    when ownSizeof(DateFormat) != ownSizeof(DateFormat_520095210):
      static :
        warning("Declaration of " & "DateFormat" &
            " exists but with different size")
    DateFormat
   else:
    DateFormat_520095210)
  DialogFileFilter_520094475 = (when declared(DialogFileFilter):
    when ownSizeof(DialogFileFilter) != ownSizeof(DialogFileFilter_520094474):
      static :
        warning("Declaration of " & "DialogFileFilter" &
            " exists but with different size")
    DialogFileFilter
   else:
    DialogFileFilter_520094474)
  InitState_520094255 = (when declared(InitState):
    when ownSizeof(InitState) != ownSizeof(InitState_520094254):
      static :
        warning("Declaration of " & "InitState" &
            " exists but with different size")
    InitState
   else:
    InitState_520094254)
  GPUStoreOp_520094819 = (when declared(GPUStoreOp):
    when ownSizeof(GPUStoreOp) != ownSizeof(GPUStoreOp_520094818):
      static :
        warning("Declaration of " & "GPUStoreOp" &
            " exists but with different size")
    GPUStoreOp
   else:
    GPUStoreOp_520094818)
  Uint64_520094149 = (when declared(Uint64):
    when ownSizeof(Uint64) != ownSizeof(Uint64_520094148):
      static :
        warning("Declaration of " & "Uint64" & " exists but with different size")
    Uint64
   else:
    Uint64_520094148)
  realloc_func_520094165 = (when declared(realloc_func):
    when ownSizeof(realloc_func) != ownSizeof(realloc_func_520094164):
      static :
        warning("Declaration of " & "realloc_func" &
            " exists but with different size")
    realloc_func
   else:
    realloc_func_520094164)
  Colorspace_520094347 = (when declared(Colorspace):
    when ownSizeof(Colorspace) != ownSizeof(Colorspace_520094346):
      static :
        warning("Declaration of " & "Colorspace" &
            " exists but with different size")
    Colorspace
   else:
    Colorspace_520094346)
  PenMotionEvent_520094719 = (when declared(PenMotionEvent):
    when ownSizeof(PenMotionEvent) != ownSizeof(PenMotionEvent_520094718):
      static :
        warning("Declaration of " & "PenMotionEvent" &
            " exists but with different size")
    PenMotionEvent
   else:
    PenMotionEvent_520094718)
  AsyncIOQueue_520094205 = (when declared(AsyncIOQueue):
    when ownSizeof(AsyncIOQueue) != ownSizeof(AsyncIOQueue_520094204):
      static :
        warning("Declaration of " & "AsyncIOQueue" &
            " exists but with different size")
    AsyncIOQueue
   else:
    AsyncIOQueue_520094204)
  enum_LogCategory_520095127 = (when declared(enum_LogCategory):
    when ownSizeof(enum_LogCategory) != ownSizeof(enum_LogCategory_520095126):
      static :
        warning("Declaration of " & "enum_LogCategory" &
            " exists but with different size")
    enum_LogCategory
   else:
    enum_LogCategory_520095126)
  enum_BlendFactor_520094293 = (when declared(enum_BlendFactor):
    when ownSizeof(enum_BlendFactor) != ownSizeof(enum_BlendFactor_520094292):
      static :
        warning("Declaration of " & "enum_BlendFactor" &
            " exists but with different size")
    enum_BlendFactor
   else:
    enum_BlendFactor_520094292)
  ThreadID_520094229 = (when declared(ThreadID):
    when ownSizeof(ThreadID) != ownSizeof(ThreadID_520094228):
      static :
        warning("Declaration of " & "ThreadID" &
            " exists but with different size")
    ThreadID
   else:
    ThreadID_520094228)
  enum_GLAttr_520094455 = (when declared(enum_GLAttr):
    when ownSizeof(enum_GLAttr) != ownSizeof(enum_GLAttr_520094454):
      static :
        warning("Declaration of " & "enum_GLAttr" &
            " exists but with different size")
    enum_GLAttr
   else:
    enum_GLAttr_520094454)
  GPUPresentMode_520094907 = (when declared(GPUPresentMode):
    when ownSizeof(GPUPresentMode) != ownSizeof(GPUPresentMode_520094906):
      static :
        warning("Declaration of " & "GPUPresentMode" &
            " exists but with different size")
    GPUPresentMode
   else:
    GPUPresentMode_520094906)
  JoyAxisEvent_520094655 = (when declared(JoyAxisEvent):
    when ownSizeof(JoyAxisEvent) != ownSizeof(JoyAxisEvent_520094654):
      static :
        warning("Declaration of " & "JoyAxisEvent" &
            " exists but with different size")
    JoyAxisEvent
   else:
    JoyAxisEvent_520094654)
  struct_Finger_520094597 = (when declared(struct_Finger):
    when ownSizeof(struct_Finger) != ownSizeof(struct_Finger_520094596):
      static :
        warning("Declaration of " & "struct_Finger" &
            " exists but with different size")
    struct_Finger
   else:
    struct_Finger_520094596)
  enum_TimeFormat_520095213 = (when declared(enum_TimeFormat):
    when ownSizeof(enum_TimeFormat) != ownSizeof(enum_TimeFormat_520095212):
      static :
        warning("Declaration of " & "enum_TimeFormat" &
            " exists but with different size")
    enum_TimeFormat
   else:
    enum_TimeFormat_520095212)
  PenTouchEvent_520094723 = (when declared(PenTouchEvent):
    when ownSizeof(PenTouchEvent) != ownSizeof(PenTouchEvent_520094722):
      static :
        warning("Declaration of " & "PenTouchEvent" &
            " exists but with different size")
    PenTouchEvent
   else:
    PenTouchEvent_520094722)
  struct_PathInfo_520094771 = (when declared(struct_PathInfo):
    when ownSizeof(struct_PathInfo) != ownSizeof(struct_PathInfo_520094770):
      static :
        warning("Declaration of " & "struct_PathInfo" &
            " exists but with different size")
    struct_PathInfo
   else:
    struct_PathInfo_520094770)
  GPURenderPass_520094801 = (when declared(GPURenderPass):
    when ownSizeof(GPURenderPass) != ownSizeof(GPURenderPass_520094800):
      static :
        warning("Declaration of " & "GPURenderPass" &
            " exists but with different size")
    GPURenderPass
   else:
    GPURenderPass_520094800)
  struct_DialogFileFilter_520094473 = (when declared(struct_DialogFileFilter):
    when ownSizeof(struct_DialogFileFilter) !=
        ownSizeof(struct_DialogFileFilter_520094472):
      static :
        warning("Declaration of " & "struct_DialogFileFilter" &
            " exists but with different size")
    struct_DialogFileFilter
   else:
    struct_DialogFileFilter_520094472)
  IOWhence_520094263 = (when declared(IOWhence):
    when ownSizeof(IOWhence) != ownSizeof(IOWhence_520094262):
      static :
        warning("Declaration of " & "IOWhence" &
            " exists but with different size")
    IOWhence
   else:
    IOWhence_520094262)
  enum_JoystickConnectionState_520094507 = (when declared(
      enum_JoystickConnectionState):
    when ownSizeof(enum_JoystickConnectionState) !=
        ownSizeof(enum_JoystickConnectionState_520094506):
      static :
        warning("Declaration of " & "enum_JoystickConnectionState" &
            " exists but with different size")
    enum_JoystickConnectionState
   else:
    enum_JoystickConnectionState_520094506)
  enum_BitmapOrder_520094301 = (when declared(enum_BitmapOrder):
    when ownSizeof(enum_BitmapOrder) != ownSizeof(enum_BitmapOrder_520094300):
      static :
        warning("Declaration of " & "enum_BitmapOrder" &
            " exists but with different size")
    enum_BitmapOrder
   else:
    enum_BitmapOrder_520094300)
  TextInputType_520094561 = (when declared(TextInputType):
    when ownSizeof(TextInputType) != ownSizeof(TextInputType_520094560):
      static :
        warning("Declaration of " & "TextInputType" &
            " exists but with different size")
    TextInputType
   else:
    TextInputType_520094560)
  struct_WindowEvent_520094613 = (when declared(struct_WindowEvent):
    when ownSizeof(struct_WindowEvent) != ownSizeof(struct_WindowEvent_520094612):
      static :
        warning("Declaration of " & "struct_WindowEvent" &
            " exists but with different size")
    struct_WindowEvent
   else:
    struct_WindowEvent_520094612)
  struct_GPUStorageTextureReadWriteBinding_520095049 = (when declared(
      struct_GPUStorageTextureReadWriteBinding):
    when ownSizeof(struct_GPUStorageTextureReadWriteBinding) !=
        ownSizeof(struct_GPUStorageTextureReadWriteBinding_520095048):
      static :
        warning("Declaration of " & "struct_GPUStorageTextureReadWriteBinding" &
            " exists but with different size")
    struct_GPUStorageTextureReadWriteBinding
   else:
    struct_GPUStorageTextureReadWriteBinding_520095048)
  Finger_520094599 = (when declared(Finger):
    when ownSizeof(Finger) != ownSizeof(Finger_520094598):
      static :
        warning("Declaration of " & "Finger" & " exists but with different size")
    Finger
   else:
    Finger_520094598)
  enum_TouchDeviceType_520094593 = (when declared(enum_TouchDeviceType):
    when ownSizeof(enum_TouchDeviceType) != ownSizeof(enum_TouchDeviceType_520094592):
      static :
        warning("Declaration of " & "enum_TouchDeviceType" &
            " exists but with different size")
    enum_TouchDeviceType
   else:
    enum_TouchDeviceType_520094592)
  ChromaLocation_520094343 = (when declared(ChromaLocation):
    when ownSizeof(ChromaLocation) != ownSizeof(ChromaLocation_520094342):
      static :
        warning("Declaration of " & "ChromaLocation" &
            " exists but with different size")
    ChromaLocation
   else:
    ChromaLocation_520094342)
  GamepadAxisEvent_520094679 = (when declared(GamepadAxisEvent):
    when ownSizeof(GamepadAxisEvent) != ownSizeof(GamepadAxisEvent_520094678):
      static :
        warning("Declaration of " & "GamepadAxisEvent" &
            " exists but with different size")
    GamepadAxisEvent
   else:
    GamepadAxisEvent_520094678)
  GPUIndexedIndirectDrawCommand_520094951 = (when declared(
      GPUIndexedIndirectDrawCommand):
    when ownSizeof(GPUIndexedIndirectDrawCommand) !=
        ownSizeof(GPUIndexedIndirectDrawCommand_520094950):
      static :
        warning("Declaration of " & "GPUIndexedIndirectDrawCommand" &
            " exists but with different size")
    GPUIndexedIndirectDrawCommand
   else:
    GPUIndexedIndirectDrawCommand_520094950)
  HapticID_520095087 = (when declared(HapticID):
    when ownSizeof(HapticID) != ownSizeof(HapticID_520095086):
      static :
        warning("Declaration of " & "HapticID" &
            " exists but with different size")
    HapticID
   else:
    HapticID_520095086)
  hid_bus_type_520095093 = (when declared(hid_bus_type):
    when ownSizeof(hid_bus_type) != ownSizeof(hid_bus_type_520095092):
      static :
        warning("Declaration of " & "hid_bus_type" &
            " exists but with different size")
    hid_bus_type
   else:
    hid_bus_type_520095092)
  IOStream_520094269 = (when declared(IOStream):
    when ownSizeof(IOStream) != ownSizeof(IOStream_520094268):
      static :
        warning("Declaration of " & "IOStream" &
            " exists but with different size")
    IOStream
   else:
    IOStream_520094268)
  struct_FPoint_520094369 = (when declared(struct_FPoint):
    when ownSizeof(struct_FPoint) != ownSizeof(struct_FPoint_520094368):
      static :
        warning("Declaration of " & "struct_FPoint" &
            " exists but with different size")
    struct_FPoint
   else:
    struct_FPoint_520094368)
  PixelType_520094299 = (when declared(PixelType):
    when ownSizeof(PixelType) != ownSizeof(PixelType_520094298):
      static :
        warning("Declaration of " & "PixelType" &
            " exists but with different size")
    PixelType
   else:
    PixelType_520094298)
  AppQuit_func_520095117 = (when declared(AppQuit_func):
    when ownSizeof(AppQuit_func) != ownSizeof(AppQuit_func_520095116):
      static :
        warning("Declaration of " & "AppQuit_func" &
            " exists but with different size")
    AppQuit_func
   else:
    AppQuit_func_520095116)
  GPUCommandBuffer_520094799 = (when declared(GPUCommandBuffer):
    when ownSizeof(GPUCommandBuffer) != ownSizeof(GPUCommandBuffer_520094798):
      static :
        warning("Declaration of " & "GPUCommandBuffer" &
            " exists but with different size")
    GPUCommandBuffer
   else:
    GPUCommandBuffer_520094798)
  struct_JoyBallEvent_520094657 = (when declared(struct_JoyBallEvent):
    when ownSizeof(struct_JoyBallEvent) != ownSizeof(struct_JoyBallEvent_520094656):
      static :
        warning("Declaration of " & "struct_JoyBallEvent" &
            " exists but with different size")
    struct_JoyBallEvent
   else:
    struct_JoyBallEvent_520094656)
  EnumeratePropertiesCallback_520094225 = (when declared(
      EnumeratePropertiesCallback):
    when ownSizeof(EnumeratePropertiesCallback) !=
        ownSizeof(EnumeratePropertiesCallback_520094224):
      static :
        warning("Declaration of " & "EnumeratePropertiesCallback" &
            " exists but with different size")
    EnumeratePropertiesCallback
   else:
    EnumeratePropertiesCallback_520094224)
  struct_GPUBufferRegion_520094941 = (when declared(struct_GPUBufferRegion):
    when ownSizeof(struct_GPUBufferRegion) != ownSizeof(struct_GPUBufferRegion_520094940):
      static :
        warning("Declaration of " & "struct_GPUBufferRegion" &
            " exists but with different size")
    struct_GPUBufferRegion
   else:
    struct_GPUBufferRegion_520094940)
  struct_TouchFingerEvent_520094709 = (when declared(struct_TouchFingerEvent):
    when ownSizeof(struct_TouchFingerEvent) !=
        ownSizeof(struct_TouchFingerEvent_520094708):
      static :
        warning("Declaration of " & "struct_TouchFingerEvent" &
            " exists but with different size")
    struct_TouchFingerEvent
   else:
    struct_TouchFingerEvent_520094708)
  GPUSamplerAddressMode_520094903 = (when declared(GPUSamplerAddressMode):
    when ownSizeof(GPUSamplerAddressMode) != ownSizeof(GPUSamplerAddressMode_520094902):
      static :
        warning("Declaration of " & "GPUSamplerAddressMode" &
            " exists but with different size")
    GPUSamplerAddressMode
   else:
    GPUSamplerAddressMode_520094902)
  enum_Colorspace_520094345 = (when declared(enum_Colorspace):
    when ownSizeof(enum_Colorspace) != ownSizeof(enum_Colorspace_520094344):
      static :
        warning("Declaration of " & "enum_Colorspace" &
            " exists but with different size")
    enum_Colorspace
   else:
    enum_Colorspace_520094344)
  PenProximityEvent_520094715 = (when declared(PenProximityEvent):
    when ownSizeof(PenProximityEvent) != ownSizeof(PenProximityEvent_520094714):
      static :
        warning("Declaration of " & "PenProximityEvent" &
            " exists but with different size")
    PenProximityEvent
   else:
    PenProximityEvent_520094714)
  GPUBufferBinding_520095039 = (when declared(GPUBufferBinding):
    when ownSizeof(GPUBufferBinding) != ownSizeof(GPUBufferBinding_520095038):
      static :
        warning("Declaration of " & "GPUBufferBinding" &
            " exists but with different size")
    GPUBufferBinding
   else:
    GPUBufferBinding_520095038)
  StorageInterface_520095189 = (when declared(StorageInterface):
    when ownSizeof(StorageInterface) != ownSizeof(StorageInterface_520095188):
      static :
        warning("Declaration of " & "StorageInterface" &
            " exists but with different size")
    StorageInterface
   else:
    StorageInterface_520095188)
  struct_StorageInterface_520095187 = (when declared(struct_StorageInterface):
    when ownSizeof(struct_StorageInterface) !=
        ownSizeof(struct_StorageInterface_520095186):
      static :
        warning("Declaration of " & "struct_StorageInterface" &
            " exists but with different size")
    struct_StorageInterface
   else:
    struct_StorageInterface_520095186)
  EGLConfig_520094441 = (when declared(EGLConfig):
    when ownSizeof(EGLConfig) != ownSizeof(EGLConfig_520094440):
      static :
        warning("Declaration of " & "EGLConfig" &
            " exists but with different size")
    EGLConfig
   else:
    EGLConfig_520094440)
  struct_IOStreamInterface_520094265 = (when declared(struct_IOStreamInterface):
    when ownSizeof(struct_IOStreamInterface) !=
        ownSizeof(struct_IOStreamInterface_520094264):
      static :
        warning("Declaration of " & "struct_IOStreamInterface" &
            " exists but with different size")
    struct_IOStreamInterface
   else:
    struct_IOStreamInterface_520094264)
  struct_JoyHatEvent_520094661 = (when declared(struct_JoyHatEvent):
    when ownSizeof(struct_JoyHatEvent) != ownSizeof(struct_JoyHatEvent_520094660):
      static :
        warning("Declaration of " & "struct_JoyHatEvent" &
            " exists but with different size")
    struct_JoyHatEvent
   else:
    struct_JoyHatEvent_520094660)
  GamepadSensorEvent_520094695 = (when declared(GamepadSensorEvent):
    when ownSizeof(GamepadSensorEvent) != ownSizeof(GamepadSensorEvent_520094694):
      static :
        warning("Declaration of " & "GamepadSensorEvent" &
            " exists but with different size")
    GamepadSensorEvent
   else:
    GamepadSensorEvent_520094694)
  MetalView_520095161 = (when declared(MetalView):
    when ownSizeof(MetalView) != ownSizeof(MetalView_520095160):
      static :
        warning("Declaration of " & "MetalView" &
            " exists but with different size")
    MetalView
   else:
    MetalView_520095160)
  CameraDeviceEvent_520094703 = (when declared(CameraDeviceEvent):
    when ownSizeof(CameraDeviceEvent) != ownSizeof(CameraDeviceEvent_520094702):
      static :
        warning("Declaration of " & "CameraDeviceEvent" &
            " exists but with different size")
    CameraDeviceEvent
   else:
    CameraDeviceEvent_520094702)
  enum_GPUCubeMapFace_520094839 = (when declared(enum_GPUCubeMapFace):
    when ownSizeof(enum_GPUCubeMapFace) != ownSizeof(enum_GPUCubeMapFace_520094838):
      static :
        warning("Declaration of " & "enum_GPUCubeMapFace" &
            " exists but with different size")
    enum_GPUCubeMapFace
   else:
    enum_GPUCubeMapFace_520094838)
  CommonEvent_520094607 = (when declared(CommonEvent):
    when ownSizeof(CommonEvent) != ownSizeof(CommonEvent_520094606):
      static :
        warning("Declaration of " & "CommonEvent" &
            " exists but with different size")
    CommonEvent
   else:
    CommonEvent_520094606)
  Vertex_520095171 = (when declared(Vertex):
    when ownSizeof(Vertex) != ownSizeof(Vertex_520095170):
      static :
        warning("Declaration of " & "Vertex" & " exists but with different size")
    Vertex
   else:
    Vertex_520095170)
  AsyncIO_520094191 = (when declared(AsyncIO):
    when ownSizeof(AsyncIO) != ownSizeof(AsyncIO_520094190):
      static :
        warning("Declaration of " & "AsyncIO" &
            " exists but with different size")
    AsyncIO
   else:
    AsyncIO_520094190)
  Sensor_520094491 = (when declared(Sensor):
    when ownSizeof(Sensor) != ownSizeof(Sensor_520094490):
      static :
        warning("Declaration of " & "Sensor" & " exists but with different size")
    Sensor
   else:
    Sensor_520094490)
  GPUShader_520094793 = (when declared(GPUShader):
    when ownSizeof(GPUShader) != ownSizeof(GPUShader_520094792):
      static :
        warning("Declaration of " & "GPUShader" &
            " exists but with different size")
    GPUShader
   else:
    GPUShader_520094792)
  KeyboardDeviceEvent_520094619 = (when declared(KeyboardDeviceEvent):
    when ownSizeof(KeyboardDeviceEvent) != ownSizeof(KeyboardDeviceEvent_520094618):
      static :
        warning("Declaration of " & "KeyboardDeviceEvent" &
            " exists but with different size")
    KeyboardDeviceEvent
   else:
    KeyboardDeviceEvent_520094618)
  Window_520094429 = (when declared(Window):
    when ownSizeof(Window) != ownSizeof(Window_520094428):
      static :
        warning("Declaration of " & "Window" & " exists but with different size")
    Window
   else:
    Window_520094428)
  CompareCallback_r_520094173 = (when declared(CompareCallback_r):
    when ownSizeof(CompareCallback_r) != ownSizeof(CompareCallback_r_520094172):
      static :
        warning("Declaration of " & "CompareCallback_r" &
            " exists but with different size")
    CompareCallback_r
   else:
    CompareCallback_r_520094172)
  MessageBoxColorScheme_520095155 = (when declared(MessageBoxColorScheme):
    when ownSizeof(MessageBoxColorScheme) != ownSizeof(MessageBoxColorScheme_520095154):
      static :
        warning("Declaration of " & "MessageBoxColorScheme" &
            " exists but with different size")
    MessageBoxColorScheme
   else:
    MessageBoxColorScheme_520095154)
  union_HapticEffect_520095083 = (when declared(union_HapticEffect):
    when ownSizeof(union_HapticEffect) != ownSizeof(union_HapticEffect_520095082):
      static :
        warning("Declaration of " & "union_HapticEffect" &
            " exists but with different size")
    union_HapticEffect
   else:
    union_HapticEffect_520095082)
  BitmapOrder_520094303 = (when declared(BitmapOrder):
    when ownSizeof(BitmapOrder) != ownSizeof(BitmapOrder_520094302):
      static :
        warning("Declaration of " & "BitmapOrder" &
            " exists but with different size")
    BitmapOrder
   else:
    BitmapOrder_520094302)
  Uint32_520094145 = (when declared(Uint32):
    when ownSizeof(Uint32) != ownSizeof(Uint32_520094144):
      static :
        warning("Declaration of " & "Uint32" & " exists but with different size")
    Uint32
   else:
    Uint32_520094144)
  GPUShaderCreateInfo_520094983 = (when declared(GPUShaderCreateInfo):
    when ownSizeof(GPUShaderCreateInfo) != ownSizeof(GPUShaderCreateInfo_520094982):
      static :
        warning("Declaration of " & "GPUShaderCreateInfo" &
            " exists but with different size")
    GPUShaderCreateInfo
   else:
    GPUShaderCreateInfo_520094982)
  Haptic_520095053 = (when declared(Haptic):
    when ownSizeof(Haptic) != ownSizeof(Haptic_520095052):
      static :
        warning("Declaration of " & "Haptic" & " exists but with different size")
    Haptic
   else:
    Haptic_520095052)
  struct_HapticRamp_520095071 = (when declared(struct_HapticRamp):
    when ownSizeof(struct_HapticRamp) != ownSizeof(struct_HapticRamp_520095070):
      static :
        warning("Declaration of " & "struct_HapticRamp" &
            " exists but with different size")
    struct_HapticRamp
   else:
    struct_HapticRamp_520095070)
  enum_GPUCullMode_520094867 = (when declared(enum_GPUCullMode):
    when ownSizeof(enum_GPUCullMode) != ownSizeof(enum_GPUCullMode_520094866):
      static :
        warning("Declaration of " & "enum_GPUCullMode" &
            " exists but with different size")
    enum_GPUCullMode
   else:
    enum_GPUCullMode_520094866)
  enum_MessageBoxColorType_520095149 = (when declared(enum_MessageBoxColorType):
    when ownSizeof(enum_MessageBoxColorType) !=
        ownSizeof(enum_MessageBoxColorType_520095148):
      static :
        warning("Declaration of " & "enum_MessageBoxColorType" &
            " exists but with different size")
    enum_MessageBoxColorType
   else:
    enum_MessageBoxColorType_520095148)
  TimerID_520095217 = (when declared(TimerID):
    when ownSizeof(TimerID) != ownSizeof(TimerID_520095216):
      static :
        warning("Declaration of " & "TimerID" &
            " exists but with different size")
    TimerID
   else:
    TimerID_520095216)
  Scancode_520094551 = (when declared(Scancode):
    when ownSizeof(Scancode) != ownSizeof(Scancode_520094550):
      static :
        warning("Declaration of " & "Scancode" &
            " exists but with different size")
    Scancode
   else:
    Scancode_520094550)
  enum_ColorRange_520094325 = (when declared(enum_ColorRange):
    when ownSizeof(enum_ColorRange) != ownSizeof(enum_ColorRange_520094324):
      static :
        warning("Declaration of " & "enum_ColorRange" &
            " exists but with different size")
    enum_ColorRange
   else:
    enum_ColorRange_520094324)
  SharedObject_520095121 = (when declared(SharedObject):
    when ownSizeof(SharedObject) != ownSizeof(SharedObject_520095120):
      static :
        warning("Declaration of " & "SharedObject" &
            " exists but with different size")
    SharedObject
   else:
    SharedObject_520095120)
  XEvent_520095197 = (when declared(XEvent):
    when ownSizeof(XEvent) != ownSizeof(XEvent_520095196):
      static :
        warning("Declaration of " & "XEvent" & " exists but with different size")
    XEvent
   else:
    XEvent_520095196)
  enum_HitTestResult_520094467 = (when declared(enum_HitTestResult):
    when ownSizeof(enum_HitTestResult) != ownSizeof(enum_HitTestResult_520094466):
      static :
        warning("Declaration of " & "enum_HitTestResult" &
            " exists but with different size")
    enum_HitTestResult
   else:
    enum_HitTestResult_520094466)
  struct_AtomicInt_520094209 = (when declared(struct_AtomicInt):
    when ownSizeof(struct_AtomicInt) != ownSizeof(struct_AtomicInt_520094208):
      static :
        warning("Declaration of " & "struct_AtomicInt" &
            " exists but with different size")
    struct_AtomicInt
   else:
    struct_AtomicInt_520094208)
  malloc_func_520094161 = (when declared(malloc_func):
    when ownSizeof(malloc_func) != ownSizeof(malloc_func_520094160):
      static :
        warning("Declaration of " & "malloc_func" &
            " exists but with different size")
    malloc_func
   else:
    malloc_func_520094160)
  GamepadBinding_520094547 = (when declared(GamepadBinding):
    when ownSizeof(GamepadBinding) != ownSizeof(GamepadBinding_520094546):
      static :
        warning("Declaration of " & "GamepadBinding" &
            " exists but with different size")
    GamepadBinding
   else:
    GamepadBinding_520094546)
  GPUVertexAttribute_520094967 = (when declared(GPUVertexAttribute):
    when ownSizeof(GPUVertexAttribute) != ownSizeof(GPUVertexAttribute_520094966):
      static :
        warning("Declaration of " & "GPUVertexAttribute" &
            " exists but with different size")
    GPUVertexAttribute
   else:
    GPUVertexAttribute_520094966)
  struct_FRect_520094377 = (when declared(struct_FRect):
    when ownSizeof(struct_FRect) != ownSizeof(struct_FRect_520094376):
      static :
        warning("Declaration of " & "struct_FRect" &
            " exists but with different size")
    struct_FRect
   else:
    struct_FRect_520094376)
  Locale_520095125 = (when declared(Locale):
    when ownSizeof(Locale) != ownSizeof(Locale_520095124):
      static :
        warning("Declaration of " & "Locale" & " exists but with different size")
    Locale
   else:
    Locale_520095124)
  FunctionPointer_520094179 = (when declared(FunctionPointer):
    when ownSizeof(FunctionPointer) != ownSizeof(FunctionPointer_520094178):
      static :
        warning("Declaration of " & "FunctionPointer" &
            " exists but with different size")
    FunctionPointer
   else:
    FunctionPointer_520094178)
  HitTestResult_520094469 = (when declared(HitTestResult):
    when ownSizeof(HitTestResult) != ownSizeof(HitTestResult_520094468):
      static :
        warning("Declaration of " & "HitTestResult" &
            " exists but with different size")
    HitTestResult
   else:
    HitTestResult_520094468)
  struct_PenTouchEvent_520094721 = (when declared(struct_PenTouchEvent):
    when ownSizeof(struct_PenTouchEvent) != ownSizeof(struct_PenTouchEvent_520094720):
      static :
        warning("Declaration of " & "struct_PenTouchEvent" &
            " exists but with different size")
    struct_PenTouchEvent
   else:
    struct_PenTouchEvent_520094720)
  enum_GamepadAxis_520094537 = (when declared(enum_GamepadAxis):
    when ownSizeof(enum_GamepadAxis) != ownSizeof(enum_GamepadAxis_520094536):
      static :
        warning("Declaration of " & "enum_GamepadAxis" &
            " exists but with different size")
    enum_GamepadAxis
   else:
    enum_GamepadAxis_520094536)
  MouseWheelDirection_520094577 = (when declared(MouseWheelDirection):
    when ownSizeof(MouseWheelDirection) != ownSizeof(MouseWheelDirection_520094576):
      static :
        warning("Declaration of " & "MouseWheelDirection" &
            " exists but with different size")
    MouseWheelDirection
   else:
    MouseWheelDirection_520094576)
  TransferCharacteristics_520094335 = (when declared(TransferCharacteristics):
    when ownSizeof(TransferCharacteristics) !=
        ownSizeof(TransferCharacteristics_520094334):
      static :
        warning("Declaration of " & "TransferCharacteristics" &
            " exists but with different size")
    TransferCharacteristics
   else:
    TransferCharacteristics_520094334)
  GPUTextureType_520094833 = (when declared(GPUTextureType):
    when ownSizeof(GPUTextureType) != ownSizeof(GPUTextureType_520094832):
      static :
        warning("Declaration of " & "GPUTextureType" &
            " exists but with different size")
    GPUTextureType
   else:
    GPUTextureType_520094832)
  AppIterate_func_520095113 = (when declared(AppIterate_func):
    when ownSizeof(AppIterate_func) != ownSizeof(AppIterate_func_520095112):
      static :
        warning("Declaration of " & "AppIterate_func" &
            " exists but with different size")
    AppIterate_func
   else:
    AppIterate_func_520095112)
  GPUVertexElementFormat_520094857 = (when declared(GPUVertexElementFormat):
    when ownSizeof(GPUVertexElementFormat) != ownSizeof(GPUVertexElementFormat_520094856):
      static :
        warning("Declaration of " & "GPUVertexElementFormat" &
            " exists but with different size")
    GPUVertexElementFormat
   else:
    GPUVertexElementFormat_520094856)
  MouseDeviceEvent_520094639 = (when declared(MouseDeviceEvent):
    when ownSizeof(MouseDeviceEvent) != ownSizeof(MouseDeviceEvent_520094638):
      static :
        warning("Declaration of " & "MouseDeviceEvent" &
            " exists but with different size")
    MouseDeviceEvent
   else:
    MouseDeviceEvent_520094638)
  InitStatus_520094251 = (when declared(InitStatus):
    when ownSizeof(InitStatus) != ownSizeof(InitStatus_520094250):
      static :
        warning("Declaration of " & "InitStatus" &
            " exists but with different size")
    InitStatus
   else:
    InitStatus_520094250)
  enum_ArrayOrder_520094309 = (when declared(enum_ArrayOrder):
    when ownSizeof(enum_ArrayOrder) != ownSizeof(enum_ArrayOrder_520094308):
      static :
        warning("Declaration of " & "enum_ArrayOrder" &
            " exists but with different size")
    enum_ArrayOrder
   else:
    enum_ArrayOrder_520094308)
  EnumerationResult_520094779 = (when declared(EnumerationResult):
    when ownSizeof(EnumerationResult) != ownSizeof(EnumerationResult_520094778):
      static :
        warning("Declaration of " & "EnumerationResult" &
            " exists but with different size")
    EnumerationResult
   else:
    EnumerationResult_520094778)
  struct_AudioDeviceEvent_520094697 = (when declared(struct_AudioDeviceEvent):
    when ownSizeof(struct_AudioDeviceEvent) !=
        ownSizeof(struct_AudioDeviceEvent_520094696):
      static :
        warning("Declaration of " & "struct_AudioDeviceEvent" &
            " exists but with different size")
    struct_AudioDeviceEvent
   else:
    struct_AudioDeviceEvent_520094696)
  enum_GPUTextureFormat_520094825 = (when declared(enum_GPUTextureFormat):
    when ownSizeof(enum_GPUTextureFormat) != ownSizeof(enum_GPUTextureFormat_520094824):
      static :
        warning("Declaration of " & "enum_GPUTextureFormat" &
            " exists but with different size")
    enum_GPUTextureFormat
   else:
    enum_GPUTextureFormat_520094824)
  enum_MatrixCoefficients_520094337 = (when declared(enum_MatrixCoefficients):
    when ownSizeof(enum_MatrixCoefficients) !=
        ownSizeof(enum_MatrixCoefficients_520094336):
      static :
        warning("Declaration of " & "enum_MatrixCoefficients" &
            " exists but with different size")
    enum_MatrixCoefficients
   else:
    enum_MatrixCoefficients_520094336)
  enum_GPUPrimitiveType_520094809 = (when declared(enum_GPUPrimitiveType):
    when ownSizeof(enum_GPUPrimitiveType) != ownSizeof(enum_GPUPrimitiveType_520094808):
      static :
        warning("Declaration of " & "enum_GPUPrimitiveType" &
            " exists but with different size")
    enum_GPUPrimitiveType
   else:
    enum_GPUPrimitiveType_520094808)
  AppEvent_func_520095115 = (when declared(AppEvent_func):
    when ownSizeof(AppEvent_func) != ownSizeof(AppEvent_func_520095114):
      static :
        warning("Declaration of " & "AppEvent_func" &
            " exists but with different size")
    AppEvent_func
   else:
    AppEvent_func_520095114)
  GPUSamplerCreateInfo_520094959 = (when declared(GPUSamplerCreateInfo):
    when ownSizeof(GPUSamplerCreateInfo) != ownSizeof(GPUSamplerCreateInfo_520094958):
      static :
        warning("Declaration of " & "GPUSamplerCreateInfo" &
            " exists but with different size")
    GPUSamplerCreateInfo
   else:
    GPUSamplerCreateInfo_520094958)
  HapticLeftRight_520095077 = (when declared(HapticLeftRight):
    when ownSizeof(HapticLeftRight) != ownSizeof(HapticLeftRight_520095076):
      static :
        warning("Declaration of " & "HapticLeftRight" &
            " exists but with different size")
    HapticLeftRight
   else:
    HapticLeftRight_520095076)
  EGLIntArrayCallback_520094453 = (when declared(EGLIntArrayCallback):
    when ownSizeof(EGLIntArrayCallback) != ownSizeof(EGLIntArrayCallback_520094452):
      static :
        warning("Declaration of " & "EGLIntArrayCallback" &
            " exists but with different size")
    EGLIntArrayCallback
   else:
    EGLIntArrayCallback_520094452)
  uintptr_t_520095223 = (when declared(uintptr_t):
    when ownSizeof(uintptr_t) != ownSizeof(uintptr_t_520095222):
      static :
        warning("Declaration of " & "uintptr_t" &
            " exists but with different size")
    uintptr_t
   else:
    uintptr_t_520095222)
  struct_GPUTextureLocation_520094925 = (when declared(struct_GPUTextureLocation):
    when ownSizeof(struct_GPUTextureLocation) !=
        ownSizeof(struct_GPUTextureLocation_520094924):
      static :
        warning("Declaration of " & "struct_GPUTextureLocation" &
            " exists but with different size")
    struct_GPUTextureLocation
   else:
    struct_GPUTextureLocation_520094924)
  struct_GPUIndexedIndirectDrawCommand_520094949 = (when declared(
      struct_GPUIndexedIndirectDrawCommand):
    when ownSizeof(struct_GPUIndexedIndirectDrawCommand) !=
        ownSizeof(struct_GPUIndexedIndirectDrawCommand_520094948):
      static :
        warning("Declaration of " & "struct_GPUIndexedIndirectDrawCommand" &
            " exists but with different size")
    struct_GPUIndexedIndirectDrawCommand
   else:
    struct_GPUIndexedIndirectDrawCommand_520094948)
  GPUColorTargetDescription_520095011 = (when declared(GPUColorTargetDescription):
    when ownSizeof(GPUColorTargetDescription) !=
        ownSizeof(GPUColorTargetDescription_520095010):
      static :
        warning("Declaration of " & "GPUColorTargetDescription" &
            " exists but with different size")
    GPUColorTargetDescription
   else:
    GPUColorTargetDescription_520095010)
  DUMMY_ENUM_520094159 = (when declared(DUMMY_ENUM):
    when ownSizeof(DUMMY_ENUM) != ownSizeof(DUMMY_ENUM_520094158):
      static :
        warning("Declaration of " & "DUMMY_ENUM" &
            " exists but with different size")
    DUMMY_ENUM
   else:
    DUMMY_ENUM_520094158)
  struct_MessageBoxData_520095157 = (when declared(struct_MessageBoxData):
    when ownSizeof(struct_MessageBoxData) != ownSizeof(struct_MessageBoxData_520095156):
      static :
        warning("Declaration of " & "struct_MessageBoxData" &
            " exists but with different size")
    struct_MessageBoxData
   else:
    struct_MessageBoxData_520095156)
  enum_ColorType_520094321 = (when declared(enum_ColorType):
    when ownSizeof(enum_ColorType) != ownSizeof(enum_ColorType_520094320):
      static :
        warning("Declaration of " & "enum_ColorType" &
            " exists but with different size")
    enum_ColorType
   else:
    enum_ColorType_520094320)
  VirtualJoystickSensorDesc_520094517 = (when declared(VirtualJoystickSensorDesc):
    when ownSizeof(VirtualJoystickSensorDesc) !=
        ownSizeof(VirtualJoystickSensorDesc_520094516):
      static :
        warning("Declaration of " & "VirtualJoystickSensorDesc" &
            " exists but with different size")
    VirtualJoystickSensorDesc
   else:
    VirtualJoystickSensorDesc_520094516)
  MatrixCoefficients_520094339 = (when declared(MatrixCoefficients):
    when ownSizeof(MatrixCoefficients) != ownSizeof(MatrixCoefficients_520094338):
      static :
        warning("Declaration of " & "MatrixCoefficients" &
            " exists but with different size")
    MatrixCoefficients
   else:
    MatrixCoefficients_520094338)
  enum_Scancode_520094549 = (when declared(enum_Scancode):
    when ownSizeof(enum_Scancode) != ownSizeof(enum_Scancode_520094548):
      static :
        warning("Declaration of " & "enum_Scancode" &
            " exists but with different size")
    enum_Scancode
   else:
    enum_Scancode_520094548)
  GamepadTouchpadEvent_520094691 = (when declared(GamepadTouchpadEvent):
    when ownSizeof(GamepadTouchpadEvent) != ownSizeof(GamepadTouchpadEvent_520094690):
      static :
        warning("Declaration of " & "GamepadTouchpadEvent" &
            " exists but with different size")
    GamepadTouchpadEvent
   else:
    GamepadTouchpadEvent_520094690)
  GPUCopyPass_520094805 = (when declared(GPUCopyPass):
    when ownSizeof(GPUCopyPass) != ownSizeof(GPUCopyPass_520094804):
      static :
        warning("Declaration of " & "GPUCopyPass" &
            " exists but with different size")
    GPUCopyPass
   else:
    GPUCopyPass_520094804)
  GPUStorageTextureReadWriteBinding_520095051 = (when declared(
      GPUStorageTextureReadWriteBinding):
    when ownSizeof(GPUStorageTextureReadWriteBinding) !=
        ownSizeof(GPUStorageTextureReadWriteBinding_520095050):
      static :
        warning("Declaration of " & "GPUStorageTextureReadWriteBinding" &
            " exists but with different size")
    GPUStorageTextureReadWriteBinding
   else:
    GPUStorageTextureReadWriteBinding_520095050)
  HapticRamp_520095073 = (when declared(HapticRamp):
    when ownSizeof(HapticRamp) != ownSizeof(HapticRamp_520095072):
      static :
        warning("Declaration of " & "HapticRamp" &
            " exists but with different size")
    HapticRamp
   else:
    HapticRamp_520095072)
  JoyHatEvent_520094663 = (when declared(JoyHatEvent):
    when ownSizeof(JoyHatEvent) != ownSizeof(JoyHatEvent_520094662):
      static :
        warning("Declaration of " & "JoyHatEvent" &
            " exists but with different size")
    JoyHatEvent
   else:
    JoyHatEvent_520094662)
  GPUGraphicsPipeline_520094797 = (when declared(GPUGraphicsPipeline):
    when ownSizeof(GPUGraphicsPipeline) != ownSizeof(GPUGraphicsPipeline_520094796):
      static :
        warning("Declaration of " & "GPUGraphicsPipeline" &
            " exists but with different size")
    GPUGraphicsPipeline
   else:
    GPUGraphicsPipeline_520094796)
  struct_HapticDirection_520095055 = (when declared(struct_HapticDirection):
    when ownSizeof(struct_HapticDirection) != ownSizeof(struct_HapticDirection_520095054):
      static :
        warning("Declaration of " & "struct_HapticDirection" &
            " exists but with different size")
    struct_HapticDirection
   else:
    struct_HapticDirection_520095054)
  JoyBatteryEvent_520094675 = (when declared(JoyBatteryEvent):
    when ownSizeof(JoyBatteryEvent) != ownSizeof(JoyBatteryEvent_520094674):
      static :
        warning("Declaration of " & "JoyBatteryEvent" &
            " exists but with different size")
    JoyBatteryEvent
   else:
    JoyBatteryEvent_520094674)
  PowerState_520094489 = (when declared(PowerState):
    when ownSizeof(PowerState) != ownSizeof(PowerState_520094488):
      static :
        warning("Declaration of " & "PowerState" &
            " exists but with different size")
    PowerState
   else:
    PowerState_520094488)
  MainThreadCallback_520095119 = (when declared(MainThreadCallback):
    when ownSizeof(MainThreadCallback) != ownSizeof(MainThreadCallback_520095118):
      static :
        warning("Declaration of " & "MainThreadCallback" &
            " exists but with different size")
    MainThreadCallback
   else:
    MainThreadCallback_520095118)
  MouseButtonFlags_520094579 = (when declared(MouseButtonFlags):
    when ownSizeof(MouseButtonFlags) != ownSizeof(MouseButtonFlags_520094578):
      static :
        warning("Declaration of " & "MouseButtonFlags" &
            " exists but with different size")
    MouseButtonFlags
   else:
    MouseButtonFlags_520094578)
  struct_GamepadAxisEvent_520094677 = (when declared(struct_GamepadAxisEvent):
    when ownSizeof(struct_GamepadAxisEvent) !=
        ownSizeof(struct_GamepadAxisEvent_520094676):
      static :
        warning("Declaration of " & "struct_GamepadAxisEvent" &
            " exists but with different size")
    struct_GamepadAxisEvent
   else:
    struct_GamepadAxisEvent_520094676)
  struct_MessageBoxButtonData_520095141 = (when declared(
      struct_MessageBoxButtonData):
    when ownSizeof(struct_MessageBoxButtonData) !=
        ownSizeof(struct_MessageBoxButtonData_520095140):
      static :
        warning("Declaration of " & "struct_MessageBoxButtonData" &
            " exists but with different size")
    struct_MessageBoxButtonData
   else:
    struct_MessageBoxButtonData_520095140)
  enum_PixelType_520094297 = (when declared(enum_PixelType):
    when ownSizeof(enum_PixelType) != ownSizeof(enum_PixelType_520094296):
      static :
        warning("Declaration of " & "enum_PixelType" &
            " exists but with different size")
    enum_PixelType
   else:
    enum_PixelType_520094296)
  struct_Locale_520095123 = (when declared(struct_Locale):
    when ownSizeof(struct_Locale) != ownSizeof(struct_Locale_520095122):
      static :
        warning("Declaration of " & "struct_Locale" &
            " exists but with different size")
    struct_Locale
   else:
    struct_Locale_520095122)
  struct_HapticCondition_520095067 = (when declared(struct_HapticCondition):
    when ownSizeof(struct_HapticCondition) != ownSizeof(struct_HapticCondition_520095066):
      static :
        warning("Declaration of " & "struct_HapticCondition" &
            " exists but with different size")
    struct_HapticCondition
   else:
    struct_HapticCondition_520095066)
  struct_CameraSpec_520094399 = (when declared(struct_CameraSpec):
    when ownSizeof(struct_CameraSpec) != ownSizeof(struct_CameraSpec_520094398):
      static :
        warning("Declaration of " & "struct_CameraSpec" &
            " exists but with different size")
    struct_CameraSpec
   else:
    struct_CameraSpec_520094398)
  AudioSpec_520094279 = (when declared(AudioSpec):
    when ownSizeof(AudioSpec) != ownSizeof(AudioSpec_520094278):
      static :
        warning("Declaration of " & "AudioSpec" &
            " exists but with different size")
    AudioSpec
   else:
    AudioSpec_520094278)
  struct_PixelFormatDetails_520094361 = (when declared(struct_PixelFormatDetails):
    when ownSizeof(struct_PixelFormatDetails) !=
        ownSizeof(struct_PixelFormatDetails_520094360):
      static :
        warning("Declaration of " & "struct_PixelFormatDetails" &
            " exists but with different size")
    struct_PixelFormatDetails
   else:
    struct_PixelFormatDetails_520094360)
  GPUSampler_520094791 = (when declared(GPUSampler):
    when ownSizeof(GPUSampler) != ownSizeof(GPUSampler_520094790):
      static :
        warning("Declaration of " & "GPUSampler" &
            " exists but with different size")
    GPUSampler
   else:
    GPUSampler_520094790)
  GLContextFlag_typedef_520094461 = (when declared(GLContextFlag_typedef):
    when ownSizeof(GLContextFlag_typedef) != ownSizeof(GLContextFlag_typedef_520094460):
      static :
        warning("Declaration of " & "GLContextFlag_typedef" &
            " exists but with different size")
    GLContextFlag_typedef
   else:
    GLContextFlag_typedef_520094460)
  Color_520094351 = (when declared(Color):
    when ownSizeof(Color) != ownSizeof(Color_520094350):
      static :
        warning("Declaration of " & "Color" & " exists but with different size")
    Color
   else:
    Color_520094350)
  struct_GPUTextureCreateInfo_520094985 = (when declared(
      struct_GPUTextureCreateInfo):
    when ownSizeof(struct_GPUTextureCreateInfo) !=
        ownSizeof(struct_GPUTextureCreateInfo_520094984):
      static :
        warning("Declaration of " & "struct_GPUTextureCreateInfo" &
            " exists but with different size")
    struct_GPUTextureCreateInfo
   else:
    struct_GPUTextureCreateInfo_520094984)
  PathInfo_520094773 = (when declared(PathInfo):
    when ownSizeof(PathInfo) != ownSizeof(PathInfo_520094772):
      static :
        warning("Declaration of " & "PathInfo" &
            " exists but with different size")
    PathInfo
   else:
    PathInfo_520094772)
  GPUDevice_520094783 = (when declared(GPUDevice):
    when ownSizeof(GPUDevice) != ownSizeof(GPUDevice_520094782):
      static :
        warning("Declaration of " & "GPUDevice" &
            " exists but with different size")
    GPUDevice
   else:
    GPUDevice_520094782)
  GamepadButtonLabel_520094535 = (when declared(GamepadButtonLabel):
    when ownSizeof(GamepadButtonLabel) != ownSizeof(GamepadButtonLabel_520094534):
      static :
        warning("Declaration of " & "GamepadButtonLabel" &
            " exists but with different size")
    GamepadButtonLabel
   else:
    GamepadButtonLabel_520094534)
  GPUComputePipelineCreateInfo_520095023 = (when declared(
      GPUComputePipelineCreateInfo):
    when ownSizeof(GPUComputePipelineCreateInfo) !=
        ownSizeof(GPUComputePipelineCreateInfo_520095022):
      static :
        warning("Declaration of " & "GPUComputePipelineCreateInfo" &
            " exists but with different size")
    GPUComputePipelineCreateInfo
   else:
    GPUComputePipelineCreateInfo_520095022)
  GPUFrontFace_520094873 = (when declared(GPUFrontFace):
    when ownSizeof(GPUFrontFace) != ownSizeof(GPUFrontFace_520094872):
      static :
        warning("Declaration of " & "GPUFrontFace" &
            " exists but with different size")
    GPUFrontFace
   else:
    GPUFrontFace_520094872)
  GPUBufferUsageFlags_520094843 = (when declared(GPUBufferUsageFlags):
    when ownSizeof(GPUBufferUsageFlags) != ownSizeof(GPUBufferUsageFlags_520094842):
      static :
        warning("Declaration of " & "GPUBufferUsageFlags" &
            " exists but with different size")
    GPUBufferUsageFlags
   else:
    GPUBufferUsageFlags_520094842)
  GPUTextureLocation_520094927 = (when declared(GPUTextureLocation):
    when ownSizeof(GPUTextureLocation) != ownSizeof(GPUTextureLocation_520094926):
      static :
        warning("Declaration of " & "GPUTextureLocation" &
            " exists but with different size")
    GPUTextureLocation
   else:
    GPUTextureLocation_520094926)
  HapticEffect_520095085 = (when declared(HapticEffect):
    when ownSizeof(HapticEffect) != ownSizeof(HapticEffect_520095084):
      static :
        warning("Declaration of " & "HapticEffect" &
            " exists but with different size")
    HapticEffect
   else:
    HapticEffect_520095084)
  enum_LogPriority_520095131 = (when declared(enum_LogPriority):
    when ownSizeof(enum_LogPriority) != ownSizeof(enum_LogPriority_520095130):
      static :
        warning("Declaration of " & "enum_LogPriority" &
            " exists but with different size")
    enum_LogPriority
   else:
    enum_LogPriority_520095130)
  Sint64_520094147 = (when declared(Sint64):
    when ownSizeof(Sint64) != ownSizeof(Sint64_520094146):
      static :
        warning("Declaration of " & "Sint64" & " exists but with different size")
    Sint64
   else:
    Sint64_520094146)
  GPUGraphicsPipelineCreateInfo_520095019 = (when declared(
      GPUGraphicsPipelineCreateInfo):
    when ownSizeof(GPUGraphicsPipelineCreateInfo) !=
        ownSizeof(GPUGraphicsPipelineCreateInfo_520095018):
      static :
        warning("Declaration of " & "GPUGraphicsPipelineCreateInfo" &
            " exists but with different size")
    GPUGraphicsPipelineCreateInfo
   else:
    GPUGraphicsPipelineCreateInfo_520095018)
  WindowFlags_520094431 = (when declared(WindowFlags):
    when ownSizeof(WindowFlags) != ownSizeof(WindowFlags_520094430):
      static :
        warning("Declaration of " & "WindowFlags" &
            " exists but with different size")
    WindowFlags
   else:
    WindowFlags_520094430)
  PropertiesID_520094217 = (when declared(PropertiesID):
    when ownSizeof(PropertiesID) != ownSizeof(PropertiesID_520094216):
      static :
        warning("Declaration of " & "PropertiesID" &
            " exists but with different size")
    PropertiesID
   else:
    PropertiesID_520094216)
  DisplayID_520094411 = (when declared(DisplayID):
    when ownSizeof(DisplayID) != ownSizeof(DisplayID_520094410):
      static :
        warning("Declaration of " & "DisplayID" &
            " exists but with different size")
    DisplayID
   else:
    DisplayID_520094410)
  enum_EventType_520094601 = (when declared(enum_EventType):
    when ownSizeof(enum_EventType) != ownSizeof(enum_EventType_520094600):
      static :
        warning("Declaration of " & "enum_EventType" &
            " exists but with different size")
    enum_EventType
   else:
    enum_EventType_520094600)
  struct_TextInputEvent_520094633 = (when declared(struct_TextInputEvent):
    when ownSizeof(struct_TextInputEvent) != ownSizeof(struct_TextInputEvent_520094632):
      static :
        warning("Declaration of " & "struct_TextInputEvent" &
            " exists but with different size")
    struct_TextInputEvent
   else:
    struct_TextInputEvent_520094632)
  AudioStreamCallback_520094283 = (when declared(AudioStreamCallback):
    when ownSizeof(AudioStreamCallback) != ownSizeof(AudioStreamCallback_520094282):
      static :
        warning("Declaration of " & "AudioStreamCallback" &
            " exists but with different size")
    AudioStreamCallback
   else:
    AudioStreamCallback_520094282)
  FColor_520094355 = (when declared(FColor):
    when ownSizeof(FColor) != ownSizeof(FColor_520094354):
      static :
        warning("Declaration of " & "FColor" & " exists but with different size")
    FColor
   else:
    FColor_520094354)
  ScaleMode_520094385 = (when declared(ScaleMode):
    when ownSizeof(ScaleMode) != ownSizeof(ScaleMode_520094384):
      static :
        warning("Declaration of " & "ScaleMode" &
            " exists but with different size")
    ScaleMode
   else:
    ScaleMode_520094384)
  struct_AtomicU32_520094213 = (when declared(struct_AtomicU32):
    when ownSizeof(struct_AtomicU32) != ownSizeof(struct_AtomicU32_520094212):
      static :
        warning("Declaration of " & "struct_AtomicU32" &
            " exists but with different size")
    struct_AtomicU32
   else:
    struct_AtomicU32_520094212)
  struct_DisplayMode_520094421 = (when declared(struct_DisplayMode):
    when ownSizeof(struct_DisplayMode) != ownSizeof(struct_DisplayMode_520094420):
      static :
        warning("Declaration of " & "struct_DisplayMode" &
            " exists but with different size")
    struct_DisplayMode
   else:
    struct_DisplayMode_520094420)
  FileDialogType_520094481 = (when declared(FileDialogType):
    when ownSizeof(FileDialogType) != ownSizeof(FileDialogType_520094480):
      static :
        warning("Declaration of " & "FileDialogType" &
            " exists but with different size")
    FileDialogType
   else:
    FileDialogType_520094480)
  TouchID_520094589 = (when declared(TouchID):
    when ownSizeof(TouchID) != ownSizeof(TouchID_520094588):
      static :
        warning("Declaration of " & "TouchID" &
            " exists but with different size")
    TouchID
   else:
    TouchID_520094588)
  GPUBlendFactor_520094889 = (when declared(GPUBlendFactor):
    when ownSizeof(GPUBlendFactor) != ownSizeof(GPUBlendFactor_520094888):
      static :
        warning("Declaration of " & "GPUBlendFactor" &
            " exists but with different size")
    GPUBlendFactor
   else:
    GPUBlendFactor_520094888)
  enum_AsyncIOTaskType_520094193 = (when declared(enum_AsyncIOTaskType):
    when ownSizeof(enum_AsyncIOTaskType) != ownSizeof(enum_AsyncIOTaskType_520094192):
      static :
        warning("Declaration of " & "enum_AsyncIOTaskType" &
            " exists but with different size")
    enum_AsyncIOTaskType
   else:
    enum_AsyncIOTaskType_520094192)
  enum_SystemTheme_520094415 = (when declared(enum_SystemTheme):
    when ownSizeof(enum_SystemTheme) != ownSizeof(enum_SystemTheme_520094414):
      static :
        warning("Declaration of " & "enum_SystemTheme" &
            " exists but with different size")
    enum_SystemTheme
   else:
    enum_SystemTheme_520094414)
  GPUTexture_520094789 = (when declared(GPUTexture):
    when ownSizeof(GPUTexture) != ownSizeof(GPUTexture_520094788):
      static :
        warning("Declaration of " & "GPUTexture" &
            " exists but with different size")
    GPUTexture
   else:
    GPUTexture_520094788)
  struct_GPUTransferBufferCreateInfo_520094993 = (when declared(
      struct_GPUTransferBufferCreateInfo):
    when ownSizeof(struct_GPUTransferBufferCreateInfo) !=
        ownSizeof(struct_GPUTransferBufferCreateInfo_520094992):
      static :
        warning("Declaration of " & "struct_GPUTransferBufferCreateInfo" &
            " exists but with different size")
    struct_GPUTransferBufferCreateInfo
   else:
    struct_GPUTransferBufferCreateInfo_520094992)
  SpinLock_520094207 = (when declared(SpinLock):
    when ownSizeof(SpinLock) != ownSizeof(SpinLock_520094206):
      static :
        warning("Declaration of " & "SpinLock" &
            " exists but with different size")
    SpinLock
   else:
    SpinLock_520094206)
  TouchFingerEvent_520094711 = (when declared(TouchFingerEvent):
    when ownSizeof(TouchFingerEvent) != ownSizeof(TouchFingerEvent_520094710):
      static :
        warning("Declaration of " & "TouchFingerEvent" &
            " exists but with different size")
    TouchFingerEvent
   else:
    TouchFingerEvent_520094710)
  GamepadDeviceEvent_520094687 = (when declared(GamepadDeviceEvent):
    when ownSizeof(GamepadDeviceEvent) != ownSizeof(GamepadDeviceEvent_520094686):
      static :
        warning("Declaration of " & "GamepadDeviceEvent" &
            " exists but with different size")
    GamepadDeviceEvent
   else:
    GamepadDeviceEvent_520094686)
  GPUComputePass_520094803 = (when declared(GPUComputePass):
    when ownSizeof(GPUComputePass) != ownSizeof(GPUComputePass_520094802):
      static :
        warning("Declaration of " & "GPUComputePass" &
            " exists but with different size")
    GPUComputePass
   else:
    GPUComputePass_520094802)
  WindowID_520094413 = (when declared(WindowID):
    when ownSizeof(WindowID) != ownSizeof(WindowID_520094412):
      static :
        warning("Declaration of " & "WindowID" &
            " exists but with different size")
    WindowID
   else:
    WindowID_520094412)
  struct_JoyAxisEvent_520094653 = (when declared(struct_JoyAxisEvent):
    when ownSizeof(struct_JoyAxisEvent) != ownSizeof(struct_JoyAxisEvent_520094652):
      static :
        warning("Declaration of " & "struct_JoyAxisEvent" &
            " exists but with different size")
    struct_JoyAxisEvent
   else:
    struct_JoyAxisEvent_520094652)
  TextureAccess_520095175 = (when declared(TextureAccess):
    when ownSizeof(TextureAccess) != ownSizeof(TextureAccess_520095174):
      static :
        warning("Declaration of " & "TextureAccess" &
            " exists but with different size")
    TextureAccess
   else:
    TextureAccess_520095174)
  struct_PenMotionEvent_520094717 = (when declared(struct_PenMotionEvent):
    when ownSizeof(struct_PenMotionEvent) != ownSizeof(struct_PenMotionEvent_520094716):
      static :
        warning("Declaration of " & "struct_PenMotionEvent" &
            " exists but with different size")
    struct_PenMotionEvent
   else:
    struct_PenMotionEvent_520094716)
  GPUBufferCreateInfo_520094991 = (when declared(GPUBufferCreateInfo):
    when ownSizeof(GPUBufferCreateInfo) != ownSizeof(GPUBufferCreateInfo_520094990):
      static :
        warning("Declaration of " & "GPUBufferCreateInfo" &
            " exists but with different size")
    GPUBufferCreateInfo
   else:
    GPUBufferCreateInfo_520094990)
  struct_Rect_520094373 = (when declared(struct_Rect):
    when ownSizeof(struct_Rect) != ownSizeof(struct_Rect_520094372):
      static :
        warning("Declaration of " & "struct_Rect" &
            " exists but with different size")
    struct_Rect
   else:
    struct_Rect_520094372)
  VirtualJoystickDesc_520094521 = (when declared(VirtualJoystickDesc):
    when ownSizeof(VirtualJoystickDesc) != ownSizeof(VirtualJoystickDesc_520094520):
      static :
        warning("Declaration of " & "VirtualJoystickDesc" &
            " exists but with different size")
    VirtualJoystickDesc
   else:
    VirtualJoystickDesc_520094520)
  struct_VirtualJoystickDesc_520094519 = (when declared(
      struct_VirtualJoystickDesc):
    when ownSizeof(struct_VirtualJoystickDesc) !=
        ownSizeof(struct_VirtualJoystickDesc_520094518):
      static :
        warning("Declaration of " & "struct_VirtualJoystickDesc" &
            " exists but with different size")
    struct_VirtualJoystickDesc
   else:
    struct_VirtualJoystickDesc_520094518)
  Mutex_520094241 = (when declared(Mutex):
    when ownSizeof(Mutex) != ownSizeof(Mutex_520094240):
      static :
        warning("Declaration of " & "Mutex" & " exists but with different size")
    Mutex
   else:
    Mutex_520094240)
  IOStatus_520094259 = (when declared(IOStatus):
    when ownSizeof(IOStatus) != ownSizeof(IOStatus_520094258):
      static :
        warning("Declaration of " & "IOStatus" &
            " exists but with different size")
    IOStatus
   else:
    IOStatus_520094258)
  enum_ScaleMode_520094383 = (when declared(enum_ScaleMode):
    when ownSizeof(enum_ScaleMode) != ownSizeof(enum_ScaleMode_520094382):
      static :
        warning("Declaration of " & "enum_ScaleMode" &
            " exists but with different size")
    enum_ScaleMode
   else:
    enum_ScaleMode_520094382)
  enum_PenAxis_520094585 = (when declared(enum_PenAxis):
    when ownSizeof(enum_PenAxis) != ownSizeof(enum_PenAxis_520094584):
      static :
        warning("Declaration of " & "enum_PenAxis" &
            " exists but with different size")
    enum_PenAxis
   else:
    enum_PenAxis_520094584)
  GPUTextureCreateInfo_520094987 = (when declared(GPUTextureCreateInfo):
    when ownSizeof(GPUTextureCreateInfo) != ownSizeof(GPUTextureCreateInfo_520094986):
      static :
        warning("Declaration of " & "GPUTextureCreateInfo" &
            " exists but with different size")
    GPUTextureCreateInfo
   else:
    GPUTextureCreateInfo_520094986)
  JoyDeviceEvent_520094671 = (when declared(JoyDeviceEvent):
    when ownSizeof(JoyDeviceEvent) != ownSizeof(JoyDeviceEvent_520094670):
      static :
        warning("Declaration of " & "JoyDeviceEvent" &
            " exists but with different size")
    JoyDeviceEvent
   else:
    JoyDeviceEvent_520094670)
  GPUSwapchainComposition_520094911 = (when declared(GPUSwapchainComposition):
    when ownSizeof(GPUSwapchainComposition) !=
        ownSizeof(GPUSwapchainComposition_520094910):
      static :
        warning("Declaration of " & "GPUSwapchainComposition" &
            " exists but with different size")
    GPUSwapchainComposition
   else:
    GPUSwapchainComposition_520094910)
  struct_MouseWheelEvent_520094649 = (when declared(struct_MouseWheelEvent):
    when ownSizeof(struct_MouseWheelEvent) != ownSizeof(struct_MouseWheelEvent_520094648):
      static :
        warning("Declaration of " & "struct_MouseWheelEvent" &
            " exists but with different size")
    struct_MouseWheelEvent
   else:
    struct_MouseWheelEvent_520094648)
  X11EventHook_520095199 = (when declared(X11EventHook):
    when ownSizeof(X11EventHook) != ownSizeof(X11EventHook_520095198):
      static :
        warning("Declaration of " & "X11EventHook" &
            " exists but with different size")
    X11EventHook
   else:
    X11EventHook_520095198)
  SystemTheme_520094417 = (when declared(SystemTheme):
    when ownSizeof(SystemTheme) != ownSizeof(SystemTheme_520094416):
      static :
        warning("Declaration of " & "SystemTheme" &
            " exists but with different size")
    SystemTheme
   else:
    SystemTheme_520094416)
  struct_Vertex_520095169 = (when declared(struct_Vertex):
    when ownSizeof(struct_Vertex) != ownSizeof(struct_Vertex_520095168):
      static :
        warning("Declaration of " & "struct_Vertex" &
            " exists but with different size")
    struct_Vertex
   else:
    struct_Vertex_520095168)
  ClipboardDataCallback_520094407 = (when declared(ClipboardDataCallback):
    when ownSizeof(ClipboardDataCallback) != ownSizeof(ClipboardDataCallback_520094406):
      static :
        warning("Declaration of " & "ClipboardDataCallback" &
            " exists but with different size")
    ClipboardDataCallback
   else:
    ClipboardDataCallback_520094406)
  GPUVertexInputState_520094971 = (when declared(GPUVertexInputState):
    when ownSizeof(GPUVertexInputState) != ownSizeof(GPUVertexInputState_520094970):
      static :
        warning("Declaration of " & "GPUVertexInputState" &
            " exists but with different size")
    GPUVertexInputState
   else:
    GPUVertexInputState_520094970)
  enum_GamepadType_520094525 = (when declared(enum_GamepadType):
    when ownSizeof(enum_GamepadType) != ownSizeof(enum_GamepadType_520094524):
      static :
        warning("Declaration of " & "enum_GamepadType" &
            " exists but with different size")
    enum_GamepadType
   else:
    enum_GamepadType_520094524)
  KeyboardID_520094557 = (when declared(KeyboardID):
    when ownSizeof(KeyboardID) != ownSizeof(KeyboardID_520094556):
      static :
        warning("Declaration of " & "KeyboardID" &
            " exists but with different size")
    KeyboardID
   else:
    KeyboardID_520094556)
  GPUBlitRegion_520094935 = (when declared(GPUBlitRegion):
    when ownSizeof(GPUBlitRegion) != ownSizeof(GPUBlitRegion_520094934):
      static :
        warning("Declaration of " & "GPUBlitRegion" &
            " exists but with different size")
    GPUBlitRegion
   else:
    GPUBlitRegion_520094934)
  MessageBoxData_520095159 = (when declared(MessageBoxData):
    when ownSizeof(MessageBoxData) != ownSizeof(MessageBoxData_520095158):
      static :
        warning("Declaration of " & "MessageBoxData" &
            " exists but with different size")
    MessageBoxData
   else:
    MessageBoxData_520095158)
  GamepadButtonEvent_520094683 = (when declared(GamepadButtonEvent):
    when ownSizeof(GamepadButtonEvent) != ownSizeof(GamepadButtonEvent_520094682):
      static :
        warning("Declaration of " & "GamepadButtonEvent" &
            " exists but with different size")
    GamepadButtonEvent
   else:
    GamepadButtonEvent_520094682)
  internal_beginthreadex_proc_type_520095225 = (when declared(
      internal_beginthreadex_proc_type):
    when ownSizeof(internal_beginthreadex_proc_type) !=
        ownSizeof(internal_beginthreadex_proc_type_520095224):
      static :
        warning("Declaration of " & "internal_beginthreadex_proc_type" &
            " exists but with different size")
    internal_beginthreadex_proc_type
   else:
    internal_beginthreadex_proc_type_520095224)
  intptr_t_520094447 = (when declared(intptr_t):
    when ownSizeof(intptr_t) != ownSizeof(intptr_t_520094446):
      static :
        warning("Declaration of " & "intptr_t" &
            " exists but with different size")
    intptr_t
   else:
    intptr_t_520094446)
  GPUBufferRegion_520094943 = (when declared(GPUBufferRegion):
    when ownSizeof(GPUBufferRegion) != ownSizeof(GPUBufferRegion_520094942):
      static :
        warning("Declaration of " & "GPUBufferRegion" &
            " exists but with different size")
    GPUBufferRegion
   else:
    GPUBufferRegion_520094942)
  free_func_520094167 = (when declared(free_func):
    when ownSizeof(free_func) != ownSizeof(free_func_520094166):
      static :
        warning("Declaration of " & "free_func" &
            " exists but with different size")
    free_func
   else:
    free_func_520094166)
  FPoint_520094371 = (when declared(FPoint):
    when ownSizeof(FPoint) != ownSizeof(FPoint_520094370):
      static :
        warning("Declaration of " & "FPoint" & " exists but with different size")
    FPoint
   else:
    FPoint_520094370)
  struct_JoyBatteryEvent_520094673 = (when declared(struct_JoyBatteryEvent):
    when ownSizeof(struct_JoyBatteryEvent) != ownSizeof(struct_JoyBatteryEvent_520094672):
      static :
        warning("Declaration of " & "struct_JoyBatteryEvent" &
            " exists but with different size")
    struct_JoyBatteryEvent
   else:
    struct_JoyBatteryEvent_520094672)
  GPUSampleCount_520094837 = (when declared(GPUSampleCount):
    when ownSizeof(GPUSampleCount) != ownSizeof(GPUSampleCount_520094836):
      static :
        warning("Declaration of " & "GPUSampleCount" &
            " exists but with different size")
    GPUSampleCount
   else:
    GPUSampleCount_520094836)
  HapticConstant_520095061 = (when declared(HapticConstant):
    when ownSizeof(HapticConstant) != ownSizeof(HapticConstant_520095060):
      static :
        warning("Declaration of " & "HapticConstant" &
            " exists but with different size")
    HapticConstant
   else:
    HapticConstant_520095060)
  AppResult_520095109 = (when declared(AppResult):
    when ownSizeof(AppResult) != ownSizeof(AppResult_520095108):
      static :
        warning("Declaration of " & "AppResult" &
            " exists but with different size")
    AppResult
   else:
    AppResult_520095108)
  GPUBufferLocation_520094939 = (when declared(GPUBufferLocation):
    when ownSizeof(GPUBufferLocation) != ownSizeof(GPUBufferLocation_520094938):
      static :
        warning("Declaration of " & "GPUBufferLocation" &
            " exists but with different size")
    GPUBufferLocation
   else:
    GPUBufferLocation_520094938)
  struct_DateTime_520095205 = (when declared(struct_DateTime):
    when ownSizeof(struct_DateTime) != ownSizeof(struct_DateTime_520095204):
      static :
        warning("Declaration of " & "struct_DateTime" &
            " exists but with different size")
    struct_DateTime
   else:
    struct_DateTime_520095204)
  AudioStream_520094281 = (when declared(AudioStream):
    when ownSizeof(AudioStream) != ownSizeof(AudioStream_520094280):
      static :
        warning("Declaration of " & "AudioStream" &
            " exists but with different size")
    AudioStream
   else:
    AudioStream_520094280)
  DisplayMode_520094423 = (when declared(DisplayMode):
    when ownSizeof(DisplayMode) != ownSizeof(DisplayMode_520094422):
      static :
        warning("Declaration of " & "DisplayMode" &
            " exists but with different size")
    DisplayMode
   else:
    DisplayMode_520094422)
  HitTest_520094471 = (when declared(HitTest):
    when ownSizeof(HitTest) != ownSizeof(HitTest_520094470):
      static :
        warning("Declaration of " & "HitTest" &
            " exists but with different size")
    HitTest
   else:
    HitTest_520094470)
  Capitalization_520094565 = (when declared(Capitalization):
    when ownSizeof(Capitalization) != ownSizeof(Capitalization_520094564):
      static :
        warning("Declaration of " & "Capitalization" &
            " exists but with different size")
    Capitalization
   else:
    Capitalization_520094564)
  MouseButtonEvent_520094647 = (when declared(MouseButtonEvent):
    when ownSizeof(MouseButtonEvent) != ownSizeof(MouseButtonEvent_520094646):
      static :
        warning("Declaration of " & "MouseButtonEvent" &
            " exists but with different size")
    MouseButtonEvent
   else:
    MouseButtonEvent_520094646)
  struct_SensorEvent_520094741 = (when declared(struct_SensorEvent):
    when ownSizeof(struct_SensorEvent) != ownSizeof(struct_SensorEvent_520094740):
      static :
        warning("Declaration of " & "struct_SensorEvent" &
            " exists but with different size")
    struct_SensorEvent
   else:
    struct_SensorEvent_520094740)
  Surface_520094393 = (when declared(Surface):
    when ownSizeof(Surface) != ownSizeof(Surface_520094392):
      static :
        warning("Declaration of " & "Surface" &
            " exists but with different size")
    Surface
   else:
    Surface_520094392)
  union_Event_520094753 = (when declared(union_Event):
    when ownSizeof(union_Event) != ownSizeof(union_Event_520094752):
      static :
        warning("Declaration of " & "union_Event" &
            " exists but with different size")
    union_Event
   else:
    union_Event_520094752)
  enum_FlipMode_520094387 = (when declared(enum_FlipMode):
    when ownSizeof(enum_FlipMode) != ownSizeof(enum_FlipMode_520094386):
      static :
        warning("Declaration of " & "enum_FlipMode" &
            " exists but with different size")
    enum_FlipMode
   else:
    enum_FlipMode_520094386)
  struct_GPUGraphicsPipelineTargetInfo_520095013 = (when declared(
      struct_GPUGraphicsPipelineTargetInfo):
    when ownSizeof(struct_GPUGraphicsPipelineTargetInfo) !=
        ownSizeof(struct_GPUGraphicsPipelineTargetInfo_520095012):
      static :
        warning("Declaration of " & "struct_GPUGraphicsPipelineTargetInfo" &
            " exists but with different size")
    struct_GPUGraphicsPipelineTargetInfo
   else:
    struct_GPUGraphicsPipelineTargetInfo_520095012)
  EventFilter_520094761 = (when declared(EventFilter):
    when ownSizeof(EventFilter) != ownSizeof(EventFilter_520094760):
      static :
        warning("Declaration of " & "EventFilter" &
            " exists but with different size")
    EventFilter
   else:
    EventFilter_520094760)
  enum_DateFormat_520095209 = (when declared(enum_DateFormat):
    when ownSizeof(enum_DateFormat) != ownSizeof(enum_DateFormat_520095208):
      static :
        warning("Declaration of " & "enum_DateFormat" &
            " exists but with different size")
    enum_DateFormat
   else:
    enum_DateFormat_520095208)
  enum_AudioFormat_520094271 = (when declared(enum_AudioFormat):
    when ownSizeof(enum_AudioFormat) != ownSizeof(enum_AudioFormat_520094270):
      static :
        warning("Declaration of " & "enum_AudioFormat" &
            " exists but with different size")
    enum_AudioFormat
   else:
    enum_AudioFormat_520094270)
  enum_GPUBlendFactor_520094887 = (when declared(enum_GPUBlendFactor):
    when ownSizeof(enum_GPUBlendFactor) != ownSizeof(enum_GPUBlendFactor_520094886):
      static :
        warning("Declaration of " & "enum_GPUBlendFactor" &
            " exists but with different size")
    enum_GPUBlendFactor
   else:
    enum_GPUBlendFactor_520094886)
  GLContextResetNotification_520094465 = (when declared(
      GLContextResetNotification):
    when ownSizeof(GLContextResetNotification) !=
        ownSizeof(GLContextResetNotification_520094464):
      static :
        warning("Declaration of " & "GLContextResetNotification" &
            " exists but with different size")
    GLContextResetNotification
   else:
    GLContextResetNotification_520094464)
  AppInit_func_520095111 = (when declared(AppInit_func):
    when ownSizeof(AppInit_func) != ownSizeof(AppInit_func_520095110):
      static :
        warning("Declaration of " & "AppInit_func" &
            " exists but with different size")
    AppInit_func
   else:
    AppInit_func_520095110)
  PackedLayout_520094315 = (when declared(PackedLayout):
    when ownSizeof(PackedLayout) != ownSizeof(PackedLayout_520094314):
      static :
        warning("Declaration of " & "PackedLayout" &
            " exists but with different size")
    PackedLayout
   else:
    PackedLayout_520094314)
  struct_GPUBufferBinding_520095037 = (when declared(struct_GPUBufferBinding):
    when ownSizeof(struct_GPUBufferBinding) !=
        ownSizeof(struct_GPUBufferBinding_520095036):
      static :
        warning("Declaration of " & "struct_GPUBufferBinding" &
            " exists but with different size")
    struct_GPUBufferBinding
   else:
    struct_GPUBufferBinding_520095036)
  struct_InitState_520094253 = (when declared(struct_InitState):
    when ownSizeof(struct_InitState) != ownSizeof(struct_InitState_520094252):
      static :
        warning("Declaration of " & "struct_InitState" &
            " exists but with different size")
    struct_InitState
   else:
    struct_InitState_520094252)
  BlendOperation_520094291 = (when declared(BlendOperation):
    when ownSizeof(BlendOperation) != ownSizeof(BlendOperation_520094290):
      static :
        warning("Declaration of " & "BlendOperation" &
            " exists but with different size")
    BlendOperation
   else:
    BlendOperation_520094290)
  struct_Surface_520094391 = (when declared(struct_Surface):
    when ownSizeof(struct_Surface) != ownSizeof(struct_Surface_520094390):
      static :
        warning("Declaration of " & "struct_Surface" &
            " exists but with different size")
    struct_Surface
   else:
    struct_Surface_520094390)
  MouseID_520094567 = (when declared(MouseID):
    when ownSizeof(MouseID) != ownSizeof(MouseID_520094566):
      static :
        warning("Declaration of " & "MouseID" &
            " exists but with different size")
    MouseID
   else:
    MouseID_520094566)
  TextInputEvent_520094635 = (when declared(TextInputEvent):
    when ownSizeof(TextInputEvent) != ownSizeof(TextInputEvent_520094634):
      static :
        warning("Declaration of " & "TextInputEvent" &
            " exists but with different size")
    TextInputEvent
   else:
    TextInputEvent_520094634)
  struct_GPUBlitRegion_520094933 = (when declared(struct_GPUBlitRegion):
    when ownSizeof(struct_GPUBlitRegion) != ownSizeof(struct_GPUBlitRegion_520094932):
      static :
        warning("Declaration of " & "struct_GPUBlitRegion" &
            " exists but with different size")
    struct_GPUBlitRegion
   else:
    struct_GPUBlitRegion_520094932)
  struct_GPURasterizerState_520094997 = (when declared(struct_GPURasterizerState):
    when ownSizeof(struct_GPURasterizerState) !=
        ownSizeof(struct_GPURasterizerState_520094996):
      static :
        warning("Declaration of " & "struct_GPURasterizerState" &
            " exists but with different size")
    struct_GPURasterizerState
   else:
    struct_GPURasterizerState_520094996)
  enum_GPUSamplerAddressMode_520094901 = (when declared(
      enum_GPUSamplerAddressMode):
    when ownSizeof(enum_GPUSamplerAddressMode) !=
        ownSizeof(enum_GPUSamplerAddressMode_520094900):
      static :
        warning("Declaration of " & "enum_GPUSamplerAddressMode" &
            " exists but with different size")
    enum_GPUSamplerAddressMode
   else:
    enum_GPUSamplerAddressMode_520094900)
  DropEvent_520094735 = (when declared(DropEvent):
    when ownSizeof(DropEvent) != ownSizeof(DropEvent_520094734):
      static :
        warning("Declaration of " & "DropEvent" &
            " exists but with different size")
    DropEvent
   else:
    DropEvent_520094734)
  enum_AppResult_520095107 = (when declared(enum_AppResult):
    when ownSizeof(enum_AppResult) != ownSizeof(enum_AppResult_520095106):
      static :
        warning("Declaration of " & "enum_AppResult" &
            " exists but with different size")
    enum_AppResult
   else:
    enum_AppResult_520095106)
  struct_DisplayEvent_520094609 = (when declared(struct_DisplayEvent):
    when ownSizeof(struct_DisplayEvent) != ownSizeof(struct_DisplayEvent_520094608):
      static :
        warning("Declaration of " & "struct_DisplayEvent" &
            " exists but with different size")
    struct_DisplayEvent
   else:
    struct_DisplayEvent_520094608)
  PixelFormat_520094319 = (when declared(PixelFormat):
    when ownSizeof(PixelFormat) != ownSizeof(PixelFormat_520094318):
      static :
        warning("Declaration of " & "PixelFormat" &
            " exists but with different size")
    PixelFormat
   else:
    PixelFormat_520094318)
  CameraPosition_520094405 = (when declared(CameraPosition):
    when ownSizeof(CameraPosition) != ownSizeof(CameraPosition_520094404):
      static :
        warning("Declaration of " & "CameraPosition" &
            " exists but with different size")
    CameraPosition
   else:
    CameraPosition_520094404)
  GPUShaderStage_520094851 = (when declared(GPUShaderStage):
    when ownSizeof(GPUShaderStage) != ownSizeof(GPUShaderStage_520094850):
      static :
        warning("Declaration of " & "GPUShaderStage" &
            " exists but with different size")
    GPUShaderStage
   else:
    GPUShaderStage_520094850)
  CameraSpec_520094401 = (when declared(CameraSpec):
    when ownSizeof(CameraSpec) != ownSizeof(CameraSpec_520094400):
      static :
        warning("Declaration of " & "CameraSpec" &
            " exists but with different size")
    CameraSpec
   else:
    CameraSpec_520094400)
  Environment_520094169 = (when declared(Environment):
    when ownSizeof(Environment) != ownSizeof(Environment_520094168):
      static :
        warning("Declaration of " & "Environment" &
            " exists but with different size")
    Environment
   else:
    Environment_520094168)
  Joystick_520094499 = (when declared(Joystick):
    when ownSizeof(Joystick) != ownSizeof(Joystick_520094498):
      static :
        warning("Declaration of " & "Joystick" &
            " exists but with different size")
    Joystick
   else:
    Joystick_520094498)
  struct_GPUMultisampleState_520095001 = (when declared(
      struct_GPUMultisampleState):
    when ownSizeof(struct_GPUMultisampleState) !=
        ownSizeof(struct_GPUMultisampleState_520095000):
      static :
        warning("Declaration of " & "struct_GPUMultisampleState" &
            " exists but with different size")
    struct_GPUMultisampleState
   else:
    struct_GPUMultisampleState_520095000)
  wchar_t_520094175 = (when declared(wchar_t):
    when ownSizeof(wchar_t) != ownSizeof(wchar_t_520094174):
      static :
        warning("Declaration of " & "wchar_t" &
            " exists but with different size")
    wchar_t
   else:
    wchar_t_520094174)
  GPUBlendOp_520094885 = (when declared(GPUBlendOp):
    when ownSizeof(GPUBlendOp) != ownSizeof(GPUBlendOp_520094884):
      static :
        warning("Declaration of " & "GPUBlendOp" &
            " exists but with different size")
    GPUBlendOp
   else:
    GPUBlendOp_520094884)
  enum_IOWhence_520094261 = (when declared(enum_IOWhence):
    when ownSizeof(enum_IOWhence) != ownSizeof(enum_IOWhence_520094260):
      static :
        warning("Declaration of " & "enum_IOWhence" &
            " exists but with different size")
    enum_IOWhence
   else:
    enum_IOWhence_520094260)
  JoyBallEvent_520094659 = (when declared(JoyBallEvent):
    when ownSizeof(JoyBallEvent) != ownSizeof(JoyBallEvent_520094658):
      static :
        warning("Declaration of " & "JoyBallEvent" &
            " exists but with different size")
    JoyBallEvent
   else:
    JoyBallEvent_520094658)
  GPUTextureSamplerBinding_520095043 = (when declared(GPUTextureSamplerBinding):
    when ownSizeof(GPUTextureSamplerBinding) !=
        ownSizeof(GPUTextureSamplerBinding_520095042):
      static :
        warning("Declaration of " & "GPUTextureSamplerBinding" &
            " exists but with different size")
    GPUTextureSamplerBinding
   else:
    GPUTextureSamplerBinding_520095042)
  Sint16_520094139 = (when declared(Sint16):
    when ownSizeof(Sint16) != ownSizeof(Sint16_520094138):
      static :
        warning("Declaration of " & "Sint16" & " exists but with different size")
    Sint16
   else:
    Sint16_520094138)
  Folder_520094765 = (when declared(Folder):
    when ownSizeof(Folder) != ownSizeof(Folder_520094764):
      static :
        warning("Declaration of " & "Folder" & " exists but with different size")
    Folder
   else:
    Folder_520094764)
  struct_GPUViewport_520094913 = (when declared(struct_GPUViewport):
    when ownSizeof(struct_GPUViewport) != ownSizeof(struct_GPUViewport_520094912):
      static :
        warning("Declaration of " & "struct_GPUViewport" &
            " exists but with different size")
    struct_GPUViewport
   else:
    struct_GPUViewport_520094912)
  AsyncIOResult_520094199 = (when declared(AsyncIOResult):
    when ownSizeof(AsyncIOResult) != ownSizeof(AsyncIOResult_520094198):
      static :
        warning("Declaration of " & "AsyncIOResult" &
            " exists but with different size")
    AsyncIOResult
   else:
    AsyncIOResult_520094198)
  Sint8_520094135 = (when declared(Sint8):
    when ownSizeof(Sint8) != ownSizeof(Sint8_520094134):
      static :
        warning("Declaration of " & "Sint8" & " exists but with different size")
    Sint8
   else:
    Sint8_520094134)
  Process_520095163 = (when declared(Process):
    when ownSizeof(Process) != ownSizeof(Process_520095162):
      static :
        warning("Declaration of " & "Process" &
            " exists but with different size")
    Process
   else:
    Process_520095162)
  EGLSurface_520094443 = (when declared(EGLSurface):
    when ownSizeof(EGLSurface) != ownSizeof(EGLSurface_520094442):
      static :
        warning("Declaration of " & "EGLSurface" &
            " exists but with different size")
    EGLSurface
   else:
    EGLSurface_520094442)
  struct_MouseDeviceEvent_520094637 = (when declared(struct_MouseDeviceEvent):
    when ownSizeof(struct_MouseDeviceEvent) !=
        ownSizeof(struct_MouseDeviceEvent_520094636):
      static :
        warning("Declaration of " & "struct_MouseDeviceEvent" &
            " exists but with different size")
    struct_MouseDeviceEvent
   else:
    struct_MouseDeviceEvent_520094636)
  struct_HapticCustom_520095079 = (when declared(struct_HapticCustom):
    when ownSizeof(struct_HapticCustom) != ownSizeof(struct_HapticCustom_520095078):
      static :
        warning("Declaration of " & "struct_HapticCustom" &
            " exists but with different size")
    struct_HapticCustom
   else:
    struct_HapticCustom_520095078)
  struct_Color_520094349 = (when declared(struct_Color):
    when ownSizeof(struct_Color) != ownSizeof(struct_Color_520094348):
      static :
        warning("Declaration of " & "struct_Color" &
            " exists but with different size")
    struct_Color
   else:
    struct_Color_520094348)
  enum_DisplayOrientation_520094425 = (when declared(enum_DisplayOrientation):
    when ownSizeof(enum_DisplayOrientation) !=
        ownSizeof(enum_DisplayOrientation_520094424):
      static :
        warning("Declaration of " & "enum_DisplayOrientation" &
            " exists but with different size")
    enum_DisplayOrientation
   else:
    enum_DisplayOrientation_520094424)
  enum_GPUShaderStage_520094849 = (when declared(enum_GPUShaderStage):
    when ownSizeof(enum_GPUShaderStage) != ownSizeof(enum_GPUShaderStage_520094848):
      static :
        warning("Declaration of " & "enum_GPUShaderStage" &
            " exists but with different size")
    enum_GPUShaderStage
   else:
    enum_GPUShaderStage_520094848)
  struct_GPUVertexAttribute_520094965 = (when declared(struct_GPUVertexAttribute):
    when ownSizeof(struct_GPUVertexAttribute) !=
        ownSizeof(struct_GPUVertexAttribute_520094964):
      static :
        warning("Declaration of " & "struct_GPUVertexAttribute" &
            " exists but with different size")
    struct_GPUVertexAttribute
   else:
    struct_GPUVertexAttribute_520094964)
  GamepadAxis_520094539 = (when declared(GamepadAxis):
    when ownSizeof(GamepadAxis) != ownSizeof(GamepadAxis_520094538):
      static :
        warning("Declaration of " & "GamepadAxis" &
            " exists but with different size")
    GamepadAxis
   else:
    GamepadAxis_520094538)
  struct_AudioSpec_520094277 = (when declared(struct_AudioSpec):
    when ownSizeof(struct_AudioSpec) != ownSizeof(struct_AudioSpec_520094276):
      static :
        warning("Declaration of " & "struct_AudioSpec" &
            " exists but with different size")
    struct_AudioSpec
   else:
    struct_AudioSpec_520094276)
  GPURasterizerState_520094999 = (when declared(GPURasterizerState):
    when ownSizeof(GPURasterizerState) != ownSizeof(GPURasterizerState_520094998):
      static :
        warning("Declaration of " & "GPURasterizerState" &
            " exists but with different size")
    GPURasterizerState
   else:
    GPURasterizerState_520094998)
  CameraID_520094395 = (when declared(CameraID):
    when ownSizeof(CameraID) != ownSizeof(CameraID_520094394):
      static :
        warning("Declaration of " & "CameraID" &
            " exists but with different size")
    CameraID
   else:
    CameraID_520094394)
  enum_GPUCompareOp_520094875 = (when declared(enum_GPUCompareOp):
    when ownSizeof(enum_GPUCompareOp) != ownSizeof(enum_GPUCompareOp_520094874):
      static :
        warning("Declaration of " & "enum_GPUCompareOp" &
            " exists but with different size")
    enum_GPUCompareOp
   else:
    enum_GPUCompareOp_520094874)
  RenderEvent_520094707 = (when declared(RenderEvent):
    when ownSizeof(RenderEvent) != ownSizeof(RenderEvent_520094706):
      static :
        warning("Declaration of " & "RenderEvent" &
            " exists but with different size")
    RenderEvent
   else:
    RenderEvent_520094706)
  Sint32_520094143 = (when declared(Sint32):
    when ownSizeof(Sint32) != ownSizeof(Sint32_520094142):
      static :
        warning("Declaration of " & "Sint32" & " exists but with different size")
    Sint32
   else:
    Sint32_520094142)
  enum_TextInputType_520094559 = (when declared(enum_TextInputType):
    when ownSizeof(enum_TextInputType) != ownSizeof(enum_TextInputType_520094558):
      static :
        warning("Declaration of " & "enum_TextInputType" &
            " exists but with different size")
    enum_TextInputType
   else:
    enum_TextInputType_520094558)
  GPUSamplerMipmapMode_520094899 = (when declared(GPUSamplerMipmapMode):
    when ownSizeof(GPUSamplerMipmapMode) != ownSizeof(GPUSamplerMipmapMode_520094898):
      static :
        warning("Declaration of " & "GPUSamplerMipmapMode" &
            " exists but with different size")
    GPUSamplerMipmapMode
   else:
    GPUSamplerMipmapMode_520094898)
  struct_CameraDeviceEvent_520094701 = (when declared(struct_CameraDeviceEvent):
    when ownSizeof(struct_CameraDeviceEvent) !=
        ownSizeof(struct_CameraDeviceEvent_520094700):
      static :
        warning("Declaration of " & "struct_CameraDeviceEvent" &
            " exists but with different size")
    struct_CameraDeviceEvent
   else:
    struct_CameraDeviceEvent_520094700)
  EnumerateDirectoryCallback_520094781 = (when declared(
      EnumerateDirectoryCallback):
    when ownSizeof(EnumerateDirectoryCallback) !=
        ownSizeof(EnumerateDirectoryCallback_520094780):
      static :
        warning("Declaration of " & "EnumerateDirectoryCallback" &
            " exists but with different size")
    EnumerateDirectoryCallback
   else:
    EnumerateDirectoryCallback_520094780)
  enum_hid_bus_type_520095091 = (when declared(enum_hid_bus_type):
    when ownSizeof(enum_hid_bus_type) != ownSizeof(enum_hid_bus_type_520095090):
      static :
        warning("Declaration of " & "enum_hid_bus_type" &
            " exists but with different size")
    enum_hid_bus_type
   else:
    enum_hid_bus_type_520095090)
  GPUTextureFormat_520094827 = (when declared(GPUTextureFormat):
    when ownSizeof(GPUTextureFormat) != ownSizeof(GPUTextureFormat_520094826):
      static :
        warning("Declaration of " & "GPUTextureFormat" &
            " exists but with different size")
    GPUTextureFormat
   else:
    GPUTextureFormat_520094826)
  Semaphore_520094245 = (when declared(Semaphore):
    when ownSizeof(Semaphore) != ownSizeof(Semaphore_520094244):
      static :
        warning("Declaration of " & "Semaphore" &
            " exists but with different size")
    Semaphore
   else:
    Semaphore_520094244)
  GPUShaderFormat_520094853 = (when declared(GPUShaderFormat):
    when ownSizeof(GPUShaderFormat) != ownSizeof(GPUShaderFormat_520094852):
      static :
        warning("Declaration of " & "GPUShaderFormat" &
            " exists but with different size")
    GPUShaderFormat
   else:
    GPUShaderFormat_520094852)
  RWLock_520094243 = (when declared(RWLock):
    when ownSizeof(RWLock) != ownSizeof(RWLock_520094242):
      static :
        warning("Declaration of " & "RWLock" & " exists but with different size")
    RWLock
   else:
    RWLock_520094242)
  AudioPostmixCallback_520094285 = (when declared(AudioPostmixCallback):
    when ownSizeof(AudioPostmixCallback) != ownSizeof(AudioPostmixCallback_520094284):
      static :
        warning("Declaration of " & "AudioPostmixCallback" &
            " exists but with different size")
    AudioPostmixCallback
   else:
    AudioPostmixCallback_520094284)
  struct_TextEditingEvent_520094625 = (when declared(struct_TextEditingEvent):
    when ownSizeof(struct_TextEditingEvent) !=
        ownSizeof(struct_TextEditingEvent_520094624):
      static :
        warning("Declaration of " & "struct_TextEditingEvent" &
            " exists but with different size")
    struct_TextEditingEvent
   else:
    struct_TextEditingEvent_520094624)
  HapticCondition_520095069 = (when declared(HapticCondition):
    when ownSizeof(HapticCondition) != ownSizeof(HapticCondition_520095068):
      static :
        warning("Declaration of " & "HapticCondition" &
            " exists but with different size")
    HapticCondition
   else:
    HapticCondition_520095068)
  GLProfile_typedef_520094459 = (when declared(GLProfile_typedef):
    when ownSizeof(GLProfile_typedef) != ownSizeof(GLProfile_typedef_520094458):
      static :
        warning("Declaration of " & "GLProfile_typedef" &
            " exists but with different size")
    GLProfile_typedef
   else:
    GLProfile_typedef_520094458)
  ColorPrimaries_520094331 = (when declared(ColorPrimaries):
    when ownSizeof(ColorPrimaries) != ownSizeof(ColorPrimaries_520094330):
      static :
        warning("Declaration of " & "ColorPrimaries" &
            " exists but with different size")
    ColorPrimaries
   else:
    ColorPrimaries_520094330)
  Point_520094367 = (when declared(Point):
    when ownSizeof(Point) != ownSizeof(Point_520094366):
      static :
        warning("Declaration of " & "Point" & " exists but with different size")
    Point
   else:
    Point_520094366)
  struct_GamepadTouchpadEvent_520094689 = (when declared(
      struct_GamepadTouchpadEvent):
    when ownSizeof(struct_GamepadTouchpadEvent) !=
        ownSizeof(struct_GamepadTouchpadEvent_520094688):
      static :
        warning("Declaration of " & "struct_GamepadTouchpadEvent" &
            " exists but with different size")
    struct_GamepadTouchpadEvent
   else:
    struct_GamepadTouchpadEvent_520094688)
  JoystickID_520094501 = (when declared(JoystickID):
    when ownSizeof(JoystickID) != ownSizeof(JoystickID_520094500):
      static :
        warning("Declaration of " & "JoystickID" &
            " exists but with different size")
    JoystickID
   else:
    JoystickID_520094500)
  HapticCustom_520095081 = (when declared(HapticCustom):
    when ownSizeof(HapticCustom) != ownSizeof(HapticCustom_520095080):
      static :
        warning("Declaration of " & "HapticCustom" &
            " exists but with different size")
    HapticCustom
   else:
    HapticCustom_520095080)
  EGLDisplay_520094439 = (when declared(EGLDisplay):
    when ownSizeof(EGLDisplay) != ownSizeof(EGLDisplay_520094438):
      static :
        warning("Declaration of " & "EGLDisplay" &
            " exists but with different size")
    EGLDisplay
   else:
    EGLDisplay_520094438)
  JoyButtonEvent_520094667 = (when declared(JoyButtonEvent):
    when ownSizeof(JoyButtonEvent) != ownSizeof(JoyButtonEvent_520094666):
      static :
        warning("Declaration of " & "JoyButtonEvent" &
            " exists but with different size")
    JoyButtonEvent
   else:
    JoyButtonEvent_520094666)
  struct_MessageBoxColorScheme_520095153 = (when declared(
      struct_MessageBoxColorScheme):
    when ownSizeof(struct_MessageBoxColorScheme) !=
        ownSizeof(struct_MessageBoxColorScheme_520095152):
      static :
        warning("Declaration of " & "struct_MessageBoxColorScheme" &
            " exists but with different size")
    struct_MessageBoxColorScheme
   else:
    struct_MessageBoxColorScheme_520095152)
  GPUColorComponentFlags_520094891 = (when declared(GPUColorComponentFlags):
    when ownSizeof(GPUColorComponentFlags) != ownSizeof(GPUColorComponentFlags_520094890):
      static :
        warning("Declaration of " & "GPUColorComponentFlags" &
            " exists but with different size")
    GPUColorComponentFlags
   else:
    GPUColorComponentFlags_520094890)
  alignment_test_520094155 = (when declared(alignment_test):
    when ownSizeof(alignment_test) != ownSizeof(alignment_test_520094154):
      static :
        warning("Declaration of " & "alignment_test" &
            " exists but with different size")
    alignment_test
   else:
    alignment_test_520094154)
  AtomicInt_520094211 = (when declared(AtomicInt):
    when ownSizeof(AtomicInt) != ownSizeof(AtomicInt_520094210):
      static :
        warning("Declaration of " & "AtomicInt" &
            " exists but with different size")
    AtomicInt
   else:
    AtomicInt_520094210)
  enum_AssertState_520094181 = (when declared(enum_AssertState):
    when ownSizeof(enum_AssertState) != ownSizeof(enum_AssertState_520094180):
      static :
        warning("Declaration of " & "enum_AssertState" &
            " exists but with different size")
    enum_AssertState
   else:
    enum_AssertState_520094180)
  Camera_520094397 = (when declared(Camera):
    when ownSizeof(Camera) != ownSizeof(Camera_520094396):
      static :
        warning("Declaration of " & "Camera" & " exists but with different size")
    Camera
   else:
    Camera_520094396)
  enum_GPUStoreOp_520094817 = (when declared(enum_GPUStoreOp):
    when ownSizeof(enum_GPUStoreOp) != ownSizeof(enum_GPUStoreOp_520094816):
      static :
        warning("Declaration of " & "enum_GPUStoreOp" &
            " exists but with different size")
    enum_GPUStoreOp
   else:
    enum_GPUStoreOp_520094816)
  PenAxis_520094587 = (when declared(PenAxis):
    when ownSizeof(PenAxis) != ownSizeof(PenAxis_520094586):
      static :
        warning("Declaration of " & "PenAxis" &
            " exists but with different size")
    PenAxis
   else:
    PenAxis_520094586)
  struct_PenAxisEvent_520094729 = (when declared(struct_PenAxisEvent):
    when ownSizeof(struct_PenAxisEvent) != ownSizeof(struct_PenAxisEvent_520094728):
      static :
        warning("Declaration of " & "struct_PenAxisEvent" &
            " exists but with different size")
    struct_PenAxisEvent
   else:
    struct_PenAxisEvent_520094728)
  GPULoadOp_520094815 = (when declared(GPULoadOp):
    when ownSizeof(GPULoadOp) != ownSizeof(GPULoadOp_520094814):
      static :
        warning("Declaration of " & "GPULoadOp" &
            " exists but with different size")
    GPULoadOp
   else:
    GPULoadOp_520094814)
  AssertState_520094183 = (when declared(AssertState):
    when ownSizeof(AssertState) != ownSizeof(AssertState_520094182):
      static :
        warning("Declaration of " & "AssertState" &
            " exists but with different size")
    AssertState
   else:
    AssertState_520094182)
  struct_FColor_520094353 = (when declared(struct_FColor):
    when ownSizeof(struct_FColor) != ownSizeof(struct_FColor_520094352):
      static :
        warning("Declaration of " & "struct_FColor" &
            " exists but with different size")
    struct_FColor
   else:
    struct_FColor_520094352)
  FingerID_520094591 = (when declared(FingerID):
    when ownSizeof(FingerID) != ownSizeof(FingerID_520094590):
      static :
        warning("Declaration of " & "FingerID" &
            " exists but with different size")
    FingerID
   else:
    FingerID_520094590)
  enum_GPUFrontFace_520094871 = (when declared(enum_GPUFrontFace):
    when ownSizeof(enum_GPUFrontFace) != ownSizeof(enum_GPUFrontFace_520094870):
      static :
        warning("Declaration of " & "enum_GPUFrontFace" &
            " exists but with different size")
    enum_GPUFrontFace
   else:
    enum_GPUFrontFace_520094870)
  GPUIndirectDrawCommand_520094947 = (when declared(GPUIndirectDrawCommand):
    when ownSizeof(GPUIndirectDrawCommand) != ownSizeof(GPUIndirectDrawCommand_520094946):
      static :
        warning("Declaration of " & "GPUIndirectDrawCommand" &
            " exists but with different size")
    GPUIndirectDrawCommand
   else:
    GPUIndirectDrawCommand_520094946)
  struct_GPUVertexBufferDescription_520094961 = (when declared(
      struct_GPUVertexBufferDescription):
    when ownSizeof(struct_GPUVertexBufferDescription) !=
        ownSizeof(struct_GPUVertexBufferDescription_520094960):
      static :
        warning("Declaration of " & "struct_GPUVertexBufferDescription" &
            " exists but with different size")
    struct_GPUVertexBufferDescription
   else:
    struct_GPUVertexBufferDescription_520094960)
when not declared(struct_GPUDepthStencilState):
  type
    struct_GPUDepthStencilState* = struct_GPUDepthStencilState_520095004
else:
  static :
    hint("Declaration of " & "struct_GPUDepthStencilState" &
        " already exists, not redeclaring")
when not declared(QuitEvent):
  type
    QuitEvent* = QuitEvent_520094746
else:
  static :
    hint("Declaration of " & "QuitEvent" & " already exists, not redeclaring")
when not declared(GPUFillMode):
  type
    GPUFillMode* = GPUFillMode_520094864
else:
  static :
    hint("Declaration of " & "GPUFillMode" & " already exists, not redeclaring")
when not declared(GLAttr_typedef):
  type
    GLAttr_typedef* = GLAttr_typedef_520094456
else:
  static :
    hint("Declaration of " & "GLAttr_typedef" &
        " already exists, not redeclaring")
when not declared(enum_Sandbox):
  type
    enum_Sandbox* = enum_Sandbox_520095200
else:
  static :
    hint("Declaration of " & "enum_Sandbox" & " already exists, not redeclaring")
when not declared(BlendFactor):
  type
    BlendFactor* = BlendFactor_520094294
else:
  static :
    hint("Declaration of " & "BlendFactor" & " already exists, not redeclaring")
when not declared(struct_GPUColorTargetBlendState):
  type
    struct_GPUColorTargetBlendState* = struct_GPUColorTargetBlendState_520094976
else:
  static :
    hint("Declaration of " & "struct_GPUColorTargetBlendState" &
        " already exists, not redeclaring")
when not declared(GPUIndexElementSize):
  type
    GPUIndexElementSize* = GPUIndexElementSize_520094822
else:
  static :
    hint("Declaration of " & "GPUIndexElementSize" &
        " already exists, not redeclaring")
when not declared(enum_ProcessIO):
  type
    enum_ProcessIO* = enum_ProcessIO_520095164
else:
  static :
    hint("Declaration of " & "enum_ProcessIO" &
        " already exists, not redeclaring")
when not declared(enum_PackedOrder):
  type
    enum_PackedOrder* = enum_PackedOrder_520094304
else:
  static :
    hint("Declaration of " & "enum_PackedOrder" &
        " already exists, not redeclaring")
when not declared(PropertyType):
  type
    PropertyType* = PropertyType_520094220
else:
  static :
    hint("Declaration of " & "PropertyType" & " already exists, not redeclaring")
when not declared(GamepadType):
  type
    GamepadType* = GamepadType_520094526
else:
  static :
    hint("Declaration of " & "GamepadType" & " already exists, not redeclaring")
when not declared(EGLint):
  type
    EGLint* = EGLint_520094448
else:
  static :
    hint("Declaration of " & "EGLint" & " already exists, not redeclaring")
when not declared(GPUTransferBufferLocation):
  type
    GPUTransferBufferLocation* = GPUTransferBufferLocation_520094922
else:
  static :
    hint("Declaration of " & "GPUTransferBufferLocation" &
        " already exists, not redeclaring")
when not declared(enum_Capitalization):
  type
    enum_Capitalization* = enum_Capitalization_520094562
else:
  static :
    hint("Declaration of " & "enum_Capitalization" &
        " already exists, not redeclaring")
when not declared(GPUPrimitiveType):
  type
    GPUPrimitiveType* = GPUPrimitiveType_520094810
else:
  static :
    hint("Declaration of " & "GPUPrimitiveType" &
        " already exists, not redeclaring")
when not declared(GPUCompareOp):
  type
    GPUCompareOp* = GPUCompareOp_520094876
else:
  static :
    hint("Declaration of " & "GPUCompareOp" & " already exists, not redeclaring")
when not declared(IOStreamInterface):
  type
    IOStreamInterface* = IOStreamInterface_520094266
else:
  static :
    hint("Declaration of " & "IOStreamInterface" &
        " already exists, not redeclaring")
when not declared(GPUMultisampleState):
  type
    GPUMultisampleState* = GPUMultisampleState_520095002
else:
  static :
    hint("Declaration of " & "GPUMultisampleState" &
        " already exists, not redeclaring")
when not declared(InitFlags):
  type
    InitFlags* = InitFlags_520095104
else:
  static :
    hint("Declaration of " & "InitFlags" & " already exists, not redeclaring")
when not declared(hid_device):
  type
    hid_device* = hid_device_520095088
else:
  static :
    hint("Declaration of " & "hid_device" & " already exists, not redeclaring")
when not declared(ClipboardCleanupCallback):
  type
    ClipboardCleanupCallback* = ClipboardCleanupCallback_520094408
else:
  static :
    hint("Declaration of " & "ClipboardCleanupCallback" &
        " already exists, not redeclaring")
when not declared(EGLAttrib):
  type
    EGLAttrib* = EGLAttrib_520094444
else:
  static :
    hint("Declaration of " & "EGLAttrib" & " already exists, not redeclaring")
when not declared(RendererLogicalPresentation):
  type
    RendererLogicalPresentation* = RendererLogicalPresentation_520095178
else:
  static :
    hint("Declaration of " & "RendererLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(struct_JoyButtonEvent):
  type
    struct_JoyButtonEvent* = struct_JoyButtonEvent_520094664
else:
  static :
    hint("Declaration of " & "struct_JoyButtonEvent" &
        " already exists, not redeclaring")
when not declared(enum_JoystickType):
  type
    enum_JoystickType* = enum_JoystickType_520094502
else:
  static :
    hint("Declaration of " & "enum_JoystickType" &
        " already exists, not redeclaring")
when not declared(enum_MouseWheelDirection):
  type
    enum_MouseWheelDirection* = enum_MouseWheelDirection_520094574
else:
  static :
    hint("Declaration of " & "enum_MouseWheelDirection" &
        " already exists, not redeclaring")
when not declared(enum_GPUFillMode):
  type
    enum_GPUFillMode* = enum_GPUFillMode_520094862
else:
  static :
    hint("Declaration of " & "enum_GPUFillMode" &
        " already exists, not redeclaring")
when not declared(struct_VirtualJoystickSensorDesc):
  type
    struct_VirtualJoystickSensorDesc* = struct_VirtualJoystickSensorDesc_520094514
else:
  static :
    hint("Declaration of " & "struct_VirtualJoystickSensorDesc" &
        " already exists, not redeclaring")
when not declared(SystemCursor):
  type
    SystemCursor* = SystemCursor_520094572
else:
  static :
    hint("Declaration of " & "SystemCursor" & " already exists, not redeclaring")
when not declared(struct_GamepadSensorEvent):
  type
    struct_GamepadSensorEvent* = struct_GamepadSensorEvent_520094692
else:
  static :
    hint("Declaration of " & "struct_GamepadSensorEvent" &
        " already exists, not redeclaring")
when not declared(enum_GPUVertexInputRate):
  type
    enum_GPUVertexInputRate* = enum_GPUVertexInputRate_520094858
else:
  static :
    hint("Declaration of " & "enum_GPUVertexInputRate" &
        " already exists, not redeclaring")
when not declared(GPUIndirectDispatchCommand):
  type
    GPUIndirectDispatchCommand* = GPUIndirectDispatchCommand_520094954
else:
  static :
    hint("Declaration of " & "GPUIndirectDispatchCommand" &
        " already exists, not redeclaring")
when not declared(Uint8):
  type
    Uint8* = Uint8_520094136
else:
  static :
    hint("Declaration of " & "Uint8" & " already exists, not redeclaring")
when not declared(struct_AsyncIOOutcome):
  type
    struct_AsyncIOOutcome* = struct_AsyncIOOutcome_520094200
else:
  static :
    hint("Declaration of " & "struct_AsyncIOOutcome" &
        " already exists, not redeclaring")
when not declared(SurfaceFlags):
  type
    SurfaceFlags* = SurfaceFlags_520094380
else:
  static :
    hint("Declaration of " & "SurfaceFlags" & " already exists, not redeclaring")
when not declared(struct_VirtualJoystickTouchpadDesc):
  type
    struct_VirtualJoystickTouchpadDesc* = struct_VirtualJoystickTouchpadDesc_520094510
else:
  static :
    hint("Declaration of " & "struct_VirtualJoystickTouchpadDesc" &
        " already exists, not redeclaring")
when not declared(ThreadPriority):
  type
    ThreadPriority* = ThreadPriority_520094234
else:
  static :
    hint("Declaration of " & "ThreadPriority" &
        " already exists, not redeclaring")
when not declared(GPUStencilOp):
  type
    GPUStencilOp* = GPUStencilOp_520094880
else:
  static :
    hint("Declaration of " & "GPUStencilOp" & " already exists, not redeclaring")
when not declared(struct_GPUBlitInfo):
  type
    struct_GPUBlitInfo* = struct_GPUBlitInfo_520095032
else:
  static :
    hint("Declaration of " & "struct_GPUBlitInfo" &
        " already exists, not redeclaring")
when not declared(struct_GPUComputePipelineCreateInfo):
  type
    struct_GPUComputePipelineCreateInfo* = struct_GPUComputePipelineCreateInfo_520095020
else:
  static :
    hint("Declaration of " & "struct_GPUComputePipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(struct_GPUTextureSamplerBinding):
  type
    struct_GPUTextureSamplerBinding* = struct_GPUTextureSamplerBinding_520095040
else:
  static :
    hint("Declaration of " & "struct_GPUTextureSamplerBinding" &
        " already exists, not redeclaring")
when not declared(struct_hid_device_info):
  type
    struct_hid_device_info* = struct_hid_device_info_520095094
else:
  static :
    hint("Declaration of " & "struct_hid_device_info" &
        " already exists, not redeclaring")
when not declared(struct_alignment_test):
  type
    struct_alignment_test* = struct_alignment_test_520094152
else:
  static :
    hint("Declaration of " & "struct_alignment_test" &
        " already exists, not redeclaring")
when not declared(Sandbox):
  type
    Sandbox* = Sandbox_520095202
else:
  static :
    hint("Declaration of " & "Sandbox" & " already exists, not redeclaring")
when not declared(PenAxisEvent):
  type
    PenAxisEvent* = PenAxisEvent_520094730
else:
  static :
    hint("Declaration of " & "PenAxisEvent" & " already exists, not redeclaring")
when not declared(GPUVertexBufferDescription):
  type
    GPUVertexBufferDescription* = GPUVertexBufferDescription_520094962
else:
  static :
    hint("Declaration of " & "GPUVertexBufferDescription" &
        " already exists, not redeclaring")
when not declared(ProcessIO):
  type
    ProcessIO* = ProcessIO_520095166
else:
  static :
    hint("Declaration of " & "ProcessIO" & " already exists, not redeclaring")
when not declared(PenInputFlags):
  type
    PenInputFlags* = PenInputFlags_520094582
else:
  static :
    hint("Declaration of " & "PenInputFlags" &
        " already exists, not redeclaring")
when not declared(enum_PropertyType):
  type
    enum_PropertyType* = enum_PropertyType_520094218
else:
  static :
    hint("Declaration of " & "enum_PropertyType" &
        " already exists, not redeclaring")
when not declared(AsyncIOTaskType):
  type
    AsyncIOTaskType* = AsyncIOTaskType_520094194
else:
  static :
    hint("Declaration of " & "AsyncIOTaskType" &
        " already exists, not redeclaring")
when not declared(struct_GPUVertexInputState):
  type
    struct_GPUVertexInputState* = struct_GPUVertexInputState_520094968
else:
  static :
    hint("Declaration of " & "struct_GPUVertexInputState" &
        " already exists, not redeclaring")
when not declared(ColorType):
  type
    ColorType* = ColorType_520094322
else:
  static :
    hint("Declaration of " & "ColorType" & " already exists, not redeclaring")
when not declared(Rect):
  type
    Rect* = Rect_520094374
else:
  static :
    hint("Declaration of " & "Rect" & " already exists, not redeclaring")
when not declared(AudioDeviceID):
  type
    AudioDeviceID* = AudioDeviceID_520094274
else:
  static :
    hint("Declaration of " & "AudioDeviceID" &
        " already exists, not redeclaring")
when not declared(struct_GPUIndirectDispatchCommand):
  type
    struct_GPUIndirectDispatchCommand* = struct_GPUIndirectDispatchCommand_520094952
else:
  static :
    hint("Declaration of " & "struct_GPUIndirectDispatchCommand" &
        " already exists, not redeclaring")
when not declared(GPUViewport):
  type
    GPUViewport* = GPUViewport_520094914
else:
  static :
    hint("Declaration of " & "GPUViewport" & " already exists, not redeclaring")
when not declared(AtomicU32):
  type
    AtomicU32* = AtomicU32_520094214
else:
  static :
    hint("Declaration of " & "AtomicU32" & " already exists, not redeclaring")
when not declared(calloc_func):
  type
    calloc_func* = calloc_func_520094162
else:
  static :
    hint("Declaration of " & "calloc_func" & " already exists, not redeclaring")
when not declared(enum_ThreadPriority):
  type
    enum_ThreadPriority* = enum_ThreadPriority_520094232
else:
  static :
    hint("Declaration of " & "enum_ThreadPriority" &
        " already exists, not redeclaring")
when not declared(struct_PenProximityEvent):
  type
    struct_PenProximityEvent* = struct_PenProximityEvent_520094712
else:
  static :
    hint("Declaration of " & "struct_PenProximityEvent" &
        " already exists, not redeclaring")
when not declared(struct_Texture):
  type
    struct_Texture* = struct_Texture_520095182
else:
  static :
    hint("Declaration of " & "struct_Texture" &
        " already exists, not redeclaring")
when not declared(HapticPeriodic):
  type
    HapticPeriodic* = HapticPeriodic_520095064
else:
  static :
    hint("Declaration of " & "HapticPeriodic" &
        " already exists, not redeclaring")
when not declared(KeyboardEvent):
  type
    KeyboardEvent* = KeyboardEvent_520094622
else:
  static :
    hint("Declaration of " & "KeyboardEvent" &
        " already exists, not redeclaring")
when not declared(struct_UserEvent):
  type
    struct_UserEvent* = struct_UserEvent_520094748
else:
  static :
    hint("Declaration of " & "struct_UserEvent" &
        " already exists, not redeclaring")
when not declared(struct_GPUTransferBufferLocation):
  type
    struct_GPUTransferBufferLocation* = struct_GPUTransferBufferLocation_520094920
else:
  static :
    hint("Declaration of " & "struct_GPUTransferBufferLocation" &
        " already exists, not redeclaring")
when not declared(struct_GPUIndirectDrawCommand):
  type
    struct_GPUIndirectDrawCommand* = struct_GPUIndirectDrawCommand_520094944
else:
  static :
    hint("Declaration of " & "struct_GPUIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(MessageBoxColorType):
  type
    MessageBoxColorType* = MessageBoxColorType_520095150
else:
  static :
    hint("Declaration of " & "MessageBoxColorType" &
        " already exists, not redeclaring")
when not declared(MessageBoxColor):
  type
    MessageBoxColor* = MessageBoxColor_520095146
else:
  static :
    hint("Declaration of " & "MessageBoxColor" &
        " already exists, not redeclaring")
when not declared(enum_TransferCharacteristics):
  type
    enum_TransferCharacteristics* = enum_TransferCharacteristics_520094332
else:
  static :
    hint("Declaration of " & "enum_TransferCharacteristics" &
        " already exists, not redeclaring")
when not declared(struct_GPUStencilOpState):
  type
    struct_GPUStencilOpState* = struct_GPUStencilOpState_520094972
else:
  static :
    hint("Declaration of " & "struct_GPUStencilOpState" &
        " already exists, not redeclaring")
when not declared(struct_GPUBufferCreateInfo):
  type
    struct_GPUBufferCreateInfo* = struct_GPUBufferCreateInfo_520094988
else:
  static :
    hint("Declaration of " & "struct_GPUBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(LogOutputFunction):
  type
    LogOutputFunction* = LogOutputFunction_520095134
else:
  static :
    hint("Declaration of " & "LogOutputFunction" &
        " already exists, not redeclaring")
when not declared(enum_InitStatus):
  type
    enum_InitStatus* = enum_InitStatus_520094248
else:
  static :
    hint("Declaration of " & "enum_InitStatus" &
        " already exists, not redeclaring")
when not declared(EventType):
  type
    EventType* = EventType_520094602
else:
  static :
    hint("Declaration of " & "EventType" & " already exists, not redeclaring")
when not declared(struct_KeyboardEvent):
  type
    struct_KeyboardEvent* = struct_KeyboardEvent_520094620
else:
  static :
    hint("Declaration of " & "struct_KeyboardEvent" &
        " already exists, not redeclaring")
when not declared(TimeFormat):
  type
    TimeFormat* = TimeFormat_520095214
else:
  static :
    hint("Declaration of " & "TimeFormat" & " already exists, not redeclaring")
when not declared(struct_GPUTextureTransferInfo):
  type
    struct_GPUTextureTransferInfo* = struct_GPUTextureTransferInfo_520094916
else:
  static :
    hint("Declaration of " & "struct_GPUTextureTransferInfo" &
        " already exists, not redeclaring")
when not declared(TouchDeviceType):
  type
    TouchDeviceType* = TouchDeviceType_520094594
else:
  static :
    hint("Declaration of " & "TouchDeviceType" &
        " already exists, not redeclaring")
when not declared(struct_GPUDepthStencilTargetInfo):
  type
    struct_GPUDepthStencilTargetInfo* = struct_GPUDepthStencilTargetInfo_520095028
else:
  static :
    hint("Declaration of " & "struct_GPUDepthStencilTargetInfo" &
        " already exists, not redeclaring")
when not declared(WindowsMessageHook):
  type
    WindowsMessageHook* = WindowsMessageHook_520095194
else:
  static :
    hint("Declaration of " & "WindowsMessageHook" &
        " already exists, not redeclaring")
when not declared(struct_GPUTextureRegion):
  type
    struct_GPUTextureRegion* = struct_GPUTextureRegion_520094928
else:
  static :
    hint("Declaration of " & "struct_GPUTextureRegion" &
        " already exists, not redeclaring")
when not declared(struct_GPUBufferLocation):
  type
    struct_GPUBufferLocation* = struct_GPUBufferLocation_520094936
else:
  static :
    hint("Declaration of " & "struct_GPUBufferLocation" &
        " already exists, not redeclaring")
when not declared(struct_TextEditingCandidatesEvent):
  type
    struct_TextEditingCandidatesEvent* = struct_TextEditingCandidatesEvent_520094628
else:
  static :
    hint("Declaration of " & "struct_TextEditingCandidatesEvent" &
        " already exists, not redeclaring")
when not declared(BlendMode):
  type
    BlendMode* = BlendMode_520094286
else:
  static :
    hint("Declaration of " & "BlendMode" & " already exists, not redeclaring")
when not declared(DisplayOrientation):
  type
    DisplayOrientation* = DisplayOrientation_520094426
else:
  static :
    hint("Declaration of " & "DisplayOrientation" &
        " already exists, not redeclaring")
when not declared(UserEvent_typedef):
  type
    UserEvent_typedef* = UserEvent_typedef_520094750
else:
  static :
    hint("Declaration of " & "UserEvent_typedef" &
        " already exists, not redeclaring")
when not declared(GPUDepthStencilState):
  type
    GPUDepthStencilState* = GPUDepthStencilState_520095006
else:
  static :
    hint("Declaration of " & "GPUDepthStencilState" &
        " already exists, not redeclaring")
when not declared(enum_FileDialogType):
  type
    enum_FileDialogType* = enum_FileDialogType_520094478
else:
  static :
    hint("Declaration of " & "enum_FileDialogType" &
        " already exists, not redeclaring")
when not declared(enum_GPUStencilOp):
  type
    enum_GPUStencilOp* = enum_GPUStencilOp_520094878
else:
  static :
    hint("Declaration of " & "enum_GPUStencilOp" &
        " already exists, not redeclaring")
when not declared(GamepadButton):
  type
    GamepadButton* = GamepadButton_520094530
else:
  static :
    hint("Declaration of " & "GamepadButton" &
        " already exists, not redeclaring")
when not declared(Gamepad):
  type
    Gamepad* = Gamepad_520094522
else:
  static :
    hint("Declaration of " & "Gamepad" & " already exists, not redeclaring")
when not declared(GPUDepthStencilTargetInfo):
  type
    GPUDepthStencilTargetInfo* = GPUDepthStencilTargetInfo_520095030
else:
  static :
    hint("Declaration of " & "GPUDepthStencilTargetInfo" &
        " already exists, not redeclaring")
when not declared(TimerCallback):
  type
    TimerCallback* = TimerCallback_520095218
else:
  static :
    hint("Declaration of " & "TimerCallback" &
        " already exists, not redeclaring")
when not declared(GPUTransferBufferUsage):
  type
    GPUTransferBufferUsage* = GPUTransferBufferUsage_520094846
else:
  static :
    hint("Declaration of " & "GPUTransferBufferUsage" &
        " already exists, not redeclaring")
when not declared(enum_GPUBlendOp):
  type
    enum_GPUBlendOp* = enum_GPUBlendOp_520094882
else:
  static :
    hint("Declaration of " & "enum_GPUBlendOp" &
        " already exists, not redeclaring")
when not declared(NSTimerCallback):
  type
    NSTimerCallback* = NSTimerCallback_520095220
else:
  static :
    hint("Declaration of " & "NSTimerCallback" &
        " already exists, not redeclaring")
when not declared(hid_device_info):
  type
    hid_device_info* = hid_device_info_520095096
else:
  static :
    hint("Declaration of " & "hid_device_info" &
        " already exists, not redeclaring")
when not declared(VirtualJoystickTouchpadDesc):
  type
    VirtualJoystickTouchpadDesc* = VirtualJoystickTouchpadDesc_520094512
else:
  static :
    hint("Declaration of " & "VirtualJoystickTouchpadDesc" &
        " already exists, not redeclaring")
when not declared(enum_IOStatus):
  type
    enum_IOStatus* = enum_IOStatus_520094256
else:
  static :
    hint("Declaration of " & "enum_IOStatus" &
        " already exists, not redeclaring")
when not declared(DisplayModeData):
  type
    DisplayModeData* = DisplayModeData_520094418
else:
  static :
    hint("Declaration of " & "DisplayModeData" &
        " already exists, not redeclaring")
when not declared(Uint16):
  type
    Uint16* = Uint16_520094140
else:
  static :
    hint("Declaration of " & "Uint16" & " already exists, not redeclaring")
when not declared(JoystickConnectionState):
  type
    JoystickConnectionState* = JoystickConnectionState_520094508
else:
  static :
    hint("Declaration of " & "JoystickConnectionState" &
        " already exists, not redeclaring")
when not declared(GlobFlags):
  type
    GlobFlags* = GlobFlags_520094774
else:
  static :
    hint("Declaration of " & "GlobFlags" & " already exists, not redeclaring")
when not declared(enum_GPULoadOp):
  type
    enum_GPULoadOp* = enum_GPULoadOp_520094812
else:
  static :
    hint("Declaration of " & "enum_GPULoadOp" &
        " already exists, not redeclaring")
when not declared(GPUTextureUsageFlags):
  type
    GPUTextureUsageFlags* = GPUTextureUsageFlags_520094828
else:
  static :
    hint("Declaration of " & "GPUTextureUsageFlags" &
        " already exists, not redeclaring")
when not declared(HintPriority):
  type
    HintPriority* = HintPriority_520095100
else:
  static :
    hint("Declaration of " & "HintPriority" & " already exists, not redeclaring")
when not declared(SensorEvent):
  type
    SensorEvent* = SensorEvent_520094742
else:
  static :
    hint("Declaration of " & "SensorEvent" & " already exists, not redeclaring")
when not declared(GPUGraphicsPipelineTargetInfo):
  type
    GPUGraphicsPipelineTargetInfo* = GPUGraphicsPipelineTargetInfo_520095014
else:
  static :
    hint("Declaration of " & "GPUGraphicsPipelineTargetInfo" &
        " already exists, not redeclaring")
when not declared(FlipMode):
  type
    FlipMode* = FlipMode_520094388
else:
  static :
    hint("Declaration of " & "FlipMode" & " already exists, not redeclaring")
when not declared(MessageBoxFlags):
  type
    MessageBoxFlags* = MessageBoxFlags_520095136
else:
  static :
    hint("Declaration of " & "MessageBoxFlags" &
        " already exists, not redeclaring")
when not declared(enum_GamepadBindingType):
  type
    enum_GamepadBindingType* = enum_GamepadBindingType_520094540
else:
  static :
    hint("Declaration of " & "enum_GamepadBindingType" &
        " already exists, not redeclaring")
when not declared(Condition):
  type
    Condition* = Condition_520094246
else:
  static :
    hint("Declaration of " & "Condition" & " already exists, not redeclaring")
when not declared(PathType):
  type
    PathType* = PathType_520094768
else:
  static :
    hint("Declaration of " & "PathType" & " already exists, not redeclaring")
when not declared(ArrayOrder):
  type
    ArrayOrder* = ArrayOrder_520094310
else:
  static :
    hint("Declaration of " & "ArrayOrder" & " already exists, not redeclaring")
when not declared(GPUTextureTransferInfo):
  type
    GPUTextureTransferInfo* = GPUTextureTransferInfo_520094918
else:
  static :
    hint("Declaration of " & "GPUTextureTransferInfo" &
        " already exists, not redeclaring")
when not declared(MessageBoxButtonData):
  type
    MessageBoxButtonData* = MessageBoxButtonData_520095142
else:
  static :
    hint("Declaration of " & "MessageBoxButtonData" &
        " already exists, not redeclaring")
when not declared(enum_TextureAccess):
  type
    enum_TextureAccess* = enum_TextureAccess_520095172
else:
  static :
    hint("Declaration of " & "enum_TextureAccess" &
        " already exists, not redeclaring")
when not declared(struct_MouseButtonEvent):
  type
    struct_MouseButtonEvent* = struct_MouseButtonEvent_520094644
else:
  static :
    hint("Declaration of " & "struct_MouseButtonEvent" &
        " already exists, not redeclaring")
when not declared(GPUCubeMapFace):
  type
    GPUCubeMapFace* = GPUCubeMapFace_520094840
else:
  static :
    hint("Declaration of " & "GPUCubeMapFace" &
        " already exists, not redeclaring")
when not declared(struct_KeyboardDeviceEvent):
  type
    struct_KeyboardDeviceEvent* = struct_KeyboardDeviceEvent_520094616
else:
  static :
    hint("Declaration of " & "struct_KeyboardDeviceEvent" &
        " already exists, not redeclaring")
when not declared(GPUFilter):
  type
    GPUFilter* = GPUFilter_520094894
else:
  static :
    hint("Declaration of " & "GPUFilter" & " already exists, not redeclaring")
when not declared(GPUTextureRegion):
  type
    GPUTextureRegion* = GPUTextureRegion_520094930
else:
  static :
    hint("Declaration of " & "GPUTextureRegion" &
        " already exists, not redeclaring")
when not declared(HintCallback):
  type
    HintCallback* = HintCallback_520095102
else:
  static :
    hint("Declaration of " & "HintCallback" & " already exists, not redeclaring")
when not declared(GUID):
  type
    GUID* = GUID_520094484
else:
  static :
    hint("Declaration of " & "GUID" & " already exists, not redeclaring")
when not declared(Event):
  type
    Event* = Event_520094754
else:
  static :
    hint("Declaration of " & "Event" & " already exists, not redeclaring")
when not declared(Time):
  type
    Time* = Time_520094150
else:
  static :
    hint("Declaration of " & "Time" & " already exists, not redeclaring")
when not declared(enum_SystemCursor):
  type
    enum_SystemCursor* = enum_SystemCursor_520094570
else:
  static :
    hint("Declaration of " & "enum_SystemCursor" &
        " already exists, not redeclaring")
when not declared(enum_EnumerationResult):
  type
    enum_EnumerationResult* = enum_EnumerationResult_520094776
else:
  static :
    hint("Declaration of " & "enum_EnumerationResult" &
        " already exists, not redeclaring")
when not declared(LogPriority):
  type
    LogPriority* = LogPriority_520095132
else:
  static :
    hint("Declaration of " & "LogPriority" & " already exists, not redeclaring")
when not declared(enum_PowerState):
  type
    enum_PowerState* = enum_PowerState_520094486
else:
  static :
    hint("Declaration of " & "enum_PowerState" &
        " already exists, not redeclaring")
when not declared(enum_SensorType):
  type
    enum_SensorType* = enum_SensorType_520094494
else:
  static :
    hint("Declaration of " & "enum_SensorType" &
        " already exists, not redeclaring")
when not declared(SensorID):
  type
    SensorID* = SensorID_520094492
else:
  static :
    hint("Declaration of " & "SensorID" & " already exists, not redeclaring")
when not declared(GPUColorTargetBlendState):
  type
    GPUColorTargetBlendState* = GPUColorTargetBlendState_520094978
else:
  static :
    hint("Declaration of " & "GPUColorTargetBlendState" &
        " already exists, not redeclaring")
when not declared(enum_GPUSwapchainComposition):
  type
    enum_GPUSwapchainComposition* = enum_GPUSwapchainComposition_520094908
else:
  static :
    hint("Declaration of " & "enum_GPUSwapchainComposition" &
        " already exists, not redeclaring")
when not declared(struct_HapticLeftRight):
  type
    struct_HapticLeftRight* = struct_HapticLeftRight_520095074
else:
  static :
    hint("Declaration of " & "struct_HapticLeftRight" &
        " already exists, not redeclaring")
when not declared(AssertData):
  type
    AssertData* = AssertData_520094186
else:
  static :
    hint("Declaration of " & "AssertData" & " already exists, not redeclaring")
when not declared(EventAction):
  type
    EventAction* = EventAction_520094758
else:
  static :
    hint("Declaration of " & "EventAction" & " already exists, not redeclaring")
when not declared(MouseMotionEvent):
  type
    MouseMotionEvent* = MouseMotionEvent_520094642
else:
  static :
    hint("Declaration of " & "MouseMotionEvent" &
        " already exists, not redeclaring")
when not declared(struct_MouseMotionEvent):
  type
    struct_MouseMotionEvent* = struct_MouseMotionEvent_520094640
else:
  static :
    hint("Declaration of " & "struct_MouseMotionEvent" &
        " already exists, not redeclaring")
when not declared(AudioDeviceEvent):
  type
    AudioDeviceEvent* = AudioDeviceEvent_520094698
else:
  static :
    hint("Declaration of " & "AudioDeviceEvent" &
        " already exists, not redeclaring")
when not declared(Keymod):
  type
    Keymod* = Keymod_520094554
else:
  static :
    hint("Declaration of " & "Keymod" & " already exists, not redeclaring")
when not declared(struct_GPUColorTargetDescription):
  type
    struct_GPUColorTargetDescription* = struct_GPUColorTargetDescription_520095008
else:
  static :
    hint("Declaration of " & "struct_GPUColorTargetDescription" &
        " already exists, not redeclaring")
when not declared(enum_DUMMY_ENUM):
  type
    enum_DUMMY_ENUM* = enum_DUMMY_ENUM_520094156
else:
  static :
    hint("Declaration of " & "enum_DUMMY_ENUM" &
        " already exists, not redeclaring")
when not declared(Cursor):
  type
    Cursor* = Cursor_520094568
else:
  static :
    hint("Declaration of " & "Cursor" & " already exists, not redeclaring")
when not declared(Storage):
  type
    Storage* = Storage_520095190
else:
  static :
    hint("Declaration of " & "Storage" & " already exists, not redeclaring")
when not declared(enum_EventAction):
  type
    enum_EventAction* = enum_EventAction_520094756
else:
  static :
    hint("Declaration of " & "enum_EventAction" &
        " already exists, not redeclaring")
when not declared(struct_GamepadButtonEvent):
  type
    struct_GamepadButtonEvent* = struct_GamepadButtonEvent_520094680
else:
  static :
    hint("Declaration of " & "struct_GamepadButtonEvent" &
        " already exists, not redeclaring")
when not declared(GPUTransferBuffer):
  type
    GPUTransferBuffer* = GPUTransferBuffer_520094786
else:
  static :
    hint("Declaration of " & "GPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(GLContext):
  type
    GLContext* = GLContext_520094436
else:
  static :
    hint("Declaration of " & "GLContext" & " already exists, not redeclaring")
when not declared(struct_RenderEvent):
  type
    struct_RenderEvent* = struct_RenderEvent_520094704
else:
  static :
    hint("Declaration of " & "struct_RenderEvent" &
        " already exists, not redeclaring")
when not declared(struct_JoyDeviceEvent):
  type
    struct_JoyDeviceEvent* = struct_JoyDeviceEvent_520094668
else:
  static :
    hint("Declaration of " & "struct_JoyDeviceEvent" &
        " already exists, not redeclaring")
when not declared(iconv_t):
  type
    iconv_t* = iconv_t_520094176
else:
  static :
    hint("Declaration of " & "iconv_t" & " already exists, not redeclaring")
when not declared(ColorRange):
  type
    ColorRange* = ColorRange_520094326
else:
  static :
    hint("Declaration of " & "ColorRange" & " already exists, not redeclaring")
when not declared(struct_GPUSamplerCreateInfo):
  type
    struct_GPUSamplerCreateInfo* = struct_GPUSamplerCreateInfo_520094956
else:
  static :
    hint("Declaration of " & "struct_GPUSamplerCreateInfo" &
        " already exists, not redeclaring")
when not declared(Texture):
  type
    Texture* = Texture_520095184
else:
  static :
    hint("Declaration of " & "Texture" & " already exists, not redeclaring")
when not declared(SensorType):
  type
    SensorType* = SensorType_520094496
else:
  static :
    hint("Declaration of " & "SensorType" & " already exists, not redeclaring")
when not declared(enum_Folder):
  type
    enum_Folder* = enum_Folder_520094762
else:
  static :
    hint("Declaration of " & "enum_Folder" & " already exists, not redeclaring")
when not declared(enum_AsyncIOResult):
  type
    enum_AsyncIOResult* = enum_AsyncIOResult_520094196
else:
  static :
    hint("Declaration of " & "enum_AsyncIOResult" &
        " already exists, not redeclaring")
when not declared(PackedOrder):
  type
    PackedOrder* = PackedOrder_520094306
else:
  static :
    hint("Declaration of " & "PackedOrder" & " already exists, not redeclaring")
when not declared(ClipboardEvent):
  type
    ClipboardEvent* = ClipboardEvent_520094738
else:
  static :
    hint("Declaration of " & "ClipboardEvent" &
        " already exists, not redeclaring")
when not declared(GPUColorTargetInfo):
  type
    GPUColorTargetInfo* = GPUColorTargetInfo_520095026
else:
  static :
    hint("Declaration of " & "GPUColorTargetInfo" &
        " already exists, not redeclaring")
when not declared(JoystickType):
  type
    JoystickType* = JoystickType_520094504
else:
  static :
    hint("Declaration of " & "JoystickType" & " already exists, not redeclaring")
when not declared(struct_CommonEvent):
  type
    struct_CommonEvent* = struct_CommonEvent_520094604
else:
  static :
    hint("Declaration of " & "struct_CommonEvent" &
        " already exists, not redeclaring")
when not declared(enum_GPUTransferBufferUsage):
  type
    enum_GPUTransferBufferUsage* = enum_GPUTransferBufferUsage_520094844
else:
  static :
    hint("Declaration of " & "enum_GPUTransferBufferUsage" &
        " already exists, not redeclaring")
when not declared(GPUVertexInputRate):
  type
    GPUVertexInputRate* = GPUVertexInputRate_520094860
else:
  static :
    hint("Declaration of " & "GPUVertexInputRate" &
        " already exists, not redeclaring")
when not declared(FRect):
  type
    FRect* = FRect_520094378
else:
  static :
    hint("Declaration of " & "FRect" & " already exists, not redeclaring")
when not declared(struct_PenButtonEvent):
  type
    struct_PenButtonEvent* = struct_PenButtonEvent_520094724
else:
  static :
    hint("Declaration of " & "struct_PenButtonEvent" &
        " already exists, not redeclaring")
when not declared(GamepadBindingType):
  type
    GamepadBindingType* = GamepadBindingType_520094542
else:
  static :
    hint("Declaration of " & "GamepadBindingType" &
        " already exists, not redeclaring")
when not declared(struct_GPUGraphicsPipelineCreateInfo):
  type
    struct_GPUGraphicsPipelineCreateInfo* = struct_GPUGraphicsPipelineCreateInfo_520095016
else:
  static :
    hint("Declaration of " & "struct_GPUGraphicsPipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(CompareCallback):
  type
    CompareCallback* = CompareCallback_520094170
else:
  static :
    hint("Declaration of " & "CompareCallback" &
        " already exists, not redeclaring")
when not declared(AsyncIOOutcome):
  type
    AsyncIOOutcome* = AsyncIOOutcome_520094202
else:
  static :
    hint("Declaration of " & "AsyncIOOutcome" &
        " already exists, not redeclaring")
when not declared(ThreadFunction):
  type
    ThreadFunction* = ThreadFunction_520094236
else:
  static :
    hint("Declaration of " & "ThreadFunction" &
        " already exists, not redeclaring")
when not declared(MouseWheelEvent):
  type
    MouseWheelEvent* = MouseWheelEvent_520094650
else:
  static :
    hint("Declaration of " & "MouseWheelEvent" &
        " already exists, not redeclaring")
when not declared(PenButtonEvent):
  type
    PenButtonEvent* = PenButtonEvent_520094726
else:
  static :
    hint("Declaration of " & "PenButtonEvent" &
        " already exists, not redeclaring")
when not declared(struct_DropEvent):
  type
    struct_DropEvent* = struct_DropEvent_520094732
else:
  static :
    hint("Declaration of " & "struct_DropEvent" &
        " already exists, not redeclaring")
when not declared(struct_QuitEvent):
  type
    struct_QuitEvent* = struct_QuitEvent_520094744
else:
  static :
    hint("Declaration of " & "struct_QuitEvent" &
        " already exists, not redeclaring")
when not declared(struct_ClipboardEvent):
  type
    struct_ClipboardEvent* = struct_ClipboardEvent_520094736
else:
  static :
    hint("Declaration of " & "struct_ClipboardEvent" &
        " already exists, not redeclaring")
when not declared(FlashOperation):
  type
    FlashOperation* = FlashOperation_520094434
else:
  static :
    hint("Declaration of " & "FlashOperation" &
        " already exists, not redeclaring")
when not declared(EGLAttribArrayCallback):
  type
    EGLAttribArrayCallback* = EGLAttribArrayCallback_520094450
else:
  static :
    hint("Declaration of " & "EGLAttribArrayCallback" &
        " already exists, not redeclaring")
when not declared(WindowEvent):
  type
    WindowEvent* = WindowEvent_520094614
else:
  static :
    hint("Declaration of " & "WindowEvent" & " already exists, not redeclaring")
when not declared(GPUTransferBufferCreateInfo):
  type
    GPUTransferBufferCreateInfo* = GPUTransferBufferCreateInfo_520094994
else:
  static :
    hint("Declaration of " & "GPUTransferBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(enum_GPUVertexElementFormat):
  type
    enum_GPUVertexElementFormat* = enum_GPUVertexElementFormat_520094854
else:
  static :
    hint("Declaration of " & "enum_GPUVertexElementFormat" &
        " already exists, not redeclaring")
when not declared(enum_GPUIndexElementSize):
  type
    enum_GPUIndexElementSize* = enum_GPUIndexElementSize_520094820
else:
  static :
    hint("Declaration of " & "enum_GPUIndexElementSize" &
        " already exists, not redeclaring")
when not declared(MessageBoxButtonFlags):
  type
    MessageBoxButtonFlags* = MessageBoxButtonFlags_520095138
else:
  static :
    hint("Declaration of " & "MessageBoxButtonFlags" &
        " already exists, not redeclaring")
when not declared(TLSID):
  type
    TLSID* = TLSID_520094230
else:
  static :
    hint("Declaration of " & "TLSID" & " already exists, not redeclaring")
when not declared(CleanupPropertyCallback):
  type
    CleanupPropertyCallback* = CleanupPropertyCallback_520094222
else:
  static :
    hint("Declaration of " & "CleanupPropertyCallback" &
        " already exists, not redeclaring")
when not declared(GPUBuffer):
  type
    GPUBuffer* = GPUBuffer_520094784
else:
  static :
    hint("Declaration of " & "GPUBuffer" & " already exists, not redeclaring")
when not declared(GLContextReleaseFlag_typedef):
  type
    GLContextReleaseFlag_typedef* = GLContextReleaseFlag_typedef_520094462
else:
  static :
    hint("Declaration of " & "GLContextReleaseFlag_typedef" &
        " already exists, not redeclaring")
when not declared(enum_GPUTextureType):
  type
    enum_GPUTextureType* = enum_GPUTextureType_520094830
else:
  static :
    hint("Declaration of " & "enum_GPUTextureType" &
        " already exists, not redeclaring")
when not declared(struct_GamepadBinding):
  type
    struct_GamepadBinding* = struct_GamepadBinding_520094544
else:
  static :
    hint("Declaration of " & "struct_GamepadBinding" &
        " already exists, not redeclaring")
when not declared(struct_MessageBoxColor):
  type
    struct_MessageBoxColor* = struct_MessageBoxColor_520095144
else:
  static :
    hint("Declaration of " & "struct_MessageBoxColor" &
        " already exists, not redeclaring")
when not declared(GPUStencilOpState):
  type
    GPUStencilOpState* = GPUStencilOpState_520094974
else:
  static :
    hint("Declaration of " & "GPUStencilOpState" &
        " already exists, not redeclaring")
when not declared(TLSDestructorCallback):
  type
    TLSDestructorCallback* = TLSDestructorCallback_520094238
else:
  static :
    hint("Declaration of " & "TLSDestructorCallback" &
        " already exists, not redeclaring")
when not declared(enum_PackedLayout):
  type
    enum_PackedLayout* = enum_PackedLayout_520094312
else:
  static :
    hint("Declaration of " & "enum_PackedLayout" &
        " already exists, not redeclaring")
when not declared(enum_FlashOperation):
  type
    enum_FlashOperation* = enum_FlashOperation_520094432
else:
  static :
    hint("Declaration of " & "enum_FlashOperation" &
        " already exists, not redeclaring")
when not declared(enum_GamepadButtonLabel):
  type
    enum_GamepadButtonLabel* = enum_GamepadButtonLabel_520094532
else:
  static :
    hint("Declaration of " & "enum_GamepadButtonLabel" &
        " already exists, not redeclaring")
when not declared(Keycode):
  type
    Keycode* = Keycode_520094552
else:
  static :
    hint("Declaration of " & "Keycode" & " already exists, not redeclaring")
when not declared(GPUFence):
  type
    GPUFence* = GPUFence_520094806
else:
  static :
    hint("Declaration of " & "GPUFence" & " already exists, not redeclaring")
when not declared(enum_ColorPrimaries):
  type
    enum_ColorPrimaries* = enum_ColorPrimaries_520094328
else:
  static :
    hint("Declaration of " & "enum_ColorPrimaries" &
        " already exists, not redeclaring")
when not declared(struct_HapticPeriodic):
  type
    struct_HapticPeriodic* = struct_HapticPeriodic_520095062
else:
  static :
    hint("Declaration of " & "struct_HapticPeriodic" &
        " already exists, not redeclaring")
when not declared(enum_CameraPosition):
  type
    enum_CameraPosition* = enum_CameraPosition_520094402
else:
  static :
    hint("Declaration of " & "enum_CameraPosition" &
        " already exists, not redeclaring")
when not declared(struct_Point):
  type
    struct_Point* = struct_Point_520094364
else:
  static :
    hint("Declaration of " & "struct_Point" & " already exists, not redeclaring")
when not declared(GPUComputePipeline):
  type
    GPUComputePipeline* = GPUComputePipeline_520094794
else:
  static :
    hint("Declaration of " & "GPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(enum_GamepadButton):
  type
    enum_GamepadButton* = enum_GamepadButton_520094528
else:
  static :
    hint("Declaration of " & "enum_GamepadButton" &
        " already exists, not redeclaring")
when not declared(MSG):
  type
    MSG* = MSG_520095192
else:
  static :
    hint("Declaration of " & "MSG" & " already exists, not redeclaring")
when not declared(struct_AssertData):
  type
    struct_AssertData* = struct_AssertData_520094184
else:
  static :
    hint("Declaration of " & "struct_AssertData" &
        " already exists, not redeclaring")
when not declared(enum_BlendOperation):
  type
    enum_BlendOperation* = enum_BlendOperation_520094288
else:
  static :
    hint("Declaration of " & "enum_BlendOperation" &
        " already exists, not redeclaring")
when not declared(struct_GUID):
  type
    struct_GUID* = struct_GUID_520094482
else:
  static :
    hint("Declaration of " & "struct_GUID" & " already exists, not redeclaring")
when not declared(AssertionHandler):
  type
    AssertionHandler* = AssertionHandler_520094188
else:
  static :
    hint("Declaration of " & "AssertionHandler" &
        " already exists, not redeclaring")
when not declared(enum_GPUSampleCount):
  type
    enum_GPUSampleCount* = enum_GPUSampleCount_520094834
else:
  static :
    hint("Declaration of " & "enum_GPUSampleCount" &
        " already exists, not redeclaring")
when not declared(enum_GPUPresentMode):
  type
    enum_GPUPresentMode* = enum_GPUPresentMode_520094904
else:
  static :
    hint("Declaration of " & "enum_GPUPresentMode" &
        " already exists, not redeclaring")
when not declared(GPUBlitInfo):
  type
    GPUBlitInfo* = GPUBlitInfo_520095034
else:
  static :
    hint("Declaration of " & "GPUBlitInfo" & " already exists, not redeclaring")
when not declared(GPUStorageBufferReadWriteBinding):
  type
    GPUStorageBufferReadWriteBinding* = GPUStorageBufferReadWriteBinding_520095046
else:
  static :
    hint("Declaration of " & "GPUStorageBufferReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(enum_PixelFormat):
  type
    enum_PixelFormat* = enum_PixelFormat_520094316
else:
  static :
    hint("Declaration of " & "enum_PixelFormat" &
        " already exists, not redeclaring")
when not declared(struct_Palette):
  type
    struct_Palette* = struct_Palette_520094356
else:
  static :
    hint("Declaration of " & "struct_Palette" &
        " already exists, not redeclaring")
when not declared(PixelFormatDetails):
  type
    PixelFormatDetails* = PixelFormatDetails_520094362
else:
  static :
    hint("Declaration of " & "PixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(struct_GamepadDeviceEvent):
  type
    struct_GamepadDeviceEvent* = struct_GamepadDeviceEvent_520094684
else:
  static :
    hint("Declaration of " & "struct_GamepadDeviceEvent" &
        " already exists, not redeclaring")
when not declared(struct_HapticConstant):
  type
    struct_HapticConstant* = struct_HapticConstant_520095058
else:
  static :
    hint("Declaration of " & "struct_HapticConstant" &
        " already exists, not redeclaring")
when not declared(struct_GPUStorageBufferReadWriteBinding):
  type
    struct_GPUStorageBufferReadWriteBinding* = struct_GPUStorageBufferReadWriteBinding_520095044
else:
  static :
    hint("Declaration of " & "struct_GPUStorageBufferReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(enum_GPUFilter):
  type
    enum_GPUFilter* = enum_GPUFilter_520094892
else:
  static :
    hint("Declaration of " & "enum_GPUFilter" &
        " already exists, not redeclaring")
when not declared(TextEditingEvent):
  type
    TextEditingEvent* = TextEditingEvent_520094626
else:
  static :
    hint("Declaration of " & "TextEditingEvent" &
        " already exists, not redeclaring")
when not declared(struct_GPUShaderCreateInfo):
  type
    struct_GPUShaderCreateInfo* = struct_GPUShaderCreateInfo_520094980
else:
  static :
    hint("Declaration of " & "struct_GPUShaderCreateInfo" &
        " already exists, not redeclaring")
when not declared(Thread):
  type
    Thread* = Thread_520094226
else:
  static :
    hint("Declaration of " & "Thread" & " already exists, not redeclaring")
when not declared(LogCategory):
  type
    LogCategory* = LogCategory_520095128
else:
  static :
    hint("Declaration of " & "LogCategory" & " already exists, not redeclaring")
when not declared(Palette):
  type
    Palette* = Palette_520094358
else:
  static :
    hint("Declaration of " & "Palette" & " already exists, not redeclaring")
when not declared(DialogFileCallback):
  type
    DialogFileCallback* = DialogFileCallback_520094476
else:
  static :
    hint("Declaration of " & "DialogFileCallback" &
        " already exists, not redeclaring")
when not declared(DateTime):
  type
    DateTime* = DateTime_520095206
else:
  static :
    hint("Declaration of " & "DateTime" & " already exists, not redeclaring")
when not declared(enum_RendererLogicalPresentation):
  type
    enum_RendererLogicalPresentation* = enum_RendererLogicalPresentation_520095176
else:
  static :
    hint("Declaration of " & "enum_RendererLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(enum_GPUSamplerMipmapMode):
  type
    enum_GPUSamplerMipmapMode* = enum_GPUSamplerMipmapMode_520094896
else:
  static :
    hint("Declaration of " & "enum_GPUSamplerMipmapMode" &
        " already exists, not redeclaring")
when not declared(TextEditingCandidatesEvent):
  type
    TextEditingCandidatesEvent* = TextEditingCandidatesEvent_520094630
else:
  static :
    hint("Declaration of " & "TextEditingCandidatesEvent" &
        " already exists, not redeclaring")
when not declared(Renderer):
  type
    Renderer* = Renderer_520095180
else:
  static :
    hint("Declaration of " & "Renderer" & " already exists, not redeclaring")
when not declared(GPUCullMode):
  type
    GPUCullMode* = GPUCullMode_520094868
else:
  static :
    hint("Declaration of " & "GPUCullMode" & " already exists, not redeclaring")
when not declared(AudioFormat):
  type
    AudioFormat* = AudioFormat_520094272
else:
  static :
    hint("Declaration of " & "AudioFormat" & " already exists, not redeclaring")
when not declared(PenID):
  type
    PenID* = PenID_520094580
else:
  static :
    hint("Declaration of " & "PenID" & " already exists, not redeclaring")
when not declared(enum_ChromaLocation):
  type
    enum_ChromaLocation* = enum_ChromaLocation_520094340
else:
  static :
    hint("Declaration of " & "enum_ChromaLocation" &
        " already exists, not redeclaring")
when not declared(HapticDirection):
  type
    HapticDirection* = HapticDirection_520095056
else:
  static :
    hint("Declaration of " & "HapticDirection" &
        " already exists, not redeclaring")
when not declared(enum_PathType):
  type
    enum_PathType* = enum_PathType_520094766
else:
  static :
    hint("Declaration of " & "enum_PathType" &
        " already exists, not redeclaring")
when not declared(enum_HintPriority):
  type
    enum_HintPriority* = enum_HintPriority_520095098
else:
  static :
    hint("Declaration of " & "enum_HintPriority" &
        " already exists, not redeclaring")
when not declared(DisplayEvent):
  type
    DisplayEvent* = DisplayEvent_520094610
else:
  static :
    hint("Declaration of " & "DisplayEvent" & " already exists, not redeclaring")
when not declared(struct_GPUColorTargetInfo):
  type
    struct_GPUColorTargetInfo* = struct_GPUColorTargetInfo_520095024
else:
  static :
    hint("Declaration of " & "struct_GPUColorTargetInfo" &
        " already exists, not redeclaring")
when not declared(DateFormat):
  type
    DateFormat* = DateFormat_520095210
else:
  static :
    hint("Declaration of " & "DateFormat" & " already exists, not redeclaring")
when not declared(DialogFileFilter):
  type
    DialogFileFilter* = DialogFileFilter_520094474
else:
  static :
    hint("Declaration of " & "DialogFileFilter" &
        " already exists, not redeclaring")
when not declared(InitState):
  type
    InitState* = InitState_520094254
else:
  static :
    hint("Declaration of " & "InitState" & " already exists, not redeclaring")
when not declared(GPUStoreOp):
  type
    GPUStoreOp* = GPUStoreOp_520094818
else:
  static :
    hint("Declaration of " & "GPUStoreOp" & " already exists, not redeclaring")
when not declared(Uint64):
  type
    Uint64* = Uint64_520094148
else:
  static :
    hint("Declaration of " & "Uint64" & " already exists, not redeclaring")
when not declared(realloc_func):
  type
    realloc_func* = realloc_func_520094164
else:
  static :
    hint("Declaration of " & "realloc_func" & " already exists, not redeclaring")
when not declared(Colorspace):
  type
    Colorspace* = Colorspace_520094346
else:
  static :
    hint("Declaration of " & "Colorspace" & " already exists, not redeclaring")
when not declared(PenMotionEvent):
  type
    PenMotionEvent* = PenMotionEvent_520094718
else:
  static :
    hint("Declaration of " & "PenMotionEvent" &
        " already exists, not redeclaring")
when not declared(AsyncIOQueue):
  type
    AsyncIOQueue* = AsyncIOQueue_520094204
else:
  static :
    hint("Declaration of " & "AsyncIOQueue" & " already exists, not redeclaring")
when not declared(enum_LogCategory):
  type
    enum_LogCategory* = enum_LogCategory_520095126
else:
  static :
    hint("Declaration of " & "enum_LogCategory" &
        " already exists, not redeclaring")
when not declared(enum_BlendFactor):
  type
    enum_BlendFactor* = enum_BlendFactor_520094292
else:
  static :
    hint("Declaration of " & "enum_BlendFactor" &
        " already exists, not redeclaring")
when not declared(ThreadID):
  type
    ThreadID* = ThreadID_520094228
else:
  static :
    hint("Declaration of " & "ThreadID" & " already exists, not redeclaring")
when not declared(enum_GLAttr):
  type
    enum_GLAttr* = enum_GLAttr_520094454
else:
  static :
    hint("Declaration of " & "enum_GLAttr" & " already exists, not redeclaring")
when not declared(GPUPresentMode):
  type
    GPUPresentMode* = GPUPresentMode_520094906
else:
  static :
    hint("Declaration of " & "GPUPresentMode" &
        " already exists, not redeclaring")
when not declared(JoyAxisEvent):
  type
    JoyAxisEvent* = JoyAxisEvent_520094654
else:
  static :
    hint("Declaration of " & "JoyAxisEvent" & " already exists, not redeclaring")
when not declared(struct_Finger):
  type
    struct_Finger* = struct_Finger_520094596
else:
  static :
    hint("Declaration of " & "struct_Finger" &
        " already exists, not redeclaring")
when not declared(enum_TimeFormat):
  type
    enum_TimeFormat* = enum_TimeFormat_520095212
else:
  static :
    hint("Declaration of " & "enum_TimeFormat" &
        " already exists, not redeclaring")
when not declared(PenTouchEvent):
  type
    PenTouchEvent* = PenTouchEvent_520094722
else:
  static :
    hint("Declaration of " & "PenTouchEvent" &
        " already exists, not redeclaring")
when not declared(struct_PathInfo):
  type
    struct_PathInfo* = struct_PathInfo_520094770
else:
  static :
    hint("Declaration of " & "struct_PathInfo" &
        " already exists, not redeclaring")
when not declared(GPURenderPass):
  type
    GPURenderPass* = GPURenderPass_520094800
else:
  static :
    hint("Declaration of " & "GPURenderPass" &
        " already exists, not redeclaring")
when not declared(struct_DialogFileFilter):
  type
    struct_DialogFileFilter* = struct_DialogFileFilter_520094472
else:
  static :
    hint("Declaration of " & "struct_DialogFileFilter" &
        " already exists, not redeclaring")
when not declared(IOWhence):
  type
    IOWhence* = IOWhence_520094262
else:
  static :
    hint("Declaration of " & "IOWhence" & " already exists, not redeclaring")
when not declared(enum_JoystickConnectionState):
  type
    enum_JoystickConnectionState* = enum_JoystickConnectionState_520094506
else:
  static :
    hint("Declaration of " & "enum_JoystickConnectionState" &
        " already exists, not redeclaring")
when not declared(enum_BitmapOrder):
  type
    enum_BitmapOrder* = enum_BitmapOrder_520094300
else:
  static :
    hint("Declaration of " & "enum_BitmapOrder" &
        " already exists, not redeclaring")
when not declared(TextInputType):
  type
    TextInputType* = TextInputType_520094560
else:
  static :
    hint("Declaration of " & "TextInputType" &
        " already exists, not redeclaring")
when not declared(struct_WindowEvent):
  type
    struct_WindowEvent* = struct_WindowEvent_520094612
else:
  static :
    hint("Declaration of " & "struct_WindowEvent" &
        " already exists, not redeclaring")
when not declared(struct_GPUStorageTextureReadWriteBinding):
  type
    struct_GPUStorageTextureReadWriteBinding* = struct_GPUStorageTextureReadWriteBinding_520095048
else:
  static :
    hint("Declaration of " & "struct_GPUStorageTextureReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(Finger):
  type
    Finger* = Finger_520094598
else:
  static :
    hint("Declaration of " & "Finger" & " already exists, not redeclaring")
when not declared(enum_TouchDeviceType):
  type
    enum_TouchDeviceType* = enum_TouchDeviceType_520094592
else:
  static :
    hint("Declaration of " & "enum_TouchDeviceType" &
        " already exists, not redeclaring")
when not declared(ChromaLocation):
  type
    ChromaLocation* = ChromaLocation_520094342
else:
  static :
    hint("Declaration of " & "ChromaLocation" &
        " already exists, not redeclaring")
when not declared(GamepadAxisEvent):
  type
    GamepadAxisEvent* = GamepadAxisEvent_520094678
else:
  static :
    hint("Declaration of " & "GamepadAxisEvent" &
        " already exists, not redeclaring")
when not declared(GPUIndexedIndirectDrawCommand):
  type
    GPUIndexedIndirectDrawCommand* = GPUIndexedIndirectDrawCommand_520094950
else:
  static :
    hint("Declaration of " & "GPUIndexedIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(HapticID):
  type
    HapticID* = HapticID_520095086
else:
  static :
    hint("Declaration of " & "HapticID" & " already exists, not redeclaring")
when not declared(hid_bus_type):
  type
    hid_bus_type* = hid_bus_type_520095092
else:
  static :
    hint("Declaration of " & "hid_bus_type" & " already exists, not redeclaring")
when not declared(IOStream):
  type
    IOStream* = IOStream_520094268
else:
  static :
    hint("Declaration of " & "IOStream" & " already exists, not redeclaring")
when not declared(struct_FPoint):
  type
    struct_FPoint* = struct_FPoint_520094368
else:
  static :
    hint("Declaration of " & "struct_FPoint" &
        " already exists, not redeclaring")
when not declared(PixelType):
  type
    PixelType* = PixelType_520094298
else:
  static :
    hint("Declaration of " & "PixelType" & " already exists, not redeclaring")
when not declared(AppQuit_func):
  type
    AppQuit_func* = AppQuit_func_520095116
else:
  static :
    hint("Declaration of " & "AppQuit_func" & " already exists, not redeclaring")
when not declared(GPUCommandBuffer):
  type
    GPUCommandBuffer* = GPUCommandBuffer_520094798
else:
  static :
    hint("Declaration of " & "GPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(struct_JoyBallEvent):
  type
    struct_JoyBallEvent* = struct_JoyBallEvent_520094656
else:
  static :
    hint("Declaration of " & "struct_JoyBallEvent" &
        " already exists, not redeclaring")
when not declared(EnumeratePropertiesCallback):
  type
    EnumeratePropertiesCallback* = EnumeratePropertiesCallback_520094224
else:
  static :
    hint("Declaration of " & "EnumeratePropertiesCallback" &
        " already exists, not redeclaring")
when not declared(struct_GPUBufferRegion):
  type
    struct_GPUBufferRegion* = struct_GPUBufferRegion_520094940
else:
  static :
    hint("Declaration of " & "struct_GPUBufferRegion" &
        " already exists, not redeclaring")
when not declared(struct_TouchFingerEvent):
  type
    struct_TouchFingerEvent* = struct_TouchFingerEvent_520094708
else:
  static :
    hint("Declaration of " & "struct_TouchFingerEvent" &
        " already exists, not redeclaring")
when not declared(GPUSamplerAddressMode):
  type
    GPUSamplerAddressMode* = GPUSamplerAddressMode_520094902
else:
  static :
    hint("Declaration of " & "GPUSamplerAddressMode" &
        " already exists, not redeclaring")
when not declared(enum_Colorspace):
  type
    enum_Colorspace* = enum_Colorspace_520094344
else:
  static :
    hint("Declaration of " & "enum_Colorspace" &
        " already exists, not redeclaring")
when not declared(PenProximityEvent):
  type
    PenProximityEvent* = PenProximityEvent_520094714
else:
  static :
    hint("Declaration of " & "PenProximityEvent" &
        " already exists, not redeclaring")
when not declared(GPUBufferBinding):
  type
    GPUBufferBinding* = GPUBufferBinding_520095038
else:
  static :
    hint("Declaration of " & "GPUBufferBinding" &
        " already exists, not redeclaring")
when not declared(StorageInterface):
  type
    StorageInterface* = StorageInterface_520095188
else:
  static :
    hint("Declaration of " & "StorageInterface" &
        " already exists, not redeclaring")
when not declared(struct_StorageInterface):
  type
    struct_StorageInterface* = struct_StorageInterface_520095186
else:
  static :
    hint("Declaration of " & "struct_StorageInterface" &
        " already exists, not redeclaring")
when not declared(EGLConfig):
  type
    EGLConfig* = EGLConfig_520094440
else:
  static :
    hint("Declaration of " & "EGLConfig" & " already exists, not redeclaring")
when not declared(struct_IOStreamInterface):
  type
    struct_IOStreamInterface* = struct_IOStreamInterface_520094264
else:
  static :
    hint("Declaration of " & "struct_IOStreamInterface" &
        " already exists, not redeclaring")
when not declared(struct_JoyHatEvent):
  type
    struct_JoyHatEvent* = struct_JoyHatEvent_520094660
else:
  static :
    hint("Declaration of " & "struct_JoyHatEvent" &
        " already exists, not redeclaring")
when not declared(GamepadSensorEvent):
  type
    GamepadSensorEvent* = GamepadSensorEvent_520094694
else:
  static :
    hint("Declaration of " & "GamepadSensorEvent" &
        " already exists, not redeclaring")
when not declared(MetalView):
  type
    MetalView* = MetalView_520095160
else:
  static :
    hint("Declaration of " & "MetalView" & " already exists, not redeclaring")
when not declared(CameraDeviceEvent):
  type
    CameraDeviceEvent* = CameraDeviceEvent_520094702
else:
  static :
    hint("Declaration of " & "CameraDeviceEvent" &
        " already exists, not redeclaring")
when not declared(enum_GPUCubeMapFace):
  type
    enum_GPUCubeMapFace* = enum_GPUCubeMapFace_520094838
else:
  static :
    hint("Declaration of " & "enum_GPUCubeMapFace" &
        " already exists, not redeclaring")
when not declared(CommonEvent):
  type
    CommonEvent* = CommonEvent_520094606
else:
  static :
    hint("Declaration of " & "CommonEvent" & " already exists, not redeclaring")
when not declared(Vertex):
  type
    Vertex* = Vertex_520095170
else:
  static :
    hint("Declaration of " & "Vertex" & " already exists, not redeclaring")
when not declared(AsyncIO):
  type
    AsyncIO* = AsyncIO_520094190
else:
  static :
    hint("Declaration of " & "AsyncIO" & " already exists, not redeclaring")
when not declared(Sensor):
  type
    Sensor* = Sensor_520094490
else:
  static :
    hint("Declaration of " & "Sensor" & " already exists, not redeclaring")
when not declared(GPUShader):
  type
    GPUShader* = GPUShader_520094792
else:
  static :
    hint("Declaration of " & "GPUShader" & " already exists, not redeclaring")
when not declared(KeyboardDeviceEvent):
  type
    KeyboardDeviceEvent* = KeyboardDeviceEvent_520094618
else:
  static :
    hint("Declaration of " & "KeyboardDeviceEvent" &
        " already exists, not redeclaring")
when not declared(Window):
  type
    Window* = Window_520094428
else:
  static :
    hint("Declaration of " & "Window" & " already exists, not redeclaring")
when not declared(CompareCallback_r):
  type
    CompareCallback_r* = CompareCallback_r_520094172
else:
  static :
    hint("Declaration of " & "CompareCallback_r" &
        " already exists, not redeclaring")
when not declared(MessageBoxColorScheme):
  type
    MessageBoxColorScheme* = MessageBoxColorScheme_520095154
else:
  static :
    hint("Declaration of " & "MessageBoxColorScheme" &
        " already exists, not redeclaring")
when not declared(union_HapticEffect):
  type
    union_HapticEffect* = union_HapticEffect_520095082
else:
  static :
    hint("Declaration of " & "union_HapticEffect" &
        " already exists, not redeclaring")
when not declared(BitmapOrder):
  type
    BitmapOrder* = BitmapOrder_520094302
else:
  static :
    hint("Declaration of " & "BitmapOrder" & " already exists, not redeclaring")
when not declared(Uint32):
  type
    Uint32* = Uint32_520094144
else:
  static :
    hint("Declaration of " & "Uint32" & " already exists, not redeclaring")
when not declared(GPUShaderCreateInfo):
  type
    GPUShaderCreateInfo* = GPUShaderCreateInfo_520094982
else:
  static :
    hint("Declaration of " & "GPUShaderCreateInfo" &
        " already exists, not redeclaring")
when not declared(Haptic):
  type
    Haptic* = Haptic_520095052
else:
  static :
    hint("Declaration of " & "Haptic" & " already exists, not redeclaring")
when not declared(struct_HapticRamp):
  type
    struct_HapticRamp* = struct_HapticRamp_520095070
else:
  static :
    hint("Declaration of " & "struct_HapticRamp" &
        " already exists, not redeclaring")
when not declared(enum_GPUCullMode):
  type
    enum_GPUCullMode* = enum_GPUCullMode_520094866
else:
  static :
    hint("Declaration of " & "enum_GPUCullMode" &
        " already exists, not redeclaring")
when not declared(enum_MessageBoxColorType):
  type
    enum_MessageBoxColorType* = enum_MessageBoxColorType_520095148
else:
  static :
    hint("Declaration of " & "enum_MessageBoxColorType" &
        " already exists, not redeclaring")
when not declared(TimerID):
  type
    TimerID* = TimerID_520095216
else:
  static :
    hint("Declaration of " & "TimerID" & " already exists, not redeclaring")
when not declared(Scancode):
  type
    Scancode* = Scancode_520094550
else:
  static :
    hint("Declaration of " & "Scancode" & " already exists, not redeclaring")
when not declared(enum_ColorRange):
  type
    enum_ColorRange* = enum_ColorRange_520094324
else:
  static :
    hint("Declaration of " & "enum_ColorRange" &
        " already exists, not redeclaring")
when not declared(SharedObject):
  type
    SharedObject* = SharedObject_520095120
else:
  static :
    hint("Declaration of " & "SharedObject" & " already exists, not redeclaring")
when not declared(XEvent):
  type
    XEvent* = XEvent_520095196
else:
  static :
    hint("Declaration of " & "XEvent" & " already exists, not redeclaring")
when not declared(enum_HitTestResult):
  type
    enum_HitTestResult* = enum_HitTestResult_520094466
else:
  static :
    hint("Declaration of " & "enum_HitTestResult" &
        " already exists, not redeclaring")
when not declared(struct_AtomicInt):
  type
    struct_AtomicInt* = struct_AtomicInt_520094208
else:
  static :
    hint("Declaration of " & "struct_AtomicInt" &
        " already exists, not redeclaring")
when not declared(malloc_func):
  type
    malloc_func* = malloc_func_520094160
else:
  static :
    hint("Declaration of " & "malloc_func" & " already exists, not redeclaring")
when not declared(GamepadBinding):
  type
    GamepadBinding* = GamepadBinding_520094546
else:
  static :
    hint("Declaration of " & "GamepadBinding" &
        " already exists, not redeclaring")
when not declared(GPUVertexAttribute):
  type
    GPUVertexAttribute* = GPUVertexAttribute_520094966
else:
  static :
    hint("Declaration of " & "GPUVertexAttribute" &
        " already exists, not redeclaring")
when not declared(struct_FRect):
  type
    struct_FRect* = struct_FRect_520094376
else:
  static :
    hint("Declaration of " & "struct_FRect" & " already exists, not redeclaring")
when not declared(Locale):
  type
    Locale* = Locale_520095124
else:
  static :
    hint("Declaration of " & "Locale" & " already exists, not redeclaring")
when not declared(FunctionPointer):
  type
    FunctionPointer* = FunctionPointer_520094178
else:
  static :
    hint("Declaration of " & "FunctionPointer" &
        " already exists, not redeclaring")
when not declared(HitTestResult):
  type
    HitTestResult* = HitTestResult_520094468
else:
  static :
    hint("Declaration of " & "HitTestResult" &
        " already exists, not redeclaring")
when not declared(struct_PenTouchEvent):
  type
    struct_PenTouchEvent* = struct_PenTouchEvent_520094720
else:
  static :
    hint("Declaration of " & "struct_PenTouchEvent" &
        " already exists, not redeclaring")
when not declared(enum_GamepadAxis):
  type
    enum_GamepadAxis* = enum_GamepadAxis_520094536
else:
  static :
    hint("Declaration of " & "enum_GamepadAxis" &
        " already exists, not redeclaring")
when not declared(MouseWheelDirection):
  type
    MouseWheelDirection* = MouseWheelDirection_520094576
else:
  static :
    hint("Declaration of " & "MouseWheelDirection" &
        " already exists, not redeclaring")
when not declared(TransferCharacteristics):
  type
    TransferCharacteristics* = TransferCharacteristics_520094334
else:
  static :
    hint("Declaration of " & "TransferCharacteristics" &
        " already exists, not redeclaring")
when not declared(GPUTextureType):
  type
    GPUTextureType* = GPUTextureType_520094832
else:
  static :
    hint("Declaration of " & "GPUTextureType" &
        " already exists, not redeclaring")
when not declared(AppIterate_func):
  type
    AppIterate_func* = AppIterate_func_520095112
else:
  static :
    hint("Declaration of " & "AppIterate_func" &
        " already exists, not redeclaring")
when not declared(GPUVertexElementFormat):
  type
    GPUVertexElementFormat* = GPUVertexElementFormat_520094856
else:
  static :
    hint("Declaration of " & "GPUVertexElementFormat" &
        " already exists, not redeclaring")
when not declared(MouseDeviceEvent):
  type
    MouseDeviceEvent* = MouseDeviceEvent_520094638
else:
  static :
    hint("Declaration of " & "MouseDeviceEvent" &
        " already exists, not redeclaring")
when not declared(InitStatus):
  type
    InitStatus* = InitStatus_520094250
else:
  static :
    hint("Declaration of " & "InitStatus" & " already exists, not redeclaring")
when not declared(enum_ArrayOrder):
  type
    enum_ArrayOrder* = enum_ArrayOrder_520094308
else:
  static :
    hint("Declaration of " & "enum_ArrayOrder" &
        " already exists, not redeclaring")
when not declared(EnumerationResult):
  type
    EnumerationResult* = EnumerationResult_520094778
else:
  static :
    hint("Declaration of " & "EnumerationResult" &
        " already exists, not redeclaring")
when not declared(struct_AudioDeviceEvent):
  type
    struct_AudioDeviceEvent* = struct_AudioDeviceEvent_520094696
else:
  static :
    hint("Declaration of " & "struct_AudioDeviceEvent" &
        " already exists, not redeclaring")
when not declared(enum_GPUTextureFormat):
  type
    enum_GPUTextureFormat* = enum_GPUTextureFormat_520094824
else:
  static :
    hint("Declaration of " & "enum_GPUTextureFormat" &
        " already exists, not redeclaring")
when not declared(enum_MatrixCoefficients):
  type
    enum_MatrixCoefficients* = enum_MatrixCoefficients_520094336
else:
  static :
    hint("Declaration of " & "enum_MatrixCoefficients" &
        " already exists, not redeclaring")
when not declared(enum_GPUPrimitiveType):
  type
    enum_GPUPrimitiveType* = enum_GPUPrimitiveType_520094808
else:
  static :
    hint("Declaration of " & "enum_GPUPrimitiveType" &
        " already exists, not redeclaring")
when not declared(AppEvent_func):
  type
    AppEvent_func* = AppEvent_func_520095114
else:
  static :
    hint("Declaration of " & "AppEvent_func" &
        " already exists, not redeclaring")
when not declared(GPUSamplerCreateInfo):
  type
    GPUSamplerCreateInfo* = GPUSamplerCreateInfo_520094958
else:
  static :
    hint("Declaration of " & "GPUSamplerCreateInfo" &
        " already exists, not redeclaring")
when not declared(HapticLeftRight):
  type
    HapticLeftRight* = HapticLeftRight_520095076
else:
  static :
    hint("Declaration of " & "HapticLeftRight" &
        " already exists, not redeclaring")
when not declared(EGLIntArrayCallback):
  type
    EGLIntArrayCallback* = EGLIntArrayCallback_520094452
else:
  static :
    hint("Declaration of " & "EGLIntArrayCallback" &
        " already exists, not redeclaring")
when not declared(uintptr_t):
  type
    uintptr_t* = uintptr_t_520095222
else:
  static :
    hint("Declaration of " & "uintptr_t" & " already exists, not redeclaring")
when not declared(struct_GPUTextureLocation):
  type
    struct_GPUTextureLocation* = struct_GPUTextureLocation_520094924
else:
  static :
    hint("Declaration of " & "struct_GPUTextureLocation" &
        " already exists, not redeclaring")
when not declared(struct_GPUIndexedIndirectDrawCommand):
  type
    struct_GPUIndexedIndirectDrawCommand* = struct_GPUIndexedIndirectDrawCommand_520094948
else:
  static :
    hint("Declaration of " & "struct_GPUIndexedIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(GPUColorTargetDescription):
  type
    GPUColorTargetDescription* = GPUColorTargetDescription_520095010
else:
  static :
    hint("Declaration of " & "GPUColorTargetDescription" &
        " already exists, not redeclaring")
when not declared(DUMMY_ENUM):
  type
    DUMMY_ENUM* = DUMMY_ENUM_520094158
else:
  static :
    hint("Declaration of " & "DUMMY_ENUM" & " already exists, not redeclaring")
when not declared(struct_MessageBoxData):
  type
    struct_MessageBoxData* = struct_MessageBoxData_520095156
else:
  static :
    hint("Declaration of " & "struct_MessageBoxData" &
        " already exists, not redeclaring")
when not declared(enum_ColorType):
  type
    enum_ColorType* = enum_ColorType_520094320
else:
  static :
    hint("Declaration of " & "enum_ColorType" &
        " already exists, not redeclaring")
when not declared(VirtualJoystickSensorDesc):
  type
    VirtualJoystickSensorDesc* = VirtualJoystickSensorDesc_520094516
else:
  static :
    hint("Declaration of " & "VirtualJoystickSensorDesc" &
        " already exists, not redeclaring")
when not declared(MatrixCoefficients):
  type
    MatrixCoefficients* = MatrixCoefficients_520094338
else:
  static :
    hint("Declaration of " & "MatrixCoefficients" &
        " already exists, not redeclaring")
when not declared(enum_Scancode):
  type
    enum_Scancode* = enum_Scancode_520094548
else:
  static :
    hint("Declaration of " & "enum_Scancode" &
        " already exists, not redeclaring")
when not declared(GamepadTouchpadEvent):
  type
    GamepadTouchpadEvent* = GamepadTouchpadEvent_520094690
else:
  static :
    hint("Declaration of " & "GamepadTouchpadEvent" &
        " already exists, not redeclaring")
when not declared(GPUCopyPass):
  type
    GPUCopyPass* = GPUCopyPass_520094804
else:
  static :
    hint("Declaration of " & "GPUCopyPass" & " already exists, not redeclaring")
when not declared(GPUStorageTextureReadWriteBinding):
  type
    GPUStorageTextureReadWriteBinding* = GPUStorageTextureReadWriteBinding_520095050
else:
  static :
    hint("Declaration of " & "GPUStorageTextureReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(HapticRamp):
  type
    HapticRamp* = HapticRamp_520095072
else:
  static :
    hint("Declaration of " & "HapticRamp" & " already exists, not redeclaring")
when not declared(JoyHatEvent):
  type
    JoyHatEvent* = JoyHatEvent_520094662
else:
  static :
    hint("Declaration of " & "JoyHatEvent" & " already exists, not redeclaring")
when not declared(GPUGraphicsPipeline):
  type
    GPUGraphicsPipeline* = GPUGraphicsPipeline_520094796
else:
  static :
    hint("Declaration of " & "GPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(struct_HapticDirection):
  type
    struct_HapticDirection* = struct_HapticDirection_520095054
else:
  static :
    hint("Declaration of " & "struct_HapticDirection" &
        " already exists, not redeclaring")
when not declared(JoyBatteryEvent):
  type
    JoyBatteryEvent* = JoyBatteryEvent_520094674
else:
  static :
    hint("Declaration of " & "JoyBatteryEvent" &
        " already exists, not redeclaring")
when not declared(PowerState):
  type
    PowerState* = PowerState_520094488
else:
  static :
    hint("Declaration of " & "PowerState" & " already exists, not redeclaring")
when not declared(MainThreadCallback):
  type
    MainThreadCallback* = MainThreadCallback_520095118
else:
  static :
    hint("Declaration of " & "MainThreadCallback" &
        " already exists, not redeclaring")
when not declared(MouseButtonFlags):
  type
    MouseButtonFlags* = MouseButtonFlags_520094578
else:
  static :
    hint("Declaration of " & "MouseButtonFlags" &
        " already exists, not redeclaring")
when not declared(struct_GamepadAxisEvent):
  type
    struct_GamepadAxisEvent* = struct_GamepadAxisEvent_520094676
else:
  static :
    hint("Declaration of " & "struct_GamepadAxisEvent" &
        " already exists, not redeclaring")
when not declared(struct_MessageBoxButtonData):
  type
    struct_MessageBoxButtonData* = struct_MessageBoxButtonData_520095140
else:
  static :
    hint("Declaration of " & "struct_MessageBoxButtonData" &
        " already exists, not redeclaring")
when not declared(enum_PixelType):
  type
    enum_PixelType* = enum_PixelType_520094296
else:
  static :
    hint("Declaration of " & "enum_PixelType" &
        " already exists, not redeclaring")
when not declared(struct_Locale):
  type
    struct_Locale* = struct_Locale_520095122
else:
  static :
    hint("Declaration of " & "struct_Locale" &
        " already exists, not redeclaring")
when not declared(struct_HapticCondition):
  type
    struct_HapticCondition* = struct_HapticCondition_520095066
else:
  static :
    hint("Declaration of " & "struct_HapticCondition" &
        " already exists, not redeclaring")
when not declared(struct_CameraSpec):
  type
    struct_CameraSpec* = struct_CameraSpec_520094398
else:
  static :
    hint("Declaration of " & "struct_CameraSpec" &
        " already exists, not redeclaring")
when not declared(AudioSpec):
  type
    AudioSpec* = AudioSpec_520094278
else:
  static :
    hint("Declaration of " & "AudioSpec" & " already exists, not redeclaring")
when not declared(struct_PixelFormatDetails):
  type
    struct_PixelFormatDetails* = struct_PixelFormatDetails_520094360
else:
  static :
    hint("Declaration of " & "struct_PixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(GPUSampler):
  type
    GPUSampler* = GPUSampler_520094790
else:
  static :
    hint("Declaration of " & "GPUSampler" & " already exists, not redeclaring")
when not declared(GLContextFlag_typedef):
  type
    GLContextFlag_typedef* = GLContextFlag_typedef_520094460
else:
  static :
    hint("Declaration of " & "GLContextFlag_typedef" &
        " already exists, not redeclaring")
when not declared(Color):
  type
    Color* = Color_520094350
else:
  static :
    hint("Declaration of " & "Color" & " already exists, not redeclaring")
when not declared(struct_GPUTextureCreateInfo):
  type
    struct_GPUTextureCreateInfo* = struct_GPUTextureCreateInfo_520094984
else:
  static :
    hint("Declaration of " & "struct_GPUTextureCreateInfo" &
        " already exists, not redeclaring")
when not declared(PathInfo):
  type
    PathInfo* = PathInfo_520094772
else:
  static :
    hint("Declaration of " & "PathInfo" & " already exists, not redeclaring")
when not declared(GPUDevice):
  type
    GPUDevice* = GPUDevice_520094782
else:
  static :
    hint("Declaration of " & "GPUDevice" & " already exists, not redeclaring")
when not declared(GamepadButtonLabel):
  type
    GamepadButtonLabel* = GamepadButtonLabel_520094534
else:
  static :
    hint("Declaration of " & "GamepadButtonLabel" &
        " already exists, not redeclaring")
when not declared(GPUComputePipelineCreateInfo):
  type
    GPUComputePipelineCreateInfo* = GPUComputePipelineCreateInfo_520095022
else:
  static :
    hint("Declaration of " & "GPUComputePipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(GPUFrontFace):
  type
    GPUFrontFace* = GPUFrontFace_520094872
else:
  static :
    hint("Declaration of " & "GPUFrontFace" & " already exists, not redeclaring")
when not declared(GPUBufferUsageFlags):
  type
    GPUBufferUsageFlags* = GPUBufferUsageFlags_520094842
else:
  static :
    hint("Declaration of " & "GPUBufferUsageFlags" &
        " already exists, not redeclaring")
when not declared(GPUTextureLocation):
  type
    GPUTextureLocation* = GPUTextureLocation_520094926
else:
  static :
    hint("Declaration of " & "GPUTextureLocation" &
        " already exists, not redeclaring")
when not declared(HapticEffect):
  type
    HapticEffect* = HapticEffect_520095084
else:
  static :
    hint("Declaration of " & "HapticEffect" & " already exists, not redeclaring")
when not declared(enum_LogPriority):
  type
    enum_LogPriority* = enum_LogPriority_520095130
else:
  static :
    hint("Declaration of " & "enum_LogPriority" &
        " already exists, not redeclaring")
when not declared(Sint64):
  type
    Sint64* = Sint64_520094146
else:
  static :
    hint("Declaration of " & "Sint64" & " already exists, not redeclaring")
when not declared(GPUGraphicsPipelineCreateInfo):
  type
    GPUGraphicsPipelineCreateInfo* = GPUGraphicsPipelineCreateInfo_520095018
else:
  static :
    hint("Declaration of " & "GPUGraphicsPipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(WindowFlags):
  type
    WindowFlags* = WindowFlags_520094430
else:
  static :
    hint("Declaration of " & "WindowFlags" & " already exists, not redeclaring")
when not declared(PropertiesID):
  type
    PropertiesID* = PropertiesID_520094216
else:
  static :
    hint("Declaration of " & "PropertiesID" & " already exists, not redeclaring")
when not declared(DisplayID):
  type
    DisplayID* = DisplayID_520094410
else:
  static :
    hint("Declaration of " & "DisplayID" & " already exists, not redeclaring")
when not declared(enum_EventType):
  type
    enum_EventType* = enum_EventType_520094600
else:
  static :
    hint("Declaration of " & "enum_EventType" &
        " already exists, not redeclaring")
when not declared(struct_TextInputEvent):
  type
    struct_TextInputEvent* = struct_TextInputEvent_520094632
else:
  static :
    hint("Declaration of " & "struct_TextInputEvent" &
        " already exists, not redeclaring")
when not declared(AudioStreamCallback):
  type
    AudioStreamCallback* = AudioStreamCallback_520094282
else:
  static :
    hint("Declaration of " & "AudioStreamCallback" &
        " already exists, not redeclaring")
when not declared(FColor):
  type
    FColor* = FColor_520094354
else:
  static :
    hint("Declaration of " & "FColor" & " already exists, not redeclaring")
when not declared(ScaleMode):
  type
    ScaleMode* = ScaleMode_520094384
else:
  static :
    hint("Declaration of " & "ScaleMode" & " already exists, not redeclaring")
when not declared(struct_AtomicU32):
  type
    struct_AtomicU32* = struct_AtomicU32_520094212
else:
  static :
    hint("Declaration of " & "struct_AtomicU32" &
        " already exists, not redeclaring")
when not declared(struct_DisplayMode):
  type
    struct_DisplayMode* = struct_DisplayMode_520094420
else:
  static :
    hint("Declaration of " & "struct_DisplayMode" &
        " already exists, not redeclaring")
when not declared(FileDialogType):
  type
    FileDialogType* = FileDialogType_520094480
else:
  static :
    hint("Declaration of " & "FileDialogType" &
        " already exists, not redeclaring")
when not declared(TouchID):
  type
    TouchID* = TouchID_520094588
else:
  static :
    hint("Declaration of " & "TouchID" & " already exists, not redeclaring")
when not declared(GPUBlendFactor):
  type
    GPUBlendFactor* = GPUBlendFactor_520094888
else:
  static :
    hint("Declaration of " & "GPUBlendFactor" &
        " already exists, not redeclaring")
when not declared(enum_AsyncIOTaskType):
  type
    enum_AsyncIOTaskType* = enum_AsyncIOTaskType_520094192
else:
  static :
    hint("Declaration of " & "enum_AsyncIOTaskType" &
        " already exists, not redeclaring")
when not declared(enum_SystemTheme):
  type
    enum_SystemTheme* = enum_SystemTheme_520094414
else:
  static :
    hint("Declaration of " & "enum_SystemTheme" &
        " already exists, not redeclaring")
when not declared(GPUTexture):
  type
    GPUTexture* = GPUTexture_520094788
else:
  static :
    hint("Declaration of " & "GPUTexture" & " already exists, not redeclaring")
when not declared(struct_GPUTransferBufferCreateInfo):
  type
    struct_GPUTransferBufferCreateInfo* = struct_GPUTransferBufferCreateInfo_520094992
else:
  static :
    hint("Declaration of " & "struct_GPUTransferBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(SpinLock):
  type
    SpinLock* = SpinLock_520094206
else:
  static :
    hint("Declaration of " & "SpinLock" & " already exists, not redeclaring")
when not declared(TouchFingerEvent):
  type
    TouchFingerEvent* = TouchFingerEvent_520094710
else:
  static :
    hint("Declaration of " & "TouchFingerEvent" &
        " already exists, not redeclaring")
when not declared(GamepadDeviceEvent):
  type
    GamepadDeviceEvent* = GamepadDeviceEvent_520094686
else:
  static :
    hint("Declaration of " & "GamepadDeviceEvent" &
        " already exists, not redeclaring")
when not declared(GPUComputePass):
  type
    GPUComputePass* = GPUComputePass_520094802
else:
  static :
    hint("Declaration of " & "GPUComputePass" &
        " already exists, not redeclaring")
when not declared(WindowID):
  type
    WindowID* = WindowID_520094412
else:
  static :
    hint("Declaration of " & "WindowID" & " already exists, not redeclaring")
when not declared(struct_JoyAxisEvent):
  type
    struct_JoyAxisEvent* = struct_JoyAxisEvent_520094652
else:
  static :
    hint("Declaration of " & "struct_JoyAxisEvent" &
        " already exists, not redeclaring")
when not declared(TextureAccess):
  type
    TextureAccess* = TextureAccess_520095174
else:
  static :
    hint("Declaration of " & "TextureAccess" &
        " already exists, not redeclaring")
when not declared(struct_PenMotionEvent):
  type
    struct_PenMotionEvent* = struct_PenMotionEvent_520094716
else:
  static :
    hint("Declaration of " & "struct_PenMotionEvent" &
        " already exists, not redeclaring")
when not declared(GPUBufferCreateInfo):
  type
    GPUBufferCreateInfo* = GPUBufferCreateInfo_520094990
else:
  static :
    hint("Declaration of " & "GPUBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(struct_Rect):
  type
    struct_Rect* = struct_Rect_520094372
else:
  static :
    hint("Declaration of " & "struct_Rect" & " already exists, not redeclaring")
when not declared(VirtualJoystickDesc):
  type
    VirtualJoystickDesc* = VirtualJoystickDesc_520094520
else:
  static :
    hint("Declaration of " & "VirtualJoystickDesc" &
        " already exists, not redeclaring")
when not declared(struct_VirtualJoystickDesc):
  type
    struct_VirtualJoystickDesc* = struct_VirtualJoystickDesc_520094518
else:
  static :
    hint("Declaration of " & "struct_VirtualJoystickDesc" &
        " already exists, not redeclaring")
when not declared(Mutex):
  type
    Mutex* = Mutex_520094240
else:
  static :
    hint("Declaration of " & "Mutex" & " already exists, not redeclaring")
when not declared(IOStatus):
  type
    IOStatus* = IOStatus_520094258
else:
  static :
    hint("Declaration of " & "IOStatus" & " already exists, not redeclaring")
when not declared(enum_ScaleMode):
  type
    enum_ScaleMode* = enum_ScaleMode_520094382
else:
  static :
    hint("Declaration of " & "enum_ScaleMode" &
        " already exists, not redeclaring")
when not declared(enum_PenAxis):
  type
    enum_PenAxis* = enum_PenAxis_520094584
else:
  static :
    hint("Declaration of " & "enum_PenAxis" & " already exists, not redeclaring")
when not declared(GPUTextureCreateInfo):
  type
    GPUTextureCreateInfo* = GPUTextureCreateInfo_520094986
else:
  static :
    hint("Declaration of " & "GPUTextureCreateInfo" &
        " already exists, not redeclaring")
when not declared(JoyDeviceEvent):
  type
    JoyDeviceEvent* = JoyDeviceEvent_520094670
else:
  static :
    hint("Declaration of " & "JoyDeviceEvent" &
        " already exists, not redeclaring")
when not declared(GPUSwapchainComposition):
  type
    GPUSwapchainComposition* = GPUSwapchainComposition_520094910
else:
  static :
    hint("Declaration of " & "GPUSwapchainComposition" &
        " already exists, not redeclaring")
when not declared(struct_MouseWheelEvent):
  type
    struct_MouseWheelEvent* = struct_MouseWheelEvent_520094648
else:
  static :
    hint("Declaration of " & "struct_MouseWheelEvent" &
        " already exists, not redeclaring")
when not declared(X11EventHook):
  type
    X11EventHook* = X11EventHook_520095198
else:
  static :
    hint("Declaration of " & "X11EventHook" & " already exists, not redeclaring")
when not declared(SystemTheme):
  type
    SystemTheme* = SystemTheme_520094416
else:
  static :
    hint("Declaration of " & "SystemTheme" & " already exists, not redeclaring")
when not declared(struct_Vertex):
  type
    struct_Vertex* = struct_Vertex_520095168
else:
  static :
    hint("Declaration of " & "struct_Vertex" &
        " already exists, not redeclaring")
when not declared(ClipboardDataCallback):
  type
    ClipboardDataCallback* = ClipboardDataCallback_520094406
else:
  static :
    hint("Declaration of " & "ClipboardDataCallback" &
        " already exists, not redeclaring")
when not declared(GPUVertexInputState):
  type
    GPUVertexInputState* = GPUVertexInputState_520094970
else:
  static :
    hint("Declaration of " & "GPUVertexInputState" &
        " already exists, not redeclaring")
when not declared(enum_GamepadType):
  type
    enum_GamepadType* = enum_GamepadType_520094524
else:
  static :
    hint("Declaration of " & "enum_GamepadType" &
        " already exists, not redeclaring")
when not declared(KeyboardID):
  type
    KeyboardID* = KeyboardID_520094556
else:
  static :
    hint("Declaration of " & "KeyboardID" & " already exists, not redeclaring")
when not declared(GPUBlitRegion):
  type
    GPUBlitRegion* = GPUBlitRegion_520094934
else:
  static :
    hint("Declaration of " & "GPUBlitRegion" &
        " already exists, not redeclaring")
when not declared(MessageBoxData):
  type
    MessageBoxData* = MessageBoxData_520095158
else:
  static :
    hint("Declaration of " & "MessageBoxData" &
        " already exists, not redeclaring")
when not declared(GamepadButtonEvent):
  type
    GamepadButtonEvent* = GamepadButtonEvent_520094682
else:
  static :
    hint("Declaration of " & "GamepadButtonEvent" &
        " already exists, not redeclaring")
when not declared(internal_beginthreadex_proc_type):
  type
    internal_beginthreadex_proc_type* = internal_beginthreadex_proc_type_520095224
else:
  static :
    hint("Declaration of " & "internal_beginthreadex_proc_type" &
        " already exists, not redeclaring")
when not declared(intptr_t):
  type
    intptr_t* = intptr_t_520094446
else:
  static :
    hint("Declaration of " & "intptr_t" & " already exists, not redeclaring")
when not declared(GPUBufferRegion):
  type
    GPUBufferRegion* = GPUBufferRegion_520094942
else:
  static :
    hint("Declaration of " & "GPUBufferRegion" &
        " already exists, not redeclaring")
when not declared(free_func):
  type
    free_func* = free_func_520094166
else:
  static :
    hint("Declaration of " & "free_func" & " already exists, not redeclaring")
when not declared(FPoint):
  type
    FPoint* = FPoint_520094370
else:
  static :
    hint("Declaration of " & "FPoint" & " already exists, not redeclaring")
when not declared(struct_JoyBatteryEvent):
  type
    struct_JoyBatteryEvent* = struct_JoyBatteryEvent_520094672
else:
  static :
    hint("Declaration of " & "struct_JoyBatteryEvent" &
        " already exists, not redeclaring")
when not declared(GPUSampleCount):
  type
    GPUSampleCount* = GPUSampleCount_520094836
else:
  static :
    hint("Declaration of " & "GPUSampleCount" &
        " already exists, not redeclaring")
when not declared(HapticConstant):
  type
    HapticConstant* = HapticConstant_520095060
else:
  static :
    hint("Declaration of " & "HapticConstant" &
        " already exists, not redeclaring")
when not declared(AppResult):
  type
    AppResult* = AppResult_520095108
else:
  static :
    hint("Declaration of " & "AppResult" & " already exists, not redeclaring")
when not declared(GPUBufferLocation):
  type
    GPUBufferLocation* = GPUBufferLocation_520094938
else:
  static :
    hint("Declaration of " & "GPUBufferLocation" &
        " already exists, not redeclaring")
when not declared(struct_DateTime):
  type
    struct_DateTime* = struct_DateTime_520095204
else:
  static :
    hint("Declaration of " & "struct_DateTime" &
        " already exists, not redeclaring")
when not declared(AudioStream):
  type
    AudioStream* = AudioStream_520094280
else:
  static :
    hint("Declaration of " & "AudioStream" & " already exists, not redeclaring")
when not declared(DisplayMode):
  type
    DisplayMode* = DisplayMode_520094422
else:
  static :
    hint("Declaration of " & "DisplayMode" & " already exists, not redeclaring")
when not declared(HitTest):
  type
    HitTest* = HitTest_520094470
else:
  static :
    hint("Declaration of " & "HitTest" & " already exists, not redeclaring")
when not declared(Capitalization):
  type
    Capitalization* = Capitalization_520094564
else:
  static :
    hint("Declaration of " & "Capitalization" &
        " already exists, not redeclaring")
when not declared(MouseButtonEvent):
  type
    MouseButtonEvent* = MouseButtonEvent_520094646
else:
  static :
    hint("Declaration of " & "MouseButtonEvent" &
        " already exists, not redeclaring")
when not declared(struct_SensorEvent):
  type
    struct_SensorEvent* = struct_SensorEvent_520094740
else:
  static :
    hint("Declaration of " & "struct_SensorEvent" &
        " already exists, not redeclaring")
when not declared(Surface):
  type
    Surface* = Surface_520094392
else:
  static :
    hint("Declaration of " & "Surface" & " already exists, not redeclaring")
when not declared(union_Event):
  type
    union_Event* = union_Event_520094752
else:
  static :
    hint("Declaration of " & "union_Event" & " already exists, not redeclaring")
when not declared(enum_FlipMode):
  type
    enum_FlipMode* = enum_FlipMode_520094386
else:
  static :
    hint("Declaration of " & "enum_FlipMode" &
        " already exists, not redeclaring")
when not declared(struct_GPUGraphicsPipelineTargetInfo):
  type
    struct_GPUGraphicsPipelineTargetInfo* = struct_GPUGraphicsPipelineTargetInfo_520095012
else:
  static :
    hint("Declaration of " & "struct_GPUGraphicsPipelineTargetInfo" &
        " already exists, not redeclaring")
when not declared(EventFilter):
  type
    EventFilter* = EventFilter_520094760
else:
  static :
    hint("Declaration of " & "EventFilter" & " already exists, not redeclaring")
when not declared(enum_DateFormat):
  type
    enum_DateFormat* = enum_DateFormat_520095208
else:
  static :
    hint("Declaration of " & "enum_DateFormat" &
        " already exists, not redeclaring")
when not declared(enum_AudioFormat):
  type
    enum_AudioFormat* = enum_AudioFormat_520094270
else:
  static :
    hint("Declaration of " & "enum_AudioFormat" &
        " already exists, not redeclaring")
when not declared(enum_GPUBlendFactor):
  type
    enum_GPUBlendFactor* = enum_GPUBlendFactor_520094886
else:
  static :
    hint("Declaration of " & "enum_GPUBlendFactor" &
        " already exists, not redeclaring")
when not declared(GLContextResetNotification):
  type
    GLContextResetNotification* = GLContextResetNotification_520094464
else:
  static :
    hint("Declaration of " & "GLContextResetNotification" &
        " already exists, not redeclaring")
when not declared(AppInit_func):
  type
    AppInit_func* = AppInit_func_520095110
else:
  static :
    hint("Declaration of " & "AppInit_func" & " already exists, not redeclaring")
when not declared(PackedLayout):
  type
    PackedLayout* = PackedLayout_520094314
else:
  static :
    hint("Declaration of " & "PackedLayout" & " already exists, not redeclaring")
when not declared(struct_GPUBufferBinding):
  type
    struct_GPUBufferBinding* = struct_GPUBufferBinding_520095036
else:
  static :
    hint("Declaration of " & "struct_GPUBufferBinding" &
        " already exists, not redeclaring")
when not declared(struct_InitState):
  type
    struct_InitState* = struct_InitState_520094252
else:
  static :
    hint("Declaration of " & "struct_InitState" &
        " already exists, not redeclaring")
when not declared(BlendOperation):
  type
    BlendOperation* = BlendOperation_520094290
else:
  static :
    hint("Declaration of " & "BlendOperation" &
        " already exists, not redeclaring")
when not declared(struct_Surface):
  type
    struct_Surface* = struct_Surface_520094390
else:
  static :
    hint("Declaration of " & "struct_Surface" &
        " already exists, not redeclaring")
when not declared(MouseID):
  type
    MouseID* = MouseID_520094566
else:
  static :
    hint("Declaration of " & "MouseID" & " already exists, not redeclaring")
when not declared(TextInputEvent):
  type
    TextInputEvent* = TextInputEvent_520094634
else:
  static :
    hint("Declaration of " & "TextInputEvent" &
        " already exists, not redeclaring")
when not declared(struct_GPUBlitRegion):
  type
    struct_GPUBlitRegion* = struct_GPUBlitRegion_520094932
else:
  static :
    hint("Declaration of " & "struct_GPUBlitRegion" &
        " already exists, not redeclaring")
when not declared(struct_GPURasterizerState):
  type
    struct_GPURasterizerState* = struct_GPURasterizerState_520094996
else:
  static :
    hint("Declaration of " & "struct_GPURasterizerState" &
        " already exists, not redeclaring")
when not declared(enum_GPUSamplerAddressMode):
  type
    enum_GPUSamplerAddressMode* = enum_GPUSamplerAddressMode_520094900
else:
  static :
    hint("Declaration of " & "enum_GPUSamplerAddressMode" &
        " already exists, not redeclaring")
when not declared(DropEvent):
  type
    DropEvent* = DropEvent_520094734
else:
  static :
    hint("Declaration of " & "DropEvent" & " already exists, not redeclaring")
when not declared(enum_AppResult):
  type
    enum_AppResult* = enum_AppResult_520095106
else:
  static :
    hint("Declaration of " & "enum_AppResult" &
        " already exists, not redeclaring")
when not declared(struct_DisplayEvent):
  type
    struct_DisplayEvent* = struct_DisplayEvent_520094608
else:
  static :
    hint("Declaration of " & "struct_DisplayEvent" &
        " already exists, not redeclaring")
when not declared(PixelFormat):
  type
    PixelFormat* = PixelFormat_520094318
else:
  static :
    hint("Declaration of " & "PixelFormat" & " already exists, not redeclaring")
when not declared(CameraPosition):
  type
    CameraPosition* = CameraPosition_520094404
else:
  static :
    hint("Declaration of " & "CameraPosition" &
        " already exists, not redeclaring")
when not declared(GPUShaderStage):
  type
    GPUShaderStage* = GPUShaderStage_520094850
else:
  static :
    hint("Declaration of " & "GPUShaderStage" &
        " already exists, not redeclaring")
when not declared(CameraSpec):
  type
    CameraSpec* = CameraSpec_520094400
else:
  static :
    hint("Declaration of " & "CameraSpec" & " already exists, not redeclaring")
when not declared(Environment):
  type
    Environment* = Environment_520094168
else:
  static :
    hint("Declaration of " & "Environment" & " already exists, not redeclaring")
when not declared(Joystick):
  type
    Joystick* = Joystick_520094498
else:
  static :
    hint("Declaration of " & "Joystick" & " already exists, not redeclaring")
when not declared(struct_GPUMultisampleState):
  type
    struct_GPUMultisampleState* = struct_GPUMultisampleState_520095000
else:
  static :
    hint("Declaration of " & "struct_GPUMultisampleState" &
        " already exists, not redeclaring")
when not declared(wchar_t):
  type
    wchar_t* = wchar_t_520094174
else:
  static :
    hint("Declaration of " & "wchar_t" & " already exists, not redeclaring")
when not declared(GPUBlendOp):
  type
    GPUBlendOp* = GPUBlendOp_520094884
else:
  static :
    hint("Declaration of " & "GPUBlendOp" & " already exists, not redeclaring")
when not declared(enum_IOWhence):
  type
    enum_IOWhence* = enum_IOWhence_520094260
else:
  static :
    hint("Declaration of " & "enum_IOWhence" &
        " already exists, not redeclaring")
when not declared(JoyBallEvent):
  type
    JoyBallEvent* = JoyBallEvent_520094658
else:
  static :
    hint("Declaration of " & "JoyBallEvent" & " already exists, not redeclaring")
when not declared(GPUTextureSamplerBinding):
  type
    GPUTextureSamplerBinding* = GPUTextureSamplerBinding_520095042
else:
  static :
    hint("Declaration of " & "GPUTextureSamplerBinding" &
        " already exists, not redeclaring")
when not declared(Sint16):
  type
    Sint16* = Sint16_520094138
else:
  static :
    hint("Declaration of " & "Sint16" & " already exists, not redeclaring")
when not declared(Folder):
  type
    Folder* = Folder_520094764
else:
  static :
    hint("Declaration of " & "Folder" & " already exists, not redeclaring")
when not declared(struct_GPUViewport):
  type
    struct_GPUViewport* = struct_GPUViewport_520094912
else:
  static :
    hint("Declaration of " & "struct_GPUViewport" &
        " already exists, not redeclaring")
when not declared(AsyncIOResult):
  type
    AsyncIOResult* = AsyncIOResult_520094198
else:
  static :
    hint("Declaration of " & "AsyncIOResult" &
        " already exists, not redeclaring")
when not declared(Sint8):
  type
    Sint8* = Sint8_520094134
else:
  static :
    hint("Declaration of " & "Sint8" & " already exists, not redeclaring")
when not declared(Process):
  type
    Process* = Process_520095162
else:
  static :
    hint("Declaration of " & "Process" & " already exists, not redeclaring")
when not declared(EGLSurface):
  type
    EGLSurface* = EGLSurface_520094442
else:
  static :
    hint("Declaration of " & "EGLSurface" & " already exists, not redeclaring")
when not declared(struct_MouseDeviceEvent):
  type
    struct_MouseDeviceEvent* = struct_MouseDeviceEvent_520094636
else:
  static :
    hint("Declaration of " & "struct_MouseDeviceEvent" &
        " already exists, not redeclaring")
when not declared(struct_HapticCustom):
  type
    struct_HapticCustom* = struct_HapticCustom_520095078
else:
  static :
    hint("Declaration of " & "struct_HapticCustom" &
        " already exists, not redeclaring")
when not declared(struct_Color):
  type
    struct_Color* = struct_Color_520094348
else:
  static :
    hint("Declaration of " & "struct_Color" & " already exists, not redeclaring")
when not declared(enum_DisplayOrientation):
  type
    enum_DisplayOrientation* = enum_DisplayOrientation_520094424
else:
  static :
    hint("Declaration of " & "enum_DisplayOrientation" &
        " already exists, not redeclaring")
when not declared(enum_GPUShaderStage):
  type
    enum_GPUShaderStage* = enum_GPUShaderStage_520094848
else:
  static :
    hint("Declaration of " & "enum_GPUShaderStage" &
        " already exists, not redeclaring")
when not declared(struct_GPUVertexAttribute):
  type
    struct_GPUVertexAttribute* = struct_GPUVertexAttribute_520094964
else:
  static :
    hint("Declaration of " & "struct_GPUVertexAttribute" &
        " already exists, not redeclaring")
when not declared(GamepadAxis):
  type
    GamepadAxis* = GamepadAxis_520094538
else:
  static :
    hint("Declaration of " & "GamepadAxis" & " already exists, not redeclaring")
when not declared(struct_AudioSpec):
  type
    struct_AudioSpec* = struct_AudioSpec_520094276
else:
  static :
    hint("Declaration of " & "struct_AudioSpec" &
        " already exists, not redeclaring")
when not declared(GPURasterizerState):
  type
    GPURasterizerState* = GPURasterizerState_520094998
else:
  static :
    hint("Declaration of " & "GPURasterizerState" &
        " already exists, not redeclaring")
when not declared(CameraID):
  type
    CameraID* = CameraID_520094394
else:
  static :
    hint("Declaration of " & "CameraID" & " already exists, not redeclaring")
when not declared(enum_GPUCompareOp):
  type
    enum_GPUCompareOp* = enum_GPUCompareOp_520094874
else:
  static :
    hint("Declaration of " & "enum_GPUCompareOp" &
        " already exists, not redeclaring")
when not declared(RenderEvent):
  type
    RenderEvent* = RenderEvent_520094706
else:
  static :
    hint("Declaration of " & "RenderEvent" & " already exists, not redeclaring")
when not declared(Sint32):
  type
    Sint32* = Sint32_520094142
else:
  static :
    hint("Declaration of " & "Sint32" & " already exists, not redeclaring")
when not declared(enum_TextInputType):
  type
    enum_TextInputType* = enum_TextInputType_520094558
else:
  static :
    hint("Declaration of " & "enum_TextInputType" &
        " already exists, not redeclaring")
when not declared(GPUSamplerMipmapMode):
  type
    GPUSamplerMipmapMode* = GPUSamplerMipmapMode_520094898
else:
  static :
    hint("Declaration of " & "GPUSamplerMipmapMode" &
        " already exists, not redeclaring")
when not declared(struct_CameraDeviceEvent):
  type
    struct_CameraDeviceEvent* = struct_CameraDeviceEvent_520094700
else:
  static :
    hint("Declaration of " & "struct_CameraDeviceEvent" &
        " already exists, not redeclaring")
when not declared(EnumerateDirectoryCallback):
  type
    EnumerateDirectoryCallback* = EnumerateDirectoryCallback_520094780
else:
  static :
    hint("Declaration of " & "EnumerateDirectoryCallback" &
        " already exists, not redeclaring")
when not declared(enum_hid_bus_type):
  type
    enum_hid_bus_type* = enum_hid_bus_type_520095090
else:
  static :
    hint("Declaration of " & "enum_hid_bus_type" &
        " already exists, not redeclaring")
when not declared(GPUTextureFormat):
  type
    GPUTextureFormat* = GPUTextureFormat_520094826
else:
  static :
    hint("Declaration of " & "GPUTextureFormat" &
        " already exists, not redeclaring")
when not declared(Semaphore):
  type
    Semaphore* = Semaphore_520094244
else:
  static :
    hint("Declaration of " & "Semaphore" & " already exists, not redeclaring")
when not declared(GPUShaderFormat):
  type
    GPUShaderFormat* = GPUShaderFormat_520094852
else:
  static :
    hint("Declaration of " & "GPUShaderFormat" &
        " already exists, not redeclaring")
when not declared(RWLock):
  type
    RWLock* = RWLock_520094242
else:
  static :
    hint("Declaration of " & "RWLock" & " already exists, not redeclaring")
when not declared(AudioPostmixCallback):
  type
    AudioPostmixCallback* = AudioPostmixCallback_520094284
else:
  static :
    hint("Declaration of " & "AudioPostmixCallback" &
        " already exists, not redeclaring")
when not declared(struct_TextEditingEvent):
  type
    struct_TextEditingEvent* = struct_TextEditingEvent_520094624
else:
  static :
    hint("Declaration of " & "struct_TextEditingEvent" &
        " already exists, not redeclaring")
when not declared(HapticCondition):
  type
    HapticCondition* = HapticCondition_520095068
else:
  static :
    hint("Declaration of " & "HapticCondition" &
        " already exists, not redeclaring")
when not declared(GLProfile_typedef):
  type
    GLProfile_typedef* = GLProfile_typedef_520094458
else:
  static :
    hint("Declaration of " & "GLProfile_typedef" &
        " already exists, not redeclaring")
when not declared(ColorPrimaries):
  type
    ColorPrimaries* = ColorPrimaries_520094330
else:
  static :
    hint("Declaration of " & "ColorPrimaries" &
        " already exists, not redeclaring")
when not declared(Point):
  type
    Point* = Point_520094366
else:
  static :
    hint("Declaration of " & "Point" & " already exists, not redeclaring")
when not declared(struct_GamepadTouchpadEvent):
  type
    struct_GamepadTouchpadEvent* = struct_GamepadTouchpadEvent_520094688
else:
  static :
    hint("Declaration of " & "struct_GamepadTouchpadEvent" &
        " already exists, not redeclaring")
when not declared(JoystickID):
  type
    JoystickID* = JoystickID_520094500
else:
  static :
    hint("Declaration of " & "JoystickID" & " already exists, not redeclaring")
when not declared(HapticCustom):
  type
    HapticCustom* = HapticCustom_520095080
else:
  static :
    hint("Declaration of " & "HapticCustom" & " already exists, not redeclaring")
when not declared(EGLDisplay):
  type
    EGLDisplay* = EGLDisplay_520094438
else:
  static :
    hint("Declaration of " & "EGLDisplay" & " already exists, not redeclaring")
when not declared(JoyButtonEvent):
  type
    JoyButtonEvent* = JoyButtonEvent_520094666
else:
  static :
    hint("Declaration of " & "JoyButtonEvent" &
        " already exists, not redeclaring")
when not declared(struct_MessageBoxColorScheme):
  type
    struct_MessageBoxColorScheme* = struct_MessageBoxColorScheme_520095152
else:
  static :
    hint("Declaration of " & "struct_MessageBoxColorScheme" &
        " already exists, not redeclaring")
when not declared(GPUColorComponentFlags):
  type
    GPUColorComponentFlags* = GPUColorComponentFlags_520094890
else:
  static :
    hint("Declaration of " & "GPUColorComponentFlags" &
        " already exists, not redeclaring")
when not declared(alignment_test):
  type
    alignment_test* = alignment_test_520094154
else:
  static :
    hint("Declaration of " & "alignment_test" &
        " already exists, not redeclaring")
when not declared(AtomicInt):
  type
    AtomicInt* = AtomicInt_520094210
else:
  static :
    hint("Declaration of " & "AtomicInt" & " already exists, not redeclaring")
when not declared(enum_AssertState):
  type
    enum_AssertState* = enum_AssertState_520094180
else:
  static :
    hint("Declaration of " & "enum_AssertState" &
        " already exists, not redeclaring")
when not declared(Camera):
  type
    Camera* = Camera_520094396
else:
  static :
    hint("Declaration of " & "Camera" & " already exists, not redeclaring")
when not declared(enum_GPUStoreOp):
  type
    enum_GPUStoreOp* = enum_GPUStoreOp_520094816
else:
  static :
    hint("Declaration of " & "enum_GPUStoreOp" &
        " already exists, not redeclaring")
when not declared(PenAxis):
  type
    PenAxis* = PenAxis_520094586
else:
  static :
    hint("Declaration of " & "PenAxis" & " already exists, not redeclaring")
when not declared(struct_PenAxisEvent):
  type
    struct_PenAxisEvent* = struct_PenAxisEvent_520094728
else:
  static :
    hint("Declaration of " & "struct_PenAxisEvent" &
        " already exists, not redeclaring")
when not declared(GPULoadOp):
  type
    GPULoadOp* = GPULoadOp_520094814
else:
  static :
    hint("Declaration of " & "GPULoadOp" & " already exists, not redeclaring")
when not declared(AssertState):
  type
    AssertState* = AssertState_520094182
else:
  static :
    hint("Declaration of " & "AssertState" & " already exists, not redeclaring")
when not declared(struct_FColor):
  type
    struct_FColor* = struct_FColor_520094352
else:
  static :
    hint("Declaration of " & "struct_FColor" &
        " already exists, not redeclaring")
when not declared(FingerID):
  type
    FingerID* = FingerID_520094590
else:
  static :
    hint("Declaration of " & "FingerID" & " already exists, not redeclaring")
when not declared(enum_GPUFrontFace):
  type
    enum_GPUFrontFace* = enum_GPUFrontFace_520094870
else:
  static :
    hint("Declaration of " & "enum_GPUFrontFace" &
        " already exists, not redeclaring")
when not declared(GPUIndirectDrawCommand):
  type
    GPUIndirectDrawCommand* = GPUIndirectDrawCommand_520094946
else:
  static :
    hint("Declaration of " & "GPUIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(struct_GPUVertexBufferDescription):
  type
    struct_GPUVertexBufferDescription* = struct_GPUVertexBufferDescription_520094960
else:
  static :
    hint("Declaration of " & "struct_GPUVertexBufferDescription" &
        " already exists, not redeclaring")
when not declared(PLATFORM_WINDOWS):
  when 1 is static:
    const
      PLATFORM_WINDOWS* = 1  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_platform_defines.h:336:9
  else:
    let PLATFORM_WINDOWS* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_platform_defines.h:336:9
else:
  static :
    hint("Declaration of " & "PLATFORM_WINDOWS" &
        " already exists, not redeclaring")
when not declared(HAVE_WINAPIFAMILY_H):
  when 1 is static:
    const
      HAVE_WINAPIFAMILY_H* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_platform_defines.h:341:17
  else:
    let HAVE_WINAPIFAMILY_H* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_platform_defines.h:341:17
else:
  static :
    hint("Declaration of " & "HAVE_WINAPIFAMILY_H" &
        " already exists, not redeclaring")
when not declared(PLATFORM_WIN32):
  when 1 is static:
    const
      PLATFORM_WIN32* = 1    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_platform_defines.h:408:9
  else:
    let PLATFORM_WIN32* = 1  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_platform_defines.h:408:9
else:
  static :
    hint("Declaration of " & "PLATFORM_WIN32" &
        " already exists, not redeclaring")
when not declared(internal_alloca):
  proc internal_alloca*(internal_Size: culonglong): pointer {.cdecl,
      importc: "_alloca".}
else:
  static :
    hint("Declaration of " & "internal_alloca" &
        " already exists, not redeclaring")
when not declared(FLT_EPSILON):
  when 0.0000001192092895507812 is static:
    const
      FLT_EPSILON* = 0.0000001192092895507812 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:435:9
  else:
    let FLT_EPSILON* = 0.0000001192092895507812 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:435:9
else:
  static :
    hint("Declaration of " & "FLT_EPSILON" & " already exists, not redeclaring")
when not declared(PRIs64):
  when "I64d" is static:
    const
      PRIs64* = "I64d"       ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:445:9
  else:
    let PRIs64* = "I64d"     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:445:9
else:
  static :
    hint("Declaration of " & "PRIs64" & " already exists, not redeclaring")
when not declared(PRIu64):
  when "I64u" is static:
    const
      PRIu64* = "I64u"       ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:456:9
  else:
    let PRIu64* = "I64u"     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:456:9
else:
  static :
    hint("Declaration of " & "PRIu64" & " already exists, not redeclaring")
when not declared(PRIx64):
  when "I64x" is static:
    const
      PRIx64* = "I64x"       ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:467:9
  else:
    let PRIx64* = "I64x"     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:467:9
else:
  static :
    hint("Declaration of " & "PRIx64" & " already exists, not redeclaring")
when not declared(PRIX64_const):
  when "I64X" is static:
    const
      PRIX64_const* = "I64X" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:478:9
  else:
    let PRIX64_const* = "I64X" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:478:9
else:
  static :
    hint("Declaration of " & "PRIX64_const" & " already exists, not redeclaring")
when not declared(PRId32):
  when "d" is static:
    const
      PRId32* = "d"          ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:116:9
  else:
    let PRId32* = "d"        ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:116:9
else:
  static :
    hint("Declaration of " & "PRId32" & " already exists, not redeclaring")
when not declared(PRIu32_const):
  when "u" is static:
    const
      PRIu32_const* = "u"    ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:173:9
  else:
    let PRIu32_const* = "u"  ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:173:9
else:
  static :
    hint("Declaration of " & "PRIu32_const" & " already exists, not redeclaring")
when not declared(PRIx32_const_0FB24FBC):
  when "x" is static:
    const
      PRIx32_const_0FB24FBC* = "x" ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:192:9
  else:
    let PRIx32_const_0FB24FBC* = "x" ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:192:9
else:
  static :
    hint("Declaration of " & "PRIx32_const_0FB24FBC" &
        " already exists, not redeclaring")
when not declared(PRIX32_const_4AC38F88):
  when "X" is static:
    const
      PRIX32_const_4AC38F88* = "X" ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:211:9
  else:
    let PRIX32_const_4AC38F88* = "X" ## Generated based on C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h:211:9
else:
  static :
    hint("Declaration of " & "PRIX32_const_4AC38F88" &
        " already exists, not redeclaring")
when not declared(PRILL_PREFIX):
  when "I64" is static:
    const
      PRILL_PREFIX* = "I64"  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:518:9
  else:
    let PRILL_PREFIX* = "I64" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:518:9
else:
  static :
    hint("Declaration of " & "PRILL_PREFIX" & " already exists, not redeclaring")
when not declared(memcpy):
  proc memcpy*(dst: pointer; src: pointer; len: csize_t): pointer {.cdecl,
      importc: "SDL_memcpy".}
else:
  static :
    hint("Declaration of " & "memcpy" & " already exists, not redeclaring")
when not declared(memcpy_proc):
  proc memcpy_proc*(internal_Dst: pointer; internal_Src: pointer;
                    internal_Size: culonglong): pointer {.cdecl,
      importc: "memcpy".}
else:
  static :
    hint("Declaration of " & "memcpy_proc" & " already exists, not redeclaring")
when not declared(memmove):
  proc memmove*(dst: pointer; src: pointer; len: csize_t): pointer {.cdecl,
      importc: "SDL_memmove".}
else:
  static :
    hint("Declaration of " & "memmove" & " already exists, not redeclaring")
when not declared(memmove_proc):
  proc memmove_proc*(internal_Dst: pointer; internal_Src: pointer;
                     internal_Size: culonglong): pointer {.cdecl,
      importc: "memmove".}
else:
  static :
    hint("Declaration of " & "memmove_proc" & " already exists, not redeclaring")
when not declared(memset):
  proc memset*(dst: pointer; c: cint; len: csize_t): pointer {.cdecl,
      importc: "SDL_memset".}
else:
  static :
    hint("Declaration of " & "memset" & " already exists, not redeclaring")
when not declared(memset_proc):
  proc memset_proc*(internal_Dst: pointer; internal_Val: cint;
                    internal_Size: culonglong): pointer {.cdecl,
      importc: "memset".}
else:
  static :
    hint("Declaration of " & "memset_proc" & " already exists, not redeclaring")
when not declared(INVALID_UNICODE_CODEPOINT):
  when 65533 is static:
    const
      INVALID_UNICODE_CODEPOINT* = 65533 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:2551:9
  else:
    let INVALID_UNICODE_CODEPOINT* = 65533 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:2551:9
else:
  static :
    hint("Declaration of " & "INVALID_UNICODE_CODEPOINT" &
        " already exists, not redeclaring")
when not declared(PI_D):
  when 3.141592653589793 is static:
    const
      PI_D* = 3.141592653589793 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:2857:9
  else:
    let PI_D* = 3.141592653589793 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:2857:9
else:
  static :
    hint("Declaration of " & "PI_D" & " already exists, not redeclaring")
when not declared(PI_F):
  when 3.141592653589793 is static:
    const
      PI_F* = 3.141592653589793 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:2860:9
  else:
    let PI_F* = 3.141592653589793 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_stdinc.h:2860:9
else:
  static :
    hint("Declaration of " & "PI_F" & " already exists, not redeclaring")
when not declared(ASSERT_LEVEL):
  when 1 is static:
    const
      ASSERT_LEVEL* = 1      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_assert.h:103:9
  else:
    let ASSERT_LEVEL* = 1    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_assert.h:103:9
else:
  static :
    hint("Declaration of " & "ASSERT_LEVEL" & " already exists, not redeclaring")
when not declared(LIL_ENDIAN):
  when 1234 is static:
    const
      LIL_ENDIAN* = 1234     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_endian.h:67:9
  else:
    let LIL_ENDIAN* = 1234   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_endian.h:67:9
else:
  static :
    hint("Declaration of " & "LIL_ENDIAN" & " already exists, not redeclaring")
when not declared(BIG_ENDIAN):
  when 4321 is static:
    const
      BIG_ENDIAN* = 4321     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_endian.h:68:9
  else:
    let BIG_ENDIAN* = 4321   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_endian.h:68:9
else:
  static :
    hint("Declaration of " & "BIG_ENDIAN" & " already exists, not redeclaring")
when not declared(BYTEORDER):
  when LIL_ENDIAN is typedesc:
    type
      BYTEORDER* = LIL_ENDIAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_endian.h:93:9
  else:
    when LIL_ENDIAN is static:
      const
        BYTEORDER* = LIL_ENDIAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_endian.h:93:9
    else:
      let BYTEORDER* = LIL_ENDIAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_endian.h:93:9
else:
  static :
    hint("Declaration of " & "BYTEORDER" & " already exists, not redeclaring")
when not declared(internal_beginthreadex):
  proc internal_beginthreadex*(internal_Security: pointer;
                               internal_StackSize: cuint; internal_StartAddress: internal_beginthreadex_proc_type_520095225;
                               internal_ArgList: pointer;
                               internal_InitFlag: cuint;
                               internal_ThrdAddr: ptr cuint): uintptr_t_520095223 {.
      cdecl, importc: "_beginthreadex".}
else:
  static :
    hint("Declaration of " & "internal_beginthreadex" &
        " already exists, not redeclaring")
when not declared(internal_endthreadex):
  proc internal_endthreadex*(internal_ReturnCode: cuint): void {.cdecl,
      importc: "_endthreadex".}
else:
  static :
    hint("Declaration of " & "internal_endthreadex" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER):
  when "SDL.thread.create.entry_function" is static:
    const
      PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER* = "SDL.thread.create.entry_function" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:322:9
  else:
    let PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER* = "SDL.thread.create.entry_function" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:322:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_NAME_STRING):
  when "SDL.thread.create.name" is static:
    const
      PROP_THREAD_CREATE_NAME_STRING* = "SDL.thread.create.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:323:9
  else:
    let PROP_THREAD_CREATE_NAME_STRING* = "SDL.thread.create.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:323:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_USERDATA_POINTER):
  when "SDL.thread.create.userdata" is static:
    const
      PROP_THREAD_CREATE_USERDATA_POINTER* = "SDL.thread.create.userdata" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:324:9
  else:
    let PROP_THREAD_CREATE_USERDATA_POINTER* = "SDL.thread.create.userdata" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:324:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_USERDATA_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_STACKSIZE_NUMBER):
  when "SDL.thread.create.stacksize" is static:
    const
      PROP_THREAD_CREATE_STACKSIZE_NUMBER* = "SDL.thread.create.stacksize" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:325:9
  else:
    let PROP_THREAD_CREATE_STACKSIZE_NUMBER* = "SDL.thread.create.stacksize" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_thread.h:325:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_STACKSIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_WINDOWS_HANDLE_POINTER):
  when "SDL.iostream.windows.handle" is static:
    const
      PROP_IOSTREAM_WINDOWS_HANDLE_POINTER* = "SDL.iostream.windows.handle" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:274:9
  else:
    let PROP_IOSTREAM_WINDOWS_HANDLE_POINTER* = "SDL.iostream.windows.handle" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:274:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_WINDOWS_HANDLE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_STDIO_FILE_POINTER):
  when "SDL.iostream.stdio.file" is static:
    const
      PROP_IOSTREAM_STDIO_FILE_POINTER* = "SDL.iostream.stdio.file" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:275:9
  else:
    let PROP_IOSTREAM_STDIO_FILE_POINTER* = "SDL.iostream.stdio.file" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:275:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_STDIO_FILE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER):
  when "SDL.iostream.file_descriptor" is static:
    const
      PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER* = "SDL.iostream.file_descriptor" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:276:9
  else:
    let PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER* = "SDL.iostream.file_descriptor" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:276:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_ANDROID_AASSET_POINTER):
  when "SDL.iostream.android.aasset" is static:
    const
      PROP_IOSTREAM_ANDROID_AASSET_POINTER* = "SDL.iostream.android.aasset" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:277:9
  else:
    let PROP_IOSTREAM_ANDROID_AASSET_POINTER* = "SDL.iostream.android.aasset" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:277:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_ANDROID_AASSET_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_MEMORY_POINTER):
  when "SDL.iostream.memory.base" is static:
    const
      PROP_IOSTREAM_MEMORY_POINTER* = "SDL.iostream.memory.base" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:318:9
  else:
    let PROP_IOSTREAM_MEMORY_POINTER* = "SDL.iostream.memory.base" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:318:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_MEMORY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_MEMORY_SIZE_NUMBER):
  when "SDL.iostream.memory.size" is static:
    const
      PROP_IOSTREAM_MEMORY_SIZE_NUMBER* = "SDL.iostream.memory.size" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:319:9
  else:
    let PROP_IOSTREAM_MEMORY_SIZE_NUMBER* = "SDL.iostream.memory.size" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:319:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_MEMORY_SIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER):
  when "SDL.iostream.dynamic.memory" is static:
    const
      PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER* = "SDL.iostream.dynamic.memory" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:388:9
  else:
    let PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER* = "SDL.iostream.dynamic.memory" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:388:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER):
  when "SDL.iostream.dynamic.chunksize" is static:
    const
      PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER* = "SDL.iostream.dynamic.chunksize" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:389:9
  else:
    let PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER* = "SDL.iostream.dynamic.chunksize" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_iostream.h:389:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(AUDIO_MASK_BITSIZE):
  when cast[cuint](255'i64) is static:
    const
      AUDIO_MASK_BITSIZE* = cast[cuint](255'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:145:9
  else:
    let AUDIO_MASK_BITSIZE* = cast[cuint](255'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_audio.h:145:9
else:
  static :
    hint("Declaration of " & "AUDIO_MASK_BITSIZE" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_NONE):
  when cast[cuint](0'i64) is static:
    const
      BLENDMODE_NONE* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:54:9
  else:
    let BLENDMODE_NONE* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:54:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_NONE" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_BLEND):
  when cast[cuint](1'i64) is static:
    const
      BLENDMODE_BLEND* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:55:9
  else:
    let BLENDMODE_BLEND* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:55:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_BLEND" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_BLEND_PREMULTIPLIED):
  when cast[cuint](16'i64) is static:
    const
      BLENDMODE_BLEND_PREMULTIPLIED* = cast[cuint](16'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:56:9
  else:
    let BLENDMODE_BLEND_PREMULTIPLIED* = cast[cuint](16'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:56:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_BLEND_PREMULTIPLIED" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_ADD):
  when cast[cuint](2'i64) is static:
    const
      BLENDMODE_ADD* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:57:9
  else:
    let BLENDMODE_ADD* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:57:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_ADD" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_ADD_PREMULTIPLIED):
  when cast[cuint](32'i64) is static:
    const
      BLENDMODE_ADD_PREMULTIPLIED* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:58:9
  else:
    let BLENDMODE_ADD_PREMULTIPLIED* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:58:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_ADD_PREMULTIPLIED" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_MOD):
  when cast[cuint](4'i64) is static:
    const
      BLENDMODE_MOD* = cast[cuint](4'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:59:9
  else:
    let BLENDMODE_MOD* = cast[cuint](4'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:59:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_MOD" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_MUL):
  when cast[cuint](8'i64) is static:
    const
      BLENDMODE_MUL* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:60:9
  else:
    let BLENDMODE_MUL* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:60:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_MUL" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_INVALID):
  when cast[cuint](2147483647'i64) is static:
    const
      BLENDMODE_INVALID* = cast[cuint](2147483647'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:61:9
  else:
    let BLENDMODE_INVALID* = cast[cuint](2147483647'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_blendmode.h:61:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_INVALID" &
        " already exists, not redeclaring")
when not declared(ALPHA_OPAQUE):
  when 255 is static:
    const
      ALPHA_OPAQUE* = 255    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:48:9
  else:
    let ALPHA_OPAQUE* = 255  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:48:9
else:
  static :
    hint("Declaration of " & "ALPHA_OPAQUE" & " already exists, not redeclaring")
when not declared(ALPHA_OPAQUE_FLOAT):
  when 1.0 is static:
    const
      ALPHA_OPAQUE_FLOAT* = 1.0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:57:9
  else:
    let ALPHA_OPAQUE_FLOAT* = 1.0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:57:9
else:
  static :
    hint("Declaration of " & "ALPHA_OPAQUE_FLOAT" &
        " already exists, not redeclaring")
when not declared(ALPHA_TRANSPARENT):
  when 0 is static:
    const
      ALPHA_TRANSPARENT* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:66:9
  else:
    let ALPHA_TRANSPARENT* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:66:9
else:
  static :
    hint("Declaration of " & "ALPHA_TRANSPARENT" &
        " already exists, not redeclaring")
when not declared(ALPHA_TRANSPARENT_FLOAT):
  when 0.0 is static:
    const
      ALPHA_TRANSPARENT_FLOAT* = 0.0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:75:9
  else:
    let ALPHA_TRANSPARENT_FLOAT* = 0.0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_pixels.h:75:9
else:
  static :
    hint("Declaration of " & "ALPHA_TRANSPARENT_FLOAT" &
        " already exists, not redeclaring")
when not declared(SURFACE_PREALLOCATED):
  when cast[cuint](1'i64) is static:
    const
      SURFACE_PREALLOCATED* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:66:9
  else:
    let SURFACE_PREALLOCATED* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:66:9
else:
  static :
    hint("Declaration of " & "SURFACE_PREALLOCATED" &
        " already exists, not redeclaring")
when not declared(SURFACE_LOCK_NEEDED):
  when cast[cuint](2'i64) is static:
    const
      SURFACE_LOCK_NEEDED* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:67:9
  else:
    let SURFACE_LOCK_NEEDED* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:67:9
else:
  static :
    hint("Declaration of " & "SURFACE_LOCK_NEEDED" &
        " already exists, not redeclaring")
when not declared(SURFACE_LOCKED):
  when cast[cuint](4'i64) is static:
    const
      SURFACE_LOCKED* = cast[cuint](4'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:68:9
  else:
    let SURFACE_LOCKED* = cast[cuint](4'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:68:9
else:
  static :
    hint("Declaration of " & "SURFACE_LOCKED" &
        " already exists, not redeclaring")
when not declared(SURFACE_SIMD_ALIGNED):
  when cast[cuint](8'i64) is static:
    const
      SURFACE_SIMD_ALIGNED* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:69:9
  else:
    let SURFACE_SIMD_ALIGNED* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:69:9
else:
  static :
    hint("Declaration of " & "SURFACE_SIMD_ALIGNED" &
        " already exists, not redeclaring")
when not declared(PROP_SURFACE_SDR_WHITE_POINT_FLOAT):
  when "SDL.surface.SDR_white_point" is static:
    const
      PROP_SURFACE_SDR_WHITE_POINT_FLOAT* = "SDL.surface.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:233:9
  else:
    let PROP_SURFACE_SDR_WHITE_POINT_FLOAT* = "SDL.surface.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:233:9
else:
  static :
    hint("Declaration of " & "PROP_SURFACE_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_SURFACE_HDR_HEADROOM_FLOAT):
  when "SDL.surface.HDR_headroom" is static:
    const
      PROP_SURFACE_HDR_HEADROOM_FLOAT* = "SDL.surface.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:234:9
  else:
    let PROP_SURFACE_HDR_HEADROOM_FLOAT* = "SDL.surface.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:234:9
else:
  static :
    hint("Declaration of " & "PROP_SURFACE_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_SURFACE_TONEMAP_OPERATOR_STRING):
  when "SDL.surface.tonemap" is static:
    const
      PROP_SURFACE_TONEMAP_OPERATOR_STRING* = "SDL.surface.tonemap" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:235:9
  else:
    let PROP_SURFACE_TONEMAP_OPERATOR_STRING* = "SDL.surface.tonemap" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_surface.h:235:9
else:
  static :
    hint("Declaration of " & "PROP_SURFACE_TONEMAP_OPERATOR_STRING" &
        " already exists, not redeclaring")
when not declared(CACHELINE_SIZE):
  when 128 is static:
    const
      CACHELINE_SIZE* = 128  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_cpuinfo.h:60:9
  else:
    let CACHELINE_SIZE* = 128 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_cpuinfo.h:60:9
else:
  static :
    hint("Declaration of " & "CACHELINE_SIZE" &
        " already exists, not redeclaring")
when not declared(PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER):
  when "SDL.video.wayland.wl_display" is static:
    const
      PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER* = "SDL.video.wayland.wl_display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:101:9
  else:
    let PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER* = "SDL.video.wayland.wl_display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:101:9
else:
  static :
    hint("Declaration of " & "PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(WINDOWPOS_UNDEFINED_MASK):
  when cast[cuint](536805376'i64) is static:
    const
      WINDOWPOS_UNDEFINED_MASK* = cast[cuint](536805376'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:213:9
  else:
    let WINDOWPOS_UNDEFINED_MASK* = cast[cuint](536805376'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:213:9
else:
  static :
    hint("Declaration of " & "WINDOWPOS_UNDEFINED_MASK" &
        " already exists, not redeclaring")
when not declared(WINDOWPOS_CENTERED_MASK):
  when cast[cuint](805240832'i64) is static:
    const
      WINDOWPOS_CENTERED_MASK* = cast[cuint](805240832'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:224:9
  else:
    let WINDOWPOS_CENTERED_MASK* = cast[cuint](805240832'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:224:9
else:
  static :
    hint("Declaration of " & "WINDOWPOS_CENTERED_MASK" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_PROFILE_CORE):
  when 1 is static:
    const
      GL_CONTEXT_PROFILE_CORE* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:374:9
  else:
    let GL_CONTEXT_PROFILE_CORE* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:374:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_PROFILE_CORE" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_PROFILE_COMPATIBILITY):
  when 2 is static:
    const
      GL_CONTEXT_PROFILE_COMPATIBILITY* = 2 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:375:9
  else:
    let GL_CONTEXT_PROFILE_COMPATIBILITY* = 2 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:375:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_PROFILE_COMPATIBILITY" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_PROFILE_ES):
  when 4 is static:
    const
      GL_CONTEXT_PROFILE_ES* = 4 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:376:9
  else:
    let GL_CONTEXT_PROFILE_ES* = 4 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:376:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_PROFILE_ES" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_DEBUG_FLAG):
  when 1 is static:
    const
      GL_CONTEXT_DEBUG_FLAG* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:386:9
  else:
    let GL_CONTEXT_DEBUG_FLAG* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:386:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_DEBUG_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_FORWARD_COMPATIBLE_FLAG):
  when 2 is static:
    const
      GL_CONTEXT_FORWARD_COMPATIBLE_FLAG* = 2 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:387:9
  else:
    let GL_CONTEXT_FORWARD_COMPATIBLE_FLAG* = 2 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:387:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_FORWARD_COMPATIBLE_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_ROBUST_ACCESS_FLAG):
  when 4 is static:
    const
      GL_CONTEXT_ROBUST_ACCESS_FLAG* = 4 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:388:9
  else:
    let GL_CONTEXT_ROBUST_ACCESS_FLAG* = 4 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:388:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_ROBUST_ACCESS_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RESET_ISOLATION_FLAG):
  when 8 is static:
    const
      GL_CONTEXT_RESET_ISOLATION_FLAG* = 8 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:389:9
  else:
    let GL_CONTEXT_RESET_ISOLATION_FLAG* = 8 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:389:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RESET_ISOLATION_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RELEASE_BEHAVIOR_NONE):
  when 0 is static:
    const
      GL_CONTEXT_RELEASE_BEHAVIOR_NONE* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:400:9
  else:
    let GL_CONTEXT_RELEASE_BEHAVIOR_NONE* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:400:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RELEASE_BEHAVIOR_NONE" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH):
  when 1 is static:
    const
      GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:401:9
  else:
    let GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:401:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RESET_NO_NOTIFICATION):
  when 0 is static:
    const
      GL_CONTEXT_RESET_NO_NOTIFICATION* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:411:9
  else:
    let GL_CONTEXT_RESET_NO_NOTIFICATION* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:411:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RESET_NO_NOTIFICATION" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RESET_LOSE_CONTEXT):
  when 1 is static:
    const
      GL_CONTEXT_RESET_LOSE_CONTEXT* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:412:9
  else:
    let GL_CONTEXT_RESET_LOSE_CONTEXT* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:412:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RESET_LOSE_CONTEXT" &
        " already exists, not redeclaring")
when not declared(PROP_DISPLAY_HDR_ENABLED_BOOLEAN):
  when "SDL.display.HDR_enabled" is static:
    const
      PROP_DISPLAY_HDR_ENABLED_BOOLEAN* = "SDL.display.HDR_enabled" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:538:9
  else:
    let PROP_DISPLAY_HDR_ENABLED_BOOLEAN* = "SDL.display.HDR_enabled" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:538:9
else:
  static :
    hint("Declaration of " & "PROP_DISPLAY_HDR_ENABLED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER):
  when "SDL.display.KMSDRM.panel_orientation" is static:
    const
      PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER* = "SDL.display.KMSDRM.panel_orientation" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:539:9
  else:
    let PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER* = "SDL.display.KMSDRM.panel_orientation" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:539:9
else:
  static :
    hint("Declaration of " & "PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN):
  when "SDL.window.create.always_on_top" is static:
    const
      PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN* = "SDL.window.create.always_on_top" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1208:9
  else:
    let PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN* = "SDL.window.create.always_on_top" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1208:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN):
  when "SDL.window.create.borderless" is static:
    const
      PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN* = "SDL.window.create.borderless" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1209:9
  else:
    let PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN* = "SDL.window.create.borderless" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1209:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN):
  when "SDL.window.create.focusable" is static:
    const
      PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN* = "SDL.window.create.focusable" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1210:9
  else:
    let PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN* = "SDL.window.create.focusable" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1210:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN):
  when "SDL.window.create.external_graphics_context" is static:
    const
      PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN* = "SDL.window.create.external_graphics_context" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1211:9
  else:
    let PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN* = "SDL.window.create.external_graphics_context" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1211:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_FLAGS_NUMBER):
  when "SDL.window.create.flags" is static:
    const
      PROP_WINDOW_CREATE_FLAGS_NUMBER* = "SDL.window.create.flags" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1212:9
  else:
    let PROP_WINDOW_CREATE_FLAGS_NUMBER* = "SDL.window.create.flags" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1212:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_FLAGS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN):
  when "SDL.window.create.fullscreen" is static:
    const
      PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN* = "SDL.window.create.fullscreen" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1213:9
  else:
    let PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN* = "SDL.window.create.fullscreen" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1213:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_HEIGHT_NUMBER):
  when "SDL.window.create.height" is static:
    const
      PROP_WINDOW_CREATE_HEIGHT_NUMBER* = "SDL.window.create.height" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1214:9
  else:
    let PROP_WINDOW_CREATE_HEIGHT_NUMBER* = "SDL.window.create.height" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1214:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_HEIGHT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_HIDDEN_BOOLEAN):
  when "SDL.window.create.hidden" is static:
    const
      PROP_WINDOW_CREATE_HIDDEN_BOOLEAN* = "SDL.window.create.hidden" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1215:9
  else:
    let PROP_WINDOW_CREATE_HIDDEN_BOOLEAN* = "SDL.window.create.hidden" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1215:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_HIDDEN_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN):
  when "SDL.window.create.high_pixel_density" is static:
    const
      PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN* = "SDL.window.create.high_pixel_density" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1216:9
  else:
    let PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN* = "SDL.window.create.high_pixel_density" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1216:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN):
  when "SDL.window.create.maximized" is static:
    const
      PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN* = "SDL.window.create.maximized" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1217:9
  else:
    let PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN* = "SDL.window.create.maximized" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1217:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MENU_BOOLEAN):
  when "SDL.window.create.menu" is static:
    const
      PROP_WINDOW_CREATE_MENU_BOOLEAN* = "SDL.window.create.menu" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1218:9
  else:
    let PROP_WINDOW_CREATE_MENU_BOOLEAN* = "SDL.window.create.menu" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1218:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MENU_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_METAL_BOOLEAN):
  when "SDL.window.create.metal" is static:
    const
      PROP_WINDOW_CREATE_METAL_BOOLEAN* = "SDL.window.create.metal" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1219:9
  else:
    let PROP_WINDOW_CREATE_METAL_BOOLEAN* = "SDL.window.create.metal" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1219:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_METAL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN):
  when "SDL.window.create.minimized" is static:
    const
      PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN* = "SDL.window.create.minimized" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1220:9
  else:
    let PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN* = "SDL.window.create.minimized" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1220:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MODAL_BOOLEAN):
  when "SDL.window.create.modal" is static:
    const
      PROP_WINDOW_CREATE_MODAL_BOOLEAN* = "SDL.window.create.modal" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1221:9
  else:
    let PROP_WINDOW_CREATE_MODAL_BOOLEAN* = "SDL.window.create.modal" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1221:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MODAL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN):
  when "SDL.window.create.mouse_grabbed" is static:
    const
      PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN* = "SDL.window.create.mouse_grabbed" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1222:9
  else:
    let PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN* = "SDL.window.create.mouse_grabbed" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1222:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_OPENGL_BOOLEAN):
  when "SDL.window.create.opengl" is static:
    const
      PROP_WINDOW_CREATE_OPENGL_BOOLEAN* = "SDL.window.create.opengl" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1223:9
  else:
    let PROP_WINDOW_CREATE_OPENGL_BOOLEAN* = "SDL.window.create.opengl" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1223:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_OPENGL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_PARENT_POINTER):
  when "SDL.window.create.parent" is static:
    const
      PROP_WINDOW_CREATE_PARENT_POINTER* = "SDL.window.create.parent" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1224:9
  else:
    let PROP_WINDOW_CREATE_PARENT_POINTER* = "SDL.window.create.parent" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1224:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_PARENT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN):
  when "SDL.window.create.resizable" is static:
    const
      PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN* = "SDL.window.create.resizable" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1225:9
  else:
    let PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN* = "SDL.window.create.resizable" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1225:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_TITLE_STRING):
  when "SDL.window.create.title" is static:
    const
      PROP_WINDOW_CREATE_TITLE_STRING* = "SDL.window.create.title" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1226:9
  else:
    let PROP_WINDOW_CREATE_TITLE_STRING* = "SDL.window.create.title" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1226:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_TITLE_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN):
  when "SDL.window.create.transparent" is static:
    const
      PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN* = "SDL.window.create.transparent" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1227:9
  else:
    let PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN* = "SDL.window.create.transparent" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1227:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN):
  when "SDL.window.create.tooltip" is static:
    const
      PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN* = "SDL.window.create.tooltip" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1228:9
  else:
    let PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN* = "SDL.window.create.tooltip" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1228:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_UTILITY_BOOLEAN):
  when "SDL.window.create.utility" is static:
    const
      PROP_WINDOW_CREATE_UTILITY_BOOLEAN* = "SDL.window.create.utility" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1229:9
  else:
    let PROP_WINDOW_CREATE_UTILITY_BOOLEAN* = "SDL.window.create.utility" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1229:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_UTILITY_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_VULKAN_BOOLEAN):
  when "SDL.window.create.vulkan" is static:
    const
      PROP_WINDOW_CREATE_VULKAN_BOOLEAN* = "SDL.window.create.vulkan" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1230:9
  else:
    let PROP_WINDOW_CREATE_VULKAN_BOOLEAN* = "SDL.window.create.vulkan" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1230:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_VULKAN_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WIDTH_NUMBER):
  when "SDL.window.create.width" is static:
    const
      PROP_WINDOW_CREATE_WIDTH_NUMBER* = "SDL.window.create.width" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1231:9
  else:
    let PROP_WINDOW_CREATE_WIDTH_NUMBER* = "SDL.window.create.width" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1231:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_WIDTH_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_X_NUMBER):
  when "SDL.window.create.x" is static:
    const
      PROP_WINDOW_CREATE_X_NUMBER* = "SDL.window.create.x" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1232:9
  else:
    let PROP_WINDOW_CREATE_X_NUMBER* = "SDL.window.create.x" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1232:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_X_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_Y_NUMBER):
  when "SDL.window.create.y" is static:
    const
      PROP_WINDOW_CREATE_Y_NUMBER* = "SDL.window.create.y" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1233:9
  else:
    let PROP_WINDOW_CREATE_Y_NUMBER* = "SDL.window.create.y" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1233:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_Y_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER):
  when "SDL.window.create.cocoa.window" is static:
    const
      PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER* = "SDL.window.create.cocoa.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1234:9
  else:
    let PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER* = "SDL.window.create.cocoa.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1234:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_COCOA_VIEW_POINTER):
  when "SDL.window.create.cocoa.view" is static:
    const
      PROP_WINDOW_CREATE_COCOA_VIEW_POINTER* = "SDL.window.create.cocoa.view" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1235:9
  else:
    let PROP_WINDOW_CREATE_COCOA_VIEW_POINTER* = "SDL.window.create.cocoa.view" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1235:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_COCOA_VIEW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN):
  when "SDL.window.create.wayland.surface_role_custom" is static:
    const
      PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN* = "SDL.window.create.wayland.surface_role_custom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1236:9
  else:
    let PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN* = "SDL.window.create.wayland.surface_role_custom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1236:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN):
  when "SDL.window.create.wayland.create_egl_window" is static:
    const
      PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN* = "SDL.window.create.wayland.create_egl_window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1237:9
  else:
    let PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN* = "SDL.window.create.wayland.create_egl_window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1237:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER):
  when "SDL.window.create.wayland.wl_surface" is static:
    const
      PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER* = "SDL.window.create.wayland.wl_surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1238:9
  else:
    let PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER* = "SDL.window.create.wayland.wl_surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1238:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WIN32_HWND_POINTER):
  when "SDL.window.create.win32.hwnd" is static:
    const
      PROP_WINDOW_CREATE_WIN32_HWND_POINTER* = "SDL.window.create.win32.hwnd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1239:9
  else:
    let PROP_WINDOW_CREATE_WIN32_HWND_POINTER* = "SDL.window.create.win32.hwnd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1239:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_WIN32_HWND_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER):
  when "SDL.window.create.win32.pixel_format_hwnd" is static:
    const
      PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER* = "SDL.window.create.win32.pixel_format_hwnd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1240:9
  else:
    let PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER* = "SDL.window.create.win32.pixel_format_hwnd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1240:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_X11_WINDOW_NUMBER):
  when "SDL.window.create.x11.window" is static:
    const
      PROP_WINDOW_CREATE_X11_WINDOW_NUMBER* = "SDL.window.create.x11.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1241:9
  else:
    let PROP_WINDOW_CREATE_X11_WINDOW_NUMBER* = "SDL.window.create.x11.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1241:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_X11_WINDOW_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_SHAPE_POINTER):
  when "SDL.window.shape" is static:
    const
      PROP_WINDOW_SHAPE_POINTER* = "SDL.window.shape" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1416:9
  else:
    let PROP_WINDOW_SHAPE_POINTER* = "SDL.window.shape" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1416:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_SHAPE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_HDR_ENABLED_BOOLEAN):
  when "SDL.window.HDR_enabled" is static:
    const
      PROP_WINDOW_HDR_ENABLED_BOOLEAN* = "SDL.window.HDR_enabled" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1417:9
  else:
    let PROP_WINDOW_HDR_ENABLED_BOOLEAN* = "SDL.window.HDR_enabled" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1417:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_HDR_ENABLED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT):
  when "SDL.window.SDR_white_level" is static:
    const
      PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT* = "SDL.window.SDR_white_level" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1418:9
  else:
    let PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT* = "SDL.window.SDR_white_level" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1418:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_HDR_HEADROOM_FLOAT):
  when "SDL.window.HDR_headroom" is static:
    const
      PROP_WINDOW_HDR_HEADROOM_FLOAT* = "SDL.window.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1419:9
  else:
    let PROP_WINDOW_HDR_HEADROOM_FLOAT* = "SDL.window.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1419:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_ANDROID_WINDOW_POINTER):
  when "SDL.window.android.window" is static:
    const
      PROP_WINDOW_ANDROID_WINDOW_POINTER* = "SDL.window.android.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1420:9
  else:
    let PROP_WINDOW_ANDROID_WINDOW_POINTER* = "SDL.window.android.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1420:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_ANDROID_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_ANDROID_SURFACE_POINTER):
  when "SDL.window.android.surface" is static:
    const
      PROP_WINDOW_ANDROID_SURFACE_POINTER* = "SDL.window.android.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1421:9
  else:
    let PROP_WINDOW_ANDROID_SURFACE_POINTER* = "SDL.window.android.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1421:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_ANDROID_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_WINDOW_POINTER):
  when "SDL.window.uikit.window" is static:
    const
      PROP_WINDOW_UIKIT_WINDOW_POINTER* = "SDL.window.uikit.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1422:9
  else:
    let PROP_WINDOW_UIKIT_WINDOW_POINTER* = "SDL.window.uikit.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1422:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER):
  when "SDL.window.uikit.metal_view_tag" is static:
    const
      PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER* = "SDL.window.uikit.metal_view_tag" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1423:9
  else:
    let PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER* = "SDL.window.uikit.metal_view_tag" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1423:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER):
  when "SDL.window.uikit.opengl.framebuffer" is static:
    const
      PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.framebuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1424:9
  else:
    let PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.framebuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1424:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER):
  when "SDL.window.uikit.opengl.renderbuffer" is static:
    const
      PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER* = "SDL.window.uikit.opengl.renderbuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1425:9
  else:
    let PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER* = "SDL.window.uikit.opengl.renderbuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1425:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER):
  when "SDL.window.uikit.opengl.resolve_framebuffer" is static:
    const
      PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.resolve_framebuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1426:9
  else:
    let PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.resolve_framebuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1426:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER):
  when "SDL.window.kmsdrm.dev_index" is static:
    const
      PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER* = "SDL.window.kmsdrm.dev_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1427:9
  else:
    let PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER* = "SDL.window.kmsdrm.dev_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1427:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_KMSDRM_DRM_FD_NUMBER):
  when "SDL.window.kmsdrm.drm_fd" is static:
    const
      PROP_WINDOW_KMSDRM_DRM_FD_NUMBER* = "SDL.window.kmsdrm.drm_fd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1428:9
  else:
    let PROP_WINDOW_KMSDRM_DRM_FD_NUMBER* = "SDL.window.kmsdrm.drm_fd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1428:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_KMSDRM_DRM_FD_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER):
  when "SDL.window.kmsdrm.gbm_dev" is static:
    const
      PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER* = "SDL.window.kmsdrm.gbm_dev" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1429:9
  else:
    let PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER* = "SDL.window.kmsdrm.gbm_dev" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1429:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_COCOA_WINDOW_POINTER):
  when "SDL.window.cocoa.window" is static:
    const
      PROP_WINDOW_COCOA_WINDOW_POINTER* = "SDL.window.cocoa.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1430:9
  else:
    let PROP_WINDOW_COCOA_WINDOW_POINTER* = "SDL.window.cocoa.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1430:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_COCOA_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER):
  when "SDL.window.cocoa.metal_view_tag" is static:
    const
      PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER* = "SDL.window.cocoa.metal_view_tag" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1431:9
  else:
    let PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER* = "SDL.window.cocoa.metal_view_tag" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1431:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_OPENVR_OVERLAY_ID):
  when "SDL.window.openvr.overlay_id" is static:
    const
      PROP_WINDOW_OPENVR_OVERLAY_ID* = "SDL.window.openvr.overlay_id" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1432:9
  else:
    let PROP_WINDOW_OPENVR_OVERLAY_ID* = "SDL.window.openvr.overlay_id" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1432:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_OPENVR_OVERLAY_ID" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_VIVANTE_DISPLAY_POINTER):
  when "SDL.window.vivante.display" is static:
    const
      PROP_WINDOW_VIVANTE_DISPLAY_POINTER* = "SDL.window.vivante.display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1433:9
  else:
    let PROP_WINDOW_VIVANTE_DISPLAY_POINTER* = "SDL.window.vivante.display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1433:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_VIVANTE_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_VIVANTE_WINDOW_POINTER):
  when "SDL.window.vivante.window" is static:
    const
      PROP_WINDOW_VIVANTE_WINDOW_POINTER* = "SDL.window.vivante.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1434:9
  else:
    let PROP_WINDOW_VIVANTE_WINDOW_POINTER* = "SDL.window.vivante.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1434:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_VIVANTE_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_VIVANTE_SURFACE_POINTER):
  when "SDL.window.vivante.surface" is static:
    const
      PROP_WINDOW_VIVANTE_SURFACE_POINTER* = "SDL.window.vivante.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1435:9
  else:
    let PROP_WINDOW_VIVANTE_SURFACE_POINTER* = "SDL.window.vivante.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1435:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_VIVANTE_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WIN32_HWND_POINTER):
  when "SDL.window.win32.hwnd" is static:
    const
      PROP_WINDOW_WIN32_HWND_POINTER* = "SDL.window.win32.hwnd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1436:9
  else:
    let PROP_WINDOW_WIN32_HWND_POINTER* = "SDL.window.win32.hwnd" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1436:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WIN32_HWND_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WIN32_HDC_POINTER):
  when "SDL.window.win32.hdc" is static:
    const
      PROP_WINDOW_WIN32_HDC_POINTER* = "SDL.window.win32.hdc" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1437:9
  else:
    let PROP_WINDOW_WIN32_HDC_POINTER* = "SDL.window.win32.hdc" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1437:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WIN32_HDC_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WIN32_INSTANCE_POINTER):
  when "SDL.window.win32.instance" is static:
    const
      PROP_WINDOW_WIN32_INSTANCE_POINTER* = "SDL.window.win32.instance" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1438:9
  else:
    let PROP_WINDOW_WIN32_INSTANCE_POINTER* = "SDL.window.win32.instance" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1438:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WIN32_INSTANCE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_DISPLAY_POINTER):
  when "SDL.window.wayland.display" is static:
    const
      PROP_WINDOW_WAYLAND_DISPLAY_POINTER* = "SDL.window.wayland.display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1439:9
  else:
    let PROP_WINDOW_WAYLAND_DISPLAY_POINTER* = "SDL.window.wayland.display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1439:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_SURFACE_POINTER):
  when "SDL.window.wayland.surface" is static:
    const
      PROP_WINDOW_WAYLAND_SURFACE_POINTER* = "SDL.window.wayland.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1440:9
  else:
    let PROP_WINDOW_WAYLAND_SURFACE_POINTER* = "SDL.window.wayland.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1440:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_VIEWPORT_POINTER):
  when "SDL.window.wayland.viewport" is static:
    const
      PROP_WINDOW_WAYLAND_VIEWPORT_POINTER* = "SDL.window.wayland.viewport" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1441:9
  else:
    let PROP_WINDOW_WAYLAND_VIEWPORT_POINTER* = "SDL.window.wayland.viewport" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1441:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_VIEWPORT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER):
  when "SDL.window.wayland.egl_window" is static:
    const
      PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER* = "SDL.window.wayland.egl_window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1442:9
  else:
    let PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER* = "SDL.window.wayland.egl_window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1442:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER):
  when "SDL.window.wayland.xdg_surface" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER* = "SDL.window.wayland.xdg_surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1443:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER* = "SDL.window.wayland.xdg_surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1443:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER):
  when "SDL.window.wayland.xdg_toplevel" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER* = "SDL.window.wayland.xdg_toplevel" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1444:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER* = "SDL.window.wayland.xdg_toplevel" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1444:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING):
  when "SDL.window.wayland.xdg_toplevel_export_handle" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING* = "SDL.window.wayland.xdg_toplevel_export_handle" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1445:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING* = "SDL.window.wayland.xdg_toplevel_export_handle" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1445:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER):
  when "SDL.window.wayland.xdg_popup" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER* = "SDL.window.wayland.xdg_popup" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1446:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER* = "SDL.window.wayland.xdg_popup" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1446:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER):
  when "SDL.window.wayland.xdg_positioner" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER* = "SDL.window.wayland.xdg_positioner" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1447:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER* = "SDL.window.wayland.xdg_positioner" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1447:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_X11_DISPLAY_POINTER):
  when "SDL.window.x11.display" is static:
    const
      PROP_WINDOW_X11_DISPLAY_POINTER* = "SDL.window.x11.display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1448:9
  else:
    let PROP_WINDOW_X11_DISPLAY_POINTER* = "SDL.window.x11.display" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1448:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_X11_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_X11_SCREEN_NUMBER):
  when "SDL.window.x11.screen" is static:
    const
      PROP_WINDOW_X11_SCREEN_NUMBER* = "SDL.window.x11.screen" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1449:9
  else:
    let PROP_WINDOW_X11_SCREEN_NUMBER* = "SDL.window.x11.screen" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1449:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_X11_SCREEN_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_X11_WINDOW_NUMBER):
  when "SDL.window.x11.window" is static:
    const
      PROP_WINDOW_X11_WINDOW_NUMBER* = "SDL.window.x11.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1450:9
  else:
    let PROP_WINDOW_X11_WINDOW_NUMBER* = "SDL.window.x11.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:1450:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_X11_WINDOW_NUMBER" &
        " already exists, not redeclaring")
when not declared(WINDOW_SURFACE_VSYNC_DISABLED):
  when 0 is static:
    const
      WINDOW_SURFACE_VSYNC_DISABLED* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:2211:9
  else:
    let WINDOW_SURFACE_VSYNC_DISABLED* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:2211:9
else:
  static :
    hint("Declaration of " & "WINDOW_SURFACE_VSYNC_DISABLED" &
        " already exists, not redeclaring")
when not declared(WINDOW_SURFACE_VSYNC_ADAPTIVE):
  when -1 is static:
    const
      WINDOW_SURFACE_VSYNC_ADAPTIVE* = -1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:2212:9
  else:
    let WINDOW_SURFACE_VSYNC_ADAPTIVE* = -1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_video.h:2212:9
else:
  static :
    hint("Declaration of " & "WINDOW_SURFACE_VSYNC_ADAPTIVE" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_FILTERS_POINTER):
  when "SDL.filedialog.filters" is static:
    const
      PROP_FILE_DIALOG_FILTERS_POINTER* = "SDL.filedialog.filters" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:322:9
  else:
    let PROP_FILE_DIALOG_FILTERS_POINTER* = "SDL.filedialog.filters" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:322:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_FILTERS_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_NFILTERS_NUMBER):
  when "SDL.filedialog.nfilters" is static:
    const
      PROP_FILE_DIALOG_NFILTERS_NUMBER* = "SDL.filedialog.nfilters" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:323:9
  else:
    let PROP_FILE_DIALOG_NFILTERS_NUMBER* = "SDL.filedialog.nfilters" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:323:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_NFILTERS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_WINDOW_POINTER):
  when "SDL.filedialog.window" is static:
    const
      PROP_FILE_DIALOG_WINDOW_POINTER* = "SDL.filedialog.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:324:9
  else:
    let PROP_FILE_DIALOG_WINDOW_POINTER* = "SDL.filedialog.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:324:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_LOCATION_STRING):
  when "SDL.filedialog.location" is static:
    const
      PROP_FILE_DIALOG_LOCATION_STRING* = "SDL.filedialog.location" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:325:9
  else:
    let PROP_FILE_DIALOG_LOCATION_STRING* = "SDL.filedialog.location" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:325:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_LOCATION_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_MANY_BOOLEAN):
  when "SDL.filedialog.many" is static:
    const
      PROP_FILE_DIALOG_MANY_BOOLEAN* = "SDL.filedialog.many" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:326:9
  else:
    let PROP_FILE_DIALOG_MANY_BOOLEAN* = "SDL.filedialog.many" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:326:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_MANY_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_TITLE_STRING):
  when "SDL.filedialog.title" is static:
    const
      PROP_FILE_DIALOG_TITLE_STRING* = "SDL.filedialog.title" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:327:9
  else:
    let PROP_FILE_DIALOG_TITLE_STRING* = "SDL.filedialog.title" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:327:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_TITLE_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_ACCEPT_STRING):
  when "SDL.filedialog.accept" is static:
    const
      PROP_FILE_DIALOG_ACCEPT_STRING* = "SDL.filedialog.accept" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:328:9
  else:
    let PROP_FILE_DIALOG_ACCEPT_STRING* = "SDL.filedialog.accept" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:328:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_ACCEPT_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_CANCEL_STRING):
  when "SDL.filedialog.cancel" is static:
    const
      PROP_FILE_DIALOG_CANCEL_STRING* = "SDL.filedialog.cancel" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:329:9
  else:
    let PROP_FILE_DIALOG_CANCEL_STRING* = "SDL.filedialog.cancel" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_dialog.h:329:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_CANCEL_STRING" &
        " already exists, not redeclaring")
when not declared(STANDARD_GRAVITY):
  when 9.80665 is static:
    const
      STANDARD_GRAVITY* = 9.80665 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_sensor.h:69:9
  else:
    let STANDARD_GRAVITY* = 9.80665 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_sensor.h:69:9
else:
  static :
    hint("Declaration of " & "STANDARD_GRAVITY" &
        " already exists, not redeclaring")
when not declared(JOYSTICK_AXIS_MAX):
  when 32767 is static:
    const
      JOYSTICK_AXIS_MAX* = 32767 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:150:9
  else:
    let JOYSTICK_AXIS_MAX* = 32767 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:150:9
else:
  static :
    hint("Declaration of " & "JOYSTICK_AXIS_MAX" &
        " already exists, not redeclaring")
when not declared(JOYSTICK_AXIS_MIN):
  when -32768 is static:
    const
      JOYSTICK_AXIS_MIN* = -32768 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:161:9
  else:
    let JOYSTICK_AXIS_MIN* = -32768 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:161:9
else:
  static :
    hint("Declaration of " & "JOYSTICK_AXIS_MIN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN):
  when "SDL.joystick.cap.mono_led" is static:
    const
      PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN* = "SDL.joystick.cap.mono_led" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:655:9
  else:
    let PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN* = "SDL.joystick.cap.mono_led" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:655:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN):
  when "SDL.joystick.cap.rgb_led" is static:
    const
      PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN* = "SDL.joystick.cap.rgb_led" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:656:9
  else:
    let PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN* = "SDL.joystick.cap.rgb_led" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:656:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN):
  when "SDL.joystick.cap.player_led" is static:
    const
      PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN* = "SDL.joystick.cap.player_led" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:657:9
  else:
    let PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN* = "SDL.joystick.cap.player_led" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:657:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN):
  when "SDL.joystick.cap.rumble" is static:
    const
      PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN* = "SDL.joystick.cap.rumble" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:658:9
  else:
    let PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN* = "SDL.joystick.cap.rumble" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:658:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN):
  when "SDL.joystick.cap.trigger_rumble" is static:
    const
      PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN* = "SDL.joystick.cap.trigger_rumble" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:659:9
  else:
    let PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN* = "SDL.joystick.cap.trigger_rumble" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:659:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(HAT_CENTERED):
  when cast[cuint](0'i64) is static:
    const
      HAT_CENTERED* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1045:9
  else:
    let HAT_CENTERED* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1045:9
else:
  static :
    hint("Declaration of " & "HAT_CENTERED" & " already exists, not redeclaring")
when not declared(HAT_UP):
  when cast[cuint](1'i64) is static:
    const
      HAT_UP* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1046:9
  else:
    let HAT_UP* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1046:9
else:
  static :
    hint("Declaration of " & "HAT_UP" & " already exists, not redeclaring")
when not declared(HAT_RIGHT):
  when cast[cuint](2'i64) is static:
    const
      HAT_RIGHT* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1047:9
  else:
    let HAT_RIGHT* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1047:9
else:
  static :
    hint("Declaration of " & "HAT_RIGHT" & " already exists, not redeclaring")
when not declared(HAT_DOWN):
  when cast[cuint](4'i64) is static:
    const
      HAT_DOWN* = cast[cuint](4'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1048:9
  else:
    let HAT_DOWN* = cast[cuint](4'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1048:9
else:
  static :
    hint("Declaration of " & "HAT_DOWN" & " already exists, not redeclaring")
when not declared(HAT_LEFT):
  when cast[cuint](8'i64) is static:
    const
      HAT_LEFT* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1049:9
  else:
    let HAT_LEFT* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_joystick.h:1049:9
else:
  static :
    hint("Declaration of " & "HAT_LEFT" & " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN):
  when PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN* = PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:746:9
  else:
    when PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN* = PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:746:9
    else:
      let PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN* = PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:746:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN):
  when PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN* = PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:747:9
  else:
    when PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN* = PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:747:9
    else:
      let PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN* = PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:747:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN):
  when PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN* = PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:748:9
  else:
    when PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN* = PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:748:9
    else:
      let PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN* = PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:748:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN):
  when PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:749:9
  else:
    when PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:749:9
    else:
      let PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:749:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN):
  when PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:750:9
  else:
    when PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:750:9
    else:
      let PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gamepad.h:750:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(SDLK_UNKNOWN):
  when cast[cuint](0'i64) is static:
    const
      SDLK_UNKNOWN* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:56:9
  else:
    let SDLK_UNKNOWN* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:56:9
else:
  static :
    hint("Declaration of " & "SDLK_UNKNOWN" & " already exists, not redeclaring")
when not declared(SDLK_RETURN):
  when cast[cuint](13'i64) is static:
    const
      SDLK_RETURN* = cast[cuint](13'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:57:9
  else:
    let SDLK_RETURN* = cast[cuint](13'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:57:9
else:
  static :
    hint("Declaration of " & "SDLK_RETURN" & " already exists, not redeclaring")
when not declared(SDLK_ESCAPE):
  when cast[cuint](27'i64) is static:
    const
      SDLK_ESCAPE* = cast[cuint](27'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:58:9
  else:
    let SDLK_ESCAPE* = cast[cuint](27'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:58:9
else:
  static :
    hint("Declaration of " & "SDLK_ESCAPE" & " already exists, not redeclaring")
when not declared(SDLK_BACKSPACE):
  when cast[cuint](8'i64) is static:
    const
      SDLK_BACKSPACE* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:59:9
  else:
    let SDLK_BACKSPACE* = cast[cuint](8'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:59:9
else:
  static :
    hint("Declaration of " & "SDLK_BACKSPACE" &
        " already exists, not redeclaring")
when not declared(SDLK_TAB):
  when cast[cuint](9'i64) is static:
    const
      SDLK_TAB* = cast[cuint](9'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:60:9
  else:
    let SDLK_TAB* = cast[cuint](9'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:60:9
else:
  static :
    hint("Declaration of " & "SDLK_TAB" & " already exists, not redeclaring")
when not declared(SDLK_SPACE):
  when cast[cuint](32'i64) is static:
    const
      SDLK_SPACE* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:61:9
  else:
    let SDLK_SPACE* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:61:9
else:
  static :
    hint("Declaration of " & "SDLK_SPACE" & " already exists, not redeclaring")
when not declared(SDLK_EXCLAIM):
  when cast[cuint](33'i64) is static:
    const
      SDLK_EXCLAIM* = cast[cuint](33'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:62:9
  else:
    let SDLK_EXCLAIM* = cast[cuint](33'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:62:9
else:
  static :
    hint("Declaration of " & "SDLK_EXCLAIM" & " already exists, not redeclaring")
when not declared(SDLK_DBLAPOSTROPHE):
  when cast[cuint](34'i64) is static:
    const
      SDLK_DBLAPOSTROPHE* = cast[cuint](34'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:63:9
  else:
    let SDLK_DBLAPOSTROPHE* = cast[cuint](34'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:63:9
else:
  static :
    hint("Declaration of " & "SDLK_DBLAPOSTROPHE" &
        " already exists, not redeclaring")
when not declared(SDLK_HASH):
  when cast[cuint](35'i64) is static:
    const
      SDLK_HASH* = cast[cuint](35'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:64:9
  else:
    let SDLK_HASH* = cast[cuint](35'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:64:9
else:
  static :
    hint("Declaration of " & "SDLK_HASH" & " already exists, not redeclaring")
when not declared(SDLK_DOLLAR):
  when cast[cuint](36'i64) is static:
    const
      SDLK_DOLLAR* = cast[cuint](36'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:65:9
  else:
    let SDLK_DOLLAR* = cast[cuint](36'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:65:9
else:
  static :
    hint("Declaration of " & "SDLK_DOLLAR" & " already exists, not redeclaring")
when not declared(SDLK_PERCENT):
  when cast[cuint](37'i64) is static:
    const
      SDLK_PERCENT* = cast[cuint](37'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:66:9
  else:
    let SDLK_PERCENT* = cast[cuint](37'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:66:9
else:
  static :
    hint("Declaration of " & "SDLK_PERCENT" & " already exists, not redeclaring")
when not declared(SDLK_AMPERSAND):
  when cast[cuint](38'i64) is static:
    const
      SDLK_AMPERSAND* = cast[cuint](38'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:67:9
  else:
    let SDLK_AMPERSAND* = cast[cuint](38'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:67:9
else:
  static :
    hint("Declaration of " & "SDLK_AMPERSAND" &
        " already exists, not redeclaring")
when not declared(SDLK_APOSTROPHE):
  when cast[cuint](39'i64) is static:
    const
      SDLK_APOSTROPHE* = cast[cuint](39'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:68:9
  else:
    let SDLK_APOSTROPHE* = cast[cuint](39'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:68:9
else:
  static :
    hint("Declaration of " & "SDLK_APOSTROPHE" &
        " already exists, not redeclaring")
when not declared(SDLK_LEFTPAREN):
  when cast[cuint](40'i64) is static:
    const
      SDLK_LEFTPAREN* = cast[cuint](40'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:69:9
  else:
    let SDLK_LEFTPAREN* = cast[cuint](40'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:69:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_RIGHTPAREN):
  when cast[cuint](41'i64) is static:
    const
      SDLK_RIGHTPAREN* = cast[cuint](41'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:70:9
  else:
    let SDLK_RIGHTPAREN* = cast[cuint](41'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:70:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_ASTERISK):
  when cast[cuint](42'i64) is static:
    const
      SDLK_ASTERISK* = cast[cuint](42'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:71:9
  else:
    let SDLK_ASTERISK* = cast[cuint](42'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:71:9
else:
  static :
    hint("Declaration of " & "SDLK_ASTERISK" &
        " already exists, not redeclaring")
when not declared(SDLK_PLUS):
  when cast[cuint](43'i64) is static:
    const
      SDLK_PLUS* = cast[cuint](43'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:72:9
  else:
    let SDLK_PLUS* = cast[cuint](43'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:72:9
else:
  static :
    hint("Declaration of " & "SDLK_PLUS" & " already exists, not redeclaring")
when not declared(SDLK_COMMA):
  when cast[cuint](44'i64) is static:
    const
      SDLK_COMMA* = cast[cuint](44'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:73:9
  else:
    let SDLK_COMMA* = cast[cuint](44'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:73:9
else:
  static :
    hint("Declaration of " & "SDLK_COMMA" & " already exists, not redeclaring")
when not declared(SDLK_MINUS):
  when cast[cuint](45'i64) is static:
    const
      SDLK_MINUS* = cast[cuint](45'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:74:9
  else:
    let SDLK_MINUS* = cast[cuint](45'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:74:9
else:
  static :
    hint("Declaration of " & "SDLK_MINUS" & " already exists, not redeclaring")
when not declared(SDLK_PERIOD):
  when cast[cuint](46'i64) is static:
    const
      SDLK_PERIOD* = cast[cuint](46'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:75:9
  else:
    let SDLK_PERIOD* = cast[cuint](46'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:75:9
else:
  static :
    hint("Declaration of " & "SDLK_PERIOD" & " already exists, not redeclaring")
when not declared(SDLK_SLASH):
  when cast[cuint](47'i64) is static:
    const
      SDLK_SLASH* = cast[cuint](47'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:76:9
  else:
    let SDLK_SLASH* = cast[cuint](47'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:76:9
else:
  static :
    hint("Declaration of " & "SDLK_SLASH" & " already exists, not redeclaring")
when not declared(SDLK_0):
  when cast[cuint](48'i64) is static:
    const
      SDLK_0* = cast[cuint](48'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:77:9
  else:
    let SDLK_0* = cast[cuint](48'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:77:9
else:
  static :
    hint("Declaration of " & "SDLK_0" & " already exists, not redeclaring")
when not declared(SDLK_1):
  when cast[cuint](49'i64) is static:
    const
      SDLK_1* = cast[cuint](49'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:78:9
  else:
    let SDLK_1* = cast[cuint](49'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:78:9
else:
  static :
    hint("Declaration of " & "SDLK_1" & " already exists, not redeclaring")
when not declared(SDLK_2):
  when cast[cuint](50'i64) is static:
    const
      SDLK_2* = cast[cuint](50'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:79:9
  else:
    let SDLK_2* = cast[cuint](50'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:79:9
else:
  static :
    hint("Declaration of " & "SDLK_2" & " already exists, not redeclaring")
when not declared(SDLK_3):
  when cast[cuint](51'i64) is static:
    const
      SDLK_3* = cast[cuint](51'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:80:9
  else:
    let SDLK_3* = cast[cuint](51'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:80:9
else:
  static :
    hint("Declaration of " & "SDLK_3" & " already exists, not redeclaring")
when not declared(SDLK_4):
  when cast[cuint](52'i64) is static:
    const
      SDLK_4* = cast[cuint](52'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:81:9
  else:
    let SDLK_4* = cast[cuint](52'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:81:9
else:
  static :
    hint("Declaration of " & "SDLK_4" & " already exists, not redeclaring")
when not declared(SDLK_5):
  when cast[cuint](53'i64) is static:
    const
      SDLK_5* = cast[cuint](53'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:82:9
  else:
    let SDLK_5* = cast[cuint](53'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:82:9
else:
  static :
    hint("Declaration of " & "SDLK_5" & " already exists, not redeclaring")
when not declared(SDLK_6):
  when cast[cuint](54'i64) is static:
    const
      SDLK_6* = cast[cuint](54'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:83:9
  else:
    let SDLK_6* = cast[cuint](54'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:83:9
else:
  static :
    hint("Declaration of " & "SDLK_6" & " already exists, not redeclaring")
when not declared(SDLK_7):
  when cast[cuint](55'i64) is static:
    const
      SDLK_7* = cast[cuint](55'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:84:9
  else:
    let SDLK_7* = cast[cuint](55'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:84:9
else:
  static :
    hint("Declaration of " & "SDLK_7" & " already exists, not redeclaring")
when not declared(SDLK_8):
  when cast[cuint](56'i64) is static:
    const
      SDLK_8* = cast[cuint](56'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:85:9
  else:
    let SDLK_8* = cast[cuint](56'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:85:9
else:
  static :
    hint("Declaration of " & "SDLK_8" & " already exists, not redeclaring")
when not declared(SDLK_9):
  when cast[cuint](57'i64) is static:
    const
      SDLK_9* = cast[cuint](57'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:86:9
  else:
    let SDLK_9* = cast[cuint](57'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:86:9
else:
  static :
    hint("Declaration of " & "SDLK_9" & " already exists, not redeclaring")
when not declared(SDLK_COLON):
  when cast[cuint](58'i64) is static:
    const
      SDLK_COLON* = cast[cuint](58'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:87:9
  else:
    let SDLK_COLON* = cast[cuint](58'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:87:9
else:
  static :
    hint("Declaration of " & "SDLK_COLON" & " already exists, not redeclaring")
when not declared(SDLK_SEMICOLON):
  when cast[cuint](59'i64) is static:
    const
      SDLK_SEMICOLON* = cast[cuint](59'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:88:9
  else:
    let SDLK_SEMICOLON* = cast[cuint](59'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:88:9
else:
  static :
    hint("Declaration of " & "SDLK_SEMICOLON" &
        " already exists, not redeclaring")
when not declared(SDLK_LESS):
  when cast[cuint](60'i64) is static:
    const
      SDLK_LESS* = cast[cuint](60'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:89:9
  else:
    let SDLK_LESS* = cast[cuint](60'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:89:9
else:
  static :
    hint("Declaration of " & "SDLK_LESS" & " already exists, not redeclaring")
when not declared(SDLK_EQUALS):
  when cast[cuint](61'i64) is static:
    const
      SDLK_EQUALS* = cast[cuint](61'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:90:9
  else:
    let SDLK_EQUALS* = cast[cuint](61'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:90:9
else:
  static :
    hint("Declaration of " & "SDLK_EQUALS" & " already exists, not redeclaring")
when not declared(SDLK_GREATER):
  when cast[cuint](62'i64) is static:
    const
      SDLK_GREATER* = cast[cuint](62'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:91:9
  else:
    let SDLK_GREATER* = cast[cuint](62'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:91:9
else:
  static :
    hint("Declaration of " & "SDLK_GREATER" & " already exists, not redeclaring")
when not declared(SDLK_QUESTION):
  when cast[cuint](63'i64) is static:
    const
      SDLK_QUESTION* = cast[cuint](63'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:92:9
  else:
    let SDLK_QUESTION* = cast[cuint](63'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:92:9
else:
  static :
    hint("Declaration of " & "SDLK_QUESTION" &
        " already exists, not redeclaring")
when not declared(SDLK_AT):
  when cast[cuint](64'i64) is static:
    const
      SDLK_AT* = cast[cuint](64'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:93:9
  else:
    let SDLK_AT* = cast[cuint](64'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:93:9
else:
  static :
    hint("Declaration of " & "SDLK_AT" & " already exists, not redeclaring")
when not declared(SDLK_LEFTBRACKET):
  when cast[cuint](91'i64) is static:
    const
      SDLK_LEFTBRACKET* = cast[cuint](91'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:94:9
  else:
    let SDLK_LEFTBRACKET* = cast[cuint](91'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:94:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFTBRACKET" &
        " already exists, not redeclaring")
when not declared(SDLK_BACKSLASH):
  when cast[cuint](92'i64) is static:
    const
      SDLK_BACKSLASH* = cast[cuint](92'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:95:9
  else:
    let SDLK_BACKSLASH* = cast[cuint](92'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:95:9
else:
  static :
    hint("Declaration of " & "SDLK_BACKSLASH" &
        " already exists, not redeclaring")
when not declared(SDLK_RIGHTBRACKET):
  when cast[cuint](93'i64) is static:
    const
      SDLK_RIGHTBRACKET* = cast[cuint](93'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:96:9
  else:
    let SDLK_RIGHTBRACKET* = cast[cuint](93'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:96:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHTBRACKET" &
        " already exists, not redeclaring")
when not declared(SDLK_CARET):
  when cast[cuint](94'i64) is static:
    const
      SDLK_CARET* = cast[cuint](94'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:97:9
  else:
    let SDLK_CARET* = cast[cuint](94'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:97:9
else:
  static :
    hint("Declaration of " & "SDLK_CARET" & " already exists, not redeclaring")
when not declared(SDLK_UNDERSCORE):
  when cast[cuint](95'i64) is static:
    const
      SDLK_UNDERSCORE* = cast[cuint](95'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:98:9
  else:
    let SDLK_UNDERSCORE* = cast[cuint](95'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:98:9
else:
  static :
    hint("Declaration of " & "SDLK_UNDERSCORE" &
        " already exists, not redeclaring")
when not declared(SDLK_GRAVE):
  when cast[cuint](96'i64) is static:
    const
      SDLK_GRAVE* = cast[cuint](96'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:99:9
  else:
    let SDLK_GRAVE* = cast[cuint](96'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:99:9
else:
  static :
    hint("Declaration of " & "SDLK_GRAVE" & " already exists, not redeclaring")
when not declared(SDLK_A):
  when cast[cuint](97'i64) is static:
    const
      SDLK_A* = cast[cuint](97'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:100:9
  else:
    let SDLK_A* = cast[cuint](97'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:100:9
else:
  static :
    hint("Declaration of " & "SDLK_A" & " already exists, not redeclaring")
when not declared(SDLK_B):
  when cast[cuint](98'i64) is static:
    const
      SDLK_B* = cast[cuint](98'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:101:9
  else:
    let SDLK_B* = cast[cuint](98'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:101:9
else:
  static :
    hint("Declaration of " & "SDLK_B" & " already exists, not redeclaring")
when not declared(SDLK_C):
  when cast[cuint](99'i64) is static:
    const
      SDLK_C* = cast[cuint](99'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:102:9
  else:
    let SDLK_C* = cast[cuint](99'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:102:9
else:
  static :
    hint("Declaration of " & "SDLK_C" & " already exists, not redeclaring")
when not declared(SDLK_D):
  when cast[cuint](100'i64) is static:
    const
      SDLK_D* = cast[cuint](100'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:103:9
  else:
    let SDLK_D* = cast[cuint](100'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:103:9
else:
  static :
    hint("Declaration of " & "SDLK_D" & " already exists, not redeclaring")
when not declared(SDLK_E):
  when cast[cuint](101'i64) is static:
    const
      SDLK_E* = cast[cuint](101'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:104:9
  else:
    let SDLK_E* = cast[cuint](101'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:104:9
else:
  static :
    hint("Declaration of " & "SDLK_E" & " already exists, not redeclaring")
when not declared(SDLK_F):
  when cast[cuint](102'i64) is static:
    const
      SDLK_F* = cast[cuint](102'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:105:9
  else:
    let SDLK_F* = cast[cuint](102'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:105:9
else:
  static :
    hint("Declaration of " & "SDLK_F" & " already exists, not redeclaring")
when not declared(SDLK_G):
  when cast[cuint](103'i64) is static:
    const
      SDLK_G* = cast[cuint](103'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:106:9
  else:
    let SDLK_G* = cast[cuint](103'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:106:9
else:
  static :
    hint("Declaration of " & "SDLK_G" & " already exists, not redeclaring")
when not declared(SDLK_H):
  when cast[cuint](104'i64) is static:
    const
      SDLK_H* = cast[cuint](104'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:107:9
  else:
    let SDLK_H* = cast[cuint](104'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:107:9
else:
  static :
    hint("Declaration of " & "SDLK_H" & " already exists, not redeclaring")
when not declared(SDLK_I):
  when cast[cuint](105'i64) is static:
    const
      SDLK_I* = cast[cuint](105'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:108:9
  else:
    let SDLK_I* = cast[cuint](105'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:108:9
else:
  static :
    hint("Declaration of " & "SDLK_I" & " already exists, not redeclaring")
when not declared(SDLK_J):
  when cast[cuint](106'i64) is static:
    const
      SDLK_J* = cast[cuint](106'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:109:9
  else:
    let SDLK_J* = cast[cuint](106'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:109:9
else:
  static :
    hint("Declaration of " & "SDLK_J" & " already exists, not redeclaring")
when not declared(SDLK_K):
  when cast[cuint](107'i64) is static:
    const
      SDLK_K* = cast[cuint](107'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:110:9
  else:
    let SDLK_K* = cast[cuint](107'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:110:9
else:
  static :
    hint("Declaration of " & "SDLK_K" & " already exists, not redeclaring")
when not declared(SDLK_L):
  when cast[cuint](108'i64) is static:
    const
      SDLK_L* = cast[cuint](108'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:111:9
  else:
    let SDLK_L* = cast[cuint](108'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:111:9
else:
  static :
    hint("Declaration of " & "SDLK_L" & " already exists, not redeclaring")
when not declared(SDLK_M):
  when cast[cuint](109'i64) is static:
    const
      SDLK_M* = cast[cuint](109'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:112:9
  else:
    let SDLK_M* = cast[cuint](109'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:112:9
else:
  static :
    hint("Declaration of " & "SDLK_M" & " already exists, not redeclaring")
when not declared(SDLK_N):
  when cast[cuint](110'i64) is static:
    const
      SDLK_N* = cast[cuint](110'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:113:9
  else:
    let SDLK_N* = cast[cuint](110'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:113:9
else:
  static :
    hint("Declaration of " & "SDLK_N" & " already exists, not redeclaring")
when not declared(SDLK_O):
  when cast[cuint](111'i64) is static:
    const
      SDLK_O* = cast[cuint](111'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:114:9
  else:
    let SDLK_O* = cast[cuint](111'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:114:9
else:
  static :
    hint("Declaration of " & "SDLK_O" & " already exists, not redeclaring")
when not declared(SDLK_P):
  when cast[cuint](112'i64) is static:
    const
      SDLK_P* = cast[cuint](112'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:115:9
  else:
    let SDLK_P* = cast[cuint](112'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:115:9
else:
  static :
    hint("Declaration of " & "SDLK_P" & " already exists, not redeclaring")
when not declared(SDLK_Q):
  when cast[cuint](113'i64) is static:
    const
      SDLK_Q* = cast[cuint](113'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:116:9
  else:
    let SDLK_Q* = cast[cuint](113'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:116:9
else:
  static :
    hint("Declaration of " & "SDLK_Q" & " already exists, not redeclaring")
when not declared(SDLK_R):
  when cast[cuint](114'i64) is static:
    const
      SDLK_R* = cast[cuint](114'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:117:9
  else:
    let SDLK_R* = cast[cuint](114'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:117:9
else:
  static :
    hint("Declaration of " & "SDLK_R" & " already exists, not redeclaring")
when not declared(SDLK_S):
  when cast[cuint](115'i64) is static:
    const
      SDLK_S* = cast[cuint](115'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:118:9
  else:
    let SDLK_S* = cast[cuint](115'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:118:9
else:
  static :
    hint("Declaration of " & "SDLK_S" & " already exists, not redeclaring")
when not declared(SDLK_T):
  when cast[cuint](116'i64) is static:
    const
      SDLK_T* = cast[cuint](116'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:119:9
  else:
    let SDLK_T* = cast[cuint](116'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:119:9
else:
  static :
    hint("Declaration of " & "SDLK_T" & " already exists, not redeclaring")
when not declared(SDLK_U):
  when cast[cuint](117'i64) is static:
    const
      SDLK_U* = cast[cuint](117'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:120:9
  else:
    let SDLK_U* = cast[cuint](117'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:120:9
else:
  static :
    hint("Declaration of " & "SDLK_U" & " already exists, not redeclaring")
when not declared(SDLK_V):
  when cast[cuint](118'i64) is static:
    const
      SDLK_V* = cast[cuint](118'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:121:9
  else:
    let SDLK_V* = cast[cuint](118'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:121:9
else:
  static :
    hint("Declaration of " & "SDLK_V" & " already exists, not redeclaring")
when not declared(SDLK_W):
  when cast[cuint](119'i64) is static:
    const
      SDLK_W* = cast[cuint](119'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:122:9
  else:
    let SDLK_W* = cast[cuint](119'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:122:9
else:
  static :
    hint("Declaration of " & "SDLK_W" & " already exists, not redeclaring")
when not declared(SDLK_X):
  when cast[cuint](120'i64) is static:
    const
      SDLK_X* = cast[cuint](120'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:123:9
  else:
    let SDLK_X* = cast[cuint](120'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:123:9
else:
  static :
    hint("Declaration of " & "SDLK_X" & " already exists, not redeclaring")
when not declared(SDLK_Y):
  when cast[cuint](121'i64) is static:
    const
      SDLK_Y* = cast[cuint](121'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:124:9
  else:
    let SDLK_Y* = cast[cuint](121'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:124:9
else:
  static :
    hint("Declaration of " & "SDLK_Y" & " already exists, not redeclaring")
when not declared(SDLK_Z):
  when cast[cuint](122'i64) is static:
    const
      SDLK_Z* = cast[cuint](122'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:125:9
  else:
    let SDLK_Z* = cast[cuint](122'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:125:9
else:
  static :
    hint("Declaration of " & "SDLK_Z" & " already exists, not redeclaring")
when not declared(SDLK_LEFTBRACE):
  when cast[cuint](123'i64) is static:
    const
      SDLK_LEFTBRACE* = cast[cuint](123'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:126:9
  else:
    let SDLK_LEFTBRACE* = cast[cuint](123'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:126:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_PIPE):
  when cast[cuint](124'i64) is static:
    const
      SDLK_PIPE* = cast[cuint](124'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:127:9
  else:
    let SDLK_PIPE* = cast[cuint](124'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:127:9
else:
  static :
    hint("Declaration of " & "SDLK_PIPE" & " already exists, not redeclaring")
when not declared(SDLK_RIGHTBRACE):
  when cast[cuint](125'i64) is static:
    const
      SDLK_RIGHTBRACE* = cast[cuint](125'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:128:9
  else:
    let SDLK_RIGHTBRACE* = cast[cuint](125'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:128:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_TILDE):
  when cast[cuint](126'i64) is static:
    const
      SDLK_TILDE* = cast[cuint](126'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:129:9
  else:
    let SDLK_TILDE* = cast[cuint](126'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:129:9
else:
  static :
    hint("Declaration of " & "SDLK_TILDE" & " already exists, not redeclaring")
when not declared(SDLK_DELETE):
  when cast[cuint](127'i64) is static:
    const
      SDLK_DELETE* = cast[cuint](127'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:130:9
  else:
    let SDLK_DELETE* = cast[cuint](127'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:130:9
else:
  static :
    hint("Declaration of " & "SDLK_DELETE" & " already exists, not redeclaring")
when not declared(SDLK_PLUSMINUS):
  when cast[cuint](177'i64) is static:
    const
      SDLK_PLUSMINUS* = cast[cuint](177'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:131:9
  else:
    let SDLK_PLUSMINUS* = cast[cuint](177'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:131:9
else:
  static :
    hint("Declaration of " & "SDLK_PLUSMINUS" &
        " already exists, not redeclaring")
when not declared(SDLK_CAPSLOCK):
  when cast[cuint](1073741881'i64) is static:
    const
      SDLK_CAPSLOCK* = cast[cuint](1073741881'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:132:9
  else:
    let SDLK_CAPSLOCK* = cast[cuint](1073741881'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:132:9
else:
  static :
    hint("Declaration of " & "SDLK_CAPSLOCK" &
        " already exists, not redeclaring")
when not declared(SDLK_F1):
  when cast[cuint](1073741882'i64) is static:
    const
      SDLK_F1* = cast[cuint](1073741882'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:133:9
  else:
    let SDLK_F1* = cast[cuint](1073741882'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:133:9
else:
  static :
    hint("Declaration of " & "SDLK_F1" & " already exists, not redeclaring")
when not declared(SDLK_F2):
  when cast[cuint](1073741883'i64) is static:
    const
      SDLK_F2* = cast[cuint](1073741883'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:134:9
  else:
    let SDLK_F2* = cast[cuint](1073741883'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:134:9
else:
  static :
    hint("Declaration of " & "SDLK_F2" & " already exists, not redeclaring")
when not declared(SDLK_F3):
  when cast[cuint](1073741884'i64) is static:
    const
      SDLK_F3* = cast[cuint](1073741884'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:135:9
  else:
    let SDLK_F3* = cast[cuint](1073741884'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:135:9
else:
  static :
    hint("Declaration of " & "SDLK_F3" & " already exists, not redeclaring")
when not declared(SDLK_F4):
  when cast[cuint](1073741885'i64) is static:
    const
      SDLK_F4* = cast[cuint](1073741885'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:136:9
  else:
    let SDLK_F4* = cast[cuint](1073741885'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:136:9
else:
  static :
    hint("Declaration of " & "SDLK_F4" & " already exists, not redeclaring")
when not declared(SDLK_F5):
  when cast[cuint](1073741886'i64) is static:
    const
      SDLK_F5* = cast[cuint](1073741886'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:137:9
  else:
    let SDLK_F5* = cast[cuint](1073741886'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:137:9
else:
  static :
    hint("Declaration of " & "SDLK_F5" & " already exists, not redeclaring")
when not declared(SDLK_F6):
  when cast[cuint](1073741887'i64) is static:
    const
      SDLK_F6* = cast[cuint](1073741887'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:138:9
  else:
    let SDLK_F6* = cast[cuint](1073741887'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:138:9
else:
  static :
    hint("Declaration of " & "SDLK_F6" & " already exists, not redeclaring")
when not declared(SDLK_F7):
  when cast[cuint](1073741888'i64) is static:
    const
      SDLK_F7* = cast[cuint](1073741888'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:139:9
  else:
    let SDLK_F7* = cast[cuint](1073741888'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:139:9
else:
  static :
    hint("Declaration of " & "SDLK_F7" & " already exists, not redeclaring")
when not declared(SDLK_F8):
  when cast[cuint](1073741889'i64) is static:
    const
      SDLK_F8* = cast[cuint](1073741889'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:140:9
  else:
    let SDLK_F8* = cast[cuint](1073741889'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:140:9
else:
  static :
    hint("Declaration of " & "SDLK_F8" & " already exists, not redeclaring")
when not declared(SDLK_F9):
  when cast[cuint](1073741890'i64) is static:
    const
      SDLK_F9* = cast[cuint](1073741890'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:141:9
  else:
    let SDLK_F9* = cast[cuint](1073741890'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:141:9
else:
  static :
    hint("Declaration of " & "SDLK_F9" & " already exists, not redeclaring")
when not declared(SDLK_F10):
  when cast[cuint](1073741891'i64) is static:
    const
      SDLK_F10* = cast[cuint](1073741891'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:142:9
  else:
    let SDLK_F10* = cast[cuint](1073741891'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:142:9
else:
  static :
    hint("Declaration of " & "SDLK_F10" & " already exists, not redeclaring")
when not declared(SDLK_F11):
  when cast[cuint](1073741892'i64) is static:
    const
      SDLK_F11* = cast[cuint](1073741892'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:143:9
  else:
    let SDLK_F11* = cast[cuint](1073741892'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:143:9
else:
  static :
    hint("Declaration of " & "SDLK_F11" & " already exists, not redeclaring")
when not declared(SDLK_F12):
  when cast[cuint](1073741893'i64) is static:
    const
      SDLK_F12* = cast[cuint](1073741893'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:144:9
  else:
    let SDLK_F12* = cast[cuint](1073741893'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:144:9
else:
  static :
    hint("Declaration of " & "SDLK_F12" & " already exists, not redeclaring")
when not declared(SDLK_PRINTSCREEN):
  when cast[cuint](1073741894'i64) is static:
    const
      SDLK_PRINTSCREEN* = cast[cuint](1073741894'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:145:9
  else:
    let SDLK_PRINTSCREEN* = cast[cuint](1073741894'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:145:9
else:
  static :
    hint("Declaration of " & "SDLK_PRINTSCREEN" &
        " already exists, not redeclaring")
when not declared(SDLK_SCROLLLOCK):
  when cast[cuint](1073741895'i64) is static:
    const
      SDLK_SCROLLLOCK* = cast[cuint](1073741895'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:146:9
  else:
    let SDLK_SCROLLLOCK* = cast[cuint](1073741895'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:146:9
else:
  static :
    hint("Declaration of " & "SDLK_SCROLLLOCK" &
        " already exists, not redeclaring")
when not declared(SDLK_PAUSE):
  when cast[cuint](1073741896'i64) is static:
    const
      SDLK_PAUSE* = cast[cuint](1073741896'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:147:9
  else:
    let SDLK_PAUSE* = cast[cuint](1073741896'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:147:9
else:
  static :
    hint("Declaration of " & "SDLK_PAUSE" & " already exists, not redeclaring")
when not declared(SDLK_INSERT):
  when cast[cuint](1073741897'i64) is static:
    const
      SDLK_INSERT* = cast[cuint](1073741897'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:148:9
  else:
    let SDLK_INSERT* = cast[cuint](1073741897'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:148:9
else:
  static :
    hint("Declaration of " & "SDLK_INSERT" & " already exists, not redeclaring")
when not declared(SDLK_HOME):
  when cast[cuint](1073741898'i64) is static:
    const
      SDLK_HOME* = cast[cuint](1073741898'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:149:9
  else:
    let SDLK_HOME* = cast[cuint](1073741898'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:149:9
else:
  static :
    hint("Declaration of " & "SDLK_HOME" & " already exists, not redeclaring")
when not declared(SDLK_PAGEUP):
  when cast[cuint](1073741899'i64) is static:
    const
      SDLK_PAGEUP* = cast[cuint](1073741899'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:150:9
  else:
    let SDLK_PAGEUP* = cast[cuint](1073741899'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:150:9
else:
  static :
    hint("Declaration of " & "SDLK_PAGEUP" & " already exists, not redeclaring")
when not declared(SDLK_END):
  when cast[cuint](1073741901'i64) is static:
    const
      SDLK_END* = cast[cuint](1073741901'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:151:9
  else:
    let SDLK_END* = cast[cuint](1073741901'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:151:9
else:
  static :
    hint("Declaration of " & "SDLK_END" & " already exists, not redeclaring")
when not declared(SDLK_PAGEDOWN):
  when cast[cuint](1073741902'i64) is static:
    const
      SDLK_PAGEDOWN* = cast[cuint](1073741902'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:152:9
  else:
    let SDLK_PAGEDOWN* = cast[cuint](1073741902'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:152:9
else:
  static :
    hint("Declaration of " & "SDLK_PAGEDOWN" &
        " already exists, not redeclaring")
when not declared(SDLK_RIGHT):
  when cast[cuint](1073741903'i64) is static:
    const
      SDLK_RIGHT* = cast[cuint](1073741903'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:153:9
  else:
    let SDLK_RIGHT* = cast[cuint](1073741903'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:153:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHT" & " already exists, not redeclaring")
when not declared(SDLK_LEFT):
  when cast[cuint](1073741904'i64) is static:
    const
      SDLK_LEFT* = cast[cuint](1073741904'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:154:9
  else:
    let SDLK_LEFT* = cast[cuint](1073741904'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:154:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFT" & " already exists, not redeclaring")
when not declared(SDLK_DOWN):
  when cast[cuint](1073741905'i64) is static:
    const
      SDLK_DOWN* = cast[cuint](1073741905'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:155:9
  else:
    let SDLK_DOWN* = cast[cuint](1073741905'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:155:9
else:
  static :
    hint("Declaration of " & "SDLK_DOWN" & " already exists, not redeclaring")
when not declared(SDLK_UP):
  when cast[cuint](1073741906'i64) is static:
    const
      SDLK_UP* = cast[cuint](1073741906'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:156:9
  else:
    let SDLK_UP* = cast[cuint](1073741906'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:156:9
else:
  static :
    hint("Declaration of " & "SDLK_UP" & " already exists, not redeclaring")
when not declared(SDLK_NUMLOCKCLEAR):
  when cast[cuint](1073741907'i64) is static:
    const
      SDLK_NUMLOCKCLEAR* = cast[cuint](1073741907'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:157:9
  else:
    let SDLK_NUMLOCKCLEAR* = cast[cuint](1073741907'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:157:9
else:
  static :
    hint("Declaration of " & "SDLK_NUMLOCKCLEAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DIVIDE):
  when cast[cuint](1073741908'i64) is static:
    const
      SDLK_KP_DIVIDE* = cast[cuint](1073741908'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:158:9
  else:
    let SDLK_KP_DIVIDE* = cast[cuint](1073741908'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:158:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DIVIDE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MULTIPLY):
  when cast[cuint](1073741909'i64) is static:
    const
      SDLK_KP_MULTIPLY* = cast[cuint](1073741909'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:159:9
  else:
    let SDLK_KP_MULTIPLY* = cast[cuint](1073741909'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:159:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MULTIPLY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MINUS):
  when cast[cuint](1073741910'i64) is static:
    const
      SDLK_KP_MINUS* = cast[cuint](1073741910'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:160:9
  else:
    let SDLK_KP_MINUS* = cast[cuint](1073741910'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:160:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MINUS" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_PLUS):
  when cast[cuint](1073741911'i64) is static:
    const
      SDLK_KP_PLUS* = cast[cuint](1073741911'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:161:9
  else:
    let SDLK_KP_PLUS* = cast[cuint](1073741911'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:161:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PLUS" & " already exists, not redeclaring")
when not declared(SDLK_KP_ENTER):
  when cast[cuint](1073741912'i64) is static:
    const
      SDLK_KP_ENTER* = cast[cuint](1073741912'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:162:9
  else:
    let SDLK_KP_ENTER* = cast[cuint](1073741912'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:162:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_ENTER" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_1):
  when cast[cuint](1073741913'i64) is static:
    const
      SDLK_KP_1* = cast[cuint](1073741913'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:163:9
  else:
    let SDLK_KP_1* = cast[cuint](1073741913'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:163:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_1" & " already exists, not redeclaring")
when not declared(SDLK_KP_2):
  when cast[cuint](1073741914'i64) is static:
    const
      SDLK_KP_2* = cast[cuint](1073741914'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:164:9
  else:
    let SDLK_KP_2* = cast[cuint](1073741914'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:164:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_2" & " already exists, not redeclaring")
when not declared(SDLK_KP_3):
  when cast[cuint](1073741915'i64) is static:
    const
      SDLK_KP_3* = cast[cuint](1073741915'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:165:9
  else:
    let SDLK_KP_3* = cast[cuint](1073741915'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:165:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_3" & " already exists, not redeclaring")
when not declared(SDLK_KP_4):
  when cast[cuint](1073741916'i64) is static:
    const
      SDLK_KP_4* = cast[cuint](1073741916'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:166:9
  else:
    let SDLK_KP_4* = cast[cuint](1073741916'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:166:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_4" & " already exists, not redeclaring")
when not declared(SDLK_KP_5):
  when cast[cuint](1073741917'i64) is static:
    const
      SDLK_KP_5* = cast[cuint](1073741917'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:167:9
  else:
    let SDLK_KP_5* = cast[cuint](1073741917'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:167:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_5" & " already exists, not redeclaring")
when not declared(SDLK_KP_6):
  when cast[cuint](1073741918'i64) is static:
    const
      SDLK_KP_6* = cast[cuint](1073741918'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:168:9
  else:
    let SDLK_KP_6* = cast[cuint](1073741918'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:168:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_6" & " already exists, not redeclaring")
when not declared(SDLK_KP_7):
  when cast[cuint](1073741919'i64) is static:
    const
      SDLK_KP_7* = cast[cuint](1073741919'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:169:9
  else:
    let SDLK_KP_7* = cast[cuint](1073741919'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:169:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_7" & " already exists, not redeclaring")
when not declared(SDLK_KP_8):
  when cast[cuint](1073741920'i64) is static:
    const
      SDLK_KP_8* = cast[cuint](1073741920'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:170:9
  else:
    let SDLK_KP_8* = cast[cuint](1073741920'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:170:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_8" & " already exists, not redeclaring")
when not declared(SDLK_KP_9):
  when cast[cuint](1073741921'i64) is static:
    const
      SDLK_KP_9* = cast[cuint](1073741921'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:171:9
  else:
    let SDLK_KP_9* = cast[cuint](1073741921'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:171:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_9" & " already exists, not redeclaring")
when not declared(SDLK_KP_0):
  when cast[cuint](1073741922'i64) is static:
    const
      SDLK_KP_0* = cast[cuint](1073741922'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:172:9
  else:
    let SDLK_KP_0* = cast[cuint](1073741922'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:172:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_0" & " already exists, not redeclaring")
when not declared(SDLK_KP_PERIOD):
  when cast[cuint](1073741923'i64) is static:
    const
      SDLK_KP_PERIOD* = cast[cuint](1073741923'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:173:9
  else:
    let SDLK_KP_PERIOD* = cast[cuint](1073741923'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:173:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PERIOD" &
        " already exists, not redeclaring")
when not declared(SDLK_APPLICATION):
  when cast[cuint](1073741925'i64) is static:
    const
      SDLK_APPLICATION* = cast[cuint](1073741925'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:174:9
  else:
    let SDLK_APPLICATION* = cast[cuint](1073741925'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:174:9
else:
  static :
    hint("Declaration of " & "SDLK_APPLICATION" &
        " already exists, not redeclaring")
when not declared(SDLK_POWER):
  when cast[cuint](1073741926'i64) is static:
    const
      SDLK_POWER* = cast[cuint](1073741926'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:175:9
  else:
    let SDLK_POWER* = cast[cuint](1073741926'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:175:9
else:
  static :
    hint("Declaration of " & "SDLK_POWER" & " already exists, not redeclaring")
when not declared(SDLK_KP_EQUALS):
  when cast[cuint](1073741927'i64) is static:
    const
      SDLK_KP_EQUALS* = cast[cuint](1073741927'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:176:9
  else:
    let SDLK_KP_EQUALS* = cast[cuint](1073741927'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:176:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_EQUALS" &
        " already exists, not redeclaring")
when not declared(SDLK_F13):
  when cast[cuint](1073741928'i64) is static:
    const
      SDLK_F13* = cast[cuint](1073741928'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:177:9
  else:
    let SDLK_F13* = cast[cuint](1073741928'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:177:9
else:
  static :
    hint("Declaration of " & "SDLK_F13" & " already exists, not redeclaring")
when not declared(SDLK_F14):
  when cast[cuint](1073741929'i64) is static:
    const
      SDLK_F14* = cast[cuint](1073741929'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:178:9
  else:
    let SDLK_F14* = cast[cuint](1073741929'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:178:9
else:
  static :
    hint("Declaration of " & "SDLK_F14" & " already exists, not redeclaring")
when not declared(SDLK_F15):
  when cast[cuint](1073741930'i64) is static:
    const
      SDLK_F15* = cast[cuint](1073741930'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:179:9
  else:
    let SDLK_F15* = cast[cuint](1073741930'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:179:9
else:
  static :
    hint("Declaration of " & "SDLK_F15" & " already exists, not redeclaring")
when not declared(SDLK_F16):
  when cast[cuint](1073741931'i64) is static:
    const
      SDLK_F16* = cast[cuint](1073741931'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:180:9
  else:
    let SDLK_F16* = cast[cuint](1073741931'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:180:9
else:
  static :
    hint("Declaration of " & "SDLK_F16" & " already exists, not redeclaring")
when not declared(SDLK_F17):
  when cast[cuint](1073741932'i64) is static:
    const
      SDLK_F17* = cast[cuint](1073741932'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:181:9
  else:
    let SDLK_F17* = cast[cuint](1073741932'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:181:9
else:
  static :
    hint("Declaration of " & "SDLK_F17" & " already exists, not redeclaring")
when not declared(SDLK_F18):
  when cast[cuint](1073741933'i64) is static:
    const
      SDLK_F18* = cast[cuint](1073741933'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:182:9
  else:
    let SDLK_F18* = cast[cuint](1073741933'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:182:9
else:
  static :
    hint("Declaration of " & "SDLK_F18" & " already exists, not redeclaring")
when not declared(SDLK_F19):
  when cast[cuint](1073741934'i64) is static:
    const
      SDLK_F19* = cast[cuint](1073741934'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:183:9
  else:
    let SDLK_F19* = cast[cuint](1073741934'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:183:9
else:
  static :
    hint("Declaration of " & "SDLK_F19" & " already exists, not redeclaring")
when not declared(SDLK_F20):
  when cast[cuint](1073741935'i64) is static:
    const
      SDLK_F20* = cast[cuint](1073741935'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:184:9
  else:
    let SDLK_F20* = cast[cuint](1073741935'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:184:9
else:
  static :
    hint("Declaration of " & "SDLK_F20" & " already exists, not redeclaring")
when not declared(SDLK_F21):
  when cast[cuint](1073741936'i64) is static:
    const
      SDLK_F21* = cast[cuint](1073741936'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:185:9
  else:
    let SDLK_F21* = cast[cuint](1073741936'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:185:9
else:
  static :
    hint("Declaration of " & "SDLK_F21" & " already exists, not redeclaring")
when not declared(SDLK_F22):
  when cast[cuint](1073741937'i64) is static:
    const
      SDLK_F22* = cast[cuint](1073741937'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:186:9
  else:
    let SDLK_F22* = cast[cuint](1073741937'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:186:9
else:
  static :
    hint("Declaration of " & "SDLK_F22" & " already exists, not redeclaring")
when not declared(SDLK_F23):
  when cast[cuint](1073741938'i64) is static:
    const
      SDLK_F23* = cast[cuint](1073741938'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:187:9
  else:
    let SDLK_F23* = cast[cuint](1073741938'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:187:9
else:
  static :
    hint("Declaration of " & "SDLK_F23" & " already exists, not redeclaring")
when not declared(SDLK_F24):
  when cast[cuint](1073741939'i64) is static:
    const
      SDLK_F24* = cast[cuint](1073741939'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:188:9
  else:
    let SDLK_F24* = cast[cuint](1073741939'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:188:9
else:
  static :
    hint("Declaration of " & "SDLK_F24" & " already exists, not redeclaring")
when not declared(SDLK_EXECUTE):
  when cast[cuint](1073741940'i64) is static:
    const
      SDLK_EXECUTE* = cast[cuint](1073741940'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:189:9
  else:
    let SDLK_EXECUTE* = cast[cuint](1073741940'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:189:9
else:
  static :
    hint("Declaration of " & "SDLK_EXECUTE" & " already exists, not redeclaring")
when not declared(SDLK_HELP):
  when cast[cuint](1073741941'i64) is static:
    const
      SDLK_HELP* = cast[cuint](1073741941'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:190:9
  else:
    let SDLK_HELP* = cast[cuint](1073741941'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:190:9
else:
  static :
    hint("Declaration of " & "SDLK_HELP" & " already exists, not redeclaring")
when not declared(SDLK_MENU):
  when cast[cuint](1073741942'i64) is static:
    const
      SDLK_MENU* = cast[cuint](1073741942'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:191:9
  else:
    let SDLK_MENU* = cast[cuint](1073741942'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:191:9
else:
  static :
    hint("Declaration of " & "SDLK_MENU" & " already exists, not redeclaring")
when not declared(SDLK_SELECT):
  when cast[cuint](1073741943'i64) is static:
    const
      SDLK_SELECT* = cast[cuint](1073741943'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:192:9
  else:
    let SDLK_SELECT* = cast[cuint](1073741943'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:192:9
else:
  static :
    hint("Declaration of " & "SDLK_SELECT" & " already exists, not redeclaring")
when not declared(SDLK_STOP):
  when cast[cuint](1073741944'i64) is static:
    const
      SDLK_STOP* = cast[cuint](1073741944'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:193:9
  else:
    let SDLK_STOP* = cast[cuint](1073741944'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:193:9
else:
  static :
    hint("Declaration of " & "SDLK_STOP" & " already exists, not redeclaring")
when not declared(SDLK_AGAIN):
  when cast[cuint](1073741945'i64) is static:
    const
      SDLK_AGAIN* = cast[cuint](1073741945'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:194:9
  else:
    let SDLK_AGAIN* = cast[cuint](1073741945'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:194:9
else:
  static :
    hint("Declaration of " & "SDLK_AGAIN" & " already exists, not redeclaring")
when not declared(SDLK_UNDO):
  when cast[cuint](1073741946'i64) is static:
    const
      SDLK_UNDO* = cast[cuint](1073741946'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:195:9
  else:
    let SDLK_UNDO* = cast[cuint](1073741946'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:195:9
else:
  static :
    hint("Declaration of " & "SDLK_UNDO" & " already exists, not redeclaring")
when not declared(SDLK_CUT):
  when cast[cuint](1073741947'i64) is static:
    const
      SDLK_CUT* = cast[cuint](1073741947'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:196:9
  else:
    let SDLK_CUT* = cast[cuint](1073741947'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:196:9
else:
  static :
    hint("Declaration of " & "SDLK_CUT" & " already exists, not redeclaring")
when not declared(SDLK_COPY):
  when cast[cuint](1073741948'i64) is static:
    const
      SDLK_COPY* = cast[cuint](1073741948'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:197:9
  else:
    let SDLK_COPY* = cast[cuint](1073741948'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:197:9
else:
  static :
    hint("Declaration of " & "SDLK_COPY" & " already exists, not redeclaring")
when not declared(SDLK_PASTE):
  when cast[cuint](1073741949'i64) is static:
    const
      SDLK_PASTE* = cast[cuint](1073741949'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:198:9
  else:
    let SDLK_PASTE* = cast[cuint](1073741949'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:198:9
else:
  static :
    hint("Declaration of " & "SDLK_PASTE" & " already exists, not redeclaring")
when not declared(SDLK_FIND):
  when cast[cuint](1073741950'i64) is static:
    const
      SDLK_FIND* = cast[cuint](1073741950'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:199:9
  else:
    let SDLK_FIND* = cast[cuint](1073741950'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:199:9
else:
  static :
    hint("Declaration of " & "SDLK_FIND" & " already exists, not redeclaring")
when not declared(SDLK_MUTE):
  when cast[cuint](1073741951'i64) is static:
    const
      SDLK_MUTE* = cast[cuint](1073741951'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:200:9
  else:
    let SDLK_MUTE* = cast[cuint](1073741951'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:200:9
else:
  static :
    hint("Declaration of " & "SDLK_MUTE" & " already exists, not redeclaring")
when not declared(SDLK_VOLUMEUP):
  when cast[cuint](1073741952'i64) is static:
    const
      SDLK_VOLUMEUP* = cast[cuint](1073741952'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:201:9
  else:
    let SDLK_VOLUMEUP* = cast[cuint](1073741952'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:201:9
else:
  static :
    hint("Declaration of " & "SDLK_VOLUMEUP" &
        " already exists, not redeclaring")
when not declared(SDLK_VOLUMEDOWN):
  when cast[cuint](1073741953'i64) is static:
    const
      SDLK_VOLUMEDOWN* = cast[cuint](1073741953'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:202:9
  else:
    let SDLK_VOLUMEDOWN* = cast[cuint](1073741953'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:202:9
else:
  static :
    hint("Declaration of " & "SDLK_VOLUMEDOWN" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_COMMA):
  when cast[cuint](1073741957'i64) is static:
    const
      SDLK_KP_COMMA* = cast[cuint](1073741957'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:203:9
  else:
    let SDLK_KP_COMMA* = cast[cuint](1073741957'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:203:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_COMMA" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_EQUALSAS400):
  when cast[cuint](1073741958'i64) is static:
    const
      SDLK_KP_EQUALSAS400* = cast[cuint](1073741958'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:204:9
  else:
    let SDLK_KP_EQUALSAS400* = cast[cuint](1073741958'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:204:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_EQUALSAS400" &
        " already exists, not redeclaring")
when not declared(SDLK_ALTERASE):
  when cast[cuint](1073741977'i64) is static:
    const
      SDLK_ALTERASE* = cast[cuint](1073741977'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:205:9
  else:
    let SDLK_ALTERASE* = cast[cuint](1073741977'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:205:9
else:
  static :
    hint("Declaration of " & "SDLK_ALTERASE" &
        " already exists, not redeclaring")
when not declared(SDLK_SYSREQ):
  when cast[cuint](1073741978'i64) is static:
    const
      SDLK_SYSREQ* = cast[cuint](1073741978'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:206:9
  else:
    let SDLK_SYSREQ* = cast[cuint](1073741978'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:206:9
else:
  static :
    hint("Declaration of " & "SDLK_SYSREQ" & " already exists, not redeclaring")
when not declared(SDLK_CANCEL):
  when cast[cuint](1073741979'i64) is static:
    const
      SDLK_CANCEL* = cast[cuint](1073741979'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:207:9
  else:
    let SDLK_CANCEL* = cast[cuint](1073741979'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:207:9
else:
  static :
    hint("Declaration of " & "SDLK_CANCEL" & " already exists, not redeclaring")
when not declared(SDLK_CLEAR):
  when cast[cuint](1073741980'i64) is static:
    const
      SDLK_CLEAR* = cast[cuint](1073741980'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:208:9
  else:
    let SDLK_CLEAR* = cast[cuint](1073741980'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:208:9
else:
  static :
    hint("Declaration of " & "SDLK_CLEAR" & " already exists, not redeclaring")
when not declared(SDLK_PRIOR):
  when cast[cuint](1073741981'i64) is static:
    const
      SDLK_PRIOR* = cast[cuint](1073741981'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:209:9
  else:
    let SDLK_PRIOR* = cast[cuint](1073741981'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:209:9
else:
  static :
    hint("Declaration of " & "SDLK_PRIOR" & " already exists, not redeclaring")
when not declared(SDLK_RETURN2):
  when cast[cuint](1073741982'i64) is static:
    const
      SDLK_RETURN2* = cast[cuint](1073741982'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:210:9
  else:
    let SDLK_RETURN2* = cast[cuint](1073741982'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:210:9
else:
  static :
    hint("Declaration of " & "SDLK_RETURN2" & " already exists, not redeclaring")
when not declared(SDLK_SEPARATOR):
  when cast[cuint](1073741983'i64) is static:
    const
      SDLK_SEPARATOR* = cast[cuint](1073741983'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:211:9
  else:
    let SDLK_SEPARATOR* = cast[cuint](1073741983'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:211:9
else:
  static :
    hint("Declaration of " & "SDLK_SEPARATOR" &
        " already exists, not redeclaring")
when not declared(SDLK_OUT):
  when cast[cuint](1073741984'i64) is static:
    const
      SDLK_OUT* = cast[cuint](1073741984'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:212:9
  else:
    let SDLK_OUT* = cast[cuint](1073741984'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:212:9
else:
  static :
    hint("Declaration of " & "SDLK_OUT" & " already exists, not redeclaring")
when not declared(SDLK_OPER):
  when cast[cuint](1073741985'i64) is static:
    const
      SDLK_OPER* = cast[cuint](1073741985'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:213:9
  else:
    let SDLK_OPER* = cast[cuint](1073741985'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:213:9
else:
  static :
    hint("Declaration of " & "SDLK_OPER" & " already exists, not redeclaring")
when not declared(SDLK_CLEARAGAIN):
  when cast[cuint](1073741986'i64) is static:
    const
      SDLK_CLEARAGAIN* = cast[cuint](1073741986'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:214:9
  else:
    let SDLK_CLEARAGAIN* = cast[cuint](1073741986'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:214:9
else:
  static :
    hint("Declaration of " & "SDLK_CLEARAGAIN" &
        " already exists, not redeclaring")
when not declared(SDLK_CRSEL):
  when cast[cuint](1073741987'i64) is static:
    const
      SDLK_CRSEL* = cast[cuint](1073741987'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:215:9
  else:
    let SDLK_CRSEL* = cast[cuint](1073741987'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:215:9
else:
  static :
    hint("Declaration of " & "SDLK_CRSEL" & " already exists, not redeclaring")
when not declared(SDLK_EXSEL):
  when cast[cuint](1073741988'i64) is static:
    const
      SDLK_EXSEL* = cast[cuint](1073741988'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:216:9
  else:
    let SDLK_EXSEL* = cast[cuint](1073741988'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:216:9
else:
  static :
    hint("Declaration of " & "SDLK_EXSEL" & " already exists, not redeclaring")
when not declared(SDLK_KP_00):
  when cast[cuint](1073742000'i64) is static:
    const
      SDLK_KP_00* = cast[cuint](1073742000'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:217:9
  else:
    let SDLK_KP_00* = cast[cuint](1073742000'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:217:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_00" & " already exists, not redeclaring")
when not declared(SDLK_KP_000):
  when cast[cuint](1073742001'i64) is static:
    const
      SDLK_KP_000* = cast[cuint](1073742001'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:218:9
  else:
    let SDLK_KP_000* = cast[cuint](1073742001'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:218:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_000" & " already exists, not redeclaring")
when not declared(SDLK_THOUSANDSSEPARATOR):
  when cast[cuint](1073742002'i64) is static:
    const
      SDLK_THOUSANDSSEPARATOR* = cast[cuint](1073742002'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:219:9
  else:
    let SDLK_THOUSANDSSEPARATOR* = cast[cuint](1073742002'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:219:9
else:
  static :
    hint("Declaration of " & "SDLK_THOUSANDSSEPARATOR" &
        " already exists, not redeclaring")
when not declared(SDLK_DECIMALSEPARATOR):
  when cast[cuint](1073742003'i64) is static:
    const
      SDLK_DECIMALSEPARATOR* = cast[cuint](1073742003'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:220:9
  else:
    let SDLK_DECIMALSEPARATOR* = cast[cuint](1073742003'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:220:9
else:
  static :
    hint("Declaration of " & "SDLK_DECIMALSEPARATOR" &
        " already exists, not redeclaring")
when not declared(SDLK_CURRENCYUNIT):
  when cast[cuint](1073742004'i64) is static:
    const
      SDLK_CURRENCYUNIT* = cast[cuint](1073742004'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:221:9
  else:
    let SDLK_CURRENCYUNIT* = cast[cuint](1073742004'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:221:9
else:
  static :
    hint("Declaration of " & "SDLK_CURRENCYUNIT" &
        " already exists, not redeclaring")
when not declared(SDLK_CURRENCYSUBUNIT):
  when cast[cuint](1073742005'i64) is static:
    const
      SDLK_CURRENCYSUBUNIT* = cast[cuint](1073742005'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:222:9
  else:
    let SDLK_CURRENCYSUBUNIT* = cast[cuint](1073742005'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:222:9
else:
  static :
    hint("Declaration of " & "SDLK_CURRENCYSUBUNIT" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_LEFTPAREN):
  when cast[cuint](1073742006'i64) is static:
    const
      SDLK_KP_LEFTPAREN* = cast[cuint](1073742006'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:223:9
  else:
    let SDLK_KP_LEFTPAREN* = cast[cuint](1073742006'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:223:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_LEFTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_RIGHTPAREN):
  when cast[cuint](1073742007'i64) is static:
    const
      SDLK_KP_RIGHTPAREN* = cast[cuint](1073742007'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:224:9
  else:
    let SDLK_KP_RIGHTPAREN* = cast[cuint](1073742007'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:224:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_RIGHTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_LEFTBRACE):
  when cast[cuint](1073742008'i64) is static:
    const
      SDLK_KP_LEFTBRACE* = cast[cuint](1073742008'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:225:9
  else:
    let SDLK_KP_LEFTBRACE* = cast[cuint](1073742008'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:225:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_LEFTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_RIGHTBRACE):
  when cast[cuint](1073742009'i64) is static:
    const
      SDLK_KP_RIGHTBRACE* = cast[cuint](1073742009'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:226:9
  else:
    let SDLK_KP_RIGHTBRACE* = cast[cuint](1073742009'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:226:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_RIGHTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_TAB):
  when cast[cuint](1073742010'i64) is static:
    const
      SDLK_KP_TAB* = cast[cuint](1073742010'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:227:9
  else:
    let SDLK_KP_TAB* = cast[cuint](1073742010'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:227:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_TAB" & " already exists, not redeclaring")
when not declared(SDLK_KP_BACKSPACE):
  when cast[cuint](1073742011'i64) is static:
    const
      SDLK_KP_BACKSPACE* = cast[cuint](1073742011'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:228:9
  else:
    let SDLK_KP_BACKSPACE* = cast[cuint](1073742011'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:228:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_BACKSPACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_A):
  when cast[cuint](1073742012'i64) is static:
    const
      SDLK_KP_A* = cast[cuint](1073742012'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:229:9
  else:
    let SDLK_KP_A* = cast[cuint](1073742012'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:229:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_A" & " already exists, not redeclaring")
when not declared(SDLK_KP_B):
  when cast[cuint](1073742013'i64) is static:
    const
      SDLK_KP_B* = cast[cuint](1073742013'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:230:9
  else:
    let SDLK_KP_B* = cast[cuint](1073742013'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:230:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_B" & " already exists, not redeclaring")
when not declared(SDLK_KP_C):
  when cast[cuint](1073742014'i64) is static:
    const
      SDLK_KP_C* = cast[cuint](1073742014'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:231:9
  else:
    let SDLK_KP_C* = cast[cuint](1073742014'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:231:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_C" & " already exists, not redeclaring")
when not declared(SDLK_KP_D):
  when cast[cuint](1073742015'i64) is static:
    const
      SDLK_KP_D* = cast[cuint](1073742015'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:232:9
  else:
    let SDLK_KP_D* = cast[cuint](1073742015'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:232:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_D" & " already exists, not redeclaring")
when not declared(SDLK_KP_E):
  when cast[cuint](1073742016'i64) is static:
    const
      SDLK_KP_E* = cast[cuint](1073742016'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:233:9
  else:
    let SDLK_KP_E* = cast[cuint](1073742016'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:233:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_E" & " already exists, not redeclaring")
when not declared(SDLK_KP_F):
  when cast[cuint](1073742017'i64) is static:
    const
      SDLK_KP_F* = cast[cuint](1073742017'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:234:9
  else:
    let SDLK_KP_F* = cast[cuint](1073742017'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:234:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_F" & " already exists, not redeclaring")
when not declared(SDLK_KP_XOR):
  when cast[cuint](1073742018'i64) is static:
    const
      SDLK_KP_XOR* = cast[cuint](1073742018'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:235:9
  else:
    let SDLK_KP_XOR* = cast[cuint](1073742018'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:235:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_XOR" & " already exists, not redeclaring")
when not declared(SDLK_KP_POWER):
  when cast[cuint](1073742019'i64) is static:
    const
      SDLK_KP_POWER* = cast[cuint](1073742019'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:236:9
  else:
    let SDLK_KP_POWER* = cast[cuint](1073742019'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:236:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_POWER" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_PERCENT):
  when cast[cuint](1073742020'i64) is static:
    const
      SDLK_KP_PERCENT* = cast[cuint](1073742020'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:237:9
  else:
    let SDLK_KP_PERCENT* = cast[cuint](1073742020'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:237:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PERCENT" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_LESS):
  when cast[cuint](1073742021'i64) is static:
    const
      SDLK_KP_LESS* = cast[cuint](1073742021'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:238:9
  else:
    let SDLK_KP_LESS* = cast[cuint](1073742021'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:238:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_LESS" & " already exists, not redeclaring")
when not declared(SDLK_KP_GREATER):
  when cast[cuint](1073742022'i64) is static:
    const
      SDLK_KP_GREATER* = cast[cuint](1073742022'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:239:9
  else:
    let SDLK_KP_GREATER* = cast[cuint](1073742022'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:239:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_GREATER" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_AMPERSAND):
  when cast[cuint](1073742023'i64) is static:
    const
      SDLK_KP_AMPERSAND* = cast[cuint](1073742023'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:240:9
  else:
    let SDLK_KP_AMPERSAND* = cast[cuint](1073742023'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:240:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_AMPERSAND" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DBLAMPERSAND):
  when cast[cuint](1073742024'i64) is static:
    const
      SDLK_KP_DBLAMPERSAND* = cast[cuint](1073742024'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:241:9
  else:
    let SDLK_KP_DBLAMPERSAND* = cast[cuint](1073742024'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:241:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DBLAMPERSAND" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_VERTICALBAR):
  when cast[cuint](1073742025'i64) is static:
    const
      SDLK_KP_VERTICALBAR* = cast[cuint](1073742025'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:242:9
  else:
    let SDLK_KP_VERTICALBAR* = cast[cuint](1073742025'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:242:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_VERTICALBAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DBLVERTICALBAR):
  when cast[cuint](1073742026'i64) is static:
    const
      SDLK_KP_DBLVERTICALBAR* = cast[cuint](1073742026'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:243:9
  else:
    let SDLK_KP_DBLVERTICALBAR* = cast[cuint](1073742026'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:243:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DBLVERTICALBAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_COLON):
  when cast[cuint](1073742027'i64) is static:
    const
      SDLK_KP_COLON* = cast[cuint](1073742027'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:244:9
  else:
    let SDLK_KP_COLON* = cast[cuint](1073742027'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:244:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_COLON" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_HASH):
  when cast[cuint](1073742028'i64) is static:
    const
      SDLK_KP_HASH* = cast[cuint](1073742028'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:245:9
  else:
    let SDLK_KP_HASH* = cast[cuint](1073742028'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:245:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_HASH" & " already exists, not redeclaring")
when not declared(SDLK_KP_SPACE):
  when cast[cuint](1073742029'i64) is static:
    const
      SDLK_KP_SPACE* = cast[cuint](1073742029'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:246:9
  else:
    let SDLK_KP_SPACE* = cast[cuint](1073742029'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:246:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_SPACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_AT):
  when cast[cuint](1073742030'i64) is static:
    const
      SDLK_KP_AT* = cast[cuint](1073742030'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:247:9
  else:
    let SDLK_KP_AT* = cast[cuint](1073742030'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:247:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_AT" & " already exists, not redeclaring")
when not declared(SDLK_KP_EXCLAM):
  when cast[cuint](1073742031'i64) is static:
    const
      SDLK_KP_EXCLAM* = cast[cuint](1073742031'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:248:9
  else:
    let SDLK_KP_EXCLAM* = cast[cuint](1073742031'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:248:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_EXCLAM" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMSTORE):
  when cast[cuint](1073742032'i64) is static:
    const
      SDLK_KP_MEMSTORE* = cast[cuint](1073742032'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:249:9
  else:
    let SDLK_KP_MEMSTORE* = cast[cuint](1073742032'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:249:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMSTORE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMRECALL):
  when cast[cuint](1073742033'i64) is static:
    const
      SDLK_KP_MEMRECALL* = cast[cuint](1073742033'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:250:9
  else:
    let SDLK_KP_MEMRECALL* = cast[cuint](1073742033'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:250:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMRECALL" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMCLEAR):
  when cast[cuint](1073742034'i64) is static:
    const
      SDLK_KP_MEMCLEAR* = cast[cuint](1073742034'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:251:9
  else:
    let SDLK_KP_MEMCLEAR* = cast[cuint](1073742034'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:251:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMCLEAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMADD):
  when cast[cuint](1073742035'i64) is static:
    const
      SDLK_KP_MEMADD* = cast[cuint](1073742035'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:252:9
  else:
    let SDLK_KP_MEMADD* = cast[cuint](1073742035'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:252:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMADD" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMSUBTRACT):
  when cast[cuint](1073742036'i64) is static:
    const
      SDLK_KP_MEMSUBTRACT* = cast[cuint](1073742036'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:253:9
  else:
    let SDLK_KP_MEMSUBTRACT* = cast[cuint](1073742036'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:253:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMSUBTRACT" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMMULTIPLY):
  when cast[cuint](1073742037'i64) is static:
    const
      SDLK_KP_MEMMULTIPLY* = cast[cuint](1073742037'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:254:9
  else:
    let SDLK_KP_MEMMULTIPLY* = cast[cuint](1073742037'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:254:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMMULTIPLY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMDIVIDE):
  when cast[cuint](1073742038'i64) is static:
    const
      SDLK_KP_MEMDIVIDE* = cast[cuint](1073742038'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:255:9
  else:
    let SDLK_KP_MEMDIVIDE* = cast[cuint](1073742038'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:255:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMDIVIDE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_PLUSMINUS):
  when cast[cuint](1073742039'i64) is static:
    const
      SDLK_KP_PLUSMINUS* = cast[cuint](1073742039'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:256:9
  else:
    let SDLK_KP_PLUSMINUS* = cast[cuint](1073742039'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:256:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PLUSMINUS" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_CLEAR):
  when cast[cuint](1073742040'i64) is static:
    const
      SDLK_KP_CLEAR* = cast[cuint](1073742040'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:257:9
  else:
    let SDLK_KP_CLEAR* = cast[cuint](1073742040'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:257:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_CLEAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_CLEARENTRY):
  when cast[cuint](1073742041'i64) is static:
    const
      SDLK_KP_CLEARENTRY* = cast[cuint](1073742041'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:258:9
  else:
    let SDLK_KP_CLEARENTRY* = cast[cuint](1073742041'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:258:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_CLEARENTRY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_BINARY):
  when cast[cuint](1073742042'i64) is static:
    const
      SDLK_KP_BINARY* = cast[cuint](1073742042'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:259:9
  else:
    let SDLK_KP_BINARY* = cast[cuint](1073742042'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:259:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_BINARY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_OCTAL):
  when cast[cuint](1073742043'i64) is static:
    const
      SDLK_KP_OCTAL* = cast[cuint](1073742043'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:260:9
  else:
    let SDLK_KP_OCTAL* = cast[cuint](1073742043'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:260:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_OCTAL" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DECIMAL):
  when cast[cuint](1073742044'i64) is static:
    const
      SDLK_KP_DECIMAL* = cast[cuint](1073742044'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:261:9
  else:
    let SDLK_KP_DECIMAL* = cast[cuint](1073742044'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:261:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DECIMAL" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_HEXADECIMAL):
  when cast[cuint](1073742045'i64) is static:
    const
      SDLK_KP_HEXADECIMAL* = cast[cuint](1073742045'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:262:9
  else:
    let SDLK_KP_HEXADECIMAL* = cast[cuint](1073742045'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:262:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_HEXADECIMAL" &
        " already exists, not redeclaring")
when not declared(SDLK_LCTRL):
  when cast[cuint](1073742048'i64) is static:
    const
      SDLK_LCTRL* = cast[cuint](1073742048'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:263:9
  else:
    let SDLK_LCTRL* = cast[cuint](1073742048'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:263:9
else:
  static :
    hint("Declaration of " & "SDLK_LCTRL" & " already exists, not redeclaring")
when not declared(SDLK_LSHIFT):
  when cast[cuint](1073742049'i64) is static:
    const
      SDLK_LSHIFT* = cast[cuint](1073742049'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:264:9
  else:
    let SDLK_LSHIFT* = cast[cuint](1073742049'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:264:9
else:
  static :
    hint("Declaration of " & "SDLK_LSHIFT" & " already exists, not redeclaring")
when not declared(SDLK_LALT):
  when cast[cuint](1073742050'i64) is static:
    const
      SDLK_LALT* = cast[cuint](1073742050'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:265:9
  else:
    let SDLK_LALT* = cast[cuint](1073742050'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:265:9
else:
  static :
    hint("Declaration of " & "SDLK_LALT" & " already exists, not redeclaring")
when not declared(SDLK_LGUI):
  when cast[cuint](1073742051'i64) is static:
    const
      SDLK_LGUI* = cast[cuint](1073742051'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:266:9
  else:
    let SDLK_LGUI* = cast[cuint](1073742051'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:266:9
else:
  static :
    hint("Declaration of " & "SDLK_LGUI" & " already exists, not redeclaring")
when not declared(SDLK_RCTRL):
  when cast[cuint](1073742052'i64) is static:
    const
      SDLK_RCTRL* = cast[cuint](1073742052'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:267:9
  else:
    let SDLK_RCTRL* = cast[cuint](1073742052'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:267:9
else:
  static :
    hint("Declaration of " & "SDLK_RCTRL" & " already exists, not redeclaring")
when not declared(SDLK_RSHIFT):
  when cast[cuint](1073742053'i64) is static:
    const
      SDLK_RSHIFT* = cast[cuint](1073742053'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:268:9
  else:
    let SDLK_RSHIFT* = cast[cuint](1073742053'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:268:9
else:
  static :
    hint("Declaration of " & "SDLK_RSHIFT" & " already exists, not redeclaring")
when not declared(SDLK_RALT):
  when cast[cuint](1073742054'i64) is static:
    const
      SDLK_RALT* = cast[cuint](1073742054'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:269:9
  else:
    let SDLK_RALT* = cast[cuint](1073742054'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:269:9
else:
  static :
    hint("Declaration of " & "SDLK_RALT" & " already exists, not redeclaring")
when not declared(SDLK_RGUI):
  when cast[cuint](1073742055'i64) is static:
    const
      SDLK_RGUI* = cast[cuint](1073742055'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:270:9
  else:
    let SDLK_RGUI* = cast[cuint](1073742055'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:270:9
else:
  static :
    hint("Declaration of " & "SDLK_RGUI" & " already exists, not redeclaring")
when not declared(SDLK_MODE):
  when cast[cuint](1073742081'i64) is static:
    const
      SDLK_MODE* = cast[cuint](1073742081'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:271:9
  else:
    let SDLK_MODE* = cast[cuint](1073742081'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:271:9
else:
  static :
    hint("Declaration of " & "SDLK_MODE" & " already exists, not redeclaring")
when not declared(SDLK_SLEEP):
  when cast[cuint](1073742082'i64) is static:
    const
      SDLK_SLEEP* = cast[cuint](1073742082'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:272:9
  else:
    let SDLK_SLEEP* = cast[cuint](1073742082'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:272:9
else:
  static :
    hint("Declaration of " & "SDLK_SLEEP" & " already exists, not redeclaring")
when not declared(SDLK_WAKE):
  when cast[cuint](1073742083'i64) is static:
    const
      SDLK_WAKE* = cast[cuint](1073742083'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:273:9
  else:
    let SDLK_WAKE* = cast[cuint](1073742083'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:273:9
else:
  static :
    hint("Declaration of " & "SDLK_WAKE" & " already exists, not redeclaring")
when not declared(SDLK_CHANNEL_INCREMENT):
  when cast[cuint](1073742084'i64) is static:
    const
      SDLK_CHANNEL_INCREMENT* = cast[cuint](1073742084'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:274:9
  else:
    let SDLK_CHANNEL_INCREMENT* = cast[cuint](1073742084'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:274:9
else:
  static :
    hint("Declaration of " & "SDLK_CHANNEL_INCREMENT" &
        " already exists, not redeclaring")
when not declared(SDLK_CHANNEL_DECREMENT):
  when cast[cuint](1073742085'i64) is static:
    const
      SDLK_CHANNEL_DECREMENT* = cast[cuint](1073742085'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:275:9
  else:
    let SDLK_CHANNEL_DECREMENT* = cast[cuint](1073742085'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:275:9
else:
  static :
    hint("Declaration of " & "SDLK_CHANNEL_DECREMENT" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PLAY):
  when cast[cuint](1073742086'i64) is static:
    const
      SDLK_MEDIA_PLAY* = cast[cuint](1073742086'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:276:9
  else:
    let SDLK_MEDIA_PLAY* = cast[cuint](1073742086'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:276:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PLAY" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PAUSE):
  when cast[cuint](1073742087'i64) is static:
    const
      SDLK_MEDIA_PAUSE* = cast[cuint](1073742087'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:277:9
  else:
    let SDLK_MEDIA_PAUSE* = cast[cuint](1073742087'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:277:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PAUSE" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_RECORD):
  when cast[cuint](1073742088'i64) is static:
    const
      SDLK_MEDIA_RECORD* = cast[cuint](1073742088'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:278:9
  else:
    let SDLK_MEDIA_RECORD* = cast[cuint](1073742088'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:278:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_RECORD" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_FAST_FORWARD):
  when cast[cuint](1073742089'i64) is static:
    const
      SDLK_MEDIA_FAST_FORWARD* = cast[cuint](1073742089'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:279:9
  else:
    let SDLK_MEDIA_FAST_FORWARD* = cast[cuint](1073742089'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:279:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_FAST_FORWARD" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_REWIND):
  when cast[cuint](1073742090'i64) is static:
    const
      SDLK_MEDIA_REWIND* = cast[cuint](1073742090'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:280:9
  else:
    let SDLK_MEDIA_REWIND* = cast[cuint](1073742090'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:280:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_REWIND" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_NEXT_TRACK):
  when cast[cuint](1073742091'i64) is static:
    const
      SDLK_MEDIA_NEXT_TRACK* = cast[cuint](1073742091'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:281:9
  else:
    let SDLK_MEDIA_NEXT_TRACK* = cast[cuint](1073742091'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:281:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_NEXT_TRACK" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PREVIOUS_TRACK):
  when cast[cuint](1073742092'i64) is static:
    const
      SDLK_MEDIA_PREVIOUS_TRACK* = cast[cuint](1073742092'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:282:9
  else:
    let SDLK_MEDIA_PREVIOUS_TRACK* = cast[cuint](1073742092'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:282:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PREVIOUS_TRACK" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_STOP):
  when cast[cuint](1073742093'i64) is static:
    const
      SDLK_MEDIA_STOP* = cast[cuint](1073742093'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:283:9
  else:
    let SDLK_MEDIA_STOP* = cast[cuint](1073742093'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:283:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_STOP" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_EJECT):
  when cast[cuint](1073742094'i64) is static:
    const
      SDLK_MEDIA_EJECT* = cast[cuint](1073742094'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:284:9
  else:
    let SDLK_MEDIA_EJECT* = cast[cuint](1073742094'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:284:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_EJECT" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PLAY_PAUSE):
  when cast[cuint](1073742095'i64) is static:
    const
      SDLK_MEDIA_PLAY_PAUSE* = cast[cuint](1073742095'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:285:9
  else:
    let SDLK_MEDIA_PLAY_PAUSE* = cast[cuint](1073742095'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:285:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PLAY_PAUSE" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_SELECT):
  when cast[cuint](1073742096'i64) is static:
    const
      SDLK_MEDIA_SELECT* = cast[cuint](1073742096'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:286:9
  else:
    let SDLK_MEDIA_SELECT* = cast[cuint](1073742096'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:286:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_SELECT" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_NEW):
  when cast[cuint](1073742097'i64) is static:
    const
      SDLK_AC_NEW* = cast[cuint](1073742097'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:287:9
  else:
    let SDLK_AC_NEW* = cast[cuint](1073742097'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:287:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_NEW" & " already exists, not redeclaring")
when not declared(SDLK_AC_OPEN):
  when cast[cuint](1073742098'i64) is static:
    const
      SDLK_AC_OPEN* = cast[cuint](1073742098'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:288:9
  else:
    let SDLK_AC_OPEN* = cast[cuint](1073742098'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:288:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_OPEN" & " already exists, not redeclaring")
when not declared(SDLK_AC_CLOSE):
  when cast[cuint](1073742099'i64) is static:
    const
      SDLK_AC_CLOSE* = cast[cuint](1073742099'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:289:9
  else:
    let SDLK_AC_CLOSE* = cast[cuint](1073742099'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:289:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_CLOSE" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_EXIT):
  when cast[cuint](1073742100'i64) is static:
    const
      SDLK_AC_EXIT* = cast[cuint](1073742100'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:290:9
  else:
    let SDLK_AC_EXIT* = cast[cuint](1073742100'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:290:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_EXIT" & " already exists, not redeclaring")
when not declared(SDLK_AC_SAVE):
  when cast[cuint](1073742101'i64) is static:
    const
      SDLK_AC_SAVE* = cast[cuint](1073742101'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:291:9
  else:
    let SDLK_AC_SAVE* = cast[cuint](1073742101'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:291:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_SAVE" & " already exists, not redeclaring")
when not declared(SDLK_AC_PRINT):
  when cast[cuint](1073742102'i64) is static:
    const
      SDLK_AC_PRINT* = cast[cuint](1073742102'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:292:9
  else:
    let SDLK_AC_PRINT* = cast[cuint](1073742102'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:292:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_PRINT" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_PROPERTIES):
  when cast[cuint](1073742103'i64) is static:
    const
      SDLK_AC_PROPERTIES* = cast[cuint](1073742103'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:293:9
  else:
    let SDLK_AC_PROPERTIES* = cast[cuint](1073742103'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:293:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_PROPERTIES" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_SEARCH):
  when cast[cuint](1073742104'i64) is static:
    const
      SDLK_AC_SEARCH* = cast[cuint](1073742104'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:294:9
  else:
    let SDLK_AC_SEARCH* = cast[cuint](1073742104'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:294:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_SEARCH" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_HOME):
  when cast[cuint](1073742105'i64) is static:
    const
      SDLK_AC_HOME* = cast[cuint](1073742105'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:295:9
  else:
    let SDLK_AC_HOME* = cast[cuint](1073742105'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:295:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_HOME" & " already exists, not redeclaring")
when not declared(SDLK_AC_BACK):
  when cast[cuint](1073742106'i64) is static:
    const
      SDLK_AC_BACK* = cast[cuint](1073742106'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:296:9
  else:
    let SDLK_AC_BACK* = cast[cuint](1073742106'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:296:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_BACK" & " already exists, not redeclaring")
when not declared(SDLK_AC_FORWARD):
  when cast[cuint](1073742107'i64) is static:
    const
      SDLK_AC_FORWARD* = cast[cuint](1073742107'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:297:9
  else:
    let SDLK_AC_FORWARD* = cast[cuint](1073742107'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:297:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_FORWARD" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_STOP):
  when cast[cuint](1073742108'i64) is static:
    const
      SDLK_AC_STOP* = cast[cuint](1073742108'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:298:9
  else:
    let SDLK_AC_STOP* = cast[cuint](1073742108'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:298:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_STOP" & " already exists, not redeclaring")
when not declared(SDLK_AC_REFRESH):
  when cast[cuint](1073742109'i64) is static:
    const
      SDLK_AC_REFRESH* = cast[cuint](1073742109'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:299:9
  else:
    let SDLK_AC_REFRESH* = cast[cuint](1073742109'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:299:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_REFRESH" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_BOOKMARKS):
  when cast[cuint](1073742110'i64) is static:
    const
      SDLK_AC_BOOKMARKS* = cast[cuint](1073742110'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:300:9
  else:
    let SDLK_AC_BOOKMARKS* = cast[cuint](1073742110'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:300:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_BOOKMARKS" &
        " already exists, not redeclaring")
when not declared(SDLK_SOFTLEFT):
  when cast[cuint](1073742111'i64) is static:
    const
      SDLK_SOFTLEFT* = cast[cuint](1073742111'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:301:9
  else:
    let SDLK_SOFTLEFT* = cast[cuint](1073742111'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:301:9
else:
  static :
    hint("Declaration of " & "SDLK_SOFTLEFT" &
        " already exists, not redeclaring")
when not declared(SDLK_SOFTRIGHT):
  when cast[cuint](1073742112'i64) is static:
    const
      SDLK_SOFTRIGHT* = cast[cuint](1073742112'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:302:9
  else:
    let SDLK_SOFTRIGHT* = cast[cuint](1073742112'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:302:9
else:
  static :
    hint("Declaration of " & "SDLK_SOFTRIGHT" &
        " already exists, not redeclaring")
when not declared(SDLK_CALL):
  when cast[cuint](1073742113'i64) is static:
    const
      SDLK_CALL* = cast[cuint](1073742113'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:303:9
  else:
    let SDLK_CALL* = cast[cuint](1073742113'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:303:9
else:
  static :
    hint("Declaration of " & "SDLK_CALL" & " already exists, not redeclaring")
when not declared(SDLK_ENDCALL):
  when cast[cuint](1073742114'i64) is static:
    const
      SDLK_ENDCALL* = cast[cuint](1073742114'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:304:9
  else:
    let SDLK_ENDCALL* = cast[cuint](1073742114'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:304:9
else:
  static :
    hint("Declaration of " & "SDLK_ENDCALL" & " already exists, not redeclaring")
when not declared(KMOD_NONE):
  when cast[cuint](0'i64) is static:
    const
      KMOD_NONE* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:313:9
  else:
    let KMOD_NONE* = cast[cuint](0'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:313:9
else:
  static :
    hint("Declaration of " & "KMOD_NONE" & " already exists, not redeclaring")
when not declared(KMOD_LSHIFT):
  when cast[cuint](1'i64) is static:
    const
      KMOD_LSHIFT* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:314:9
  else:
    let KMOD_LSHIFT* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:314:9
else:
  static :
    hint("Declaration of " & "KMOD_LSHIFT" & " already exists, not redeclaring")
when not declared(KMOD_RSHIFT):
  when cast[cuint](2'i64) is static:
    const
      KMOD_RSHIFT* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:315:9
  else:
    let KMOD_RSHIFT* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:315:9
else:
  static :
    hint("Declaration of " & "KMOD_RSHIFT" & " already exists, not redeclaring")
when not declared(KMOD_LCTRL):
  when cast[cuint](64'i64) is static:
    const
      KMOD_LCTRL* = cast[cuint](64'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:316:9
  else:
    let KMOD_LCTRL* = cast[cuint](64'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:316:9
else:
  static :
    hint("Declaration of " & "KMOD_LCTRL" & " already exists, not redeclaring")
when not declared(KMOD_RCTRL):
  when cast[cuint](128'i64) is static:
    const
      KMOD_RCTRL* = cast[cuint](128'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:317:9
  else:
    let KMOD_RCTRL* = cast[cuint](128'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:317:9
else:
  static :
    hint("Declaration of " & "KMOD_RCTRL" & " already exists, not redeclaring")
when not declared(KMOD_LALT):
  when cast[cuint](256'i64) is static:
    const
      KMOD_LALT* = cast[cuint](256'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:318:9
  else:
    let KMOD_LALT* = cast[cuint](256'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:318:9
else:
  static :
    hint("Declaration of " & "KMOD_LALT" & " already exists, not redeclaring")
when not declared(KMOD_RALT):
  when cast[cuint](512'i64) is static:
    const
      KMOD_RALT* = cast[cuint](512'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:319:9
  else:
    let KMOD_RALT* = cast[cuint](512'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:319:9
else:
  static :
    hint("Declaration of " & "KMOD_RALT" & " already exists, not redeclaring")
when not declared(KMOD_LGUI):
  when cast[cuint](1024'i64) is static:
    const
      KMOD_LGUI* = cast[cuint](1024'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:320:9
  else:
    let KMOD_LGUI* = cast[cuint](1024'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:320:9
else:
  static :
    hint("Declaration of " & "KMOD_LGUI" & " already exists, not redeclaring")
when not declared(KMOD_RGUI):
  when cast[cuint](2048'i64) is static:
    const
      KMOD_RGUI* = cast[cuint](2048'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:321:9
  else:
    let KMOD_RGUI* = cast[cuint](2048'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:321:9
else:
  static :
    hint("Declaration of " & "KMOD_RGUI" & " already exists, not redeclaring")
when not declared(KMOD_NUM):
  when cast[cuint](4096'i64) is static:
    const
      KMOD_NUM* = cast[cuint](4096'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:322:9
  else:
    let KMOD_NUM* = cast[cuint](4096'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:322:9
else:
  static :
    hint("Declaration of " & "KMOD_NUM" & " already exists, not redeclaring")
when not declared(KMOD_CAPS):
  when cast[cuint](8192'i64) is static:
    const
      KMOD_CAPS* = cast[cuint](8192'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:323:9
  else:
    let KMOD_CAPS* = cast[cuint](8192'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:323:9
else:
  static :
    hint("Declaration of " & "KMOD_CAPS" & " already exists, not redeclaring")
when not declared(KMOD_MODE):
  when cast[cuint](16384'i64) is static:
    const
      KMOD_MODE* = cast[cuint](16384'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:324:9
  else:
    let KMOD_MODE* = cast[cuint](16384'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:324:9
else:
  static :
    hint("Declaration of " & "KMOD_MODE" & " already exists, not redeclaring")
when not declared(KMOD_SCROLL):
  when cast[cuint](32768'i64) is static:
    const
      KMOD_SCROLL* = cast[cuint](32768'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:325:9
  else:
    let KMOD_SCROLL* = cast[cuint](32768'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keycode.h:325:9
else:
  static :
    hint("Declaration of " & "KMOD_SCROLL" & " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_TYPE_NUMBER):
  when "SDL.textinput.type" is static:
    const
      PROP_TEXTINPUT_TYPE_NUMBER* = "SDL.textinput.type" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:474:9
  else:
    let PROP_TEXTINPUT_TYPE_NUMBER* = "SDL.textinput.type" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:474:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_TYPE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_CAPITALIZATION_NUMBER):
  when "SDL.textinput.capitalization" is static:
    const
      PROP_TEXTINPUT_CAPITALIZATION_NUMBER* = "SDL.textinput.capitalization" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:475:9
  else:
    let PROP_TEXTINPUT_CAPITALIZATION_NUMBER* = "SDL.textinput.capitalization" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:475:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_CAPITALIZATION_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN):
  when "SDL.textinput.autocorrect" is static:
    const
      PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN* = "SDL.textinput.autocorrect" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:476:9
  else:
    let PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN* = "SDL.textinput.autocorrect" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:476:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_MULTILINE_BOOLEAN):
  when "SDL.textinput.multiline" is static:
    const
      PROP_TEXTINPUT_MULTILINE_BOOLEAN* = "SDL.textinput.multiline" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:477:9
  else:
    let PROP_TEXTINPUT_MULTILINE_BOOLEAN* = "SDL.textinput.multiline" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:477:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_MULTILINE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER):
  when "SDL.textinput.android.inputtype" is static:
    const
      PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER* = "SDL.textinput.android.inputtype" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:478:9
  else:
    let PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER* = "SDL.textinput.android.inputtype" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_keyboard.h:478:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER" &
        " already exists, not redeclaring")
when not declared(BUTTON_LEFT):
  when 1 is static:
    const
      BUTTON_LEFT* = 1       ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:121:9
  else:
    let BUTTON_LEFT* = 1     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:121:9
else:
  static :
    hint("Declaration of " & "BUTTON_LEFT" & " already exists, not redeclaring")
when not declared(BUTTON_MIDDLE):
  when 2 is static:
    const
      BUTTON_MIDDLE* = 2     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:122:9
  else:
    let BUTTON_MIDDLE* = 2   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:122:9
else:
  static :
    hint("Declaration of " & "BUTTON_MIDDLE" &
        " already exists, not redeclaring")
when not declared(BUTTON_RIGHT):
  when 3 is static:
    const
      BUTTON_RIGHT* = 3      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:123:9
  else:
    let BUTTON_RIGHT* = 3    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:123:9
else:
  static :
    hint("Declaration of " & "BUTTON_RIGHT" & " already exists, not redeclaring")
when not declared(BUTTON_X1):
  when 4 is static:
    const
      BUTTON_X1* = 4         ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:124:9
  else:
    let BUTTON_X1* = 4       ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:124:9
else:
  static :
    hint("Declaration of " & "BUTTON_X1" & " already exists, not redeclaring")
when not declared(BUTTON_X2):
  when 5 is static:
    const
      BUTTON_X2* = 5         ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:125:9
  else:
    let BUTTON_X2* = 5       ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_mouse.h:125:9
else:
  static :
    hint("Declaration of " & "BUTTON_X2" & " already exists, not redeclaring")
when not declared(GPU_SHADERFORMAT_INVALID):
  when 0 is static:
    const
      GPU_SHADERFORMAT_INVALID* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:793:9
  else:
    let GPU_SHADERFORMAT_INVALID* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:793:9
else:
  static :
    hint("Declaration of " & "GPU_SHADERFORMAT_INVALID" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.r" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.r" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1507:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.r" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1507:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.g" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.g" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1508:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.g" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1508:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.b" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.b" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1509:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.b" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1509:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.a" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.a" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1510:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.a" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1510:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.depth" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.depth" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1511:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.depth" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1511:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8):
  when "SDL.gpu.createtexture.d3d12.clear.stencil" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8* = "SDL.gpu.createtexture.d3d12.clear.stencil" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1512:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8* = "SDL.gpu.createtexture.d3d12.clear.stencil" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1512:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN):
  when "SDL.gpu.device.create.debugmode" is static:
    const
      PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN* = "SDL.gpu.device.create.debugmode" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1996:9
  else:
    let PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN* = "SDL.gpu.device.create.debugmode" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1996:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN):
  when "SDL.gpu.device.create.preferlowpower" is static:
    const
      PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN* = "SDL.gpu.device.create.preferlowpower" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1997:9
  else:
    let PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN* = "SDL.gpu.device.create.preferlowpower" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1997:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_NAME_STRING):
  when "SDL.gpu.device.create.name" is static:
    const
      PROP_GPU_DEVICE_CREATE_NAME_STRING* = "SDL.gpu.device.create.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1998:9
  else:
    let PROP_GPU_DEVICE_CREATE_NAME_STRING* = "SDL.gpu.device.create.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1998:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN):
  when "SDL.gpu.device.create.shaders.private" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN* = "SDL.gpu.device.create.shaders.private" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1999:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN* = "SDL.gpu.device.create.shaders.private" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:1999:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN):
  when "SDL.gpu.device.create.shaders.spirv" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN* = "SDL.gpu.device.create.shaders.spirv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2000:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN* = "SDL.gpu.device.create.shaders.spirv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2000:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN):
  when "SDL.gpu.device.create.shaders.dxbc" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN* = "SDL.gpu.device.create.shaders.dxbc" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2001:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN* = "SDL.gpu.device.create.shaders.dxbc" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2001:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN):
  when "SDL.gpu.device.create.shaders.dxil" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN* = "SDL.gpu.device.create.shaders.dxil" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2002:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN* = "SDL.gpu.device.create.shaders.dxil" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2002:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN):
  when "SDL.gpu.device.create.shaders.msl" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN* = "SDL.gpu.device.create.shaders.msl" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2003:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN* = "SDL.gpu.device.create.shaders.msl" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2003:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN):
  when "SDL.gpu.device.create.shaders.metallib" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN* = "SDL.gpu.device.create.shaders.metallib" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2004:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN* = "SDL.gpu.device.create.shaders.metallib" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2004:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING):
  when "SDL.gpu.device.create.d3d12.semantic" is static:
    const
      PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING* = "SDL.gpu.device.create.d3d12.semantic" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2005:9
  else:
    let PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING* = "SDL.gpu.device.create.d3d12.semantic" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_gpu.h:2005:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(HAPTIC_POLAR):
  when 0 is static:
    const
      HAPTIC_POLAR* = 0      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:381:9
  else:
    let HAPTIC_POLAR* = 0    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:381:9
else:
  static :
    hint("Declaration of " & "HAPTIC_POLAR" & " already exists, not redeclaring")
when not declared(HAPTIC_CARTESIAN):
  when 1 is static:
    const
      HAPTIC_CARTESIAN* = 1  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:390:9
  else:
    let HAPTIC_CARTESIAN* = 1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:390:9
else:
  static :
    hint("Declaration of " & "HAPTIC_CARTESIAN" &
        " already exists, not redeclaring")
when not declared(HAPTIC_SPHERICAL):
  when 2 is static:
    const
      HAPTIC_SPHERICAL* = 2  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:399:9
  else:
    let HAPTIC_SPHERICAL* = 2 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:399:9
else:
  static :
    hint("Declaration of " & "HAPTIC_SPHERICAL" &
        " already exists, not redeclaring")
when not declared(HAPTIC_STEERING_AXIS):
  when 3 is static:
    const
      HAPTIC_STEERING_AXIS* = 3 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:411:9
  else:
    let HAPTIC_STEERING_AXIS* = 3 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:411:9
else:
  static :
    hint("Declaration of " & "HAPTIC_STEERING_AXIS" &
        " already exists, not redeclaring")
when not declared(HAPTIC_INFINITY):
  when cast[cuint](4294967295'i64) is static:
    const
      HAPTIC_INFINITY* = cast[cuint](4294967295'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:428:9
  else:
    let HAPTIC_INFINITY* = cast[cuint](4294967295'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_haptic.h:428:9
else:
  static :
    hint("Declaration of " & "HAPTIC_INFINITY" &
        " already exists, not redeclaring")
when not declared(HINT_ALLOW_ALT_TAB_WHILE_GRABBED):
  when "SDL_ALLOW_ALT_TAB_WHILE_GRABBED" is static:
    const
      HINT_ALLOW_ALT_TAB_WHILE_GRABBED* = "SDL_ALLOW_ALT_TAB_WHILE_GRABBED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:66:9
  else:
    let HINT_ALLOW_ALT_TAB_WHILE_GRABBED* = "SDL_ALLOW_ALT_TAB_WHILE_GRABBED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:66:9
else:
  static :
    hint("Declaration of " & "HINT_ALLOW_ALT_TAB_WHILE_GRABBED" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_ALLOW_RECREATE_ACTIVITY):
  when "SDL_ANDROID_ALLOW_RECREATE_ACTIVITY" is static:
    const
      HINT_ANDROID_ALLOW_RECREATE_ACTIVITY* = "SDL_ANDROID_ALLOW_RECREATE_ACTIVITY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:86:9
  else:
    let HINT_ANDROID_ALLOW_RECREATE_ACTIVITY* = "SDL_ANDROID_ALLOW_RECREATE_ACTIVITY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:86:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_ALLOW_RECREATE_ACTIVITY" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_BLOCK_ON_PAUSE):
  when "SDL_ANDROID_BLOCK_ON_PAUSE" is static:
    const
      HINT_ANDROID_BLOCK_ON_PAUSE* = "SDL_ANDROID_BLOCK_ON_PAUSE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:101:9
  else:
    let HINT_ANDROID_BLOCK_ON_PAUSE* = "SDL_ANDROID_BLOCK_ON_PAUSE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:101:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_BLOCK_ON_PAUSE" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_LOW_LATENCY_AUDIO):
  when "SDL_ANDROID_LOW_LATENCY_AUDIO" is static:
    const
      HINT_ANDROID_LOW_LATENCY_AUDIO* = "SDL_ANDROID_LOW_LATENCY_AUDIO" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:118:9
  else:
    let HINT_ANDROID_LOW_LATENCY_AUDIO* = "SDL_ANDROID_LOW_LATENCY_AUDIO" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:118:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_LOW_LATENCY_AUDIO" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_TRAP_BACK_BUTTON):
  when "SDL_ANDROID_TRAP_BACK_BUTTON" is static:
    const
      HINT_ANDROID_TRAP_BACK_BUTTON* = "SDL_ANDROID_TRAP_BACK_BUTTON" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:141:9
  else:
    let HINT_ANDROID_TRAP_BACK_BUTTON* = "SDL_ANDROID_TRAP_BACK_BUTTON" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:141:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_TRAP_BACK_BUTTON" &
        " already exists, not redeclaring")
when not declared(HINT_APP_ID):
  when "SDL_APP_ID" is static:
    const
      HINT_APP_ID* = "SDL_APP_ID" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:157:9
  else:
    let HINT_APP_ID* = "SDL_APP_ID" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:157:9
else:
  static :
    hint("Declaration of " & "HINT_APP_ID" & " already exists, not redeclaring")
when not declared(HINT_APP_NAME):
  when "SDL_APP_NAME" is static:
    const
      HINT_APP_NAME* = "SDL_APP_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:175:9
  else:
    let HINT_APP_NAME* = "SDL_APP_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:175:9
else:
  static :
    hint("Declaration of " & "HINT_APP_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_APPLE_TV_CONTROLLER_UI_EVENTS):
  when "SDL_APPLE_TV_CONTROLLER_UI_EVENTS" is static:
    const
      HINT_APPLE_TV_CONTROLLER_UI_EVENTS* = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:198:9
  else:
    let HINT_APPLE_TV_CONTROLLER_UI_EVENTS* = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:198:9
else:
  static :
    hint("Declaration of " & "HINT_APPLE_TV_CONTROLLER_UI_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_APPLE_TV_REMOTE_ALLOW_ROTATION):
  when "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION" is static:
    const
      HINT_APPLE_TV_REMOTE_ALLOW_ROTATION* = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:213:9
  else:
    let HINT_APPLE_TV_REMOTE_ALLOW_ROTATION* = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:213:9
else:
  static :
    hint("Declaration of " & "HINT_APPLE_TV_REMOTE_ALLOW_ROTATION" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_ALSA_DEFAULT_DEVICE):
  when "SDL_AUDIO_ALSA_DEFAULT_DEVICE" is static:
    const
      HINT_AUDIO_ALSA_DEFAULT_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:233:9
  else:
    let HINT_AUDIO_ALSA_DEFAULT_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:233:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_ALSA_DEFAULT_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_ALSA_DEFAULT_PLAYBACK_DEVICE):
  when "SDL_AUDIO_ALSA_DEFAULT_PLAYBACK_DEVICE" is static:
    const
      HINT_AUDIO_ALSA_DEFAULT_PLAYBACK_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_PLAYBACK_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:251:9
  else:
    let HINT_AUDIO_ALSA_DEFAULT_PLAYBACK_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_PLAYBACK_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:251:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_ALSA_DEFAULT_PLAYBACK_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_ALSA_DEFAULT_RECORDING_DEVICE):
  when "SDL_AUDIO_ALSA_DEFAULT_RECORDING_DEVICE" is static:
    const
      HINT_AUDIO_ALSA_DEFAULT_RECORDING_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_RECORDING_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:269:9
  else:
    let HINT_AUDIO_ALSA_DEFAULT_RECORDING_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_RECORDING_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:269:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_ALSA_DEFAULT_RECORDING_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_CATEGORY):
  when "SDL_AUDIO_CATEGORY" is static:
    const
      HINT_AUDIO_CATEGORY* = "SDL_AUDIO_CATEGORY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:287:9
  else:
    let HINT_AUDIO_CATEGORY* = "SDL_AUDIO_CATEGORY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:287:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_CATEGORY" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_CHANNELS):
  when "SDL_AUDIO_CHANNELS" is static:
    const
      HINT_AUDIO_CHANNELS* = "SDL_AUDIO_CHANNELS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:300:9
  else:
    let HINT_AUDIO_CHANNELS* = "SDL_AUDIO_CHANNELS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:300:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_CHANNELS" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_APP_ICON_NAME):
  when "SDL_AUDIO_DEVICE_APP_ICON_NAME" is static:
    const
      HINT_AUDIO_DEVICE_APP_ICON_NAME* = "SDL_AUDIO_DEVICE_APP_ICON_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:323:9
  else:
    let HINT_AUDIO_DEVICE_APP_ICON_NAME* = "SDL_AUDIO_DEVICE_APP_ICON_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:323:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_APP_ICON_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_SAMPLE_FRAMES):
  when "SDL_AUDIO_DEVICE_SAMPLE_FRAMES" is static:
    const
      HINT_AUDIO_DEVICE_SAMPLE_FRAMES* = "SDL_AUDIO_DEVICE_SAMPLE_FRAMES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:345:9
  else:
    let HINT_AUDIO_DEVICE_SAMPLE_FRAMES* = "SDL_AUDIO_DEVICE_SAMPLE_FRAMES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:345:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_SAMPLE_FRAMES" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_STREAM_NAME):
  when "SDL_AUDIO_DEVICE_STREAM_NAME" is static:
    const
      HINT_AUDIO_DEVICE_STREAM_NAME* = "SDL_AUDIO_DEVICE_STREAM_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:372:9
  else:
    let HINT_AUDIO_DEVICE_STREAM_NAME* = "SDL_AUDIO_DEVICE_STREAM_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:372:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_STREAM_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_STREAM_ROLE):
  when "SDL_AUDIO_DEVICE_STREAM_ROLE" is static:
    const
      HINT_AUDIO_DEVICE_STREAM_ROLE* = "SDL_AUDIO_DEVICE_STREAM_ROLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:398:9
  else:
    let HINT_AUDIO_DEVICE_STREAM_ROLE* = "SDL_AUDIO_DEVICE_STREAM_ROLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:398:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_STREAM_ROLE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DISK_INPUT_FILE):
  when "SDL_AUDIO_DISK_INPUT_FILE" is static:
    const
      HINT_AUDIO_DISK_INPUT_FILE* = "SDL_AUDIO_DISK_INPUT_FILE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:409:9
  else:
    let HINT_AUDIO_DISK_INPUT_FILE* = "SDL_AUDIO_DISK_INPUT_FILE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:409:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DISK_INPUT_FILE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DISK_OUTPUT_FILE):
  when "SDL_AUDIO_DISK_OUTPUT_FILE" is static:
    const
      HINT_AUDIO_DISK_OUTPUT_FILE* = "SDL_AUDIO_DISK_OUTPUT_FILE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:420:9
  else:
    let HINT_AUDIO_DISK_OUTPUT_FILE* = "SDL_AUDIO_DISK_OUTPUT_FILE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:420:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DISK_OUTPUT_FILE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DISK_TIMESCALE):
  when "SDL_AUDIO_DISK_TIMESCALE" is static:
    const
      HINT_AUDIO_DISK_TIMESCALE* = "SDL_AUDIO_DISK_TIMESCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:433:9
  else:
    let HINT_AUDIO_DISK_TIMESCALE* = "SDL_AUDIO_DISK_TIMESCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:433:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DISK_TIMESCALE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DRIVER):
  when "SDL_AUDIO_DRIVER" is static:
    const
      HINT_AUDIO_DRIVER* = "SDL_AUDIO_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:447:9
  else:
    let HINT_AUDIO_DRIVER* = "SDL_AUDIO_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:447:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DUMMY_TIMESCALE):
  when "SDL_AUDIO_DUMMY_TIMESCALE" is static:
    const
      HINT_AUDIO_DUMMY_TIMESCALE* = "SDL_AUDIO_DUMMY_TIMESCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:460:9
  else:
    let HINT_AUDIO_DUMMY_TIMESCALE* = "SDL_AUDIO_DUMMY_TIMESCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:460:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DUMMY_TIMESCALE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_FORMAT):
  when "SDL_AUDIO_FORMAT" is static:
    const
      HINT_AUDIO_FORMAT* = "SDL_AUDIO_FORMAT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:487:9
  else:
    let HINT_AUDIO_FORMAT* = "SDL_AUDIO_FORMAT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:487:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_FORMAT" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_FREQUENCY):
  when "SDL_AUDIO_FREQUENCY" is static:
    const
      HINT_AUDIO_FREQUENCY* = "SDL_AUDIO_FREQUENCY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:500:9
  else:
    let HINT_AUDIO_FREQUENCY* = "SDL_AUDIO_FREQUENCY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:500:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_FREQUENCY" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_INCLUDE_MONITORS):
  when "SDL_AUDIO_INCLUDE_MONITORS" is static:
    const
      HINT_AUDIO_INCLUDE_MONITORS* = "SDL_AUDIO_INCLUDE_MONITORS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:523:9
  else:
    let HINT_AUDIO_INCLUDE_MONITORS* = "SDL_AUDIO_INCLUDE_MONITORS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:523:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_INCLUDE_MONITORS" &
        " already exists, not redeclaring")
when not declared(HINT_AUTO_UPDATE_JOYSTICKS):
  when "SDL_AUTO_UPDATE_JOYSTICKS" is static:
    const
      HINT_AUTO_UPDATE_JOYSTICKS* = "SDL_AUTO_UPDATE_JOYSTICKS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:538:9
  else:
    let HINT_AUTO_UPDATE_JOYSTICKS* = "SDL_AUTO_UPDATE_JOYSTICKS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:538:9
else:
  static :
    hint("Declaration of " & "HINT_AUTO_UPDATE_JOYSTICKS" &
        " already exists, not redeclaring")
when not declared(HINT_AUTO_UPDATE_SENSORS):
  when "SDL_AUTO_UPDATE_SENSORS" is static:
    const
      HINT_AUTO_UPDATE_SENSORS* = "SDL_AUTO_UPDATE_SENSORS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:553:9
  else:
    let HINT_AUTO_UPDATE_SENSORS* = "SDL_AUTO_UPDATE_SENSORS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:553:9
else:
  static :
    hint("Declaration of " & "HINT_AUTO_UPDATE_SENSORS" &
        " already exists, not redeclaring")
when not declared(HINT_BMP_SAVE_LEGACY_FORMAT):
  when "SDL_BMP_SAVE_LEGACY_FORMAT" is static:
    const
      HINT_BMP_SAVE_LEGACY_FORMAT* = "SDL_BMP_SAVE_LEGACY_FORMAT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:576:9
  else:
    let HINT_BMP_SAVE_LEGACY_FORMAT* = "SDL_BMP_SAVE_LEGACY_FORMAT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:576:9
else:
  static :
    hint("Declaration of " & "HINT_BMP_SAVE_LEGACY_FORMAT" &
        " already exists, not redeclaring")
when not declared(HINT_CAMERA_DRIVER):
  when "SDL_CAMERA_DRIVER" is static:
    const
      HINT_CAMERA_DRIVER* = "SDL_CAMERA_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:592:9
  else:
    let HINT_CAMERA_DRIVER* = "SDL_CAMERA_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:592:9
else:
  static :
    hint("Declaration of " & "HINT_CAMERA_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_CPU_FEATURE_MASK):
  when "SDL_CPU_FEATURE_MASK" is static:
    const
      HINT_CPU_FEATURE_MASK* = "SDL_CPU_FEATURE_MASK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:625:9
  else:
    let HINT_CPU_FEATURE_MASK* = "SDL_CPU_FEATURE_MASK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:625:9
else:
  static :
    hint("Declaration of " & "HINT_CPU_FEATURE_MASK" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_DIRECTINPUT):
  when "SDL_JOYSTICK_DIRECTINPUT" is static:
    const
      HINT_JOYSTICK_DIRECTINPUT* = "SDL_JOYSTICK_DIRECTINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:639:9
  else:
    let HINT_JOYSTICK_DIRECTINPUT* = "SDL_JOYSTICK_DIRECTINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:639:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_DIRECTINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_FILE_DIALOG_DRIVER):
  when "SDL_FILE_DIALOG_DRIVER" is static:
    const
      HINT_FILE_DIALOG_DRIVER* = "SDL_FILE_DIALOG_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:668:9
  else:
    let HINT_FILE_DIALOG_DRIVER* = "SDL_FILE_DIALOG_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:668:9
else:
  static :
    hint("Declaration of " & "HINT_FILE_DIALOG_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_DISPLAY_USABLE_BOUNDS):
  when "SDL_DISPLAY_USABLE_BOUNDS" is static:
    const
      HINT_DISPLAY_USABLE_BOUNDS* = "SDL_DISPLAY_USABLE_BOUNDS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:686:9
  else:
    let HINT_DISPLAY_USABLE_BOUNDS* = "SDL_DISPLAY_USABLE_BOUNDS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:686:9
else:
  static :
    hint("Declaration of " & "HINT_DISPLAY_USABLE_BOUNDS" &
        " already exists, not redeclaring")
when not declared(HINT_EMSCRIPTEN_ASYNCIFY):
  when "SDL_EMSCRIPTEN_ASYNCIFY" is static:
    const
      HINT_EMSCRIPTEN_ASYNCIFY* = "SDL_EMSCRIPTEN_ASYNCIFY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:707:9
  else:
    let HINT_EMSCRIPTEN_ASYNCIFY* = "SDL_EMSCRIPTEN_ASYNCIFY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:707:9
else:
  static :
    hint("Declaration of " & "HINT_EMSCRIPTEN_ASYNCIFY" &
        " already exists, not redeclaring")
when not declared(HINT_EMSCRIPTEN_CANVAS_SELECTOR):
  when "SDL_EMSCRIPTEN_CANVAS_SELECTOR" is static:
    const
      HINT_EMSCRIPTEN_CANVAS_SELECTOR* = "SDL_EMSCRIPTEN_CANVAS_SELECTOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:720:9
  else:
    let HINT_EMSCRIPTEN_CANVAS_SELECTOR* = "SDL_EMSCRIPTEN_CANVAS_SELECTOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:720:9
else:
  static :
    hint("Declaration of " & "HINT_EMSCRIPTEN_CANVAS_SELECTOR" &
        " already exists, not redeclaring")
when not declared(HINT_EMSCRIPTEN_KEYBOARD_ELEMENT):
  when "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT" is static:
    const
      HINT_EMSCRIPTEN_KEYBOARD_ELEMENT* = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:740:9
  else:
    let HINT_EMSCRIPTEN_KEYBOARD_ELEMENT* = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:740:9
else:
  static :
    hint("Declaration of " & "HINT_EMSCRIPTEN_KEYBOARD_ELEMENT" &
        " already exists, not redeclaring")
when not declared(HINT_ENABLE_SCREEN_KEYBOARD):
  when "SDL_ENABLE_SCREEN_KEYBOARD" is static:
    const
      HINT_ENABLE_SCREEN_KEYBOARD* = "SDL_ENABLE_SCREEN_KEYBOARD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:757:9
  else:
    let HINT_ENABLE_SCREEN_KEYBOARD* = "SDL_ENABLE_SCREEN_KEYBOARD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:757:9
else:
  static :
    hint("Declaration of " & "HINT_ENABLE_SCREEN_KEYBOARD" &
        " already exists, not redeclaring")
when not declared(HINT_EVDEV_DEVICES):
  when "SDL_EVDEV_DEVICES" is static:
    const
      HINT_EVDEV_DEVICES* = "SDL_EVDEV_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:774:9
  else:
    let HINT_EVDEV_DEVICES* = "SDL_EVDEV_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:774:9
else:
  static :
    hint("Declaration of " & "HINT_EVDEV_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_EVENT_LOGGING):
  when "SDL_EVENT_LOGGING" is static:
    const
      HINT_EVENT_LOGGING* = "SDL_EVENT_LOGGING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:798:9
  else:
    let HINT_EVENT_LOGGING* = "SDL_EVENT_LOGGING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:798:9
else:
  static :
    hint("Declaration of " & "HINT_EVENT_LOGGING" &
        " already exists, not redeclaring")
when not declared(HINT_FORCE_RAISEWINDOW):
  when "SDL_FORCE_RAISEWINDOW" is static:
    const
      HINT_FORCE_RAISEWINDOW* = "SDL_FORCE_RAISEWINDOW" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:818:9
  else:
    let HINT_FORCE_RAISEWINDOW* = "SDL_FORCE_RAISEWINDOW" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:818:9
else:
  static :
    hint("Declaration of " & "HINT_FORCE_RAISEWINDOW" &
        " already exists, not redeclaring")
when not declared(HINT_FRAMEBUFFER_ACCELERATION):
  when "SDL_FRAMEBUFFER_ACCELERATION" is static:
    const
      HINT_FRAMEBUFFER_ACCELERATION* = "SDL_FRAMEBUFFER_ACCELERATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:839:9
  else:
    let HINT_FRAMEBUFFER_ACCELERATION* = "SDL_FRAMEBUFFER_ACCELERATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:839:9
else:
  static :
    hint("Declaration of " & "HINT_FRAMEBUFFER_ACCELERATION" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLERCONFIG):
  when "SDL_GAMECONTROLLERCONFIG" is static:
    const
      HINT_GAMECONTROLLERCONFIG* = "SDL_GAMECONTROLLERCONFIG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:854:9
  else:
    let HINT_GAMECONTROLLERCONFIG* = "SDL_GAMECONTROLLERCONFIG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:854:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLERCONFIG" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLERCONFIG_FILE):
  when "SDL_GAMECONTROLLERCONFIG_FILE" is static:
    const
      HINT_GAMECONTROLLERCONFIG_FILE* = "SDL_GAMECONTROLLERCONFIG_FILE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:870:9
  else:
    let HINT_GAMECONTROLLERCONFIG_FILE* = "SDL_GAMECONTROLLERCONFIG_FILE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:870:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLERCONFIG_FILE" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLERTYPE):
  when "SDL_GAMECONTROLLERTYPE" is static:
    const
      HINT_GAMECONTROLLERTYPE* = "SDL_GAMECONTROLLERTYPE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:894:9
  else:
    let HINT_GAMECONTROLLERTYPE* = "SDL_GAMECONTROLLERTYPE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:894:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLERTYPE" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLER_IGNORE_DEVICES):
  when "SDL_GAMECONTROLLER_IGNORE_DEVICES" is static:
    const
      HINT_GAMECONTROLLER_IGNORE_DEVICES* = "SDL_GAMECONTROLLER_IGNORE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:912:9
  else:
    let HINT_GAMECONTROLLER_IGNORE_DEVICES* = "SDL_GAMECONTROLLER_IGNORE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:912:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLER_IGNORE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT):
  when "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" is static:
    const
      HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT* = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:930:9
  else:
    let HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT* = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:930:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLER_SENSOR_FUSION):
  when "SDL_GAMECONTROLLER_SENSOR_FUSION" is static:
    const
      HINT_GAMECONTROLLER_SENSOR_FUSION* = "SDL_GAMECONTROLLER_SENSOR_FUSION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:953:9
  else:
    let HINT_GAMECONTROLLER_SENSOR_FUSION* = "SDL_GAMECONTROLLER_SENSOR_FUSION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:953:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLER_SENSOR_FUSION" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_DEFAULT_TEXT):
  when "SDL_GDK_TEXTINPUT_DEFAULT_TEXT" is static:
    const
      HINT_GDK_TEXTINPUT_DEFAULT_TEXT* = "SDL_GDK_TEXTINPUT_DEFAULT_TEXT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:965:9
  else:
    let HINT_GDK_TEXTINPUT_DEFAULT_TEXT* = "SDL_GDK_TEXTINPUT_DEFAULT_TEXT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:965:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_DEFAULT_TEXT" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_DESCRIPTION):
  when "SDL_GDK_TEXTINPUT_DESCRIPTION" is static:
    const
      HINT_GDK_TEXTINPUT_DESCRIPTION* = "SDL_GDK_TEXTINPUT_DESCRIPTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:977:9
  else:
    let HINT_GDK_TEXTINPUT_DESCRIPTION* = "SDL_GDK_TEXTINPUT_DESCRIPTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:977:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_DESCRIPTION" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_MAX_LENGTH):
  when "SDL_GDK_TEXTINPUT_MAX_LENGTH" is static:
    const
      HINT_GDK_TEXTINPUT_MAX_LENGTH* = "SDL_GDK_TEXTINPUT_MAX_LENGTH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:992:9
  else:
    let HINT_GDK_TEXTINPUT_MAX_LENGTH* = "SDL_GDK_TEXTINPUT_MAX_LENGTH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:992:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_MAX_LENGTH" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_SCOPE):
  when "SDL_GDK_TEXTINPUT_SCOPE" is static:
    const
      HINT_GDK_TEXTINPUT_SCOPE* = "SDL_GDK_TEXTINPUT_SCOPE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1008:9
  else:
    let HINT_GDK_TEXTINPUT_SCOPE* = "SDL_GDK_TEXTINPUT_SCOPE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1008:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_SCOPE" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_TITLE):
  when "SDL_GDK_TEXTINPUT_TITLE" is static:
    const
      HINT_GDK_TEXTINPUT_TITLE* = "SDL_GDK_TEXTINPUT_TITLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1019:9
  else:
    let HINT_GDK_TEXTINPUT_TITLE* = "SDL_GDK_TEXTINPUT_TITLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1019:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_TITLE" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_LIBUSB):
  when "SDL_HIDAPI_LIBUSB" is static:
    const
      HINT_HIDAPI_LIBUSB* = "SDL_HIDAPI_LIBUSB" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1037:9
  else:
    let HINT_HIDAPI_LIBUSB* = "SDL_HIDAPI_LIBUSB" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1037:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_LIBUSB" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_LIBUSB_WHITELIST):
  when "SDL_HIDAPI_LIBUSB_WHITELIST" is static:
    const
      HINT_HIDAPI_LIBUSB_WHITELIST* = "SDL_HIDAPI_LIBUSB_WHITELIST" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1055:9
  else:
    let HINT_HIDAPI_LIBUSB_WHITELIST* = "SDL_HIDAPI_LIBUSB_WHITELIST" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1055:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_LIBUSB_WHITELIST" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_UDEV):
  when "SDL_HIDAPI_UDEV" is static:
    const
      HINT_HIDAPI_UDEV* = "SDL_HIDAPI_UDEV" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1069:9
  else:
    let HINT_HIDAPI_UDEV* = "SDL_HIDAPI_UDEV" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1069:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_UDEV" &
        " already exists, not redeclaring")
when not declared(HINT_GPU_DRIVER):
  when "SDL_GPU_DRIVER" is static:
    const
      HINT_GPU_DRIVER* = "SDL_GPU_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1083:9
  else:
    let HINT_GPU_DRIVER* = "SDL_GPU_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1083:9
else:
  static :
    hint("Declaration of " & "HINT_GPU_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS):
  when "SDL_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" is static:
    const
      HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS* = "SDL_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1102:9
  else:
    let HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS* = "SDL_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1102:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_IGNORE_DEVICES):
  when "SDL_HIDAPI_IGNORE_DEVICES" is static:
    const
      HINT_HIDAPI_IGNORE_DEVICES* = "SDL_HIDAPI_IGNORE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1119:9
  else:
    let HINT_HIDAPI_IGNORE_DEVICES* = "SDL_HIDAPI_IGNORE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1119:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_IGNORE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_IME_IMPLEMENTED_UI):
  when "SDL_IME_IMPLEMENTED_UI" is static:
    const
      HINT_IME_IMPLEMENTED_UI* = "SDL_IME_IMPLEMENTED_UI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1142:9
  else:
    let HINT_IME_IMPLEMENTED_UI* = "SDL_IME_IMPLEMENTED_UI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1142:9
else:
  static :
    hint("Declaration of " & "HINT_IME_IMPLEMENTED_UI" &
        " already exists, not redeclaring")
when not declared(HINT_IOS_HIDE_HOME_INDICATOR):
  when "SDL_IOS_HIDE_HOME_INDICATOR" is static:
    const
      HINT_IOS_HIDE_HOME_INDICATOR* = "SDL_IOS_HIDE_HOME_INDICATOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1161:9
  else:
    let HINT_IOS_HIDE_HOME_INDICATOR* = "SDL_IOS_HIDE_HOME_INDICATOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1161:9
else:
  static :
    hint("Declaration of " & "HINT_IOS_HIDE_HOME_INDICATOR" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS):
  when "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS" is static:
    const
      HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS* = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1178:9
  else:
    let HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS* = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1178:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ARCADESTICK_DEVICES):
  when "SDL_JOYSTICK_ARCADESTICK_DEVICES" is static:
    const
      HINT_JOYSTICK_ARCADESTICK_DEVICES* = "SDL_JOYSTICK_ARCADESTICK_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1195:9
  else:
    let HINT_JOYSTICK_ARCADESTICK_DEVICES* = "SDL_JOYSTICK_ARCADESTICK_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1195:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ARCADESTICK_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1216:9
  else:
    let HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1216:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_BLACKLIST_DEVICES):
  when "SDL_JOYSTICK_BLACKLIST_DEVICES" is static:
    const
      HINT_JOYSTICK_BLACKLIST_DEVICES* = "SDL_JOYSTICK_BLACKLIST_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1234:9
  else:
    let HINT_JOYSTICK_BLACKLIST_DEVICES* = "SDL_JOYSTICK_BLACKLIST_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1234:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_BLACKLIST_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED* = "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1255:9
  else:
    let HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED* = "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1255:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_DEVICE):
  when "SDL_JOYSTICK_DEVICE" is static:
    const
      HINT_JOYSTICK_DEVICE* = "SDL_JOYSTICK_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1265:9
  else:
    let HINT_JOYSTICK_DEVICE* = "SDL_JOYSTICK_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1265:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_FLIGHTSTICK_DEVICES):
  when "SDL_JOYSTICK_FLIGHTSTICK_DEVICES" is static:
    const
      HINT_JOYSTICK_FLIGHTSTICK_DEVICES* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1282:9
  else:
    let HINT_JOYSTICK_FLIGHTSTICK_DEVICES* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1282:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_FLIGHTSTICK_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1303:9
  else:
    let HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1303:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_GAMEINPUT):
  when "SDL_JOYSTICK_GAMEINPUT" is static:
    const
      HINT_JOYSTICK_GAMEINPUT* = "SDL_JOYSTICK_GAMEINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1320:9
  else:
    let HINT_JOYSTICK_GAMEINPUT* = "SDL_JOYSTICK_GAMEINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1320:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_GAMEINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_GAMECUBE_DEVICES):
  when "SDL_JOYSTICK_GAMECUBE_DEVICES" is static:
    const
      HINT_JOYSTICK_GAMECUBE_DEVICES* = "SDL_JOYSTICK_GAMECUBE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1338:9
  else:
    let HINT_JOYSTICK_GAMECUBE_DEVICES* = "SDL_JOYSTICK_GAMECUBE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1338:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_GAMECUBE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1359:9
  else:
    let HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1359:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI):
  when "SDL_JOYSTICK_HIDAPI" is static:
    const
      HINT_JOYSTICK_HIDAPI* = "SDL_JOYSTICK_HIDAPI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1376:9
  else:
    let HINT_JOYSTICK_HIDAPI* = "SDL_JOYSTICK_HIDAPI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1376:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS):
  when "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" is static:
    const
      HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1393:9
  else:
    let HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1393:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_GAMECUBE):
  when "SDL_JOYSTICK_HIDAPI_GAMECUBE" is static:
    const
      HINT_JOYSTICK_HIDAPI_GAMECUBE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1410:9
  else:
    let HINT_JOYSTICK_HIDAPI_GAMECUBE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1410:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_GAMECUBE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE):
  when "SDL_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" is static:
    const
      HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1431:9
  else:
    let HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1431:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_JOY_CONS):
  when "SDL_JOYSTICK_HIDAPI_JOY_CONS" is static:
    const
      HINT_JOYSTICK_HIDAPI_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_JOY_CONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1448:9
  else:
    let HINT_JOYSTICK_HIDAPI_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_JOY_CONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1448:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_JOY_CONS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED* = "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1467:9
  else:
    let HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED* = "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1467:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_LUNA):
  when "SDL_JOYSTICK_HIDAPI_LUNA" is static:
    const
      HINT_JOYSTICK_HIDAPI_LUNA* = "SDL_JOYSTICK_HIDAPI_LUNA" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1484:9
  else:
    let HINT_JOYSTICK_HIDAPI_LUNA* = "SDL_JOYSTICK_HIDAPI_LUNA" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1484:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_LUNA" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC):
  when "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" is static:
    const
      HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC* = "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1501:9
  else:
    let HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC* = "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1501:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS3):
  when "SDL_JOYSTICK_HIDAPI_PS3" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS3* = "SDL_JOYSTICK_HIDAPI_PS3" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1523:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS3* = "SDL_JOYSTICK_HIDAPI_PS3" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1523:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS3" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER):
  when "SDL_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER* = "SDL_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1540:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER* = "SDL_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1540:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS4):
  when "SDL_JOYSTICK_HIDAPI_PS4" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS4* = "SDL_JOYSTICK_HIDAPI_PS4" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1557:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS4* = "SDL_JOYSTICK_HIDAPI_PS4" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1557:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS4" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL):
  when "SDL_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL* = "SDL_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1572:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL* = "SDL_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1572:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS4_RUMBLE):
  when "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS4_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1598:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS4_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1598:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS4_RUMBLE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS5):
  when "SDL_JOYSTICK_HIDAPI_PS5" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS5* = "SDL_JOYSTICK_HIDAPI_PS5" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1615:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS5* = "SDL_JOYSTICK_HIDAPI_PS5" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1615:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS5" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1628:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1628:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS5_RUMBLE):
  when "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS5_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1653:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS5_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1653:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS5_RUMBLE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SHIELD):
  when "SDL_JOYSTICK_HIDAPI_SHIELD" is static:
    const
      HINT_JOYSTICK_HIDAPI_SHIELD* = "SDL_JOYSTICK_HIDAPI_SHIELD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1670:9
  else:
    let HINT_JOYSTICK_HIDAPI_SHIELD* = "SDL_JOYSTICK_HIDAPI_SHIELD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1670:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SHIELD" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STADIA):
  when "SDL_JOYSTICK_HIDAPI_STADIA" is static:
    const
      HINT_JOYSTICK_HIDAPI_STADIA* = "SDL_JOYSTICK_HIDAPI_STADIA" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1685:9
  else:
    let HINT_JOYSTICK_HIDAPI_STADIA* = "SDL_JOYSTICK_HIDAPI_STADIA" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1685:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STADIA" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAM):
  when "SDL_JOYSTICK_HIDAPI_STEAM" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAM* = "SDL_JOYSTICK_HIDAPI_STEAM" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1702:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAM* = "SDL_JOYSTICK_HIDAPI_STEAM" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1702:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAM" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_STEAM_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED* = "SDL_JOYSTICK_HIDAPI_STEAM_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1721:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED* = "SDL_JOYSTICK_HIDAPI_STEAM_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1721:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAMDECK):
  when "SDL_JOYSTICK_HIDAPI_STEAMDECK" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAMDECK* = "SDL_JOYSTICK_HIDAPI_STEAMDECK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1738:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAMDECK* = "SDL_JOYSTICK_HIDAPI_STEAMDECK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1738:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAMDECK" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAM_HORI):
  when "SDL_JOYSTICK_HIDAPI_STEAM_HORI" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAM_HORI* = "SDL_JOYSTICK_HIDAPI_STEAM_HORI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1749:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAM_HORI* = "SDL_JOYSTICK_HIDAPI_STEAM_HORI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1749:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAM_HORI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SWITCH):
  when "SDL_JOYSTICK_HIDAPI_SWITCH" is static:
    const
      HINT_JOYSTICK_HIDAPI_SWITCH* = "SDL_JOYSTICK_HIDAPI_SWITCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1766:9
  else:
    let HINT_JOYSTICK_HIDAPI_SWITCH* = "SDL_JOYSTICK_HIDAPI_SWITCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1766:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SWITCH" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1785:9
  else:
    let HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1785:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1800:9
  else:
    let HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1800:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS):
  when "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" is static:
    const
      HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1816:9
  else:
    let HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1816:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_WII):
  when "SDL_JOYSTICK_HIDAPI_WII" is static:
    const
      HINT_JOYSTICK_HIDAPI_WII* = "SDL_JOYSTICK_HIDAPI_WII" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1834:9
  else:
    let HINT_JOYSTICK_HIDAPI_WII* = "SDL_JOYSTICK_HIDAPI_WII" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1834:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_WII" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1849:9
  else:
    let HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1849:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX):
  when "SDL_JOYSTICK_HIDAPI_XBOX" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX* = "SDL_JOYSTICK_HIDAPI_XBOX" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1867:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX* = "SDL_JOYSTICK_HIDAPI_XBOX" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1867:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_360):
  when "SDL_JOYSTICK_HIDAPI_XBOX_360" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_360* = "SDL_JOYSTICK_HIDAPI_XBOX_360" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1884:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_360* = "SDL_JOYSTICK_HIDAPI_XBOX_360" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1884:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_360" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1899:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1899:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS):
  when "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS* = "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1916:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS* = "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1916:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_ONE):
  when "SDL_JOYSTICK_HIDAPI_XBOX_ONE" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_ONE* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1933:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_ONE* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1933:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_ONE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1952:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1952:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_IOKIT):
  when "SDL_JOYSTICK_IOKIT" is static:
    const
      HINT_JOYSTICK_IOKIT* = "SDL_JOYSTICK_IOKIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1967:9
  else:
    let HINT_JOYSTICK_IOKIT* = "SDL_JOYSTICK_IOKIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1967:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_IOKIT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_CLASSIC):
  when "SDL_JOYSTICK_LINUX_CLASSIC" is static:
    const
      HINT_JOYSTICK_LINUX_CLASSIC* = "SDL_JOYSTICK_LINUX_CLASSIC" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1982:9
  else:
    let HINT_JOYSTICK_LINUX_CLASSIC* = "SDL_JOYSTICK_LINUX_CLASSIC" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1982:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_CLASSIC" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_DEADZONES):
  when "SDL_JOYSTICK_LINUX_DEADZONES" is static:
    const
      HINT_JOYSTICK_LINUX_DEADZONES* = "SDL_JOYSTICK_LINUX_DEADZONES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1997:9
  else:
    let HINT_JOYSTICK_LINUX_DEADZONES* = "SDL_JOYSTICK_LINUX_DEADZONES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:1997:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_DEADZONES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_DIGITAL_HATS):
  when "SDL_JOYSTICK_LINUX_DIGITAL_HATS" is static:
    const
      HINT_JOYSTICK_LINUX_DIGITAL_HATS* = "SDL_JOYSTICK_LINUX_DIGITAL_HATS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2015:9
  else:
    let HINT_JOYSTICK_LINUX_DIGITAL_HATS* = "SDL_JOYSTICK_LINUX_DIGITAL_HATS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2015:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_DIGITAL_HATS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_HAT_DEADZONES):
  when "SDL_JOYSTICK_LINUX_HAT_DEADZONES" is static:
    const
      HINT_JOYSTICK_LINUX_HAT_DEADZONES* = "SDL_JOYSTICK_LINUX_HAT_DEADZONES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2031:9
  else:
    let HINT_JOYSTICK_LINUX_HAT_DEADZONES* = "SDL_JOYSTICK_LINUX_HAT_DEADZONES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2031:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_HAT_DEADZONES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_MFI):
  when "SDL_JOYSTICK_MFI" is static:
    const
      HINT_JOYSTICK_MFI* = "SDL_JOYSTICK_MFI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2046:9
  else:
    let HINT_JOYSTICK_MFI* = "SDL_JOYSTICK_MFI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2046:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_MFI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_RAWINPUT):
  when "SDL_JOYSTICK_RAWINPUT" is static:
    const
      HINT_JOYSTICK_RAWINPUT* = "SDL_JOYSTICK_RAWINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2061:9
  else:
    let HINT_JOYSTICK_RAWINPUT* = "SDL_JOYSTICK_RAWINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2061:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_RAWINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT):
  when "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" is static:
    const
      HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT* = "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2078:9
  else:
    let HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT* = "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2078:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ROG_CHAKRAM):
  when "SDL_JOYSTICK_ROG_CHAKRAM" is static:
    const
      HINT_JOYSTICK_ROG_CHAKRAM* = "SDL_JOYSTICK_ROG_CHAKRAM" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2093:9
  else:
    let HINT_JOYSTICK_ROG_CHAKRAM* = "SDL_JOYSTICK_ROG_CHAKRAM" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2093:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ROG_CHAKRAM" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_THREAD):
  when "SDL_JOYSTICK_THREAD" is static:
    const
      HINT_JOYSTICK_THREAD* = "SDL_JOYSTICK_THREAD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2108:9
  else:
    let HINT_JOYSTICK_THREAD* = "SDL_JOYSTICK_THREAD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2108:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_THREAD" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_THROTTLE_DEVICES):
  when "SDL_JOYSTICK_THROTTLE_DEVICES" is static:
    const
      HINT_JOYSTICK_THROTTLE_DEVICES* = "SDL_JOYSTICK_THROTTLE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2125:9
  else:
    let HINT_JOYSTICK_THROTTLE_DEVICES* = "SDL_JOYSTICK_THROTTLE_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2125:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_THROTTLE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2146:9
  else:
    let HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2146:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_WGI):
  when "SDL_JOYSTICK_WGI" is static:
    const
      HINT_JOYSTICK_WGI* = "SDL_JOYSTICK_WGI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2161:9
  else:
    let HINT_JOYSTICK_WGI* = "SDL_JOYSTICK_WGI" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2161:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_WGI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_WHEEL_DEVICES):
  when "SDL_JOYSTICK_WHEEL_DEVICES" is static:
    const
      HINT_JOYSTICK_WHEEL_DEVICES* = "SDL_JOYSTICK_WHEEL_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2178:9
  else:
    let HINT_JOYSTICK_WHEEL_DEVICES* = "SDL_JOYSTICK_WHEEL_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2178:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_WHEEL_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED* = "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2199:9
  else:
    let HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED* = "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2199:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ZERO_CENTERED_DEVICES):
  when "SDL_JOYSTICK_ZERO_CENTERED_DEVICES" is static:
    const
      HINT_JOYSTICK_ZERO_CENTERED_DEVICES* = "SDL_JOYSTICK_ZERO_CENTERED_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2217:9
  else:
    let HINT_JOYSTICK_ZERO_CENTERED_DEVICES* = "SDL_JOYSTICK_ZERO_CENTERED_DEVICES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2217:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ZERO_CENTERED_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_KEYCODE_OPTIONS):
  when "SDL_KEYCODE_OPTIONS" is static:
    const
      HINT_KEYCODE_OPTIONS* = "SDL_KEYCODE_OPTIONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2251:9
  else:
    let HINT_KEYCODE_OPTIONS* = "SDL_KEYCODE_OPTIONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2251:9
else:
  static :
    hint("Declaration of " & "HINT_KEYCODE_OPTIONS" &
        " already exists, not redeclaring")
when not declared(HINT_KMSDRM_DEVICE_INDEX):
  when "SDL_KMSDRM_DEVICE_INDEX" is static:
    const
      HINT_KMSDRM_DEVICE_INDEX* = "SDL_KMSDRM_DEVICE_INDEX" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2265:9
  else:
    let HINT_KMSDRM_DEVICE_INDEX* = "SDL_KMSDRM_DEVICE_INDEX" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2265:9
else:
  static :
    hint("Declaration of " & "HINT_KMSDRM_DEVICE_INDEX" &
        " already exists, not redeclaring")
when not declared(HINT_KMSDRM_REQUIRE_DRM_MASTER):
  when "SDL_KMSDRM_REQUIRE_DRM_MASTER" is static:
    const
      HINT_KMSDRM_REQUIRE_DRM_MASTER* = "SDL_KMSDRM_REQUIRE_DRM_MASTER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2293:9
  else:
    let HINT_KMSDRM_REQUIRE_DRM_MASTER* = "SDL_KMSDRM_REQUIRE_DRM_MASTER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2293:9
else:
  static :
    hint("Declaration of " & "HINT_KMSDRM_REQUIRE_DRM_MASTER" &
        " already exists, not redeclaring")
when not declared(HINT_LOGGING):
  when "SDL_LOGGING" is static:
    const
      HINT_LOGGING* = "SDL_LOGGING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2319:9
  else:
    let HINT_LOGGING* = "SDL_LOGGING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2319:9
else:
  static :
    hint("Declaration of " & "HINT_LOGGING" & " already exists, not redeclaring")
when not declared(HINT_MAC_BACKGROUND_APP):
  when "SDL_MAC_BACKGROUND_APP" is static:
    const
      HINT_MAC_BACKGROUND_APP* = "SDL_MAC_BACKGROUND_APP" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2335:9
  else:
    let HINT_MAC_BACKGROUND_APP* = "SDL_MAC_BACKGROUND_APP" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2335:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_BACKGROUND_APP" &
        " already exists, not redeclaring")
when not declared(HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK):
  when "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" is static:
    const
      HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK* = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2351:9
  else:
    let HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK* = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2351:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" &
        " already exists, not redeclaring")
when not declared(HINT_MAC_OPENGL_ASYNC_DISPATCH):
  when "SDL_MAC_OPENGL_ASYNC_DISPATCH" is static:
    const
      HINT_MAC_OPENGL_ASYNC_DISPATCH* = "SDL_MAC_OPENGL_ASYNC_DISPATCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2374:9
  else:
    let HINT_MAC_OPENGL_ASYNC_DISPATCH* = "SDL_MAC_OPENGL_ASYNC_DISPATCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2374:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_OPENGL_ASYNC_DISPATCH" &
        " already exists, not redeclaring")
when not declared(HINT_MAC_SCROLL_MOMENTUM):
  when "SDL_MAC_SCROLL_MOMENTUM" is static:
    const
      HINT_MAC_SCROLL_MOMENTUM* = "SDL_MAC_SCROLL_MOMENTUM" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2389:9
  else:
    let HINT_MAC_SCROLL_MOMENTUM* = "SDL_MAC_SCROLL_MOMENTUM" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2389:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_SCROLL_MOMENTUM" &
        " already exists, not redeclaring")
when not declared(HINT_MAIN_CALLBACK_RATE):
  when "SDL_MAIN_CALLBACK_RATE" is static:
    const
      HINT_MAIN_CALLBACK_RATE* = "SDL_MAIN_CALLBACK_RATE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2407:9
  else:
    let HINT_MAIN_CALLBACK_RATE* = "SDL_MAIN_CALLBACK_RATE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2407:9
else:
  static :
    hint("Declaration of " & "HINT_MAIN_CALLBACK_RATE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_AUTO_CAPTURE):
  when "SDL_MOUSE_AUTO_CAPTURE" is static:
    const
      HINT_MOUSE_AUTO_CAPTURE* = "SDL_MOUSE_AUTO_CAPTURE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2426:9
  else:
    let HINT_MOUSE_AUTO_CAPTURE* = "SDL_MOUSE_AUTO_CAPTURE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2426:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_AUTO_CAPTURE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_DOUBLE_CLICK_RADIUS):
  when "SDL_MOUSE_DOUBLE_CLICK_RADIUS" is static:
    const
      HINT_MOUSE_DOUBLE_CLICK_RADIUS* = "SDL_MOUSE_DOUBLE_CLICK_RADIUS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2435:9
  else:
    let HINT_MOUSE_DOUBLE_CLICK_RADIUS* = "SDL_MOUSE_DOUBLE_CLICK_RADIUS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2435:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_DOUBLE_CLICK_RADIUS" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_DOUBLE_CLICK_TIME):
  when "SDL_MOUSE_DOUBLE_CLICK_TIME" is static:
    const
      HINT_MOUSE_DOUBLE_CLICK_TIME* = "SDL_MOUSE_DOUBLE_CLICK_TIME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2444:9
  else:
    let HINT_MOUSE_DOUBLE_CLICK_TIME* = "SDL_MOUSE_DOUBLE_CLICK_TIME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2444:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_DOUBLE_CLICK_TIME" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_DEFAULT_SYSTEM_CURSOR):
  when "SDL_MOUSE_DEFAULT_SYSTEM_CURSOR" is static:
    const
      HINT_MOUSE_DEFAULT_SYSTEM_CURSOR* = "SDL_MOUSE_DEFAULT_SYSTEM_CURSOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2456:9
  else:
    let HINT_MOUSE_DEFAULT_SYSTEM_CURSOR* = "SDL_MOUSE_DEFAULT_SYSTEM_CURSOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2456:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_DEFAULT_SYSTEM_CURSOR" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE):
  when "SDL_MOUSE_EMULATE_WARP_WITH_RELATIVE" is static:
    const
      HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE* = "SDL_MOUSE_EMULATE_WARP_WITH_RELATIVE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2488:9
  else:
    let HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE* = "SDL_MOUSE_EMULATE_WARP_WITH_RELATIVE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2488:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_FOCUS_CLICKTHROUGH):
  when "SDL_MOUSE_FOCUS_CLICKTHROUGH" is static:
    const
      HINT_MOUSE_FOCUS_CLICKTHROUGH* = "SDL_MOUSE_FOCUS_CLICKTHROUGH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2502:9
  else:
    let HINT_MOUSE_FOCUS_CLICKTHROUGH* = "SDL_MOUSE_FOCUS_CLICKTHROUGH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2502:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_FOCUS_CLICKTHROUGH" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_NORMAL_SPEED_SCALE):
  when "SDL_MOUSE_NORMAL_SPEED_SCALE" is static:
    const
      HINT_MOUSE_NORMAL_SPEED_SCALE* = "SDL_MOUSE_NORMAL_SPEED_SCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2512:9
  else:
    let HINT_MOUSE_NORMAL_SPEED_SCALE* = "SDL_MOUSE_NORMAL_SPEED_SCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2512:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_NORMAL_SPEED_SCALE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_MODE_CENTER):
  when "SDL_MOUSE_RELATIVE_MODE_CENTER" is static:
    const
      HINT_MOUSE_RELATIVE_MODE_CENTER* = "SDL_MOUSE_RELATIVE_MODE_CENTER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2533:9
  else:
    let HINT_MOUSE_RELATIVE_MODE_CENTER* = "SDL_MOUSE_RELATIVE_MODE_CENTER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2533:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_MODE_CENTER" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_MODE_WARP):
  when "SDL_MOUSE_RELATIVE_MODE_WARP" is static:
    const
      HINT_MOUSE_RELATIVE_MODE_WARP* = "SDL_MOUSE_RELATIVE_MODE_WARP" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2548:9
  else:
    let HINT_MOUSE_RELATIVE_MODE_WARP* = "SDL_MOUSE_RELATIVE_MODE_WARP" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2548:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_MODE_WARP" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_SPEED_SCALE):
  when "SDL_MOUSE_RELATIVE_SPEED_SCALE" is static:
    const
      HINT_MOUSE_RELATIVE_SPEED_SCALE* = "SDL_MOUSE_RELATIVE_SPEED_SCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2558:9
  else:
    let HINT_MOUSE_RELATIVE_SPEED_SCALE* = "SDL_MOUSE_RELATIVE_SPEED_SCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2558:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_SPEED_SCALE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_SYSTEM_SCALE):
  when "SDL_MOUSE_RELATIVE_SYSTEM_SCALE" is static:
    const
      HINT_MOUSE_RELATIVE_SYSTEM_SCALE* = "SDL_MOUSE_RELATIVE_SYSTEM_SCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2577:9
  else:
    let HINT_MOUSE_RELATIVE_SYSTEM_SCALE* = "SDL_MOUSE_RELATIVE_SYSTEM_SCALE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2577:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_SYSTEM_SCALE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_WARP_MOTION):
  when "SDL_MOUSE_RELATIVE_WARP_MOTION" is static:
    const
      HINT_MOUSE_RELATIVE_WARP_MOTION* = "SDL_MOUSE_RELATIVE_WARP_MOTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2596:9
  else:
    let HINT_MOUSE_RELATIVE_WARP_MOTION* = "SDL_MOUSE_RELATIVE_WARP_MOTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2596:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_WARP_MOTION" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_CURSOR_VISIBLE):
  when "SDL_MOUSE_RELATIVE_CURSOR_VISIBLE" is static:
    const
      HINT_MOUSE_RELATIVE_CURSOR_VISIBLE* = "SDL_MOUSE_RELATIVE_CURSOR_VISIBLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2615:9
  else:
    let HINT_MOUSE_RELATIVE_CURSOR_VISIBLE* = "SDL_MOUSE_RELATIVE_CURSOR_VISIBLE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2615:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_CURSOR_VISIBLE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_CLIP_INTERVAL):
  when "SDL_MOUSE_RELATIVE_CLIP_INTERVAL" is static:
    const
      HINT_MOUSE_RELATIVE_CLIP_INTERVAL* = "SDL_MOUSE_RELATIVE_CLIP_INTERVAL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2632:9
  else:
    let HINT_MOUSE_RELATIVE_CLIP_INTERVAL* = "SDL_MOUSE_RELATIVE_CLIP_INTERVAL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2632:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_CLIP_INTERVAL" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_TOUCH_EVENTS):
  when "SDL_MOUSE_TOUCH_EVENTS" is static:
    const
      HINT_MOUSE_TOUCH_EVENTS* = "SDL_MOUSE_TOUCH_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2649:9
  else:
    let HINT_MOUSE_TOUCH_EVENTS* = "SDL_MOUSE_TOUCH_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2649:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_TOUCH_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_MUTE_CONSOLE_KEYBOARD):
  when "SDL_MUTE_CONSOLE_KEYBOARD" is static:
    const
      HINT_MUTE_CONSOLE_KEYBOARD* = "SDL_MUTE_CONSOLE_KEYBOARD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2667:9
  else:
    let HINT_MUTE_CONSOLE_KEYBOARD* = "SDL_MUTE_CONSOLE_KEYBOARD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2667:9
else:
  static :
    hint("Declaration of " & "HINT_MUTE_CONSOLE_KEYBOARD" &
        " already exists, not redeclaring")
when not declared(HINT_NO_SIGNAL_HANDLERS):
  when "SDL_NO_SIGNAL_HANDLERS" is static:
    const
      HINT_NO_SIGNAL_HANDLERS* = "SDL_NO_SIGNAL_HANDLERS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2682:9
  else:
    let HINT_NO_SIGNAL_HANDLERS* = "SDL_NO_SIGNAL_HANDLERS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2682:9
else:
  static :
    hint("Declaration of " & "HINT_NO_SIGNAL_HANDLERS" &
        " already exists, not redeclaring")
when not declared(HINT_OPENGL_LIBRARY):
  when "SDL_OPENGL_LIBRARY" is static:
    const
      HINT_OPENGL_LIBRARY* = "SDL_OPENGL_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2692:9
  else:
    let HINT_OPENGL_LIBRARY* = "SDL_OPENGL_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2692:9
else:
  static :
    hint("Declaration of " & "HINT_OPENGL_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_OPENGL_ES_DRIVER):
  when "SDL_OPENGL_ES_DRIVER" is static:
    const
      HINT_OPENGL_ES_DRIVER* = "SDL_OPENGL_ES_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2726:9
  else:
    let HINT_OPENGL_ES_DRIVER* = "SDL_OPENGL_ES_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2726:9
else:
  static :
    hint("Declaration of " & "HINT_OPENGL_ES_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_OPENVR_LIBRARY):
  when "SDL_OPENVR_LIBRARY" is static:
    const
      HINT_OPENVR_LIBRARY* = "SDL_OPENVR_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2738:9
  else:
    let HINT_OPENVR_LIBRARY* = "SDL_OPENVR_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2738:9
else:
  static :
    hint("Declaration of " & "HINT_OPENVR_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_ORIENTATIONS):
  when "SDL_ORIENTATIONS" is static:
    const
      HINT_ORIENTATIONS* = "SDL_ORIENTATIONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2757:9
  else:
    let HINT_ORIENTATIONS* = "SDL_ORIENTATIONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2757:9
else:
  static :
    hint("Declaration of " & "HINT_ORIENTATIONS" &
        " already exists, not redeclaring")
when not declared(HINT_POLL_SENTINEL):
  when "SDL_POLL_SENTINEL" is static:
    const
      HINT_POLL_SENTINEL* = "SDL_POLL_SENTINEL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2777:9
  else:
    let HINT_POLL_SENTINEL* = "SDL_POLL_SENTINEL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2777:9
else:
  static :
    hint("Declaration of " & "HINT_POLL_SENTINEL" &
        " already exists, not redeclaring")
when not declared(HINT_PREFERRED_LOCALES):
  when "SDL_PREFERRED_LOCALES" is static:
    const
      HINT_PREFERRED_LOCALES* = "SDL_PREFERRED_LOCALES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2795:9
  else:
    let HINT_PREFERRED_LOCALES* = "SDL_PREFERRED_LOCALES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2795:9
else:
  static :
    hint("Declaration of " & "HINT_PREFERRED_LOCALES" &
        " already exists, not redeclaring")
when not declared(HINT_QUIT_ON_LAST_WINDOW_CLOSE):
  when "SDL_QUIT_ON_LAST_WINDOW_CLOSE" is static:
    const
      HINT_QUIT_ON_LAST_WINDOW_CLOSE* = "SDL_QUIT_ON_LAST_WINDOW_CLOSE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2814:9
  else:
    let HINT_QUIT_ON_LAST_WINDOW_CLOSE* = "SDL_QUIT_ON_LAST_WINDOW_CLOSE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2814:9
else:
  static :
    hint("Declaration of " & "HINT_QUIT_ON_LAST_WINDOW_CLOSE" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_DIRECT3D_THREADSAFE):
  when "SDL_RENDER_DIRECT3D_THREADSAFE" is static:
    const
      HINT_RENDER_DIRECT3D_THREADSAFE* = "SDL_RENDER_DIRECT3D_THREADSAFE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2829:9
  else:
    let HINT_RENDER_DIRECT3D_THREADSAFE* = "SDL_RENDER_DIRECT3D_THREADSAFE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2829:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_DIRECT3D_THREADSAFE" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_DIRECT3D11_DEBUG):
  when "SDL_RENDER_DIRECT3D11_DEBUG" is static:
    const
      HINT_RENDER_DIRECT3D11_DEBUG* = "SDL_RENDER_DIRECT3D11_DEBUG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2845:9
  else:
    let HINT_RENDER_DIRECT3D11_DEBUG* = "SDL_RENDER_DIRECT3D11_DEBUG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2845:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_DIRECT3D11_DEBUG" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_VULKAN_DEBUG):
  when "SDL_RENDER_VULKAN_DEBUG" is static:
    const
      HINT_RENDER_VULKAN_DEBUG* = "SDL_RENDER_VULKAN_DEBUG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2859:9
  else:
    let HINT_RENDER_VULKAN_DEBUG* = "SDL_RENDER_VULKAN_DEBUG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2859:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_VULKAN_DEBUG" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_GPU_DEBUG):
  when "SDL_RENDER_GPU_DEBUG" is static:
    const
      HINT_RENDER_GPU_DEBUG* = "SDL_RENDER_GPU_DEBUG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2873:9
  else:
    let HINT_RENDER_GPU_DEBUG* = "SDL_RENDER_GPU_DEBUG" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2873:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_GPU_DEBUG" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_GPU_LOW_POWER):
  when "SDL_RENDER_GPU_LOW_POWER" is static:
    const
      HINT_RENDER_GPU_LOW_POWER* = "SDL_RENDER_GPU_LOW_POWER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2888:9
  else:
    let HINT_RENDER_GPU_LOW_POWER* = "SDL_RENDER_GPU_LOW_POWER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2888:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_GPU_LOW_POWER" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_DRIVER):
  when "SDL_RENDER_DRIVER" is static:
    const
      HINT_RENDER_DRIVER* = "SDL_RENDER_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2917:9
  else:
    let HINT_RENDER_DRIVER* = "SDL_RENDER_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2917:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_LINE_METHOD):
  when "SDL_RENDER_LINE_METHOD" is static:
    const
      HINT_RENDER_LINE_METHOD* = "SDL_RENDER_LINE_METHOD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2935:9
  else:
    let HINT_RENDER_LINE_METHOD* = "SDL_RENDER_LINE_METHOD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2935:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_LINE_METHOD" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE):
  when "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE" is static:
    const
      HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE* = "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2950:9
  else:
    let HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE* = "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2950:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_VSYNC):
  when "SDL_RENDER_VSYNC" is static:
    const
      HINT_RENDER_VSYNC* = "SDL_RENDER_VSYNC" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2967:9
  else:
    let HINT_RENDER_VSYNC* = "SDL_RENDER_VSYNC" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2967:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_VSYNC" &
        " already exists, not redeclaring")
when not declared(HINT_RETURN_KEY_HIDES_IME):
  when "SDL_RETURN_KEY_HIDES_IME" is static:
    const
      HINT_RETURN_KEY_HIDES_IME* = "SDL_RETURN_KEY_HIDES_IME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2984:9
  else:
    let HINT_RETURN_KEY_HIDES_IME* = "SDL_RETURN_KEY_HIDES_IME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:2984:9
else:
  static :
    hint("Declaration of " & "HINT_RETURN_KEY_HIDES_IME" &
        " already exists, not redeclaring")
when not declared(HINT_ROG_GAMEPAD_MICE):
  when "SDL_ROG_GAMEPAD_MICE" is static:
    const
      HINT_ROG_GAMEPAD_MICE* = "SDL_ROG_GAMEPAD_MICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3003:9
  else:
    let HINT_ROG_GAMEPAD_MICE* = "SDL_ROG_GAMEPAD_MICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3003:9
else:
  static :
    hint("Declaration of " & "HINT_ROG_GAMEPAD_MICE" &
        " already exists, not redeclaring")
when not declared(HINT_ROG_GAMEPAD_MICE_EXCLUDED):
  when "SDL_ROG_GAMEPAD_MICE_EXCLUDED" is static:
    const
      HINT_ROG_GAMEPAD_MICE_EXCLUDED* = "SDL_ROG_GAMEPAD_MICE_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3023:9
  else:
    let HINT_ROG_GAMEPAD_MICE_EXCLUDED* = "SDL_ROG_GAMEPAD_MICE_EXCLUDED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3023:9
else:
  static :
    hint("Declaration of " & "HINT_ROG_GAMEPAD_MICE_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_RPI_VIDEO_LAYER):
  when "SDL_RPI_VIDEO_LAYER" is static:
    const
      HINT_RPI_VIDEO_LAYER* = "SDL_RPI_VIDEO_LAYER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3035:9
  else:
    let HINT_RPI_VIDEO_LAYER* = "SDL_RPI_VIDEO_LAYER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3035:9
else:
  static :
    hint("Declaration of " & "HINT_RPI_VIDEO_LAYER" &
        " already exists, not redeclaring")
when not declared(HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME):
  when "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME" is static:
    const
      HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME* = "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3057:9
  else:
    let HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME* = "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3057:9
else:
  static :
    hint("Declaration of " & "HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_SHUTDOWN_DBUS_ON_QUIT):
  when "SDL_SHUTDOWN_DBUS_ON_QUIT" is static:
    const
      HINT_SHUTDOWN_DBUS_ON_QUIT* = "SDL_SHUTDOWN_DBUS_ON_QUIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3076:9
  else:
    let HINT_SHUTDOWN_DBUS_ON_QUIT* = "SDL_SHUTDOWN_DBUS_ON_QUIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3076:9
else:
  static :
    hint("Declaration of " & "HINT_SHUTDOWN_DBUS_ON_QUIT" &
        " already exists, not redeclaring")
when not declared(HINT_STORAGE_TITLE_DRIVER):
  when "SDL_STORAGE_TITLE_DRIVER" is static:
    const
      HINT_STORAGE_TITLE_DRIVER* = "SDL_STORAGE_TITLE_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3090:9
  else:
    let HINT_STORAGE_TITLE_DRIVER* = "SDL_STORAGE_TITLE_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3090:9
else:
  static :
    hint("Declaration of " & "HINT_STORAGE_TITLE_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_STORAGE_USER_DRIVER):
  when "SDL_STORAGE_USER_DRIVER" is static:
    const
      HINT_STORAGE_USER_DRIVER* = "SDL_STORAGE_USER_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3104:9
  else:
    let HINT_STORAGE_USER_DRIVER* = "SDL_STORAGE_USER_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3104:9
else:
  static :
    hint("Declaration of " & "HINT_STORAGE_USER_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL):
  when "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL" is static:
    const
      HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL* = "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3133:9
  else:
    let HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL* = "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3133:9
else:
  static :
    hint("Declaration of " & "HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL" &
        " already exists, not redeclaring")
when not declared(HINT_THREAD_PRIORITY_POLICY):
  when "SDL_THREAD_PRIORITY_POLICY" is static:
    const
      HINT_THREAD_PRIORITY_POLICY* = "SDL_THREAD_PRIORITY_POLICY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3156:9
  else:
    let HINT_THREAD_PRIORITY_POLICY* = "SDL_THREAD_PRIORITY_POLICY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3156:9
else:
  static :
    hint("Declaration of " & "HINT_THREAD_PRIORITY_POLICY" &
        " already exists, not redeclaring")
when not declared(HINT_TIMER_RESOLUTION):
  when "SDL_TIMER_RESOLUTION" is static:
    const
      HINT_TIMER_RESOLUTION* = "SDL_TIMER_RESOLUTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3176:9
  else:
    let HINT_TIMER_RESOLUTION* = "SDL_TIMER_RESOLUTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3176:9
else:
  static :
    hint("Declaration of " & "HINT_TIMER_RESOLUTION" &
        " already exists, not redeclaring")
when not declared(HINT_TOUCH_MOUSE_EVENTS):
  when "SDL_TOUCH_MOUSE_EVENTS" is static:
    const
      HINT_TOUCH_MOUSE_EVENTS* = "SDL_TOUCH_MOUSE_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3191:9
  else:
    let HINT_TOUCH_MOUSE_EVENTS* = "SDL_TOUCH_MOUSE_EVENTS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3191:9
else:
  static :
    hint("Declaration of " & "HINT_TOUCH_MOUSE_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_TRACKPAD_IS_TOUCH_ONLY):
  when "SDL_TRACKPAD_IS_TOUCH_ONLY" is static:
    const
      HINT_TRACKPAD_IS_TOUCH_ONLY* = "SDL_TRACKPAD_IS_TOUCH_ONLY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3212:9
  else:
    let HINT_TRACKPAD_IS_TOUCH_ONLY* = "SDL_TRACKPAD_IS_TOUCH_ONLY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3212:9
else:
  static :
    hint("Declaration of " & "HINT_TRACKPAD_IS_TOUCH_ONLY" &
        " already exists, not redeclaring")
when not declared(HINT_TV_REMOTE_AS_JOYSTICK):
  when "SDL_TV_REMOTE_AS_JOYSTICK" is static:
    const
      HINT_TV_REMOTE_AS_JOYSTICK* = "SDL_TV_REMOTE_AS_JOYSTICK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3227:9
  else:
    let HINT_TV_REMOTE_AS_JOYSTICK* = "SDL_TV_REMOTE_AS_JOYSTICK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3227:9
else:
  static :
    hint("Declaration of " & "HINT_TV_REMOTE_AS_JOYSTICK" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_ALLOW_SCREENSAVER):
  when "SDL_VIDEO_ALLOW_SCREENSAVER" is static:
    const
      HINT_VIDEO_ALLOW_SCREENSAVER* = "SDL_VIDEO_ALLOW_SCREENSAVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3241:9
  else:
    let HINT_VIDEO_ALLOW_SCREENSAVER* = "SDL_VIDEO_ALLOW_SCREENSAVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3241:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_ALLOW_SCREENSAVER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DISPLAY_PRIORITY):
  when "SDL_VIDEO_DISPLAY_PRIORITY" is static:
    const
      HINT_VIDEO_DISPLAY_PRIORITY* = "SDL_VIDEO_DISPLAY_PRIORITY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3266:9
  else:
    let HINT_VIDEO_DISPLAY_PRIORITY* = "SDL_VIDEO_DISPLAY_PRIORITY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3266:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DISPLAY_PRIORITY" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DOUBLE_BUFFER):
  when "SDL_VIDEO_DOUBLE_BUFFER" is static:
    const
      HINT_VIDEO_DOUBLE_BUFFER* = "SDL_VIDEO_DOUBLE_BUFFER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3289:9
  else:
    let HINT_VIDEO_DOUBLE_BUFFER* = "SDL_VIDEO_DOUBLE_BUFFER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3289:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DOUBLE_BUFFER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DRIVER):
  when "SDL_VIDEO_DRIVER" is static:
    const
      HINT_VIDEO_DRIVER* = "SDL_VIDEO_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3303:9
  else:
    let HINT_VIDEO_DRIVER* = "SDL_VIDEO_DRIVER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3303:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DUMMY_SAVE_FRAMES):
  when "SDL_VIDEO_DUMMY_SAVE_FRAMES" is static:
    const
      HINT_VIDEO_DUMMY_SAVE_FRAMES* = "SDL_VIDEO_DUMMY_SAVE_FRAMES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3316:9
  else:
    let HINT_VIDEO_DUMMY_SAVE_FRAMES* = "SDL_VIDEO_DUMMY_SAVE_FRAMES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3316:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DUMMY_SAVE_FRAMES" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK):
  when "SDL_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" is static:
    const
      HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK* = "SDL_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3330:9
  else:
    let HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK* = "SDL_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3330:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_FORCE_EGL):
  when "SDL_VIDEO_FORCE_EGL" is static:
    const
      HINT_VIDEO_FORCE_EGL* = "SDL_VIDEO_FORCE_EGL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3346:9
  else:
    let HINT_VIDEO_FORCE_EGL* = "SDL_VIDEO_FORCE_EGL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3346:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_FORCE_EGL" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_MAC_FULLSCREEN_SPACES):
  when "SDL_VIDEO_MAC_FULLSCREEN_SPACES" is static:
    const
      HINT_VIDEO_MAC_FULLSCREEN_SPACES* = "SDL_VIDEO_MAC_FULLSCREEN_SPACES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3364:9
  else:
    let HINT_VIDEO_MAC_FULLSCREEN_SPACES* = "SDL_VIDEO_MAC_FULLSCREEN_SPACES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3364:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_MAC_FULLSCREEN_SPACES" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS):
  when "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS" is static:
    const
      HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS* = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3380:9
  else:
    let HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS* = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3380:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_OFFSCREEN_SAVE_FRAMES):
  when "SDL_VIDEO_OFFSCREEN_SAVE_FRAMES" is static:
    const
      HINT_VIDEO_OFFSCREEN_SAVE_FRAMES* = "SDL_VIDEO_OFFSCREEN_SAVE_FRAMES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3397:9
  else:
    let HINT_VIDEO_OFFSCREEN_SAVE_FRAMES* = "SDL_VIDEO_OFFSCREEN_SAVE_FRAMES" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3397:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_OFFSCREEN_SAVE_FRAMES" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_SYNC_WINDOW_OPERATIONS):
  when "SDL_VIDEO_SYNC_WINDOW_OPERATIONS" is static:
    const
      HINT_VIDEO_SYNC_WINDOW_OPERATIONS* = "SDL_VIDEO_SYNC_WINDOW_OPERATIONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3423:9
  else:
    let HINT_VIDEO_SYNC_WINDOW_OPERATIONS* = "SDL_VIDEO_SYNC_WINDOW_OPERATIONS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3423:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_SYNC_WINDOW_OPERATIONS" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR):
  when "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR" is static:
    const
      HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR* = "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3441:9
  else:
    let HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR* = "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3441:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_MODE_EMULATION):
  when "SDL_VIDEO_WAYLAND_MODE_EMULATION" is static:
    const
      HINT_VIDEO_WAYLAND_MODE_EMULATION* = "SDL_VIDEO_WAYLAND_MODE_EMULATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3461:9
  else:
    let HINT_VIDEO_WAYLAND_MODE_EMULATION* = "SDL_VIDEO_WAYLAND_MODE_EMULATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3461:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_MODE_EMULATION" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_MODE_SCALING):
  when "SDL_VIDEO_WAYLAND_MODE_SCALING" is static:
    const
      HINT_VIDEO_WAYLAND_MODE_SCALING* = "SDL_VIDEO_WAYLAND_MODE_SCALING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3483:9
  else:
    let HINT_VIDEO_WAYLAND_MODE_SCALING* = "SDL_VIDEO_WAYLAND_MODE_SCALING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3483:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_MODE_SCALING" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_PREFER_LIBDECOR):
  when "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR" is static:
    const
      HINT_VIDEO_WAYLAND_PREFER_LIBDECOR* = "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3503:9
  else:
    let HINT_VIDEO_WAYLAND_PREFER_LIBDECOR* = "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3503:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_PREFER_LIBDECOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY):
  when "SDL_VIDEO_WAYLAND_SCALE_TO_DISPLAY" is static:
    const
      HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY* = "SDL_VIDEO_WAYLAND_SCALE_TO_DISPLAY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3540:9
  else:
    let HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY* = "SDL_VIDEO_WAYLAND_SCALE_TO_DISPLAY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3540:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WIN_D3DCOMPILER):
  when "SDL_VIDEO_WIN_D3DCOMPILER" is static:
    const
      HINT_VIDEO_WIN_D3DCOMPILER* = "SDL_VIDEO_WIN_D3DCOMPILER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3562:9
  else:
    let HINT_VIDEO_WIN_D3DCOMPILER* = "SDL_VIDEO_WIN_D3DCOMPILER" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3562:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WIN_D3DCOMPILER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR):
  when "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" is static:
    const
      HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR* = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3577:9
  else:
    let HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR* = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3577:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_NET_WM_PING):
  when "SDL_VIDEO_X11_NET_WM_PING" is static:
    const
      HINT_VIDEO_X11_NET_WM_PING* = "SDL_VIDEO_X11_NET_WM_PING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3596:9
  else:
    let HINT_VIDEO_X11_NET_WM_PING* = "SDL_VIDEO_X11_NET_WM_PING" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3596:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_NET_WM_PING" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_NODIRECTCOLOR):
  when "SDL_VIDEO_X11_NODIRECTCOLOR" is static:
    const
      HINT_VIDEO_X11_NODIRECTCOLOR* = "SDL_VIDEO_X11_NODIRECTCOLOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3610:9
  else:
    let HINT_VIDEO_X11_NODIRECTCOLOR* = "SDL_VIDEO_X11_NODIRECTCOLOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3610:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_NODIRECTCOLOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_SCALING_FACTOR):
  when "SDL_VIDEO_X11_SCALING_FACTOR" is static:
    const
      HINT_VIDEO_X11_SCALING_FACTOR* = "SDL_VIDEO_X11_SCALING_FACTOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3621:9
  else:
    let HINT_VIDEO_X11_SCALING_FACTOR* = "SDL_VIDEO_X11_SCALING_FACTOR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3621:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_SCALING_FACTOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_VISUALID):
  when "SDL_VIDEO_X11_VISUALID" is static:
    const
      HINT_VIDEO_X11_VISUALID* = "SDL_VIDEO_X11_VISUALID" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3630:9
  else:
    let HINT_VIDEO_X11_VISUALID* = "SDL_VIDEO_X11_VISUALID" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3630:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_VISUALID" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_WINDOW_VISUALID):
  when "SDL_VIDEO_X11_WINDOW_VISUALID" is static:
    const
      HINT_VIDEO_X11_WINDOW_VISUALID* = "SDL_VIDEO_X11_WINDOW_VISUALID" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3639:9
  else:
    let HINT_VIDEO_X11_WINDOW_VISUALID* = "SDL_VIDEO_X11_WINDOW_VISUALID" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3639:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_WINDOW_VISUALID" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_XRANDR):
  when "SDL_VIDEO_X11_XRANDR" is static:
    const
      HINT_VIDEO_X11_XRANDR* = "SDL_VIDEO_X11_XRANDR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3653:9
  else:
    let HINT_VIDEO_X11_XRANDR* = "SDL_VIDEO_X11_XRANDR" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3653:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_XRANDR" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_ENABLE_BACK_TOUCH):
  when "SDL_VITA_ENABLE_BACK_TOUCH" is static:
    const
      HINT_VITA_ENABLE_BACK_TOUCH* = "SDL_VITA_ENABLE_BACK_TOUCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3668:9
  else:
    let HINT_VITA_ENABLE_BACK_TOUCH* = "SDL_VITA_ENABLE_BACK_TOUCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3668:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_ENABLE_BACK_TOUCH" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_ENABLE_FRONT_TOUCH):
  when "SDL_VITA_ENABLE_FRONT_TOUCH" is static:
    const
      HINT_VITA_ENABLE_FRONT_TOUCH* = "SDL_VITA_ENABLE_FRONT_TOUCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3683:9
  else:
    let HINT_VITA_ENABLE_FRONT_TOUCH* = "SDL_VITA_ENABLE_FRONT_TOUCH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3683:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_ENABLE_FRONT_TOUCH" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_MODULE_PATH):
  when "SDL_VITA_MODULE_PATH" is static:
    const
      HINT_VITA_MODULE_PATH* = "SDL_VITA_MODULE_PATH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3694:9
  else:
    let HINT_VITA_MODULE_PATH* = "SDL_VITA_MODULE_PATH" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3694:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_MODULE_PATH" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_PVR_INIT):
  when "SDL_VITA_PVR_INIT" is static:
    const
      HINT_VITA_PVR_INIT* = "SDL_VITA_PVR_INIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3707:9
  else:
    let HINT_VITA_PVR_INIT* = "SDL_VITA_PVR_INIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3707:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_PVR_INIT" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_RESOLUTION):
  when "SDL_VITA_RESOLUTION" is static:
    const
      HINT_VITA_RESOLUTION* = "SDL_VITA_RESOLUTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3722:9
  else:
    let HINT_VITA_RESOLUTION* = "SDL_VITA_RESOLUTION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3722:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_RESOLUTION" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_PVR_OPENGL):
  when "SDL_VITA_PVR_OPENGL" is static:
    const
      HINT_VITA_PVR_OPENGL* = "SDL_VITA_PVR_OPENGL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3737:9
  else:
    let HINT_VITA_PVR_OPENGL* = "SDL_VITA_PVR_OPENGL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3737:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_PVR_OPENGL" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_TOUCH_MOUSE_DEVICE):
  when "SDL_VITA_TOUCH_MOUSE_DEVICE" is static:
    const
      HINT_VITA_TOUCH_MOUSE_DEVICE* = "SDL_VITA_TOUCH_MOUSE_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3753:9
  else:
    let HINT_VITA_TOUCH_MOUSE_DEVICE* = "SDL_VITA_TOUCH_MOUSE_DEVICE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3753:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_TOUCH_MOUSE_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_VULKAN_DISPLAY):
  when "SDL_VULKAN_DISPLAY" is static:
    const
      HINT_VULKAN_DISPLAY* = "SDL_VULKAN_DISPLAY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3764:9
  else:
    let HINT_VULKAN_DISPLAY* = "SDL_VULKAN_DISPLAY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3764:9
else:
  static :
    hint("Declaration of " & "HINT_VULKAN_DISPLAY" &
        " already exists, not redeclaring")
when not declared(HINT_VULKAN_LIBRARY):
  when "SDL_VULKAN_LIBRARY" is static:
    const
      HINT_VULKAN_LIBRARY* = "SDL_VULKAN_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3774:9
  else:
    let HINT_VULKAN_LIBRARY* = "SDL_VULKAN_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3774:9
else:
  static :
    hint("Declaration of " & "HINT_VULKAN_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_FACT_CHUNK):
  when "SDL_WAVE_FACT_CHUNK" is static:
    const
      HINT_WAVE_FACT_CHUNK* = "SDL_WAVE_FACT_CHUNK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3806:9
  else:
    let HINT_WAVE_FACT_CHUNK* = "SDL_WAVE_FACT_CHUNK" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3806:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_FACT_CHUNK" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_CHUNK_LIMIT):
  when "SDL_WAVE_CHUNK_LIMIT" is static:
    const
      HINT_WAVE_CHUNK_LIMIT* = "SDL_WAVE_CHUNK_LIMIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3818:9
  else:
    let HINT_WAVE_CHUNK_LIMIT* = "SDL_WAVE_CHUNK_LIMIT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3818:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_CHUNK_LIMIT" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_RIFF_CHUNK_SIZE):
  when "SDL_WAVE_RIFF_CHUNK_SIZE" is static:
    const
      HINT_WAVE_RIFF_CHUNK_SIZE* = "SDL_WAVE_RIFF_CHUNK_SIZE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3846:9
  else:
    let HINT_WAVE_RIFF_CHUNK_SIZE* = "SDL_WAVE_RIFF_CHUNK_SIZE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3846:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_RIFF_CHUNK_SIZE" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_TRUNCATION):
  when "SDL_WAVE_TRUNCATION" is static:
    const
      HINT_WAVE_TRUNCATION* = "SDL_WAVE_TRUNCATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3866:9
  else:
    let HINT_WAVE_TRUNCATION* = "SDL_WAVE_TRUNCATION" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3866:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_TRUNCATION" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_ACTIVATE_WHEN_RAISED):
  when "SDL_WINDOW_ACTIVATE_WHEN_RAISED" is static:
    const
      HINT_WINDOW_ACTIVATE_WHEN_RAISED* = "SDL_WINDOW_ACTIVATE_WHEN_RAISED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3883:9
  else:
    let HINT_WINDOW_ACTIVATE_WHEN_RAISED* = "SDL_WINDOW_ACTIVATE_WHEN_RAISED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3883:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_ACTIVATE_WHEN_RAISED" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_ACTIVATE_WHEN_SHOWN):
  when "SDL_WINDOW_ACTIVATE_WHEN_SHOWN" is static:
    const
      HINT_WINDOW_ACTIVATE_WHEN_SHOWN* = "SDL_WINDOW_ACTIVATE_WHEN_SHOWN" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3900:9
  else:
    let HINT_WINDOW_ACTIVATE_WHEN_SHOWN* = "SDL_WINDOW_ACTIVATE_WHEN_SHOWN" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3900:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_ACTIVATE_WHEN_SHOWN" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_ALLOW_TOPMOST):
  when "SDL_WINDOW_ALLOW_TOPMOST" is static:
    const
      HINT_WINDOW_ALLOW_TOPMOST* = "SDL_WINDOW_ALLOW_TOPMOST" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3918:9
  else:
    let HINT_WINDOW_ALLOW_TOPMOST* = "SDL_WINDOW_ALLOW_TOPMOST" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3918:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_ALLOW_TOPMOST" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN):
  when "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" is static:
    const
      HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN* = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3934:9
  else:
    let HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN* = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3934:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_CLOSE_ON_ALT_F4):
  when "SDL_WINDOWS_CLOSE_ON_ALT_F4" is static:
    const
      HINT_WINDOWS_CLOSE_ON_ALT_F4* = "SDL_WINDOWS_CLOSE_ON_ALT_F4" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3950:9
  else:
    let HINT_WINDOWS_CLOSE_ON_ALT_F4* = "SDL_WINDOWS_CLOSE_ON_ALT_F4" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3950:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_CLOSE_ON_ALT_F4" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_ENABLE_MENU_MNEMONICS):
  when "SDL_WINDOWS_ENABLE_MENU_MNEMONICS" is static:
    const
      HINT_WINDOWS_ENABLE_MENU_MNEMONICS* = "SDL_WINDOWS_ENABLE_MENU_MNEMONICS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3979:9
  else:
    let HINT_WINDOWS_ENABLE_MENU_MNEMONICS* = "SDL_WINDOWS_ENABLE_MENU_MNEMONICS" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3979:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_ENABLE_MENU_MNEMONICS" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_ENABLE_MESSAGELOOP):
  when "SDL_WINDOWS_ENABLE_MESSAGELOOP" is static:
    const
      HINT_WINDOWS_ENABLE_MESSAGELOOP* = "SDL_WINDOWS_ENABLE_MESSAGELOOP" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3994:9
  else:
    let HINT_WINDOWS_ENABLE_MESSAGELOOP* = "SDL_WINDOWS_ENABLE_MESSAGELOOP" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:3994:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_ENABLE_MESSAGELOOP" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_GAMEINPUT):
  when "SDL_WINDOWS_GAMEINPUT" is static:
    const
      HINT_WINDOWS_GAMEINPUT* = "SDL_WINDOWS_GAMEINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4010:9
  else:
    let HINT_WINDOWS_GAMEINPUT* = "SDL_WINDOWS_GAMEINPUT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4010:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_GAMEINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_RAW_KEYBOARD):
  when "SDL_WINDOWS_RAW_KEYBOARD" is static:
    const
      HINT_WINDOWS_RAW_KEYBOARD* = "SDL_WINDOWS_RAW_KEYBOARD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4024:9
  else:
    let HINT_WINDOWS_RAW_KEYBOARD* = "SDL_WINDOWS_RAW_KEYBOARD" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4024:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_RAW_KEYBOARD" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL):
  when "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL" is static:
    const
      HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL* = "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4045:9
  else:
    let HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL* = "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4045:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_INTRESOURCE_ICON):
  when "SDL_WINDOWS_INTRESOURCE_ICON" is static:
    const
      HINT_WINDOWS_INTRESOURCE_ICON* = "SDL_WINDOWS_INTRESOURCE_ICON" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4055:9
  else:
    let HINT_WINDOWS_INTRESOURCE_ICON* = "SDL_WINDOWS_INTRESOURCE_ICON" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4055:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_INTRESOURCE_ICON" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_INTRESOURCE_ICON_SMALL):
  when "SDL_WINDOWS_INTRESOURCE_ICON_SMALL" is static:
    const
      HINT_WINDOWS_INTRESOURCE_ICON_SMALL* = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4056:9
  else:
    let HINT_WINDOWS_INTRESOURCE_ICON_SMALL* = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4056:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_INTRESOURCE_ICON_SMALL" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_USE_D3D9EX):
  when "SDL_WINDOWS_USE_D3D9EX" is static:
    const
      HINT_WINDOWS_USE_D3D9EX* = "SDL_WINDOWS_USE_D3D9EX" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4082:9
  else:
    let HINT_WINDOWS_USE_D3D9EX* = "SDL_WINDOWS_USE_D3D9EX" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4082:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_USE_D3D9EX" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_ERASE_BACKGROUND_MODE):
  when "SDL_WINDOWS_ERASE_BACKGROUND_MODE" is static:
    const
      HINT_WINDOWS_ERASE_BACKGROUND_MODE* = "SDL_WINDOWS_ERASE_BACKGROUND_MODE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4099:9
  else:
    let HINT_WINDOWS_ERASE_BACKGROUND_MODE* = "SDL_WINDOWS_ERASE_BACKGROUND_MODE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4099:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_ERASE_BACKGROUND_MODE" &
        " already exists, not redeclaring")
when not declared(HINT_X11_FORCE_OVERRIDE_REDIRECT):
  when "SDL_X11_FORCE_OVERRIDE_REDIRECT" is static:
    const
      HINT_X11_FORCE_OVERRIDE_REDIRECT* = "SDL_X11_FORCE_OVERRIDE_REDIRECT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4120:9
  else:
    let HINT_X11_FORCE_OVERRIDE_REDIRECT* = "SDL_X11_FORCE_OVERRIDE_REDIRECT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4120:9
else:
  static :
    hint("Declaration of " & "HINT_X11_FORCE_OVERRIDE_REDIRECT" &
        " already exists, not redeclaring")
when not declared(HINT_X11_WINDOW_TYPE):
  when "SDL_X11_WINDOW_TYPE" is static:
    const
      HINT_X11_WINDOW_TYPE* = "SDL_X11_WINDOW_TYPE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4137:9
  else:
    let HINT_X11_WINDOW_TYPE* = "SDL_X11_WINDOW_TYPE" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4137:9
else:
  static :
    hint("Declaration of " & "HINT_X11_WINDOW_TYPE" &
        " already exists, not redeclaring")
when not declared(HINT_X11_XCB_LIBRARY):
  when "SDL_X11_XCB_LIBRARY" is static:
    const
      HINT_X11_XCB_LIBRARY* = "SDL_X11_XCB_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4148:9
  else:
    let HINT_X11_XCB_LIBRARY* = "SDL_X11_XCB_LIBRARY" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4148:9
else:
  static :
    hint("Declaration of " & "HINT_X11_XCB_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_XINPUT_ENABLED):
  when "SDL_XINPUT_ENABLED" is static:
    const
      HINT_XINPUT_ENABLED* = "SDL_XINPUT_ENABLED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4163:9
  else:
    let HINT_XINPUT_ENABLED* = "SDL_XINPUT_ENABLED" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4163:9
else:
  static :
    hint("Declaration of " & "HINT_XINPUT_ENABLED" &
        " already exists, not redeclaring")
when not declared(HINT_ASSERT):
  when "SDL_ASSERT" is static:
    const
      HINT_ASSERT* = "SDL_ASSERT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4187:9
  else:
    let HINT_ASSERT* = "SDL_ASSERT" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_hints.h:4187:9
else:
  static :
    hint("Declaration of " & "HINT_ASSERT" & " already exists, not redeclaring")
when not declared(INIT_AUDIO):
  when cast[cuint](16'i64) is static:
    const
      INIT_AUDIO* = cast[cuint](16'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:80:9
  else:
    let INIT_AUDIO* = cast[cuint](16'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:80:9
else:
  static :
    hint("Declaration of " & "INIT_AUDIO" & " already exists, not redeclaring")
when not declared(INIT_VIDEO):
  when cast[cuint](32'i64) is static:
    const
      INIT_VIDEO* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:81:9
  else:
    let INIT_VIDEO* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:81:9
else:
  static :
    hint("Declaration of " & "INIT_VIDEO" & " already exists, not redeclaring")
when not declared(INIT_JOYSTICK):
  when cast[cuint](512'i64) is static:
    const
      INIT_JOYSTICK* = cast[cuint](512'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:82:9
  else:
    let INIT_JOYSTICK* = cast[cuint](512'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:82:9
else:
  static :
    hint("Declaration of " & "INIT_JOYSTICK" &
        " already exists, not redeclaring")
when not declared(INIT_HAPTIC):
  when cast[cuint](4096'i64) is static:
    const
      INIT_HAPTIC* = cast[cuint](4096'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:83:9
  else:
    let INIT_HAPTIC* = cast[cuint](4096'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:83:9
else:
  static :
    hint("Declaration of " & "INIT_HAPTIC" & " already exists, not redeclaring")
when not declared(INIT_GAMEPAD):
  when cast[cuint](8192'i64) is static:
    const
      INIT_GAMEPAD* = cast[cuint](8192'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:84:9
  else:
    let INIT_GAMEPAD* = cast[cuint](8192'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:84:9
else:
  static :
    hint("Declaration of " & "INIT_GAMEPAD" & " already exists, not redeclaring")
when not declared(INIT_EVENTS):
  when cast[cuint](16384'i64) is static:
    const
      INIT_EVENTS* = cast[cuint](16384'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:85:9
  else:
    let INIT_EVENTS* = cast[cuint](16384'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:85:9
else:
  static :
    hint("Declaration of " & "INIT_EVENTS" & " already exists, not redeclaring")
when not declared(INIT_SENSOR):
  when cast[cuint](32768'i64) is static:
    const
      INIT_SENSOR* = cast[cuint](32768'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:86:9
  else:
    let INIT_SENSOR* = cast[cuint](32768'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:86:9
else:
  static :
    hint("Declaration of " & "INIT_SENSOR" & " already exists, not redeclaring")
when not declared(INIT_CAMERA):
  when cast[cuint](65536'i64) is static:
    const
      INIT_CAMERA* = cast[cuint](65536'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:87:9
  else:
    let INIT_CAMERA* = cast[cuint](65536'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:87:9
else:
  static :
    hint("Declaration of " & "INIT_CAMERA" & " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_NAME_STRING):
  when "SDL.app.metadata.name" is static:
    const
      PROP_APP_METADATA_NAME_STRING* = "SDL.app.metadata.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:400:9
  else:
    let PROP_APP_METADATA_NAME_STRING* = "SDL.app.metadata.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:400:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_VERSION_STRING):
  when "SDL.app.metadata.version" is static:
    const
      PROP_APP_METADATA_VERSION_STRING* = "SDL.app.metadata.version" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:401:9
  else:
    let PROP_APP_METADATA_VERSION_STRING* = "SDL.app.metadata.version" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:401:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_VERSION_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_IDENTIFIER_STRING):
  when "SDL.app.metadata.identifier" is static:
    const
      PROP_APP_METADATA_IDENTIFIER_STRING* = "SDL.app.metadata.identifier" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:402:9
  else:
    let PROP_APP_METADATA_IDENTIFIER_STRING* = "SDL.app.metadata.identifier" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:402:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_IDENTIFIER_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_CREATOR_STRING):
  when "SDL.app.metadata.creator" is static:
    const
      PROP_APP_METADATA_CREATOR_STRING* = "SDL.app.metadata.creator" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:403:9
  else:
    let PROP_APP_METADATA_CREATOR_STRING* = "SDL.app.metadata.creator" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:403:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_CREATOR_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_COPYRIGHT_STRING):
  when "SDL.app.metadata.copyright" is static:
    const
      PROP_APP_METADATA_COPYRIGHT_STRING* = "SDL.app.metadata.copyright" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:404:9
  else:
    let PROP_APP_METADATA_COPYRIGHT_STRING* = "SDL.app.metadata.copyright" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:404:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_COPYRIGHT_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_URL_STRING):
  when "SDL.app.metadata.url" is static:
    const
      PROP_APP_METADATA_URL_STRING* = "SDL.app.metadata.url" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:405:9
  else:
    let PROP_APP_METADATA_URL_STRING* = "SDL.app.metadata.url" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:405:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_URL_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_TYPE_STRING):
  when "SDL.app.metadata.type" is static:
    const
      PROP_APP_METADATA_TYPE_STRING* = "SDL.app.metadata.type" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:406:9
  else:
    let PROP_APP_METADATA_TYPE_STRING* = "SDL.app.metadata.type" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_init.h:406:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_TYPE_STRING" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_ERROR):
  when cast[cuint](16'i64) is static:
    const
      MESSAGEBOX_ERROR* = cast[cuint](16'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:50:9
  else:
    let MESSAGEBOX_ERROR* = cast[cuint](16'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:50:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_ERROR" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_WARNING):
  when cast[cuint](32'i64) is static:
    const
      MESSAGEBOX_WARNING* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:51:9
  else:
    let MESSAGEBOX_WARNING* = cast[cuint](32'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:51:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_WARNING" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_INFORMATION):
  when cast[cuint](64'i64) is static:
    const
      MESSAGEBOX_INFORMATION* = cast[cuint](64'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:52:9
  else:
    let MESSAGEBOX_INFORMATION* = cast[cuint](64'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:52:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_INFORMATION" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT):
  when cast[cuint](128'i64) is static:
    const
      MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT* = cast[cuint](128'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:53:9
  else:
    let MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT* = cast[cuint](128'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:53:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT):
  when cast[cuint](256'i64) is static:
    const
      MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT* = cast[cuint](256'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:54:9
  else:
    let MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT* = cast[cuint](256'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:54:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT):
  when cast[cuint](1'i64) is static:
    const
      MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:63:9
  else:
    let MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT* = cast[cuint](1'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:63:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT):
  when cast[cuint](2'i64) is static:
    const
      MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:64:9
  else:
    let MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT* = cast[cuint](2'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_messagebox.h:64:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_ARGS_POINTER):
  when "SDL.process.create.args" is static:
    const
      PROP_PROCESS_CREATE_ARGS_POINTER* = "SDL.process.create.args" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:213:9
  else:
    let PROP_PROCESS_CREATE_ARGS_POINTER* = "SDL.process.create.args" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:213:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_ARGS_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_ENVIRONMENT_POINTER):
  when "SDL.process.create.environment" is static:
    const
      PROP_PROCESS_CREATE_ENVIRONMENT_POINTER* = "SDL.process.create.environment" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:214:9
  else:
    let PROP_PROCESS_CREATE_ENVIRONMENT_POINTER* = "SDL.process.create.environment" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:214:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_ENVIRONMENT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDIN_NUMBER):
  when "SDL.process.create.stdin_option" is static:
    const
      PROP_PROCESS_CREATE_STDIN_NUMBER* = "SDL.process.create.stdin_option" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:215:9
  else:
    let PROP_PROCESS_CREATE_STDIN_NUMBER* = "SDL.process.create.stdin_option" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:215:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDIN_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDIN_POINTER):
  when "SDL.process.create.stdin_source" is static:
    const
      PROP_PROCESS_CREATE_STDIN_POINTER* = "SDL.process.create.stdin_source" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:216:9
  else:
    let PROP_PROCESS_CREATE_STDIN_POINTER* = "SDL.process.create.stdin_source" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:216:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDOUT_NUMBER):
  when "SDL.process.create.stdout_option" is static:
    const
      PROP_PROCESS_CREATE_STDOUT_NUMBER* = "SDL.process.create.stdout_option" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:217:9
  else:
    let PROP_PROCESS_CREATE_STDOUT_NUMBER* = "SDL.process.create.stdout_option" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:217:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDOUT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDOUT_POINTER):
  when "SDL.process.create.stdout_source" is static:
    const
      PROP_PROCESS_CREATE_STDOUT_POINTER* = "SDL.process.create.stdout_source" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:218:9
  else:
    let PROP_PROCESS_CREATE_STDOUT_POINTER* = "SDL.process.create.stdout_source" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:218:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDOUT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDERR_NUMBER):
  when "SDL.process.create.stderr_option" is static:
    const
      PROP_PROCESS_CREATE_STDERR_NUMBER* = "SDL.process.create.stderr_option" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:219:9
  else:
    let PROP_PROCESS_CREATE_STDERR_NUMBER* = "SDL.process.create.stderr_option" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:219:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDERR_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDERR_POINTER):
  when "SDL.process.create.stderr_source" is static:
    const
      PROP_PROCESS_CREATE_STDERR_POINTER* = "SDL.process.create.stderr_source" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:220:9
  else:
    let PROP_PROCESS_CREATE_STDERR_POINTER* = "SDL.process.create.stderr_source" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:220:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDERR_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN):
  when "SDL.process.create.stderr_to_stdout" is static:
    const
      PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN* = "SDL.process.create.stderr_to_stdout" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:221:9
  else:
    let PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN* = "SDL.process.create.stderr_to_stdout" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:221:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN):
  when "SDL.process.create.background" is static:
    const
      PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN* = "SDL.process.create.background" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:222:9
  else:
    let PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN* = "SDL.process.create.background" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:222:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_PID_NUMBER):
  when "SDL.process.pid" is static:
    const
      PROP_PROCESS_PID_NUMBER* = "SDL.process.pid" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:255:9
  else:
    let PROP_PROCESS_PID_NUMBER* = "SDL.process.pid" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:255:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_PID_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_STDIN_POINTER):
  when "SDL.process.stdin" is static:
    const
      PROP_PROCESS_STDIN_POINTER* = "SDL.process.stdin" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:256:9
  else:
    let PROP_PROCESS_STDIN_POINTER* = "SDL.process.stdin" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:256:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_STDIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_STDOUT_POINTER):
  when "SDL.process.stdout" is static:
    const
      PROP_PROCESS_STDOUT_POINTER* = "SDL.process.stdout" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:257:9
  else:
    let PROP_PROCESS_STDOUT_POINTER* = "SDL.process.stdout" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:257:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_STDOUT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_STDERR_POINTER):
  when "SDL.process.stderr" is static:
    const
      PROP_PROCESS_STDERR_POINTER* = "SDL.process.stderr" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:258:9
  else:
    let PROP_PROCESS_STDERR_POINTER* = "SDL.process.stderr" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:258:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_STDERR_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_BACKGROUND_BOOLEAN):
  when "SDL.process.background" is static:
    const
      PROP_PROCESS_BACKGROUND_BOOLEAN* = "SDL.process.background" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:259:9
  else:
    let PROP_PROCESS_BACKGROUND_BOOLEAN* = "SDL.process.background" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_process.h:259:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_BACKGROUND_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(SOFTWARE_RENDERER):
  when "software" is static:
    const
      SOFTWARE_RENDERER* = "software" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:74:9
  else:
    let SOFTWARE_RENDERER* = "software" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:74:9
else:
  static :
    hint("Declaration of " & "SOFTWARE_RENDERER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_NAME_STRING):
  when "SDL.renderer.create.name" is static:
    const
      PROP_RENDERER_CREATE_NAME_STRING* = "SDL.renderer.create.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:298:9
  else:
    let PROP_RENDERER_CREATE_NAME_STRING* = "SDL.renderer.create.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:298:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_WINDOW_POINTER):
  when "SDL.renderer.create.window" is static:
    const
      PROP_RENDERER_CREATE_WINDOW_POINTER* = "SDL.renderer.create.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:299:9
  else:
    let PROP_RENDERER_CREATE_WINDOW_POINTER* = "SDL.renderer.create.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:299:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_SURFACE_POINTER):
  when "SDL.renderer.create.surface" is static:
    const
      PROP_RENDERER_CREATE_SURFACE_POINTER* = "SDL.renderer.create.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:300:9
  else:
    let PROP_RENDERER_CREATE_SURFACE_POINTER* = "SDL.renderer.create.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:300:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER):
  when "SDL.renderer.create.output_colorspace" is static:
    const
      PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.create.output_colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:301:9
  else:
    let PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.create.output_colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:301:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER):
  when "SDL.renderer.create.present_vsync" is static:
    const
      PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER* = "SDL.renderer.create.present_vsync" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:302:9
  else:
    let PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER* = "SDL.renderer.create.present_vsync" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:302:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER):
  when "SDL.renderer.create.vulkan.instance" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER* = "SDL.renderer.create.vulkan.instance" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:303:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER* = "SDL.renderer.create.vulkan.instance" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:303:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER):
  when "SDL.renderer.create.vulkan.surface" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER* = "SDL.renderer.create.vulkan.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:304:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER* = "SDL.renderer.create.vulkan.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:304:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER):
  when "SDL.renderer.create.vulkan.physical_device" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.create.vulkan.physical_device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:305:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.create.vulkan.physical_device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:305:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER):
  when "SDL.renderer.create.vulkan.device" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER* = "SDL.renderer.create.vulkan.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:306:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER* = "SDL.renderer.create.vulkan.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:306:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.create.vulkan.graphics_queue_family_index" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.graphics_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:307:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.graphics_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:307:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.create.vulkan.present_queue_family_index" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.present_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:308:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.present_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:308:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_NAME_STRING):
  when "SDL.renderer.name" is static:
    const
      PROP_RENDERER_NAME_STRING* = "SDL.renderer.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:454:9
  else:
    let PROP_RENDERER_NAME_STRING* = "SDL.renderer.name" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:454:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_WINDOW_POINTER):
  when "SDL.renderer.window" is static:
    const
      PROP_RENDERER_WINDOW_POINTER* = "SDL.renderer.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:455:9
  else:
    let PROP_RENDERER_WINDOW_POINTER* = "SDL.renderer.window" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:455:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_SURFACE_POINTER):
  when "SDL.renderer.surface" is static:
    const
      PROP_RENDERER_SURFACE_POINTER* = "SDL.renderer.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:456:9
  else:
    let PROP_RENDERER_SURFACE_POINTER* = "SDL.renderer.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:456:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VSYNC_NUMBER):
  when "SDL.renderer.vsync" is static:
    const
      PROP_RENDERER_VSYNC_NUMBER* = "SDL.renderer.vsync" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:457:9
  else:
    let PROP_RENDERER_VSYNC_NUMBER* = "SDL.renderer.vsync" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:457:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VSYNC_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER):
  when "SDL.renderer.max_texture_size" is static:
    const
      PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER* = "SDL.renderer.max_texture_size" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:458:9
  else:
    let PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER* = "SDL.renderer.max_texture_size" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:458:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_TEXTURE_FORMATS_POINTER):
  when "SDL.renderer.texture_formats" is static:
    const
      PROP_RENDERER_TEXTURE_FORMATS_POINTER* = "SDL.renderer.texture_formats" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:459:9
  else:
    let PROP_RENDERER_TEXTURE_FORMATS_POINTER* = "SDL.renderer.texture_formats" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:459:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_TEXTURE_FORMATS_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER):
  when "SDL.renderer.output_colorspace" is static:
    const
      PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.output_colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:460:9
  else:
    let PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.output_colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:460:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_HDR_ENABLED_BOOLEAN):
  when "SDL.renderer.HDR_enabled" is static:
    const
      PROP_RENDERER_HDR_ENABLED_BOOLEAN* = "SDL.renderer.HDR_enabled" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:461:9
  else:
    let PROP_RENDERER_HDR_ENABLED_BOOLEAN* = "SDL.renderer.HDR_enabled" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:461:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_HDR_ENABLED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_SDR_WHITE_POINT_FLOAT):
  when "SDL.renderer.SDR_white_point" is static:
    const
      PROP_RENDERER_SDR_WHITE_POINT_FLOAT* = "SDL.renderer.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:462:9
  else:
    let PROP_RENDERER_SDR_WHITE_POINT_FLOAT* = "SDL.renderer.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:462:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_HDR_HEADROOM_FLOAT):
  when "SDL.renderer.HDR_headroom" is static:
    const
      PROP_RENDERER_HDR_HEADROOM_FLOAT* = "SDL.renderer.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:463:9
  else:
    let PROP_RENDERER_HDR_HEADROOM_FLOAT* = "SDL.renderer.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:463:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D9_DEVICE_POINTER):
  when "SDL.renderer.d3d9.device" is static:
    const
      PROP_RENDERER_D3D9_DEVICE_POINTER* = "SDL.renderer.d3d9.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:464:9
  else:
    let PROP_RENDERER_D3D9_DEVICE_POINTER* = "SDL.renderer.d3d9.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:464:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D9_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D11_DEVICE_POINTER):
  when "SDL.renderer.d3d11.device" is static:
    const
      PROP_RENDERER_D3D11_DEVICE_POINTER* = "SDL.renderer.d3d11.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:465:9
  else:
    let PROP_RENDERER_D3D11_DEVICE_POINTER* = "SDL.renderer.d3d11.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:465:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D11_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D11_SWAPCHAIN_POINTER):
  when "SDL.renderer.d3d11.swap_chain" is static:
    const
      PROP_RENDERER_D3D11_SWAPCHAIN_POINTER* = "SDL.renderer.d3d11.swap_chain" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:466:9
  else:
    let PROP_RENDERER_D3D11_SWAPCHAIN_POINTER* = "SDL.renderer.d3d11.swap_chain" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:466:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D11_SWAPCHAIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D12_DEVICE_POINTER):
  when "SDL.renderer.d3d12.device" is static:
    const
      PROP_RENDERER_D3D12_DEVICE_POINTER* = "SDL.renderer.d3d12.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:467:9
  else:
    let PROP_RENDERER_D3D12_DEVICE_POINTER* = "SDL.renderer.d3d12.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:467:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D12_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D12_SWAPCHAIN_POINTER):
  when "SDL.renderer.d3d12.swap_chain" is static:
    const
      PROP_RENDERER_D3D12_SWAPCHAIN_POINTER* = "SDL.renderer.d3d12.swap_chain" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:468:9
  else:
    let PROP_RENDERER_D3D12_SWAPCHAIN_POINTER* = "SDL.renderer.d3d12.swap_chain" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:468:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D12_SWAPCHAIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER):
  when "SDL.renderer.d3d12.command_queue" is static:
    const
      PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER* = "SDL.renderer.d3d12.command_queue" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:469:9
  else:
    let PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER* = "SDL.renderer.d3d12.command_queue" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:469:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_INSTANCE_POINTER):
  when "SDL.renderer.vulkan.instance" is static:
    const
      PROP_RENDERER_VULKAN_INSTANCE_POINTER* = "SDL.renderer.vulkan.instance" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:470:9
  else:
    let PROP_RENDERER_VULKAN_INSTANCE_POINTER* = "SDL.renderer.vulkan.instance" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:470:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_INSTANCE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_SURFACE_NUMBER):
  when "SDL.renderer.vulkan.surface" is static:
    const
      PROP_RENDERER_VULKAN_SURFACE_NUMBER* = "SDL.renderer.vulkan.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:471:9
  else:
    let PROP_RENDERER_VULKAN_SURFACE_NUMBER* = "SDL.renderer.vulkan.surface" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:471:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_SURFACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER):
  when "SDL.renderer.vulkan.physical_device" is static:
    const
      PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.vulkan.physical_device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:472:9
  else:
    let PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.vulkan.physical_device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:472:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_DEVICE_POINTER):
  when "SDL.renderer.vulkan.device" is static:
    const
      PROP_RENDERER_VULKAN_DEVICE_POINTER* = "SDL.renderer.vulkan.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:473:9
  else:
    let PROP_RENDERER_VULKAN_DEVICE_POINTER* = "SDL.renderer.vulkan.device" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:473:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.vulkan.graphics_queue_family_index" is static:
    const
      PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.graphics_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:474:9
  else:
    let PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.graphics_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:474:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.vulkan.present_queue_family_index" is static:
    const
      PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.present_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:475:9
  else:
    let PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.present_queue_family_index" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:475:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER):
  when "SDL.renderer.vulkan.swapchain_image_count" is static:
    const
      PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER* = "SDL.renderer.vulkan.swapchain_image_count" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:476:9
  else:
    let PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER* = "SDL.renderer.vulkan.swapchain_image_count" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:476:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_COLORSPACE_NUMBER):
  when "SDL.texture.create.colorspace" is static:
    const
      PROP_TEXTURE_CREATE_COLORSPACE_NUMBER* = "SDL.texture.create.colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:687:9
  else:
    let PROP_TEXTURE_CREATE_COLORSPACE_NUMBER* = "SDL.texture.create.colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:687:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_FORMAT_NUMBER):
  when "SDL.texture.create.format" is static:
    const
      PROP_TEXTURE_CREATE_FORMAT_NUMBER* = "SDL.texture.create.format" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:688:9
  else:
    let PROP_TEXTURE_CREATE_FORMAT_NUMBER* = "SDL.texture.create.format" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:688:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_FORMAT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_ACCESS_NUMBER):
  when "SDL.texture.create.access" is static:
    const
      PROP_TEXTURE_CREATE_ACCESS_NUMBER* = "SDL.texture.create.access" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:689:9
  else:
    let PROP_TEXTURE_CREATE_ACCESS_NUMBER* = "SDL.texture.create.access" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:689:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_ACCESS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_WIDTH_NUMBER):
  when "SDL.texture.create.width" is static:
    const
      PROP_TEXTURE_CREATE_WIDTH_NUMBER* = "SDL.texture.create.width" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:690:9
  else:
    let PROP_TEXTURE_CREATE_WIDTH_NUMBER* = "SDL.texture.create.width" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:690:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_WIDTH_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_HEIGHT_NUMBER):
  when "SDL.texture.create.height" is static:
    const
      PROP_TEXTURE_CREATE_HEIGHT_NUMBER* = "SDL.texture.create.height" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:691:9
  else:
    let PROP_TEXTURE_CREATE_HEIGHT_NUMBER* = "SDL.texture.create.height" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:691:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_HEIGHT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT):
  when "SDL.texture.create.SDR_white_point" is static:
    const
      PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.create.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:692:9
  else:
    let PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.create.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:692:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT):
  when "SDL.texture.create.HDR_headroom" is static:
    const
      PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT* = "SDL.texture.create.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:693:9
  else:
    let PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT* = "SDL.texture.create.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:693:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER):
  when "SDL.texture.create.d3d11.texture" is static:
    const
      PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER* = "SDL.texture.create.d3d11.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:694:9
  else:
    let PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER* = "SDL.texture.create.d3d11.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:694:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER):
  when "SDL.texture.create.d3d11.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.create.d3d11.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:695:9
  else:
    let PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.create.d3d11.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:695:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER):
  when "SDL.texture.create.d3d11.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.create.d3d11.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:696:9
  else:
    let PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.create.d3d11.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:696:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER):
  when "SDL.texture.create.d3d12.texture" is static:
    const
      PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER* = "SDL.texture.create.d3d12.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:697:9
  else:
    let PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER* = "SDL.texture.create.d3d12.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:697:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER):
  when "SDL.texture.create.d3d12.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.create.d3d12.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:698:9
  else:
    let PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.create.d3d12.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:698:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER):
  when "SDL.texture.create.d3d12.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.create.d3d12.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:699:9
  else:
    let PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.create.d3d12.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:699:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER):
  when "SDL.texture.create.metal.pixelbuffer" is static:
    const
      PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER* = "SDL.texture.create.metal.pixelbuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:700:9
  else:
    let PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER* = "SDL.texture.create.metal.pixelbuffer" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:700:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER):
  when "SDL.texture.create.opengl.texture" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.create.opengl.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:701:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.create.opengl.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:701:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER):
  when "SDL.texture.create.opengl.texture_uv" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengl.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:702:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengl.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:702:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER):
  when "SDL.texture.create.opengl.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.create.opengl.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:703:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.create.opengl.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:703:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER):
  when "SDL.texture.create.opengl.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.create.opengl.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:704:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.create.opengl.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:704:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER):
  when "SDL.texture.create.opengles2.texture" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.create.opengles2.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:705:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.create.opengles2.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:705:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER):
  when "SDL.texture.create.opengles2.texture_uv" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengles2.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:706:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengles2.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:706:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER):
  when "SDL.texture.create.opengles2.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.create.opengles2.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:707:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.create.opengles2.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:707:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER):
  when "SDL.texture.create.opengles2.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.create.opengles2.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:708:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.create.opengles2.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:708:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER):
  when "SDL.texture.create.vulkan.texture" is static:
    const
      PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.create.vulkan.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:709:9
  else:
    let PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.create.vulkan.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:709:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_COLORSPACE_NUMBER):
  when "SDL.texture.colorspace" is static:
    const
      PROP_TEXTURE_COLORSPACE_NUMBER* = "SDL.texture.colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:799:9
  else:
    let PROP_TEXTURE_COLORSPACE_NUMBER* = "SDL.texture.colorspace" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:799:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_FORMAT_NUMBER):
  when "SDL.texture.format" is static:
    const
      PROP_TEXTURE_FORMAT_NUMBER* = "SDL.texture.format" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:800:9
  else:
    let PROP_TEXTURE_FORMAT_NUMBER* = "SDL.texture.format" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:800:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_FORMAT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_ACCESS_NUMBER):
  when "SDL.texture.access" is static:
    const
      PROP_TEXTURE_ACCESS_NUMBER* = "SDL.texture.access" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:801:9
  else:
    let PROP_TEXTURE_ACCESS_NUMBER* = "SDL.texture.access" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:801:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_ACCESS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_WIDTH_NUMBER):
  when "SDL.texture.width" is static:
    const
      PROP_TEXTURE_WIDTH_NUMBER* = "SDL.texture.width" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:802:9
  else:
    let PROP_TEXTURE_WIDTH_NUMBER* = "SDL.texture.width" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:802:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_WIDTH_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_HEIGHT_NUMBER):
  when "SDL.texture.height" is static:
    const
      PROP_TEXTURE_HEIGHT_NUMBER* = "SDL.texture.height" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:803:9
  else:
    let PROP_TEXTURE_HEIGHT_NUMBER* = "SDL.texture.height" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:803:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_HEIGHT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_SDR_WHITE_POINT_FLOAT):
  when "SDL.texture.SDR_white_point" is static:
    const
      PROP_TEXTURE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:804:9
  else:
    let PROP_TEXTURE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.SDR_white_point" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:804:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_HDR_HEADROOM_FLOAT):
  when "SDL.texture.HDR_headroom" is static:
    const
      PROP_TEXTURE_HDR_HEADROOM_FLOAT* = "SDL.texture.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:805:9
  else:
    let PROP_TEXTURE_HDR_HEADROOM_FLOAT* = "SDL.texture.HDR_headroom" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:805:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D11_TEXTURE_POINTER):
  when "SDL.texture.d3d11.texture" is static:
    const
      PROP_TEXTURE_D3D11_TEXTURE_POINTER* = "SDL.texture.d3d11.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:806:9
  else:
    let PROP_TEXTURE_D3D11_TEXTURE_POINTER* = "SDL.texture.d3d11.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:806:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D11_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D11_TEXTURE_U_POINTER):
  when "SDL.texture.d3d11.texture_u" is static:
    const
      PROP_TEXTURE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.d3d11.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:807:9
  else:
    let PROP_TEXTURE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.d3d11.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:807:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D11_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D11_TEXTURE_V_POINTER):
  when "SDL.texture.d3d11.texture_v" is static:
    const
      PROP_TEXTURE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.d3d11.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:808:9
  else:
    let PROP_TEXTURE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.d3d11.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:808:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D11_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D12_TEXTURE_POINTER):
  when "SDL.texture.d3d12.texture" is static:
    const
      PROP_TEXTURE_D3D12_TEXTURE_POINTER* = "SDL.texture.d3d12.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:809:9
  else:
    let PROP_TEXTURE_D3D12_TEXTURE_POINTER* = "SDL.texture.d3d12.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:809:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D12_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D12_TEXTURE_U_POINTER):
  when "SDL.texture.d3d12.texture_u" is static:
    const
      PROP_TEXTURE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.d3d12.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:810:9
  else:
    let PROP_TEXTURE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.d3d12.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:810:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D12_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D12_TEXTURE_V_POINTER):
  when "SDL.texture.d3d12.texture_v" is static:
    const
      PROP_TEXTURE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.d3d12.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:811:9
  else:
    let PROP_TEXTURE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.d3d12.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:811:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D12_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_NUMBER):
  when "SDL.texture.opengl.texture" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.opengl.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:812:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.opengl.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:812:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER):
  when "SDL.texture.opengl.texture_uv" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.opengl.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:813:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.opengl.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:813:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER):
  when "SDL.texture.opengl.texture_u" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.opengl.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:814:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.opengl.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:814:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER):
  when "SDL.texture.opengl.texture_v" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.opengl.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:815:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.opengl.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:815:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER):
  when "SDL.texture.opengl.target" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengl.target" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:816:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengl.target" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:816:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEX_W_FLOAT):
  when "SDL.texture.opengl.tex_w" is static:
    const
      PROP_TEXTURE_OPENGL_TEX_W_FLOAT* = "SDL.texture.opengl.tex_w" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:817:9
  else:
    let PROP_TEXTURE_OPENGL_TEX_W_FLOAT* = "SDL.texture.opengl.tex_w" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:817:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEX_W_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEX_H_FLOAT):
  when "SDL.texture.opengl.tex_h" is static:
    const
      PROP_TEXTURE_OPENGL_TEX_H_FLOAT* = "SDL.texture.opengl.tex_h" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:818:9
  else:
    let PROP_TEXTURE_OPENGL_TEX_H_FLOAT* = "SDL.texture.opengl.tex_h" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:818:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEX_H_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER):
  when "SDL.texture.opengles2.texture" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.opengles2.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:819:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.opengles2.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:819:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER):
  when "SDL.texture.opengles2.texture_uv" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.opengles2.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:820:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.opengles2.texture_uv" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:820:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER):
  when "SDL.texture.opengles2.texture_u" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.opengles2.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:821:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.opengles2.texture_u" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:821:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER):
  when "SDL.texture.opengles2.texture_v" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.opengles2.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:822:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.opengles2.texture_v" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:822:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER):
  when "SDL.texture.opengles2.target" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengles2.target" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:823:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengles2.target" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:823:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_VULKAN_TEXTURE_NUMBER):
  when "SDL.texture.vulkan.texture" is static:
    const
      PROP_TEXTURE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.vulkan.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:824:9
  else:
    let PROP_TEXTURE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.vulkan.texture" ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:824:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_VULKAN_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(RENDERER_VSYNC_DISABLED):
  when 0 is static:
    const
      RENDERER_VSYNC_DISABLED* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:2466:9
  else:
    let RENDERER_VSYNC_DISABLED* = 0 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:2466:9
else:
  static :
    hint("Declaration of " & "RENDERER_VSYNC_DISABLED" &
        " already exists, not redeclaring")
when not declared(RENDERER_VSYNC_ADAPTIVE):
  when -1 is static:
    const
      RENDERER_VSYNC_ADAPTIVE* = -1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:2467:9
  else:
    let RENDERER_VSYNC_ADAPTIVE* = -1 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:2467:9
else:
  static :
    hint("Declaration of " & "RENDERER_VSYNC_ADAPTIVE" &
        " already exists, not redeclaring")
when not declared(DEBUG_TEXT_FONT_CHARACTER_SIZE):
  when 8 is static:
    const
      DEBUG_TEXT_FONT_CHARACTER_SIZE* = 8 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:2495:9
  else:
    let DEBUG_TEXT_FONT_CHARACTER_SIZE* = 8 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_render.h:2495:9
else:
  static :
    hint("Declaration of " & "DEBUG_TEXT_FONT_CHARACTER_SIZE" &
        " already exists, not redeclaring")
when not declared(MS_PER_SECOND):
  when 1000 is static:
    const
      MS_PER_SECOND* = 1000  ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:41:9
  else:
    let MS_PER_SECOND* = 1000 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:41:9
else:
  static :
    hint("Declaration of " & "MS_PER_SECOND" &
        " already exists, not redeclaring")
when not declared(US_PER_SECOND):
  when 1000000 is static:
    const
      US_PER_SECOND* = 1000000 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:42:9
  else:
    let US_PER_SECOND* = 1000000 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:42:9
else:
  static :
    hint("Declaration of " & "US_PER_SECOND" &
        " already exists, not redeclaring")
when not declared(NS_PER_SECOND):
  when cast[clonglong](1000000000'i64) is static:
    const
      NS_PER_SECOND* = cast[clonglong](1000000000'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:43:9
  else:
    let NS_PER_SECOND* = cast[clonglong](1000000000'i64) ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:43:9
else:
  static :
    hint("Declaration of " & "NS_PER_SECOND" &
        " already exists, not redeclaring")
when not declared(NS_PER_MS):
  when 1000000 is static:
    const
      NS_PER_MS* = 1000000   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:44:9
  else:
    let NS_PER_MS* = 1000000 ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:44:9
else:
  static :
    hint("Declaration of " & "NS_PER_MS" & " already exists, not redeclaring")
when not declared(NS_PER_US):
  when 1000 is static:
    const
      NS_PER_US* = 1000      ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:45:9
  else:
    let NS_PER_US* = 1000    ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_timer.h:45:9
else:
  static :
    hint("Declaration of " & "NS_PER_US" & " already exists, not redeclaring")
when not declared(MAJOR_VERSION):
  when 3 is static:
    const
      MAJOR_VERSION* = 3     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_version.h:47:9
  else:
    let MAJOR_VERSION* = 3   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_version.h:47:9
else:
  static :
    hint("Declaration of " & "MAJOR_VERSION" &
        " already exists, not redeclaring")
when not declared(MINOR_VERSION):
  when 1 is static:
    const
      MINOR_VERSION* = 1     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_version.h:56:9
  else:
    let MINOR_VERSION* = 1   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_version.h:56:9
else:
  static :
    hint("Declaration of " & "MINOR_VERSION" &
        " already exists, not redeclaring")
when not declared(MICRO_VERSION):
  when 7 is static:
    const
      MICRO_VERSION* = 7     ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_version.h:65:9
  else:
    let MICRO_VERSION* = 7   ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_version.h:65:9
else:
  static :
    hint("Declaration of " & "MICRO_VERSION" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOFASTFORWARD):
  when SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD is typedesc:
    type
      SDLK_AUDIOFASTFORWARD* = SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1021:9
  else:
    when SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD is static:
      const
        SDLK_AUDIOFASTFORWARD* = SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1021:9
    else:
      let SDLK_AUDIOFASTFORWARD* = SDLK_AUDIOFASTFORWARD_renamed_SDLK_MEDIA_FAST_FORWARD ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1021:9
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOFASTFORWARD" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOMUTE):
  when SDLK_AUDIOMUTE_renamed_SDLK_MUTE is typedesc:
    type
      SDLK_AUDIOMUTE* = SDLK_AUDIOMUTE_renamed_SDLK_MUTE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1022:9
  else:
    when SDLK_AUDIOMUTE_renamed_SDLK_MUTE is static:
      const
        SDLK_AUDIOMUTE* = SDLK_AUDIOMUTE_renamed_SDLK_MUTE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1022:9
    else:
      let SDLK_AUDIOMUTE* = SDLK_AUDIOMUTE_renamed_SDLK_MUTE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1022:9
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOMUTE" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIONEXT):
  when SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK is typedesc:
    type
      SDLK_AUDIONEXT* = SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1023:9
  else:
    when SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK is static:
      const
        SDLK_AUDIONEXT* = SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1023:9
    else:
      let SDLK_AUDIONEXT* = SDLK_AUDIONEXT_renamed_SDLK_MEDIA_NEXT_TRACK ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1023:9
else:
  static :
    hint("Declaration of " & "SDLK_AUDIONEXT" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOPLAY):
  when SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY is typedesc:
    type
      SDLK_AUDIOPLAY* = SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1024:9
  else:
    when SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY is static:
      const
        SDLK_AUDIOPLAY* = SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1024:9
    else:
      let SDLK_AUDIOPLAY* = SDLK_AUDIOPLAY_renamed_SDLK_MEDIA_PLAY ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1024:9
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOPLAY" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOPREV):
  when SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK is typedesc:
    type
      SDLK_AUDIOPREV* = SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1025:9
  else:
    when SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK is static:
      const
        SDLK_AUDIOPREV* = SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1025:9
    else:
      let SDLK_AUDIOPREV* = SDLK_AUDIOPREV_renamed_SDLK_MEDIA_PREVIOUS_TRACK ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1025:9
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOPREV" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOREWIND):
  when SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND is typedesc:
    type
      SDLK_AUDIOREWIND* = SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1026:9
  else:
    when SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND is static:
      const
        SDLK_AUDIOREWIND* = SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1026:9
    else:
      let SDLK_AUDIOREWIND* = SDLK_AUDIOREWIND_renamed_SDLK_MEDIA_REWIND ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1026:9
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOREWIND" &
        " already exists, not redeclaring")
when not declared(SDLK_AUDIOSTOP):
  when SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP is typedesc:
    type
      SDLK_AUDIOSTOP* = SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1027:9
  else:
    when SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP is static:
      const
        SDLK_AUDIOSTOP* = SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1027:9
    else:
      let SDLK_AUDIOSTOP* = SDLK_AUDIOSTOP_renamed_SDLK_MEDIA_STOP ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1027:9
else:
  static :
    hint("Declaration of " & "SDLK_AUDIOSTOP" &
        " already exists, not redeclaring")
when not declared(SDLK_BACKQUOTE):
  when SDLK_BACKQUOTE_renamed_SDLK_GRAVE is typedesc:
    type
      SDLK_BACKQUOTE* = SDLK_BACKQUOTE_renamed_SDLK_GRAVE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1028:9
  else:
    when SDLK_BACKQUOTE_renamed_SDLK_GRAVE is static:
      const
        SDLK_BACKQUOTE* = SDLK_BACKQUOTE_renamed_SDLK_GRAVE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1028:9
    else:
      let SDLK_BACKQUOTE* = SDLK_BACKQUOTE_renamed_SDLK_GRAVE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1028:9
else:
  static :
    hint("Declaration of " & "SDLK_BACKQUOTE" &
        " already exists, not redeclaring")
when not declared(SDLK_EJECT):
  when SDLK_EJECT_renamed_SDLK_MEDIA_EJECT is typedesc:
    type
      SDLK_EJECT* = SDLK_EJECT_renamed_SDLK_MEDIA_EJECT ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1029:9
  else:
    when SDLK_EJECT_renamed_SDLK_MEDIA_EJECT is static:
      const
        SDLK_EJECT* = SDLK_EJECT_renamed_SDLK_MEDIA_EJECT ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1029:9
    else:
      let SDLK_EJECT* = SDLK_EJECT_renamed_SDLK_MEDIA_EJECT ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1029:9
else:
  static :
    hint("Declaration of " & "SDLK_EJECT" & " already exists, not redeclaring")
when not declared(SDLK_MEDIASELECT_const):
  when SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT is typedesc:
    type
      SDLK_MEDIASELECT_const* = SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1030:9
  else:
    when SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT is static:
      const
        SDLK_MEDIASELECT_const* = SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1030:9
    else:
      let SDLK_MEDIASELECT_const* = SDLK_MEDIASELECT_renamed_SDLK_MEDIA_SELECT ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1030:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIASELECT_const" &
        " already exists, not redeclaring")
when not declared(SDLK_QUOTE):
  when SDLK_QUOTE_renamed_SDLK_APOSTROPHE is typedesc:
    type
      SDLK_QUOTE* = SDLK_QUOTE_renamed_SDLK_APOSTROPHE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1031:9
  else:
    when SDLK_QUOTE_renamed_SDLK_APOSTROPHE is static:
      const
        SDLK_QUOTE* = SDLK_QUOTE_renamed_SDLK_APOSTROPHE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1031:9
    else:
      let SDLK_QUOTE* = SDLK_QUOTE_renamed_SDLK_APOSTROPHE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1031:9
else:
  static :
    hint("Declaration of " & "SDLK_QUOTE" & " already exists, not redeclaring")
when not declared(SDLK_QUOTEDBL):
  when SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE is typedesc:
    type
      SDLK_QUOTEDBL* = SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1032:9
  else:
    when SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE is static:
      const
        SDLK_QUOTEDBL* = SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1032:9
    else:
      let SDLK_QUOTEDBL* = SDLK_QUOTEDBL_renamed_SDLK_DBLAPOSTROPHE ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1032:9
else:
  static :
    hint("Declaration of " & "SDLK_QUOTEDBL" &
        " already exists, not redeclaring")
when not declared(SDLK_a_const):
  when SDLK_a_renamed_SDLK_A is typedesc:
    type
      SDLK_a_const* = SDLK_a_renamed_SDLK_A ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1033:9
  else:
    when SDLK_a_renamed_SDLK_A is static:
      const
        SDLK_a_const* = SDLK_a_renamed_SDLK_A ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1033:9
    else:
      let SDLK_a_const* = SDLK_a_renamed_SDLK_A ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1033:9
else:
  static :
    hint("Declaration of " & "SDLK_a_const" & " already exists, not redeclaring")
when not declared(SDLK_b_const):
  when SDLK_b_renamed_SDLK_B is typedesc:
    type
      SDLK_b_const* = SDLK_b_renamed_SDLK_B ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1034:9
  else:
    when SDLK_b_renamed_SDLK_B is static:
      const
        SDLK_b_const* = SDLK_b_renamed_SDLK_B ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1034:9
    else:
      let SDLK_b_const* = SDLK_b_renamed_SDLK_B ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1034:9
else:
  static :
    hint("Declaration of " & "SDLK_b_const" & " already exists, not redeclaring")
when not declared(SDLK_c_const):
  when SDLK_c_renamed_SDLK_C is typedesc:
    type
      SDLK_c_const* = SDLK_c_renamed_SDLK_C ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1035:9
  else:
    when SDLK_c_renamed_SDLK_C is static:
      const
        SDLK_c_const* = SDLK_c_renamed_SDLK_C ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1035:9
    else:
      let SDLK_c_const* = SDLK_c_renamed_SDLK_C ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1035:9
else:
  static :
    hint("Declaration of " & "SDLK_c_const" & " already exists, not redeclaring")
when not declared(SDLK_d_const):
  when SDLK_d_renamed_SDLK_D is typedesc:
    type
      SDLK_d_const* = SDLK_d_renamed_SDLK_D ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1036:9
  else:
    when SDLK_d_renamed_SDLK_D is static:
      const
        SDLK_d_const* = SDLK_d_renamed_SDLK_D ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1036:9
    else:
      let SDLK_d_const* = SDLK_d_renamed_SDLK_D ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1036:9
else:
  static :
    hint("Declaration of " & "SDLK_d_const" & " already exists, not redeclaring")
when not declared(SDLK_e_const):
  when SDLK_e_renamed_SDLK_E is typedesc:
    type
      SDLK_e_const* = SDLK_e_renamed_SDLK_E ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1037:9
  else:
    when SDLK_e_renamed_SDLK_E is static:
      const
        SDLK_e_const* = SDLK_e_renamed_SDLK_E ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1037:9
    else:
      let SDLK_e_const* = SDLK_e_renamed_SDLK_E ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1037:9
else:
  static :
    hint("Declaration of " & "SDLK_e_const" & " already exists, not redeclaring")
when not declared(SDLK_f_const):
  when SDLK_f_renamed_SDLK_F is typedesc:
    type
      SDLK_f_const* = SDLK_f_renamed_SDLK_F ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1038:9
  else:
    when SDLK_f_renamed_SDLK_F is static:
      const
        SDLK_f_const* = SDLK_f_renamed_SDLK_F ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1038:9
    else:
      let SDLK_f_const* = SDLK_f_renamed_SDLK_F ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1038:9
else:
  static :
    hint("Declaration of " & "SDLK_f_const" & " already exists, not redeclaring")
when not declared(SDLK_g_const):
  when SDLK_g_renamed_SDLK_G is typedesc:
    type
      SDLK_g_const* = SDLK_g_renamed_SDLK_G ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1039:9
  else:
    when SDLK_g_renamed_SDLK_G is static:
      const
        SDLK_g_const* = SDLK_g_renamed_SDLK_G ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1039:9
    else:
      let SDLK_g_const* = SDLK_g_renamed_SDLK_G ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1039:9
else:
  static :
    hint("Declaration of " & "SDLK_g_const" & " already exists, not redeclaring")
when not declared(SDLK_h_const):
  when SDLK_h_renamed_SDLK_H is typedesc:
    type
      SDLK_h_const* = SDLK_h_renamed_SDLK_H ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1040:9
  else:
    when SDLK_h_renamed_SDLK_H is static:
      const
        SDLK_h_const* = SDLK_h_renamed_SDLK_H ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1040:9
    else:
      let SDLK_h_const* = SDLK_h_renamed_SDLK_H ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1040:9
else:
  static :
    hint("Declaration of " & "SDLK_h_const" & " already exists, not redeclaring")
when not declared(SDLK_i_const):
  when SDLK_i_renamed_SDLK_I is typedesc:
    type
      SDLK_i_const* = SDLK_i_renamed_SDLK_I ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1041:9
  else:
    when SDLK_i_renamed_SDLK_I is static:
      const
        SDLK_i_const* = SDLK_i_renamed_SDLK_I ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1041:9
    else:
      let SDLK_i_const* = SDLK_i_renamed_SDLK_I ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1041:9
else:
  static :
    hint("Declaration of " & "SDLK_i_const" & " already exists, not redeclaring")
when not declared(SDLK_j_const):
  when SDLK_j_renamed_SDLK_J is typedesc:
    type
      SDLK_j_const* = SDLK_j_renamed_SDLK_J ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1042:9
  else:
    when SDLK_j_renamed_SDLK_J is static:
      const
        SDLK_j_const* = SDLK_j_renamed_SDLK_J ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1042:9
    else:
      let SDLK_j_const* = SDLK_j_renamed_SDLK_J ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1042:9
else:
  static :
    hint("Declaration of " & "SDLK_j_const" & " already exists, not redeclaring")
when not declared(SDLK_k_const):
  when SDLK_k_renamed_SDLK_K is typedesc:
    type
      SDLK_k_const* = SDLK_k_renamed_SDLK_K ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1043:9
  else:
    when SDLK_k_renamed_SDLK_K is static:
      const
        SDLK_k_const* = SDLK_k_renamed_SDLK_K ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1043:9
    else:
      let SDLK_k_const* = SDLK_k_renamed_SDLK_K ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1043:9
else:
  static :
    hint("Declaration of " & "SDLK_k_const" & " already exists, not redeclaring")
when not declared(SDLK_l_const):
  when SDLK_l_renamed_SDLK_L is typedesc:
    type
      SDLK_l_const* = SDLK_l_renamed_SDLK_L ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1044:9
  else:
    when SDLK_l_renamed_SDLK_L is static:
      const
        SDLK_l_const* = SDLK_l_renamed_SDLK_L ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1044:9
    else:
      let SDLK_l_const* = SDLK_l_renamed_SDLK_L ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1044:9
else:
  static :
    hint("Declaration of " & "SDLK_l_const" & " already exists, not redeclaring")
when not declared(SDLK_m_const):
  when SDLK_m_renamed_SDLK_M is typedesc:
    type
      SDLK_m_const* = SDLK_m_renamed_SDLK_M ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1045:9
  else:
    when SDLK_m_renamed_SDLK_M is static:
      const
        SDLK_m_const* = SDLK_m_renamed_SDLK_M ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1045:9
    else:
      let SDLK_m_const* = SDLK_m_renamed_SDLK_M ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1045:9
else:
  static :
    hint("Declaration of " & "SDLK_m_const" & " already exists, not redeclaring")
when not declared(SDLK_n_const):
  when SDLK_n_renamed_SDLK_N is typedesc:
    type
      SDLK_n_const* = SDLK_n_renamed_SDLK_N ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1046:9
  else:
    when SDLK_n_renamed_SDLK_N is static:
      const
        SDLK_n_const* = SDLK_n_renamed_SDLK_N ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1046:9
    else:
      let SDLK_n_const* = SDLK_n_renamed_SDLK_N ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1046:9
else:
  static :
    hint("Declaration of " & "SDLK_n_const" & " already exists, not redeclaring")
when not declared(SDLK_o_const):
  when SDLK_o_renamed_SDLK_O is typedesc:
    type
      SDLK_o_const* = SDLK_o_renamed_SDLK_O ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1047:9
  else:
    when SDLK_o_renamed_SDLK_O is static:
      const
        SDLK_o_const* = SDLK_o_renamed_SDLK_O ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1047:9
    else:
      let SDLK_o_const* = SDLK_o_renamed_SDLK_O ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1047:9
else:
  static :
    hint("Declaration of " & "SDLK_o_const" & " already exists, not redeclaring")
when not declared(SDLK_p_const):
  when SDLK_p_renamed_SDLK_P is typedesc:
    type
      SDLK_p_const* = SDLK_p_renamed_SDLK_P ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1048:9
  else:
    when SDLK_p_renamed_SDLK_P is static:
      const
        SDLK_p_const* = SDLK_p_renamed_SDLK_P ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1048:9
    else:
      let SDLK_p_const* = SDLK_p_renamed_SDLK_P ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1048:9
else:
  static :
    hint("Declaration of " & "SDLK_p_const" & " already exists, not redeclaring")
when not declared(SDLK_q_const):
  when SDLK_q_renamed_SDLK_Q is typedesc:
    type
      SDLK_q_const* = SDLK_q_renamed_SDLK_Q ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1049:9
  else:
    when SDLK_q_renamed_SDLK_Q is static:
      const
        SDLK_q_const* = SDLK_q_renamed_SDLK_Q ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1049:9
    else:
      let SDLK_q_const* = SDLK_q_renamed_SDLK_Q ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1049:9
else:
  static :
    hint("Declaration of " & "SDLK_q_const" & " already exists, not redeclaring")
when not declared(SDLK_r_const):
  when SDLK_r_renamed_SDLK_R is typedesc:
    type
      SDLK_r_const* = SDLK_r_renamed_SDLK_R ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1050:9
  else:
    when SDLK_r_renamed_SDLK_R is static:
      const
        SDLK_r_const* = SDLK_r_renamed_SDLK_R ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1050:9
    else:
      let SDLK_r_const* = SDLK_r_renamed_SDLK_R ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1050:9
else:
  static :
    hint("Declaration of " & "SDLK_r_const" & " already exists, not redeclaring")
when not declared(SDLK_s_const):
  when SDLK_s_renamed_SDLK_S is typedesc:
    type
      SDLK_s_const* = SDLK_s_renamed_SDLK_S ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1051:9
  else:
    when SDLK_s_renamed_SDLK_S is static:
      const
        SDLK_s_const* = SDLK_s_renamed_SDLK_S ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1051:9
    else:
      let SDLK_s_const* = SDLK_s_renamed_SDLK_S ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1051:9
else:
  static :
    hint("Declaration of " & "SDLK_s_const" & " already exists, not redeclaring")
when not declared(SDLK_t_const):
  when SDLK_t_renamed_SDLK_T is typedesc:
    type
      SDLK_t_const* = SDLK_t_renamed_SDLK_T ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1052:9
  else:
    when SDLK_t_renamed_SDLK_T is static:
      const
        SDLK_t_const* = SDLK_t_renamed_SDLK_T ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1052:9
    else:
      let SDLK_t_const* = SDLK_t_renamed_SDLK_T ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1052:9
else:
  static :
    hint("Declaration of " & "SDLK_t_const" & " already exists, not redeclaring")
when not declared(SDLK_u_const):
  when SDLK_u_renamed_SDLK_U is typedesc:
    type
      SDLK_u_const* = SDLK_u_renamed_SDLK_U ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1053:9
  else:
    when SDLK_u_renamed_SDLK_U is static:
      const
        SDLK_u_const* = SDLK_u_renamed_SDLK_U ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1053:9
    else:
      let SDLK_u_const* = SDLK_u_renamed_SDLK_U ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1053:9
else:
  static :
    hint("Declaration of " & "SDLK_u_const" & " already exists, not redeclaring")
when not declared(SDLK_v_const):
  when SDLK_v_renamed_SDLK_V is typedesc:
    type
      SDLK_v_const* = SDLK_v_renamed_SDLK_V ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1054:9
  else:
    when SDLK_v_renamed_SDLK_V is static:
      const
        SDLK_v_const* = SDLK_v_renamed_SDLK_V ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1054:9
    else:
      let SDLK_v_const* = SDLK_v_renamed_SDLK_V ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1054:9
else:
  static :
    hint("Declaration of " & "SDLK_v_const" & " already exists, not redeclaring")
when not declared(SDLK_w_const):
  when SDLK_w_renamed_SDLK_W is typedesc:
    type
      SDLK_w_const* = SDLK_w_renamed_SDLK_W ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1055:9
  else:
    when SDLK_w_renamed_SDLK_W is static:
      const
        SDLK_w_const* = SDLK_w_renamed_SDLK_W ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1055:9
    else:
      let SDLK_w_const* = SDLK_w_renamed_SDLK_W ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1055:9
else:
  static :
    hint("Declaration of " & "SDLK_w_const" & " already exists, not redeclaring")
when not declared(SDLK_x_const):
  when SDLK_x_renamed_SDLK_X is typedesc:
    type
      SDLK_x_const* = SDLK_x_renamed_SDLK_X ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1056:9
  else:
    when SDLK_x_renamed_SDLK_X is static:
      const
        SDLK_x_const* = SDLK_x_renamed_SDLK_X ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1056:9
    else:
      let SDLK_x_const* = SDLK_x_renamed_SDLK_X ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1056:9
else:
  static :
    hint("Declaration of " & "SDLK_x_const" & " already exists, not redeclaring")
when not declared(SDLK_y_const):
  when SDLK_y_renamed_SDLK_Y is typedesc:
    type
      SDLK_y_const* = SDLK_y_renamed_SDLK_Y ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1057:9
  else:
    when SDLK_y_renamed_SDLK_Y is static:
      const
        SDLK_y_const* = SDLK_y_renamed_SDLK_Y ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1057:9
    else:
      let SDLK_y_const* = SDLK_y_renamed_SDLK_Y ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1057:9
else:
  static :
    hint("Declaration of " & "SDLK_y_const" & " already exists, not redeclaring")
when not declared(SDLK_z_const):
  when SDLK_z_renamed_SDLK_Z is typedesc:
    type
      SDLK_z_const* = SDLK_z_renamed_SDLK_Z ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1058:9
  else:
    when SDLK_z_renamed_SDLK_Z is static:
      const
        SDLK_z_const* = SDLK_z_renamed_SDLK_Z ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1058:9
    else:
      let SDLK_z_const* = SDLK_z_renamed_SDLK_Z ## Generated based on D:\dev\nim\sdl3nimgen\submodules\SDL\include\SDL3/SDL_oldnames.h:1058:9
else:
  static :
    hint("Declaration of " & "SDLK_z_const" & " already exists, not redeclaring")
when not declared(malloc):
  proc malloc*(size: csize_t): pointer {.cdecl, importc: "SDL_malloc".}
else:
  static :
    hint("Declaration of " & "malloc" & " already exists, not redeclaring")
when not declared(calloc):
  proc calloc*(nmemb: csize_t; size: csize_t): pointer {.cdecl,
      importc: "SDL_calloc".}
else:
  static :
    hint("Declaration of " & "calloc" & " already exists, not redeclaring")
when not declared(realloc):
  proc realloc*(mem: pointer; size: csize_t): pointer {.cdecl,
      importc: "SDL_realloc".}
else:
  static :
    hint("Declaration of " & "realloc" & " already exists, not redeclaring")
when not declared(free):
  proc free*(mem: pointer): void {.cdecl, importc: "SDL_free".}
else:
  static :
    hint("Declaration of " & "free" & " already exists, not redeclaring")
when not declared(GetOriginalMemoryFunctions):
  proc GetOriginalMemoryFunctions*(malloc_func: malloc_func_520094161;
                                   calloc_func: calloc_func_520094163;
                                   realloc_func: realloc_func_520094165;
                                   free_func: free_func_520094167): void {.
      cdecl, importc: "SDL_GetOriginalMemoryFunctions".}
else:
  static :
    hint("Declaration of " & "GetOriginalMemoryFunctions" &
        " already exists, not redeclaring")
when not declared(GetMemoryFunctions):
  proc GetMemoryFunctions*(malloc_func: malloc_func_520094161;
                           calloc_func: calloc_func_520094163;
                           realloc_func: realloc_func_520094165;
                           free_func: free_func_520094167): void {.cdecl,
      importc: "SDL_GetMemoryFunctions".}
else:
  static :
    hint("Declaration of " & "GetMemoryFunctions" &
        " already exists, not redeclaring")
when not declared(SetMemoryFunctions):
  proc SetMemoryFunctions*(malloc_func: malloc_func_520094161;
                           calloc_func: calloc_func_520094163;
                           realloc_func: realloc_func_520094165;
                           free_func: free_func_520094167): bool {.cdecl,
      importc: "SDL_SetMemoryFunctions".}
else:
  static :
    hint("Declaration of " & "SetMemoryFunctions" &
        " already exists, not redeclaring")
when not declared(aligned_alloc):
  proc aligned_alloc*(alignment: csize_t; size: csize_t): pointer {.cdecl,
      importc: "SDL_aligned_alloc".}
else:
  static :
    hint("Declaration of " & "aligned_alloc" &
        " already exists, not redeclaring")
when not declared(aligned_free):
  proc aligned_free*(mem: pointer): void {.cdecl, importc: "SDL_aligned_free".}
else:
  static :
    hint("Declaration of " & "aligned_free" & " already exists, not redeclaring")
when not declared(GetNumAllocations):
  proc GetNumAllocations*(): cint {.cdecl, importc: "SDL_GetNumAllocations".}
else:
  static :
    hint("Declaration of " & "GetNumAllocations" &
        " already exists, not redeclaring")
when not declared(GetEnvironment):
  proc GetEnvironment*(): ptr Environment_520094169 {.cdecl,
      importc: "SDL_GetEnvironment".}
else:
  static :
    hint("Declaration of " & "GetEnvironment" &
        " already exists, not redeclaring")
when not declared(CreateEnvironment):
  proc CreateEnvironment*(populated: bool): ptr Environment_520094169 {.cdecl,
      importc: "SDL_CreateEnvironment".}
else:
  static :
    hint("Declaration of " & "CreateEnvironment" &
        " already exists, not redeclaring")
when not declared(GetEnvironmentVariable):
  proc GetEnvironmentVariable*(env: ptr Environment_520094169; name: cstring): cstring {.
      cdecl, importc: "SDL_GetEnvironmentVariable".}
else:
  static :
    hint("Declaration of " & "GetEnvironmentVariable" &
        " already exists, not redeclaring")
when not declared(GetEnvironmentVariables):
  proc GetEnvironmentVariables*(env: ptr Environment_520094169): ptr cstring {.
      cdecl, importc: "SDL_GetEnvironmentVariables".}
else:
  static :
    hint("Declaration of " & "GetEnvironmentVariables" &
        " already exists, not redeclaring")
when not declared(SetEnvironmentVariable):
  proc SetEnvironmentVariable*(env: ptr Environment_520094169; name: cstring;
                               value: cstring; overwrite: bool): bool {.cdecl,
      importc: "SDL_SetEnvironmentVariable".}
else:
  static :
    hint("Declaration of " & "SetEnvironmentVariable" &
        " already exists, not redeclaring")
when not declared(UnsetEnvironmentVariable):
  proc UnsetEnvironmentVariable*(env: ptr Environment_520094169; name: cstring): bool {.
      cdecl, importc: "SDL_UnsetEnvironmentVariable".}
else:
  static :
    hint("Declaration of " & "UnsetEnvironmentVariable" &
        " already exists, not redeclaring")
when not declared(DestroyEnvironment):
  proc DestroyEnvironment*(env: ptr Environment_520094169): void {.cdecl,
      importc: "SDL_DestroyEnvironment".}
else:
  static :
    hint("Declaration of " & "DestroyEnvironment" &
        " already exists, not redeclaring")
when not declared(getenv):
  proc getenv*(name: cstring): cstring {.cdecl, importc: "SDL_getenv".}
else:
  static :
    hint("Declaration of " & "getenv" & " already exists, not redeclaring")
when not declared(getenv_unsafe):
  proc getenv_unsafe*(name: cstring): cstring {.cdecl,
      importc: "SDL_getenv_unsafe".}
else:
  static :
    hint("Declaration of " & "getenv_unsafe" &
        " already exists, not redeclaring")
when not declared(setenv_unsafe):
  proc setenv_unsafe*(name: cstring; value: cstring; overwrite: cint): cint {.
      cdecl, importc: "SDL_setenv_unsafe".}
else:
  static :
    hint("Declaration of " & "setenv_unsafe" &
        " already exists, not redeclaring")
when not declared(unsetenv_unsafe):
  proc unsetenv_unsafe*(name: cstring): cint {.cdecl,
      importc: "SDL_unsetenv_unsafe".}
else:
  static :
    hint("Declaration of " & "unsetenv_unsafe" &
        " already exists, not redeclaring")
when not declared(qsort):
  proc qsort*(base: pointer; nmemb: csize_t; size: csize_t;
              compare: CompareCallback_520094171): void {.cdecl,
      importc: "SDL_qsort".}
else:
  static :
    hint("Declaration of " & "qsort" & " already exists, not redeclaring")
when not declared(bsearch):
  proc bsearch*(key: pointer; base: pointer; nmemb: csize_t; size: csize_t;
                compare: CompareCallback_520094171): pointer {.cdecl,
      importc: "SDL_bsearch".}
else:
  static :
    hint("Declaration of " & "bsearch" & " already exists, not redeclaring")
when not declared(qsort_r):
  proc qsort_r*(base: pointer; nmemb: csize_t; size: csize_t;
                compare: CompareCallback_r_520094173; userdata: pointer): void {.
      cdecl, importc: "SDL_qsort_r".}
else:
  static :
    hint("Declaration of " & "qsort_r" & " already exists, not redeclaring")
when not declared(bsearch_r):
  proc bsearch_r*(key: pointer; base: pointer; nmemb: csize_t; size: csize_t;
                  compare: CompareCallback_r_520094173; userdata: pointer): pointer {.
      cdecl, importc: "SDL_bsearch_r".}
else:
  static :
    hint("Declaration of " & "bsearch_r" & " already exists, not redeclaring")
when not declared(abs):
  proc abs*(x: cint): cint {.cdecl, importc: "SDL_abs".}
else:
  static :
    hint("Declaration of " & "abs" & " already exists, not redeclaring")
when not declared(isalpha):
  proc isalpha*(x: cint): cint {.cdecl, importc: "SDL_isalpha".}
else:
  static :
    hint("Declaration of " & "isalpha" & " already exists, not redeclaring")
when not declared(isalnum):
  proc isalnum*(x: cint): cint {.cdecl, importc: "SDL_isalnum".}
else:
  static :
    hint("Declaration of " & "isalnum" & " already exists, not redeclaring")
when not declared(isblank):
  proc isblank*(x: cint): cint {.cdecl, importc: "SDL_isblank".}
else:
  static :
    hint("Declaration of " & "isblank" & " already exists, not redeclaring")
when not declared(iscntrl):
  proc iscntrl*(x: cint): cint {.cdecl, importc: "SDL_iscntrl".}
else:
  static :
    hint("Declaration of " & "iscntrl" & " already exists, not redeclaring")
when not declared(isdigit):
  proc isdigit*(x: cint): cint {.cdecl, importc: "SDL_isdigit".}
else:
  static :
    hint("Declaration of " & "isdigit" & " already exists, not redeclaring")
when not declared(isxdigit):
  proc isxdigit*(x: cint): cint {.cdecl, importc: "SDL_isxdigit".}
else:
  static :
    hint("Declaration of " & "isxdigit" & " already exists, not redeclaring")
when not declared(ispunct):
  proc ispunct*(x: cint): cint {.cdecl, importc: "SDL_ispunct".}
else:
  static :
    hint("Declaration of " & "ispunct" & " already exists, not redeclaring")
when not declared(isspace):
  proc isspace*(x: cint): cint {.cdecl, importc: "SDL_isspace".}
else:
  static :
    hint("Declaration of " & "isspace" & " already exists, not redeclaring")
when not declared(isupper):
  proc isupper*(x: cint): cint {.cdecl, importc: "SDL_isupper".}
else:
  static :
    hint("Declaration of " & "isupper" & " already exists, not redeclaring")
when not declared(islower):
  proc islower*(x: cint): cint {.cdecl, importc: "SDL_islower".}
else:
  static :
    hint("Declaration of " & "islower" & " already exists, not redeclaring")
when not declared(isprint):
  proc isprint*(x: cint): cint {.cdecl, importc: "SDL_isprint".}
else:
  static :
    hint("Declaration of " & "isprint" & " already exists, not redeclaring")
when not declared(isgraph):
  proc isgraph*(x: cint): cint {.cdecl, importc: "SDL_isgraph".}
else:
  static :
    hint("Declaration of " & "isgraph" & " already exists, not redeclaring")
when not declared(toupper):
  proc toupper*(x: cint): cint {.cdecl, importc: "SDL_toupper".}
else:
  static :
    hint("Declaration of " & "toupper" & " already exists, not redeclaring")
when not declared(tolower):
  proc tolower*(x: cint): cint {.cdecl, importc: "SDL_tolower".}
else:
  static :
    hint("Declaration of " & "tolower" & " already exists, not redeclaring")
when not declared(crc16):
  proc crc16*(crc: Uint16_520094141; data: pointer; len: csize_t): Uint16_520094141 {.
      cdecl, importc: "SDL_crc16".}
else:
  static :
    hint("Declaration of " & "crc16" & " already exists, not redeclaring")
when not declared(crc32):
  proc crc32*(crc: Uint32_520094145; data: pointer; len: csize_t): Uint32_520094145 {.
      cdecl, importc: "SDL_crc32".}
else:
  static :
    hint("Declaration of " & "crc32" & " already exists, not redeclaring")
when not declared(murmur3_32):
  proc murmur3_32*(data: pointer; len: csize_t; seed: Uint32_520094145): Uint32_520094145 {.
      cdecl, importc: "SDL_murmur3_32".}
else:
  static :
    hint("Declaration of " & "murmur3_32" & " already exists, not redeclaring")
when not declared(memset4):
  proc memset4*(dst: pointer; val: Uint32_520094145; dwords: csize_t): pointer {.
      cdecl, importc: "SDL_memset4".}
else:
  static :
    hint("Declaration of " & "memset4" & " already exists, not redeclaring")
when not declared(memcmp):
  proc memcmp*(s1: pointer; s2: pointer; len: csize_t): cint {.cdecl,
      importc: "SDL_memcmp".}
else:
  static :
    hint("Declaration of " & "memcmp" & " already exists, not redeclaring")
when not declared(wcslen):
  proc wcslen*(wstr: ptr wchar_t_520094175): csize_t {.cdecl,
      importc: "SDL_wcslen".}
else:
  static :
    hint("Declaration of " & "wcslen" & " already exists, not redeclaring")
when not declared(wcsnlen):
  proc wcsnlen*(wstr: ptr wchar_t_520094175; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_wcsnlen".}
else:
  static :
    hint("Declaration of " & "wcsnlen" & " already exists, not redeclaring")
when not declared(wcslcpy):
  proc wcslcpy*(dst: ptr wchar_t_520094175; src: ptr wchar_t_520094175;
                maxlen: csize_t): csize_t {.cdecl, importc: "SDL_wcslcpy".}
else:
  static :
    hint("Declaration of " & "wcslcpy" & " already exists, not redeclaring")
when not declared(wcslcat):
  proc wcslcat*(dst: ptr wchar_t_520094175; src: ptr wchar_t_520094175;
                maxlen: csize_t): csize_t {.cdecl, importc: "SDL_wcslcat".}
else:
  static :
    hint("Declaration of " & "wcslcat" & " already exists, not redeclaring")
when not declared(wcsdup):
  proc wcsdup*(wstr: ptr wchar_t_520094175): ptr wchar_t_520094175 {.cdecl,
      importc: "SDL_wcsdup".}
else:
  static :
    hint("Declaration of " & "wcsdup" & " already exists, not redeclaring")
when not declared(wcsstr):
  proc wcsstr*(haystack: ptr wchar_t_520094175; needle: ptr wchar_t_520094175): ptr wchar_t_520094175 {.
      cdecl, importc: "SDL_wcsstr".}
else:
  static :
    hint("Declaration of " & "wcsstr" & " already exists, not redeclaring")
when not declared(wcsnstr):
  proc wcsnstr*(haystack: ptr wchar_t_520094175; needle: ptr wchar_t_520094175;
                maxlen: csize_t): ptr wchar_t_520094175 {.cdecl,
      importc: "SDL_wcsnstr".}
else:
  static :
    hint("Declaration of " & "wcsnstr" & " already exists, not redeclaring")
when not declared(wcscmp):
  proc wcscmp*(str1: ptr wchar_t_520094175; str2: ptr wchar_t_520094175): cint {.
      cdecl, importc: "SDL_wcscmp".}
else:
  static :
    hint("Declaration of " & "wcscmp" & " already exists, not redeclaring")
when not declared(wcsncmp):
  proc wcsncmp*(str1: ptr wchar_t_520094175; str2: ptr wchar_t_520094175;
                maxlen: csize_t): cint {.cdecl, importc: "SDL_wcsncmp".}
else:
  static :
    hint("Declaration of " & "wcsncmp" & " already exists, not redeclaring")
when not declared(wcscasecmp):
  proc wcscasecmp*(str1: ptr wchar_t_520094175; str2: ptr wchar_t_520094175): cint {.
      cdecl, importc: "SDL_wcscasecmp".}
else:
  static :
    hint("Declaration of " & "wcscasecmp" & " already exists, not redeclaring")
when not declared(wcsncasecmp):
  proc wcsncasecmp*(str1: ptr wchar_t_520094175; str2: ptr wchar_t_520094175;
                    maxlen: csize_t): cint {.cdecl, importc: "SDL_wcsncasecmp".}
else:
  static :
    hint("Declaration of " & "wcsncasecmp" & " already exists, not redeclaring")
when not declared(wcstol):
  proc wcstol*(str: ptr wchar_t_520094175; endp: ptr ptr wchar_t_520094175;
               base: cint): clong {.cdecl, importc: "SDL_wcstol".}
else:
  static :
    hint("Declaration of " & "wcstol" & " already exists, not redeclaring")
when not declared(strlen):
  proc strlen*(str: cstring): csize_t {.cdecl, importc: "SDL_strlen".}
else:
  static :
    hint("Declaration of " & "strlen" & " already exists, not redeclaring")
when not declared(strnlen):
  proc strnlen*(str: cstring; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_strnlen".}
else:
  static :
    hint("Declaration of " & "strnlen" & " already exists, not redeclaring")
when not declared(strlcpy):
  proc strlcpy*(dst: cstring; src: cstring; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_strlcpy".}
else:
  static :
    hint("Declaration of " & "strlcpy" & " already exists, not redeclaring")
when not declared(utf8strlcpy):
  proc utf8strlcpy*(dst: cstring; src: cstring; dst_bytes: csize_t): csize_t {.
      cdecl, importc: "SDL_utf8strlcpy".}
else:
  static :
    hint("Declaration of " & "utf8strlcpy" & " already exists, not redeclaring")
when not declared(strlcat):
  proc strlcat*(dst: cstring; src: cstring; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_strlcat".}
else:
  static :
    hint("Declaration of " & "strlcat" & " already exists, not redeclaring")
when not declared(strdup):
  proc strdup*(str: cstring): cstring {.cdecl, importc: "SDL_strdup".}
else:
  static :
    hint("Declaration of " & "strdup" & " already exists, not redeclaring")
when not declared(strndup):
  proc strndup*(str: cstring; maxlen: csize_t): cstring {.cdecl,
      importc: "SDL_strndup".}
else:
  static :
    hint("Declaration of " & "strndup" & " already exists, not redeclaring")
when not declared(strrev):
  proc strrev*(str: cstring): cstring {.cdecl, importc: "SDL_strrev".}
else:
  static :
    hint("Declaration of " & "strrev" & " already exists, not redeclaring")
when not declared(strupr):
  proc strupr*(str: cstring): cstring {.cdecl, importc: "SDL_strupr".}
else:
  static :
    hint("Declaration of " & "strupr" & " already exists, not redeclaring")
when not declared(strlwr):
  proc strlwr*(str: cstring): cstring {.cdecl, importc: "SDL_strlwr".}
else:
  static :
    hint("Declaration of " & "strlwr" & " already exists, not redeclaring")
when not declared(strchr):
  proc strchr*(str: cstring; c: cint): cstring {.cdecl, importc: "SDL_strchr".}
else:
  static :
    hint("Declaration of " & "strchr" & " already exists, not redeclaring")
when not declared(strrchr):
  proc strrchr*(str: cstring; c: cint): cstring {.cdecl, importc: "SDL_strrchr".}
else:
  static :
    hint("Declaration of " & "strrchr" & " already exists, not redeclaring")
when not declared(strstr):
  proc strstr*(haystack: cstring; needle: cstring): cstring {.cdecl,
      importc: "SDL_strstr".}
else:
  static :
    hint("Declaration of " & "strstr" & " already exists, not redeclaring")
when not declared(strnstr):
  proc strnstr*(haystack: cstring; needle: cstring; maxlen: csize_t): cstring {.
      cdecl, importc: "SDL_strnstr".}
else:
  static :
    hint("Declaration of " & "strnstr" & " already exists, not redeclaring")
when not declared(strcasestr):
  proc strcasestr*(haystack: cstring; needle: cstring): cstring {.cdecl,
      importc: "SDL_strcasestr".}
else:
  static :
    hint("Declaration of " & "strcasestr" & " already exists, not redeclaring")
when not declared(strtok_r_proc):
  proc strtok_r_proc*(s1: cstring; s2: cstring; saveptr: ptr cstring): cstring {.
      cdecl, importc: "SDL_strtok_r".}
else:
  static :
    hint("Declaration of " & "strtok_r_proc" &
        " already exists, not redeclaring")
when not declared(utf8strlen):
  proc utf8strlen*(str: cstring): csize_t {.cdecl, importc: "SDL_utf8strlen".}
else:
  static :
    hint("Declaration of " & "utf8strlen" & " already exists, not redeclaring")
when not declared(utf8strnlen):
  proc utf8strnlen*(str: cstring; bytes: csize_t): csize_t {.cdecl,
      importc: "SDL_utf8strnlen".}
else:
  static :
    hint("Declaration of " & "utf8strnlen" & " already exists, not redeclaring")
when not declared(itoa):
  proc itoa*(value: cint; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_itoa".}
else:
  static :
    hint("Declaration of " & "itoa" & " already exists, not redeclaring")
when not declared(uitoa):
  proc uitoa*(value: cuint; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_uitoa".}
else:
  static :
    hint("Declaration of " & "uitoa" & " already exists, not redeclaring")
when not declared(ltoa):
  proc ltoa*(value: clong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_ltoa".}
else:
  static :
    hint("Declaration of " & "ltoa" & " already exists, not redeclaring")
when not declared(ultoa):
  proc ultoa*(value: culong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_ultoa".}
else:
  static :
    hint("Declaration of " & "ultoa" & " already exists, not redeclaring")
when not declared(lltoa):
  proc lltoa*(value: clonglong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_lltoa".}
else:
  static :
    hint("Declaration of " & "lltoa" & " already exists, not redeclaring")
when not declared(ulltoa):
  proc ulltoa*(value: culonglong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_ulltoa".}
else:
  static :
    hint("Declaration of " & "ulltoa" & " already exists, not redeclaring")
when not declared(atoi):
  proc atoi*(str: cstring): cint {.cdecl, importc: "SDL_atoi".}
else:
  static :
    hint("Declaration of " & "atoi" & " already exists, not redeclaring")
when not declared(atof):
  proc atof*(str: cstring): cdouble {.cdecl, importc: "SDL_atof".}
else:
  static :
    hint("Declaration of " & "atof" & " already exists, not redeclaring")
when not declared(strtol):
  proc strtol*(str: cstring; endp: ptr cstring; base: cint): clong {.cdecl,
      importc: "SDL_strtol".}
else:
  static :
    hint("Declaration of " & "strtol" & " already exists, not redeclaring")
when not declared(strtoul):
  proc strtoul*(str: cstring; endp: ptr cstring; base: cint): culong {.cdecl,
      importc: "SDL_strtoul".}
else:
  static :
    hint("Declaration of " & "strtoul" & " already exists, not redeclaring")
when not declared(strtoll):
  proc strtoll*(str: cstring; endp: ptr cstring; base: cint): clonglong {.cdecl,
      importc: "SDL_strtoll".}
else:
  static :
    hint("Declaration of " & "strtoll" & " already exists, not redeclaring")
when not declared(strtoull):
  proc strtoull*(str: cstring; endp: ptr cstring; base: cint): culonglong {.
      cdecl, importc: "SDL_strtoull".}
else:
  static :
    hint("Declaration of " & "strtoull" & " already exists, not redeclaring")
when not declared(strtod):
  proc strtod*(str: cstring; endp: ptr cstring): cdouble {.cdecl,
      importc: "SDL_strtod".}
else:
  static :
    hint("Declaration of " & "strtod" & " already exists, not redeclaring")
when not declared(strcmp):
  proc strcmp*(str1: cstring; str2: cstring): cint {.cdecl,
      importc: "SDL_strcmp".}
else:
  static :
    hint("Declaration of " & "strcmp" & " already exists, not redeclaring")
when not declared(strncmp):
  proc strncmp*(str1: cstring; str2: cstring; maxlen: csize_t): cint {.cdecl,
      importc: "SDL_strncmp".}
else:
  static :
    hint("Declaration of " & "strncmp" & " already exists, not redeclaring")
when not declared(strcasecmp):
  proc strcasecmp*(str1: cstring; str2: cstring): cint {.cdecl,
      importc: "SDL_strcasecmp".}
else:
  static :
    hint("Declaration of " & "strcasecmp" & " already exists, not redeclaring")
when not declared(strncasecmp):
  proc strncasecmp*(str1: cstring; str2: cstring; maxlen: csize_t): cint {.
      cdecl, importc: "SDL_strncasecmp".}
else:
  static :
    hint("Declaration of " & "strncasecmp" & " already exists, not redeclaring")
when not declared(strpbrk):
  proc strpbrk*(str: cstring; breakset: cstring): cstring {.cdecl,
      importc: "SDL_strpbrk".}
else:
  static :
    hint("Declaration of " & "strpbrk" & " already exists, not redeclaring")
when not declared(StepUTF8):
  proc StepUTF8*(pstr: ptr cstring; pslen: ptr csize_t): Uint32_520094145 {.
      cdecl, importc: "SDL_StepUTF8".}
else:
  static :
    hint("Declaration of " & "StepUTF8" & " already exists, not redeclaring")
when not declared(StepBackUTF8):
  proc StepBackUTF8*(start: cstring; pstr: ptr cstring): Uint32_520094145 {.
      cdecl, importc: "SDL_StepBackUTF8".}
else:
  static :
    hint("Declaration of " & "StepBackUTF8" & " already exists, not redeclaring")
when not declared(UCS4ToUTF8):
  proc UCS4ToUTF8*(codepoint: Uint32_520094145; dst: cstring): cstring {.cdecl,
      importc: "SDL_UCS4ToUTF8".}
else:
  static :
    hint("Declaration of " & "UCS4ToUTF8" & " already exists, not redeclaring")
when not declared(sscanf):
  proc sscanf*(text: cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_sscanf".}
else:
  static :
    hint("Declaration of " & "sscanf" & " already exists, not redeclaring")
when not declared(vsscanf):
  proc vsscanf*(text: cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_vsscanf".}
else:
  static :
    hint("Declaration of " & "vsscanf" & " already exists, not redeclaring")
when not declared(snprintf):
  proc snprintf*(text: cstring; maxlen: csize_t; fmt: cstring): cint {.cdecl,
      varargs, importc: "SDL_snprintf".}
else:
  static :
    hint("Declaration of " & "snprintf" & " already exists, not redeclaring")
when not declared(swprintf):
  proc swprintf*(text: ptr wchar_t_520094175; maxlen: csize_t; fmt: ptr wchar_t_520094175): cint {.
      cdecl, varargs, importc: "SDL_swprintf".}
else:
  static :
    hint("Declaration of " & "swprintf" & " already exists, not redeclaring")
when not declared(vsnprintf):
  proc vsnprintf*(text: cstring; maxlen: csize_t; fmt: cstring): cint {.cdecl,
      varargs, importc: "SDL_vsnprintf".}
else:
  static :
    hint("Declaration of " & "vsnprintf" & " already exists, not redeclaring")
when not declared(vswprintf):
  proc vswprintf*(text: ptr wchar_t_520094175; maxlen: csize_t; fmt: ptr wchar_t_520094175): cint {.
      cdecl, varargs, importc: "SDL_vswprintf".}
else:
  static :
    hint("Declaration of " & "vswprintf" & " already exists, not redeclaring")
when not declared(asprintf):
  proc asprintf*(strp: ptr cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_asprintf".}
else:
  static :
    hint("Declaration of " & "asprintf" & " already exists, not redeclaring")
when not declared(vasprintf):
  proc vasprintf*(strp: ptr cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_vasprintf".}
else:
  static :
    hint("Declaration of " & "vasprintf" & " already exists, not redeclaring")
when not declared(srand):
  proc srand*(seed: Uint64_520094149): void {.cdecl, importc: "SDL_srand".}
else:
  static :
    hint("Declaration of " & "srand" & " already exists, not redeclaring")
when not declared(rand):
  proc rand*(n: Sint32_520094143): Sint32_520094143 {.cdecl, importc: "SDL_rand".}
else:
  static :
    hint("Declaration of " & "rand" & " already exists, not redeclaring")
when not declared(randf):
  proc randf*(): cfloat {.cdecl, importc: "SDL_randf".}
else:
  static :
    hint("Declaration of " & "randf" & " already exists, not redeclaring")
when not declared(rand_bits):
  proc rand_bits*(): Uint32_520094145 {.cdecl, importc: "SDL_rand_bits".}
else:
  static :
    hint("Declaration of " & "rand_bits" & " already exists, not redeclaring")
when not declared(rand_r):
  proc rand_r*(state: ptr Uint64_520094149; n: Sint32_520094143): Sint32_520094143 {.
      cdecl, importc: "SDL_rand_r".}
else:
  static :
    hint("Declaration of " & "rand_r" & " already exists, not redeclaring")
when not declared(randf_r):
  proc randf_r*(state: ptr Uint64_520094149): cfloat {.cdecl,
      importc: "SDL_randf_r".}
else:
  static :
    hint("Declaration of " & "randf_r" & " already exists, not redeclaring")
when not declared(rand_bits_r):
  proc rand_bits_r*(state: ptr Uint64_520094149): Uint32_520094145 {.cdecl,
      importc: "SDL_rand_bits_r".}
else:
  static :
    hint("Declaration of " & "rand_bits_r" & " already exists, not redeclaring")
when not declared(acos):
  proc acos*(x: cdouble): cdouble {.cdecl, importc: "SDL_acos".}
else:
  static :
    hint("Declaration of " & "acos" & " already exists, not redeclaring")
when not declared(acosf):
  proc acosf*(x: cfloat): cfloat {.cdecl, importc: "SDL_acosf".}
else:
  static :
    hint("Declaration of " & "acosf" & " already exists, not redeclaring")
when not declared(asin):
  proc asin*(x: cdouble): cdouble {.cdecl, importc: "SDL_asin".}
else:
  static :
    hint("Declaration of " & "asin" & " already exists, not redeclaring")
when not declared(asinf):
  proc asinf*(x: cfloat): cfloat {.cdecl, importc: "SDL_asinf".}
else:
  static :
    hint("Declaration of " & "asinf" & " already exists, not redeclaring")
when not declared(atan):
  proc atan*(x: cdouble): cdouble {.cdecl, importc: "SDL_atan".}
else:
  static :
    hint("Declaration of " & "atan" & " already exists, not redeclaring")
when not declared(atanf):
  proc atanf*(x: cfloat): cfloat {.cdecl, importc: "SDL_atanf".}
else:
  static :
    hint("Declaration of " & "atanf" & " already exists, not redeclaring")
when not declared(atan2):
  proc atan2*(y: cdouble; x: cdouble): cdouble {.cdecl, importc: "SDL_atan2".}
else:
  static :
    hint("Declaration of " & "atan2" & " already exists, not redeclaring")
when not declared(atan2f):
  proc atan2f*(y: cfloat; x: cfloat): cfloat {.cdecl, importc: "SDL_atan2f".}
else:
  static :
    hint("Declaration of " & "atan2f" & " already exists, not redeclaring")
when not declared(ceil):
  proc ceil*(x: cdouble): cdouble {.cdecl, importc: "SDL_ceil".}
else:
  static :
    hint("Declaration of " & "ceil" & " already exists, not redeclaring")
when not declared(ceilf):
  proc ceilf*(x: cfloat): cfloat {.cdecl, importc: "SDL_ceilf".}
else:
  static :
    hint("Declaration of " & "ceilf" & " already exists, not redeclaring")
when not declared(copysign):
  proc copysign*(x: cdouble; y: cdouble): cdouble {.cdecl,
      importc: "SDL_copysign".}
else:
  static :
    hint("Declaration of " & "copysign" & " already exists, not redeclaring")
when not declared(copysignf):
  proc copysignf*(x: cfloat; y: cfloat): cfloat {.cdecl,
      importc: "SDL_copysignf".}
else:
  static :
    hint("Declaration of " & "copysignf" & " already exists, not redeclaring")
when not declared(cos):
  proc cos*(x: cdouble): cdouble {.cdecl, importc: "SDL_cos".}
else:
  static :
    hint("Declaration of " & "cos" & " already exists, not redeclaring")
when not declared(cosf):
  proc cosf*(x: cfloat): cfloat {.cdecl, importc: "SDL_cosf".}
else:
  static :
    hint("Declaration of " & "cosf" & " already exists, not redeclaring")
when not declared(exp):
  proc exp*(x: cdouble): cdouble {.cdecl, importc: "SDL_exp".}
else:
  static :
    hint("Declaration of " & "exp" & " already exists, not redeclaring")
when not declared(expf):
  proc expf*(x: cfloat): cfloat {.cdecl, importc: "SDL_expf".}
else:
  static :
    hint("Declaration of " & "expf" & " already exists, not redeclaring")
when not declared(fabs):
  proc fabs*(x: cdouble): cdouble {.cdecl, importc: "SDL_fabs".}
else:
  static :
    hint("Declaration of " & "fabs" & " already exists, not redeclaring")
when not declared(fabsf):
  proc fabsf*(x: cfloat): cfloat {.cdecl, importc: "SDL_fabsf".}
else:
  static :
    hint("Declaration of " & "fabsf" & " already exists, not redeclaring")
when not declared(floor):
  proc floor*(x: cdouble): cdouble {.cdecl, importc: "SDL_floor".}
else:
  static :
    hint("Declaration of " & "floor" & " already exists, not redeclaring")
when not declared(floorf):
  proc floorf*(x: cfloat): cfloat {.cdecl, importc: "SDL_floorf".}
else:
  static :
    hint("Declaration of " & "floorf" & " already exists, not redeclaring")
when not declared(trunc):
  proc trunc*(x: cdouble): cdouble {.cdecl, importc: "SDL_trunc".}
else:
  static :
    hint("Declaration of " & "trunc" & " already exists, not redeclaring")
when not declared(truncf):
  proc truncf*(x: cfloat): cfloat {.cdecl, importc: "SDL_truncf".}
else:
  static :
    hint("Declaration of " & "truncf" & " already exists, not redeclaring")
when not declared(fmod):
  proc fmod*(x: cdouble; y: cdouble): cdouble {.cdecl, importc: "SDL_fmod".}
else:
  static :
    hint("Declaration of " & "fmod" & " already exists, not redeclaring")
when not declared(fmodf):
  proc fmodf*(x: cfloat; y: cfloat): cfloat {.cdecl, importc: "SDL_fmodf".}
else:
  static :
    hint("Declaration of " & "fmodf" & " already exists, not redeclaring")
when not declared(isinf):
  proc isinf*(x: cdouble): cint {.cdecl, importc: "SDL_isinf".}
else:
  static :
    hint("Declaration of " & "isinf" & " already exists, not redeclaring")
when not declared(isinff):
  proc isinff*(x: cfloat): cint {.cdecl, importc: "SDL_isinff".}
else:
  static :
    hint("Declaration of " & "isinff" & " already exists, not redeclaring")
when not declared(isnan):
  proc isnan*(x: cdouble): cint {.cdecl, importc: "SDL_isnan".}
else:
  static :
    hint("Declaration of " & "isnan" & " already exists, not redeclaring")
when not declared(isnanf):
  proc isnanf*(x: cfloat): cint {.cdecl, importc: "SDL_isnanf".}
else:
  static :
    hint("Declaration of " & "isnanf" & " already exists, not redeclaring")
when not declared(log):
  proc log*(x: cdouble): cdouble {.cdecl, importc: "SDL_log".}
else:
  static :
    hint("Declaration of " & "log" & " already exists, not redeclaring")
when not declared(logf):
  proc logf*(x: cfloat): cfloat {.cdecl, importc: "SDL_logf".}
else:
  static :
    hint("Declaration of " & "logf" & " already exists, not redeclaring")
when not declared(log10):
  proc log10*(x: cdouble): cdouble {.cdecl, importc: "SDL_log10".}
else:
  static :
    hint("Declaration of " & "log10" & " already exists, not redeclaring")
when not declared(log10f):
  proc log10f*(x: cfloat): cfloat {.cdecl, importc: "SDL_log10f".}
else:
  static :
    hint("Declaration of " & "log10f" & " already exists, not redeclaring")
when not declared(modf):
  proc modf*(x: cdouble; y: ptr cdouble): cdouble {.cdecl, importc: "SDL_modf".}
else:
  static :
    hint("Declaration of " & "modf" & " already exists, not redeclaring")
when not declared(modff):
  proc modff*(x: cfloat; y: ptr cfloat): cfloat {.cdecl, importc: "SDL_modff".}
else:
  static :
    hint("Declaration of " & "modff" & " already exists, not redeclaring")
when not declared(pow):
  proc pow*(x: cdouble; y: cdouble): cdouble {.cdecl, importc: "SDL_pow".}
else:
  static :
    hint("Declaration of " & "pow" & " already exists, not redeclaring")
when not declared(powf):
  proc powf*(x: cfloat; y: cfloat): cfloat {.cdecl, importc: "SDL_powf".}
else:
  static :
    hint("Declaration of " & "powf" & " already exists, not redeclaring")
when not declared(round):
  proc round*(x: cdouble): cdouble {.cdecl, importc: "SDL_round".}
else:
  static :
    hint("Declaration of " & "round" & " already exists, not redeclaring")
when not declared(roundf):
  proc roundf*(x: cfloat): cfloat {.cdecl, importc: "SDL_roundf".}
else:
  static :
    hint("Declaration of " & "roundf" & " already exists, not redeclaring")
when not declared(lround):
  proc lround*(x: cdouble): clong {.cdecl, importc: "SDL_lround".}
else:
  static :
    hint("Declaration of " & "lround" & " already exists, not redeclaring")
when not declared(lroundf):
  proc lroundf*(x: cfloat): clong {.cdecl, importc: "SDL_lroundf".}
else:
  static :
    hint("Declaration of " & "lroundf" & " already exists, not redeclaring")
when not declared(scalbn):
  proc scalbn*(x: cdouble; n: cint): cdouble {.cdecl, importc: "SDL_scalbn".}
else:
  static :
    hint("Declaration of " & "scalbn" & " already exists, not redeclaring")
when not declared(scalbnf):
  proc scalbnf*(x: cfloat; n: cint): cfloat {.cdecl, importc: "SDL_scalbnf".}
else:
  static :
    hint("Declaration of " & "scalbnf" & " already exists, not redeclaring")
when not declared(sin):
  proc sin*(x: cdouble): cdouble {.cdecl, importc: "SDL_sin".}
else:
  static :
    hint("Declaration of " & "sin" & " already exists, not redeclaring")
when not declared(sinf):
  proc sinf*(x: cfloat): cfloat {.cdecl, importc: "SDL_sinf".}
else:
  static :
    hint("Declaration of " & "sinf" & " already exists, not redeclaring")
when not declared(sqrt):
  proc sqrt*(x: cdouble): cdouble {.cdecl, importc: "SDL_sqrt".}
else:
  static :
    hint("Declaration of " & "sqrt" & " already exists, not redeclaring")
when not declared(sqrtf):
  proc sqrtf*(x: cfloat): cfloat {.cdecl, importc: "SDL_sqrtf".}
else:
  static :
    hint("Declaration of " & "sqrtf" & " already exists, not redeclaring")
when not declared(tan):
  proc tan*(x: cdouble): cdouble {.cdecl, importc: "SDL_tan".}
else:
  static :
    hint("Declaration of " & "tan" & " already exists, not redeclaring")
when not declared(tanf):
  proc tanf*(x: cfloat): cfloat {.cdecl, importc: "SDL_tanf".}
else:
  static :
    hint("Declaration of " & "tanf" & " already exists, not redeclaring")
when not declared(iconv_open):
  proc iconv_open*(tocode: cstring; fromcode: cstring): iconv_t_520094177 {.
      cdecl, importc: "SDL_iconv_open".}
else:
  static :
    hint("Declaration of " & "iconv_open" & " already exists, not redeclaring")
when not declared(iconv_close):
  proc iconv_close*(cd: iconv_t_520094177): cint {.cdecl,
      importc: "SDL_iconv_close".}
else:
  static :
    hint("Declaration of " & "iconv_close" & " already exists, not redeclaring")
when not declared(iconv):
  proc iconv*(cd: iconv_t_520094177; inbuf: ptr cstring;
              inbytesleft: ptr csize_t; outbuf: ptr cstring;
              outbytesleft: ptr csize_t): csize_t {.cdecl, importc: "SDL_iconv".}
else:
  static :
    hint("Declaration of " & "iconv" & " already exists, not redeclaring")
when not declared(iconv_string):
  proc iconv_string*(tocode: cstring; fromcode: cstring; inbuf: cstring;
                     inbytesleft: csize_t): cstring {.cdecl,
      importc: "SDL_iconv_string".}
else:
  static :
    hint("Declaration of " & "iconv_string" & " already exists, not redeclaring")
when not declared(compiler_debugbreak):
  proc compiler_debugbreak*(): void {.cdecl, importc: "__debugbreak".}
else:
  static :
    hint("Declaration of " & "compiler_debugbreak" &
        " already exists, not redeclaring")
when not declared(ReportAssertion):
  proc ReportAssertion*(data: ptr AssertData_520094187; func_arg: cstring;
                        file: cstring; line: cint): AssertState_520094183 {.
      cdecl, importc: "SDL_ReportAssertion".}
else:
  static :
    hint("Declaration of " & "ReportAssertion" &
        " already exists, not redeclaring")
when not declared(SetAssertionHandler):
  proc SetAssertionHandler*(handler: AssertionHandler_520094189;
                            userdata: pointer): void {.cdecl,
      importc: "SDL_SetAssertionHandler".}
else:
  static :
    hint("Declaration of " & "SetAssertionHandler" &
        " already exists, not redeclaring")
when not declared(GetDefaultAssertionHandler):
  proc GetDefaultAssertionHandler*(): AssertionHandler_520094189 {.cdecl,
      importc: "SDL_GetDefaultAssertionHandler".}
else:
  static :
    hint("Declaration of " & "GetDefaultAssertionHandler" &
        " already exists, not redeclaring")
when not declared(GetAssertionHandler):
  proc GetAssertionHandler*(puserdata: ptr pointer): AssertionHandler_520094189 {.
      cdecl, importc: "SDL_GetAssertionHandler".}
else:
  static :
    hint("Declaration of " & "GetAssertionHandler" &
        " already exists, not redeclaring")
when not declared(GetAssertionReport):
  proc GetAssertionReport*(): ptr AssertData_520094187 {.cdecl,
      importc: "SDL_GetAssertionReport".}
else:
  static :
    hint("Declaration of " & "GetAssertionReport" &
        " already exists, not redeclaring")
when not declared(ResetAssertionReport):
  proc ResetAssertionReport*(): void {.cdecl,
                                       importc: "SDL_ResetAssertionReport".}
else:
  static :
    hint("Declaration of " & "ResetAssertionReport" &
        " already exists, not redeclaring")
when not declared(AsyncIOFromFile):
  proc AsyncIOFromFile*(file: cstring; mode: cstring): ptr AsyncIO_520094191 {.
      cdecl, importc: "SDL_AsyncIOFromFile".}
else:
  static :
    hint("Declaration of " & "AsyncIOFromFile" &
        " already exists, not redeclaring")
when not declared(GetAsyncIOSize):
  proc GetAsyncIOSize*(asyncio: ptr AsyncIO_520094191): Sint64_520094147 {.
      cdecl, importc: "SDL_GetAsyncIOSize".}
else:
  static :
    hint("Declaration of " & "GetAsyncIOSize" &
        " already exists, not redeclaring")
when not declared(ReadAsyncIO):
  proc ReadAsyncIO*(asyncio: ptr AsyncIO_520094191; ptr_arg: pointer;
                    offset: Uint64_520094149; size: Uint64_520094149;
                    queue: ptr AsyncIOQueue_520094205; userdata: pointer): bool {.
      cdecl, importc: "SDL_ReadAsyncIO".}
else:
  static :
    hint("Declaration of " & "ReadAsyncIO" & " already exists, not redeclaring")
when not declared(WriteAsyncIO):
  proc WriteAsyncIO*(asyncio: ptr AsyncIO_520094191; ptr_arg: pointer;
                     offset: Uint64_520094149; size: Uint64_520094149;
                     queue: ptr AsyncIOQueue_520094205; userdata: pointer): bool {.
      cdecl, importc: "SDL_WriteAsyncIO".}
else:
  static :
    hint("Declaration of " & "WriteAsyncIO" & " already exists, not redeclaring")
when not declared(CloseAsyncIO):
  proc CloseAsyncIO*(asyncio: ptr AsyncIO_520094191; flush: bool;
                     queue: ptr AsyncIOQueue_520094205; userdata: pointer): bool {.
      cdecl, importc: "SDL_CloseAsyncIO".}
else:
  static :
    hint("Declaration of " & "CloseAsyncIO" & " already exists, not redeclaring")
when not declared(CreateAsyncIOQueue):
  proc CreateAsyncIOQueue*(): ptr AsyncIOQueue_520094205 {.cdecl,
      importc: "SDL_CreateAsyncIOQueue".}
else:
  static :
    hint("Declaration of " & "CreateAsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(DestroyAsyncIOQueue):
  proc DestroyAsyncIOQueue*(queue: ptr AsyncIOQueue_520094205): void {.cdecl,
      importc: "SDL_DestroyAsyncIOQueue".}
else:
  static :
    hint("Declaration of " & "DestroyAsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(GetAsyncIOResult):
  proc GetAsyncIOResult*(queue: ptr AsyncIOQueue_520094205;
                         outcome: ptr AsyncIOOutcome_520094203): bool {.cdecl,
      importc: "SDL_GetAsyncIOResult".}
else:
  static :
    hint("Declaration of " & "GetAsyncIOResult" &
        " already exists, not redeclaring")
when not declared(WaitAsyncIOResult):
  proc WaitAsyncIOResult*(queue: ptr AsyncIOQueue_520094205;
                          outcome: ptr AsyncIOOutcome_520094203;
                          timeoutMS: Sint32_520094143): bool {.cdecl,
      importc: "SDL_WaitAsyncIOResult".}
else:
  static :
    hint("Declaration of " & "WaitAsyncIOResult" &
        " already exists, not redeclaring")
when not declared(SignalAsyncIOQueue):
  proc SignalAsyncIOQueue*(queue: ptr AsyncIOQueue_520094205): void {.cdecl,
      importc: "SDL_SignalAsyncIOQueue".}
else:
  static :
    hint("Declaration of " & "SignalAsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(LoadFileAsync):
  proc LoadFileAsync*(file: cstring; queue: ptr AsyncIOQueue_520094205;
                      userdata: pointer): bool {.cdecl,
      importc: "SDL_LoadFileAsync".}
else:
  static :
    hint("Declaration of " & "LoadFileAsync" &
        " already exists, not redeclaring")
when not declared(TryLockSpinlock):
  proc TryLockSpinlock*(lock: ptr SpinLock_520094207): bool {.cdecl,
      importc: "SDL_TryLockSpinlock".}
else:
  static :
    hint("Declaration of " & "TryLockSpinlock" &
        " already exists, not redeclaring")
when not declared(LockSpinlock):
  proc LockSpinlock*(lock: ptr SpinLock_520094207): void {.cdecl,
      importc: "SDL_LockSpinlock".}
else:
  static :
    hint("Declaration of " & "LockSpinlock" & " already exists, not redeclaring")
when not declared(UnlockSpinlock):
  proc UnlockSpinlock*(lock: ptr SpinLock_520094207): void {.cdecl,
      importc: "SDL_UnlockSpinlock".}
else:
  static :
    hint("Declaration of " & "UnlockSpinlock" &
        " already exists, not redeclaring")
when not declared(MemoryBarrierReleaseFunction):
  proc MemoryBarrierReleaseFunction*(): void {.cdecl,
      importc: "SDL_MemoryBarrierReleaseFunction".}
else:
  static :
    hint("Declaration of " & "MemoryBarrierReleaseFunction" &
        " already exists, not redeclaring")
when not declared(MemoryBarrierAcquireFunction):
  proc MemoryBarrierAcquireFunction*(): void {.cdecl,
      importc: "SDL_MemoryBarrierAcquireFunction".}
else:
  static :
    hint("Declaration of " & "MemoryBarrierAcquireFunction" &
        " already exists, not redeclaring")
when not declared(CompareAndSwapAtomicInt):
  proc CompareAndSwapAtomicInt*(a: ptr AtomicInt_520094211; oldval: cint;
                                newval: cint): bool {.cdecl,
      importc: "SDL_CompareAndSwapAtomicInt".}
else:
  static :
    hint("Declaration of " & "CompareAndSwapAtomicInt" &
        " already exists, not redeclaring")
when not declared(SetAtomicInt):
  proc SetAtomicInt*(a: ptr AtomicInt_520094211; v: cint): cint {.cdecl,
      importc: "SDL_SetAtomicInt".}
else:
  static :
    hint("Declaration of " & "SetAtomicInt" & " already exists, not redeclaring")
when not declared(GetAtomicInt):
  proc GetAtomicInt*(a: ptr AtomicInt_520094211): cint {.cdecl,
      importc: "SDL_GetAtomicInt".}
else:
  static :
    hint("Declaration of " & "GetAtomicInt" & " already exists, not redeclaring")
when not declared(AddAtomicInt):
  proc AddAtomicInt*(a: ptr AtomicInt_520094211; v: cint): cint {.cdecl,
      importc: "SDL_AddAtomicInt".}
else:
  static :
    hint("Declaration of " & "AddAtomicInt" & " already exists, not redeclaring")
when not declared(CompareAndSwapAtomicU32):
  proc CompareAndSwapAtomicU32*(a: ptr AtomicU32_520094215; oldval: Uint32_520094145;
                                newval: Uint32_520094145): bool {.cdecl,
      importc: "SDL_CompareAndSwapAtomicU32".}
else:
  static :
    hint("Declaration of " & "CompareAndSwapAtomicU32" &
        " already exists, not redeclaring")
when not declared(SetAtomicU32):
  proc SetAtomicU32*(a: ptr AtomicU32_520094215; v: Uint32_520094145): Uint32_520094145 {.
      cdecl, importc: "SDL_SetAtomicU32".}
else:
  static :
    hint("Declaration of " & "SetAtomicU32" & " already exists, not redeclaring")
when not declared(GetAtomicU32):
  proc GetAtomicU32*(a: ptr AtomicU32_520094215): Uint32_520094145 {.cdecl,
      importc: "SDL_GetAtomicU32".}
else:
  static :
    hint("Declaration of " & "GetAtomicU32" & " already exists, not redeclaring")
when not declared(CompareAndSwapAtomicPointer):
  proc CompareAndSwapAtomicPointer*(a: ptr pointer; oldval: pointer;
                                    newval: pointer): bool {.cdecl,
      importc: "SDL_CompareAndSwapAtomicPointer".}
else:
  static :
    hint("Declaration of " & "CompareAndSwapAtomicPointer" &
        " already exists, not redeclaring")
when not declared(SetAtomicPointer):
  proc SetAtomicPointer*(a: ptr pointer; v: pointer): pointer {.cdecl,
      importc: "SDL_SetAtomicPointer".}
else:
  static :
    hint("Declaration of " & "SetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(GetAtomicPointer):
  proc GetAtomicPointer*(a: ptr pointer): pointer {.cdecl,
      importc: "SDL_GetAtomicPointer".}
else:
  static :
    hint("Declaration of " & "GetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(SetError):
  proc SetError*(fmt: cstring): bool {.cdecl, varargs, importc: "SDL_SetError".}
else:
  static :
    hint("Declaration of " & "SetError" & " already exists, not redeclaring")
when not declared(SetErrorV):
  proc SetErrorV*(fmt: cstring): bool {.cdecl, varargs, importc: "SDL_SetErrorV".}
else:
  static :
    hint("Declaration of " & "SetErrorV" & " already exists, not redeclaring")
when not declared(OutOfMemory):
  proc OutOfMemory*(): bool {.cdecl, importc: "SDL_OutOfMemory".}
else:
  static :
    hint("Declaration of " & "OutOfMemory" & " already exists, not redeclaring")
when not declared(GetError):
  proc GetError*(): cstring {.cdecl, importc: "SDL_GetError".}
else:
  static :
    hint("Declaration of " & "GetError" & " already exists, not redeclaring")
when not declared(ClearError):
  proc ClearError*(): bool {.cdecl, importc: "SDL_ClearError".}
else:
  static :
    hint("Declaration of " & "ClearError" & " already exists, not redeclaring")
when not declared(GetGlobalProperties):
  proc GetGlobalProperties*(): PropertiesID_520094217 {.cdecl,
      importc: "SDL_GetGlobalProperties".}
else:
  static :
    hint("Declaration of " & "GetGlobalProperties" &
        " already exists, not redeclaring")
when not declared(CreateProperties):
  proc CreateProperties*(): PropertiesID_520094217 {.cdecl,
      importc: "SDL_CreateProperties".}
else:
  static :
    hint("Declaration of " & "CreateProperties" &
        " already exists, not redeclaring")
when not declared(CopyProperties):
  proc CopyProperties*(src: PropertiesID_520094217; dst: PropertiesID_520094217): bool {.
      cdecl, importc: "SDL_CopyProperties".}
else:
  static :
    hint("Declaration of " & "CopyProperties" &
        " already exists, not redeclaring")
when not declared(LockProperties):
  proc LockProperties*(props: PropertiesID_520094217): bool {.cdecl,
      importc: "SDL_LockProperties".}
else:
  static :
    hint("Declaration of " & "LockProperties" &
        " already exists, not redeclaring")
when not declared(UnlockProperties):
  proc UnlockProperties*(props: PropertiesID_520094217): void {.cdecl,
      importc: "SDL_UnlockProperties".}
else:
  static :
    hint("Declaration of " & "UnlockProperties" &
        " already exists, not redeclaring")
when not declared(SetPointerPropertyWithCleanup):
  proc SetPointerPropertyWithCleanup*(props: PropertiesID_520094217;
                                      name: cstring; value: pointer;
                                      cleanup: CleanupPropertyCallback_520094223;
                                      userdata: pointer): bool {.cdecl,
      importc: "SDL_SetPointerPropertyWithCleanup".}
else:
  static :
    hint("Declaration of " & "SetPointerPropertyWithCleanup" &
        " already exists, not redeclaring")
when not declared(SetPointerProperty):
  proc SetPointerProperty*(props: PropertiesID_520094217; name: cstring;
                           value: pointer): bool {.cdecl,
      importc: "SDL_SetPointerProperty".}
else:
  static :
    hint("Declaration of " & "SetPointerProperty" &
        " already exists, not redeclaring")
when not declared(SetStringProperty):
  proc SetStringProperty*(props: PropertiesID_520094217; name: cstring;
                          value: cstring): bool {.cdecl,
      importc: "SDL_SetStringProperty".}
else:
  static :
    hint("Declaration of " & "SetStringProperty" &
        " already exists, not redeclaring")
when not declared(SetNumberProperty):
  proc SetNumberProperty*(props: PropertiesID_520094217; name: cstring;
                          value: Sint64_520094147): bool {.cdecl,
      importc: "SDL_SetNumberProperty".}
else:
  static :
    hint("Declaration of " & "SetNumberProperty" &
        " already exists, not redeclaring")
when not declared(SetFloatProperty):
  proc SetFloatProperty*(props: PropertiesID_520094217; name: cstring;
                         value: cfloat): bool {.cdecl,
      importc: "SDL_SetFloatProperty".}
else:
  static :
    hint("Declaration of " & "SetFloatProperty" &
        " already exists, not redeclaring")
when not declared(SetBooleanProperty):
  proc SetBooleanProperty*(props: PropertiesID_520094217; name: cstring;
                           value: bool): bool {.cdecl,
      importc: "SDL_SetBooleanProperty".}
else:
  static :
    hint("Declaration of " & "SetBooleanProperty" &
        " already exists, not redeclaring")
when not declared(HasProperty):
  proc HasProperty*(props: PropertiesID_520094217; name: cstring): bool {.cdecl,
      importc: "SDL_HasProperty".}
else:
  static :
    hint("Declaration of " & "HasProperty" & " already exists, not redeclaring")
when not declared(GetPropertyType):
  proc GetPropertyType*(props: PropertiesID_520094217; name: cstring): PropertyType_520094221 {.
      cdecl, importc: "SDL_GetPropertyType".}
else:
  static :
    hint("Declaration of " & "GetPropertyType" &
        " already exists, not redeclaring")
when not declared(GetPointerProperty):
  proc GetPointerProperty*(props: PropertiesID_520094217; name: cstring;
                           default_value: pointer): pointer {.cdecl,
      importc: "SDL_GetPointerProperty".}
else:
  static :
    hint("Declaration of " & "GetPointerProperty" &
        " already exists, not redeclaring")
when not declared(GetStringProperty):
  proc GetStringProperty*(props: PropertiesID_520094217; name: cstring;
                          default_value: cstring): cstring {.cdecl,
      importc: "SDL_GetStringProperty".}
else:
  static :
    hint("Declaration of " & "GetStringProperty" &
        " already exists, not redeclaring")
when not declared(GetNumberProperty):
  proc GetNumberProperty*(props: PropertiesID_520094217; name: cstring;
                          default_value: Sint64_520094147): Sint64_520094147 {.
      cdecl, importc: "SDL_GetNumberProperty".}
else:
  static :
    hint("Declaration of " & "GetNumberProperty" &
        " already exists, not redeclaring")
when not declared(GetFloatProperty):
  proc GetFloatProperty*(props: PropertiesID_520094217; name: cstring;
                         default_value: cfloat): cfloat {.cdecl,
      importc: "SDL_GetFloatProperty".}
else:
  static :
    hint("Declaration of " & "GetFloatProperty" &
        " already exists, not redeclaring")
when not declared(GetBooleanProperty):
  proc GetBooleanProperty*(props: PropertiesID_520094217; name: cstring;
                           default_value: bool): bool {.cdecl,
      importc: "SDL_GetBooleanProperty".}
else:
  static :
    hint("Declaration of " & "GetBooleanProperty" &
        " already exists, not redeclaring")
when not declared(ClearProperty):
  proc ClearProperty*(props: PropertiesID_520094217; name: cstring): bool {.
      cdecl, importc: "SDL_ClearProperty".}
else:
  static :
    hint("Declaration of " & "ClearProperty" &
        " already exists, not redeclaring")
when not declared(EnumerateProperties):
  proc EnumerateProperties*(props: PropertiesID_520094217;
                            callback: EnumeratePropertiesCallback_520094225;
                            userdata: pointer): bool {.cdecl,
      importc: "SDL_EnumerateProperties".}
else:
  static :
    hint("Declaration of " & "EnumerateProperties" &
        " already exists, not redeclaring")
when not declared(DestroyProperties):
  proc DestroyProperties*(props: PropertiesID_520094217): void {.cdecl,
      importc: "SDL_DestroyProperties".}
else:
  static :
    hint("Declaration of " & "DestroyProperties" &
        " already exists, not redeclaring")
when not declared(CreateThreadRuntime):
  proc CreateThreadRuntime*(fn: ThreadFunction_520094237; name: cstring;
                            data: pointer; pfnBeginThread: FunctionPointer_520094179;
                            pfnEndThread: FunctionPointer_520094179): ptr Thread_520094227 {.
      cdecl, importc: "SDL_CreateThreadRuntime".}
else:
  static :
    hint("Declaration of " & "CreateThreadRuntime" &
        " already exists, not redeclaring")
when not declared(CreateThreadWithPropertiesRuntime):
  proc CreateThreadWithPropertiesRuntime*(props: PropertiesID_520094217;
      pfnBeginThread: FunctionPointer_520094179; pfnEndThread: FunctionPointer_520094179): ptr Thread_520094227 {.
      cdecl, importc: "SDL_CreateThreadWithPropertiesRuntime".}
else:
  static :
    hint("Declaration of " & "CreateThreadWithPropertiesRuntime" &
        " already exists, not redeclaring")
when not declared(GetThreadName):
  proc GetThreadName*(thread: ptr Thread_520094227): cstring {.cdecl,
      importc: "SDL_GetThreadName".}
else:
  static :
    hint("Declaration of " & "GetThreadName" &
        " already exists, not redeclaring")
when not declared(GetCurrentThreadID):
  proc GetCurrentThreadID*(): ThreadID_520094229 {.cdecl,
      importc: "SDL_GetCurrentThreadID".}
else:
  static :
    hint("Declaration of " & "GetCurrentThreadID" &
        " already exists, not redeclaring")
when not declared(GetThreadID):
  proc GetThreadID*(thread: ptr Thread_520094227): ThreadID_520094229 {.cdecl,
      importc: "SDL_GetThreadID".}
else:
  static :
    hint("Declaration of " & "GetThreadID" & " already exists, not redeclaring")
when not declared(SetCurrentThreadPriority):
  proc SetCurrentThreadPriority*(priority: ThreadPriority_520094235): bool {.
      cdecl, importc: "SDL_SetCurrentThreadPriority".}
else:
  static :
    hint("Declaration of " & "SetCurrentThreadPriority" &
        " already exists, not redeclaring")
when not declared(WaitThread):
  proc WaitThread*(thread: ptr Thread_520094227; status: ptr cint): void {.
      cdecl, importc: "SDL_WaitThread".}
else:
  static :
    hint("Declaration of " & "WaitThread" & " already exists, not redeclaring")
when not declared(DetachThread):
  proc DetachThread*(thread: ptr Thread_520094227): void {.cdecl,
      importc: "SDL_DetachThread".}
else:
  static :
    hint("Declaration of " & "DetachThread" & " already exists, not redeclaring")
when not declared(GetTLS):
  proc GetTLS*(id: ptr TLSID_520094231): pointer {.cdecl, importc: "SDL_GetTLS".}
else:
  static :
    hint("Declaration of " & "GetTLS" & " already exists, not redeclaring")
when not declared(SetTLS):
  proc SetTLS*(id: ptr TLSID_520094231; value: pointer;
               destructor: TLSDestructorCallback_520094239): bool {.cdecl,
      importc: "SDL_SetTLS".}
else:
  static :
    hint("Declaration of " & "SetTLS" & " already exists, not redeclaring")
when not declared(CleanupTLS):
  proc CleanupTLS*(): void {.cdecl, importc: "SDL_CleanupTLS".}
else:
  static :
    hint("Declaration of " & "CleanupTLS" & " already exists, not redeclaring")
when not declared(CreateMutex):
  proc CreateMutex*(): ptr Mutex_520094241 {.cdecl, importc: "SDL_CreateMutex".}
else:
  static :
    hint("Declaration of " & "CreateMutex" & " already exists, not redeclaring")
when not declared(LockMutex):
  proc LockMutex*(mutex: ptr Mutex_520094241): void {.cdecl,
      importc: "SDL_LockMutex".}
else:
  static :
    hint("Declaration of " & "LockMutex" & " already exists, not redeclaring")
when not declared(TryLockMutex):
  proc TryLockMutex*(mutex: ptr Mutex_520094241): bool {.cdecl,
      importc: "SDL_TryLockMutex".}
else:
  static :
    hint("Declaration of " & "TryLockMutex" & " already exists, not redeclaring")
when not declared(UnlockMutex):
  proc UnlockMutex*(mutex: ptr Mutex_520094241): void {.cdecl,
      importc: "SDL_UnlockMutex".}
else:
  static :
    hint("Declaration of " & "UnlockMutex" & " already exists, not redeclaring")
when not declared(DestroyMutex):
  proc DestroyMutex*(mutex: ptr Mutex_520094241): void {.cdecl,
      importc: "SDL_DestroyMutex".}
else:
  static :
    hint("Declaration of " & "DestroyMutex" & " already exists, not redeclaring")
when not declared(CreateRWLock):
  proc CreateRWLock*(): ptr RWLock_520094243 {.cdecl,
      importc: "SDL_CreateRWLock".}
else:
  static :
    hint("Declaration of " & "CreateRWLock" & " already exists, not redeclaring")
when not declared(LockRWLockForReading):
  proc LockRWLockForReading*(rwlock: ptr RWLock_520094243): void {.cdecl,
      importc: "SDL_LockRWLockForReading".}
else:
  static :
    hint("Declaration of " & "LockRWLockForReading" &
        " already exists, not redeclaring")
when not declared(LockRWLockForWriting):
  proc LockRWLockForWriting*(rwlock: ptr RWLock_520094243): void {.cdecl,
      importc: "SDL_LockRWLockForWriting".}
else:
  static :
    hint("Declaration of " & "LockRWLockForWriting" &
        " already exists, not redeclaring")
when not declared(TryLockRWLockForReading):
  proc TryLockRWLockForReading*(rwlock: ptr RWLock_520094243): bool {.cdecl,
      importc: "SDL_TryLockRWLockForReading".}
else:
  static :
    hint("Declaration of " & "TryLockRWLockForReading" &
        " already exists, not redeclaring")
when not declared(TryLockRWLockForWriting):
  proc TryLockRWLockForWriting*(rwlock: ptr RWLock_520094243): bool {.cdecl,
      importc: "SDL_TryLockRWLockForWriting".}
else:
  static :
    hint("Declaration of " & "TryLockRWLockForWriting" &
        " already exists, not redeclaring")
when not declared(UnlockRWLock):
  proc UnlockRWLock*(rwlock: ptr RWLock_520094243): void {.cdecl,
      importc: "SDL_UnlockRWLock".}
else:
  static :
    hint("Declaration of " & "UnlockRWLock" & " already exists, not redeclaring")
when not declared(DestroyRWLock):
  proc DestroyRWLock*(rwlock: ptr RWLock_520094243): void {.cdecl,
      importc: "SDL_DestroyRWLock".}
else:
  static :
    hint("Declaration of " & "DestroyRWLock" &
        " already exists, not redeclaring")
when not declared(CreateSemaphore):
  proc CreateSemaphore*(initial_value: Uint32_520094145): ptr Semaphore_520094245 {.
      cdecl, importc: "SDL_CreateSemaphore".}
else:
  static :
    hint("Declaration of " & "CreateSemaphore" &
        " already exists, not redeclaring")
when not declared(DestroySemaphore):
  proc DestroySemaphore*(sem: ptr Semaphore_520094245): void {.cdecl,
      importc: "SDL_DestroySemaphore".}
else:
  static :
    hint("Declaration of " & "DestroySemaphore" &
        " already exists, not redeclaring")
when not declared(WaitSemaphore):
  proc WaitSemaphore*(sem: ptr Semaphore_520094245): void {.cdecl,
      importc: "SDL_WaitSemaphore".}
else:
  static :
    hint("Declaration of " & "WaitSemaphore" &
        " already exists, not redeclaring")
when not declared(TryWaitSemaphore):
  proc TryWaitSemaphore*(sem: ptr Semaphore_520094245): bool {.cdecl,
      importc: "SDL_TryWaitSemaphore".}
else:
  static :
    hint("Declaration of " & "TryWaitSemaphore" &
        " already exists, not redeclaring")
when not declared(WaitSemaphoreTimeout):
  proc WaitSemaphoreTimeout*(sem: ptr Semaphore_520094245; timeoutMS: Sint32_520094143): bool {.
      cdecl, importc: "SDL_WaitSemaphoreTimeout".}
else:
  static :
    hint("Declaration of " & "WaitSemaphoreTimeout" &
        " already exists, not redeclaring")
when not declared(SignalSemaphore):
  proc SignalSemaphore*(sem: ptr Semaphore_520094245): void {.cdecl,
      importc: "SDL_SignalSemaphore".}
else:
  static :
    hint("Declaration of " & "SignalSemaphore" &
        " already exists, not redeclaring")
when not declared(GetSemaphoreValue):
  proc GetSemaphoreValue*(sem: ptr Semaphore_520094245): Uint32_520094145 {.
      cdecl, importc: "SDL_GetSemaphoreValue".}
else:
  static :
    hint("Declaration of " & "GetSemaphoreValue" &
        " already exists, not redeclaring")
when not declared(CreateCondition):
  proc CreateCondition*(): ptr Condition_520094247 {.cdecl,
      importc: "SDL_CreateCondition".}
else:
  static :
    hint("Declaration of " & "CreateCondition" &
        " already exists, not redeclaring")
when not declared(DestroyCondition):
  proc DestroyCondition*(cond: ptr Condition_520094247): void {.cdecl,
      importc: "SDL_DestroyCondition".}
else:
  static :
    hint("Declaration of " & "DestroyCondition" &
        " already exists, not redeclaring")
when not declared(SignalCondition):
  proc SignalCondition*(cond: ptr Condition_520094247): void {.cdecl,
      importc: "SDL_SignalCondition".}
else:
  static :
    hint("Declaration of " & "SignalCondition" &
        " already exists, not redeclaring")
when not declared(BroadcastCondition):
  proc BroadcastCondition*(cond: ptr Condition_520094247): void {.cdecl,
      importc: "SDL_BroadcastCondition".}
else:
  static :
    hint("Declaration of " & "BroadcastCondition" &
        " already exists, not redeclaring")
when not declared(WaitCondition):
  proc WaitCondition*(cond: ptr Condition_520094247; mutex: ptr Mutex_520094241): void {.
      cdecl, importc: "SDL_WaitCondition".}
else:
  static :
    hint("Declaration of " & "WaitCondition" &
        " already exists, not redeclaring")
when not declared(WaitConditionTimeout):
  proc WaitConditionTimeout*(cond: ptr Condition_520094247; mutex: ptr Mutex_520094241;
                             timeoutMS: Sint32_520094143): bool {.cdecl,
      importc: "SDL_WaitConditionTimeout".}
else:
  static :
    hint("Declaration of " & "WaitConditionTimeout" &
        " already exists, not redeclaring")
when not declared(ShouldInit):
  proc ShouldInit*(state: ptr InitState_520094255): bool {.cdecl,
      importc: "SDL_ShouldInit".}
else:
  static :
    hint("Declaration of " & "ShouldInit" & " already exists, not redeclaring")
when not declared(ShouldQuit):
  proc ShouldQuit*(state: ptr InitState_520094255): bool {.cdecl,
      importc: "SDL_ShouldQuit".}
else:
  static :
    hint("Declaration of " & "ShouldQuit" & " already exists, not redeclaring")
when not declared(SetInitialized):
  proc SetInitialized*(state: ptr InitState_520094255; initialized: bool): void {.
      cdecl, importc: "SDL_SetInitialized".}
else:
  static :
    hint("Declaration of " & "SetInitialized" &
        " already exists, not redeclaring")
when not declared(IOFromFile):
  proc IOFromFile*(file: cstring; mode: cstring): ptr IOStream_520094269 {.
      cdecl, importc: "SDL_IOFromFile".}
else:
  static :
    hint("Declaration of " & "IOFromFile" & " already exists, not redeclaring")
when not declared(IOFromMem):
  proc IOFromMem*(mem: pointer; size: csize_t): ptr IOStream_520094269 {.cdecl,
      importc: "SDL_IOFromMem".}
else:
  static :
    hint("Declaration of " & "IOFromMem" & " already exists, not redeclaring")
when not declared(IOFromConstMem):
  proc IOFromConstMem*(mem: pointer; size: csize_t): ptr IOStream_520094269 {.
      cdecl, importc: "SDL_IOFromConstMem".}
else:
  static :
    hint("Declaration of " & "IOFromConstMem" &
        " already exists, not redeclaring")
when not declared(IOFromDynamicMem):
  proc IOFromDynamicMem*(): ptr IOStream_520094269 {.cdecl,
      importc: "SDL_IOFromDynamicMem".}
else:
  static :
    hint("Declaration of " & "IOFromDynamicMem" &
        " already exists, not redeclaring")
when not declared(OpenIO):
  proc OpenIO*(iface: ptr IOStreamInterface_520094267; userdata: pointer): ptr IOStream_520094269 {.
      cdecl, importc: "SDL_OpenIO".}
else:
  static :
    hint("Declaration of " & "OpenIO" & " already exists, not redeclaring")
when not declared(CloseIO):
  proc CloseIO*(context: ptr IOStream_520094269): bool {.cdecl,
      importc: "SDL_CloseIO".}
else:
  static :
    hint("Declaration of " & "CloseIO" & " already exists, not redeclaring")
when not declared(GetIOProperties):
  proc GetIOProperties*(context: ptr IOStream_520094269): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetIOProperties".}
else:
  static :
    hint("Declaration of " & "GetIOProperties" &
        " already exists, not redeclaring")
when not declared(GetIOStatus):
  proc GetIOStatus*(context: ptr IOStream_520094269): IOStatus_520094259 {.
      cdecl, importc: "SDL_GetIOStatus".}
else:
  static :
    hint("Declaration of " & "GetIOStatus" & " already exists, not redeclaring")
when not declared(GetIOSize):
  proc GetIOSize*(context: ptr IOStream_520094269): Sint64_520094147 {.cdecl,
      importc: "SDL_GetIOSize".}
else:
  static :
    hint("Declaration of " & "GetIOSize" & " already exists, not redeclaring")
when not declared(SeekIO):
  proc SeekIO*(context: ptr IOStream_520094269; offset: Sint64_520094147;
               whence: IOWhence_520094263): Sint64_520094147 {.cdecl,
      importc: "SDL_SeekIO".}
else:
  static :
    hint("Declaration of " & "SeekIO" & " already exists, not redeclaring")
when not declared(TellIO):
  proc TellIO*(context: ptr IOStream_520094269): Sint64_520094147 {.cdecl,
      importc: "SDL_TellIO".}
else:
  static :
    hint("Declaration of " & "TellIO" & " already exists, not redeclaring")
when not declared(ReadIO):
  proc ReadIO*(context: ptr IOStream_520094269; ptr_arg: pointer; size: csize_t): csize_t {.
      cdecl, importc: "SDL_ReadIO".}
else:
  static :
    hint("Declaration of " & "ReadIO" & " already exists, not redeclaring")
when not declared(WriteIO):
  proc WriteIO*(context: ptr IOStream_520094269; ptr_arg: pointer; size: csize_t): csize_t {.
      cdecl, importc: "SDL_WriteIO".}
else:
  static :
    hint("Declaration of " & "WriteIO" & " already exists, not redeclaring")
when not declared(IOprintf):
  proc IOprintf*(context: ptr IOStream_520094269; fmt: cstring): csize_t {.
      cdecl, varargs, importc: "SDL_IOprintf".}
else:
  static :
    hint("Declaration of " & "IOprintf" & " already exists, not redeclaring")
when not declared(IOvprintf):
  proc IOvprintf*(context: ptr IOStream_520094269; fmt: cstring): csize_t {.
      cdecl, varargs, importc: "SDL_IOvprintf".}
else:
  static :
    hint("Declaration of " & "IOvprintf" & " already exists, not redeclaring")
when not declared(FlushIO):
  proc FlushIO*(context: ptr IOStream_520094269): bool {.cdecl,
      importc: "SDL_FlushIO".}
else:
  static :
    hint("Declaration of " & "FlushIO" & " already exists, not redeclaring")
when not declared(LoadFile_IO):
  proc LoadFile_IO*(src: ptr IOStream_520094269; datasize: ptr csize_t;
                    closeio: bool): pointer {.cdecl, importc: "SDL_LoadFile_IO".}
else:
  static :
    hint("Declaration of " & "LoadFile_IO" & " already exists, not redeclaring")
when not declared(LoadFile):
  proc LoadFile*(file: cstring; datasize: ptr csize_t): pointer {.cdecl,
      importc: "SDL_LoadFile".}
else:
  static :
    hint("Declaration of " & "LoadFile" & " already exists, not redeclaring")
when not declared(SaveFile_IO):
  proc SaveFile_IO*(src: ptr IOStream_520094269; data: pointer;
                    datasize: csize_t; closeio: bool): bool {.cdecl,
      importc: "SDL_SaveFile_IO".}
else:
  static :
    hint("Declaration of " & "SaveFile_IO" & " already exists, not redeclaring")
when not declared(SaveFile):
  proc SaveFile*(file: cstring; data: pointer; datasize: csize_t): bool {.cdecl,
      importc: "SDL_SaveFile".}
else:
  static :
    hint("Declaration of " & "SaveFile" & " already exists, not redeclaring")
when not declared(ReadU8):
  proc ReadU8*(src: ptr IOStream_520094269; value: ptr Uint8_520094137): bool {.
      cdecl, importc: "SDL_ReadU8".}
else:
  static :
    hint("Declaration of " & "ReadU8" & " already exists, not redeclaring")
when not declared(ReadS8):
  proc ReadS8*(src: ptr IOStream_520094269; value: ptr Sint8_520094135): bool {.
      cdecl, importc: "SDL_ReadS8".}
else:
  static :
    hint("Declaration of " & "ReadS8" & " already exists, not redeclaring")
when not declared(ReadU16LE):
  proc ReadU16LE*(src: ptr IOStream_520094269; value: ptr Uint16_520094141): bool {.
      cdecl, importc: "SDL_ReadU16LE".}
else:
  static :
    hint("Declaration of " & "ReadU16LE" & " already exists, not redeclaring")
when not declared(ReadS16LE):
  proc ReadS16LE*(src: ptr IOStream_520094269; value: ptr Sint16_520094139): bool {.
      cdecl, importc: "SDL_ReadS16LE".}
else:
  static :
    hint("Declaration of " & "ReadS16LE" & " already exists, not redeclaring")
when not declared(ReadU16BE):
  proc ReadU16BE*(src: ptr IOStream_520094269; value: ptr Uint16_520094141): bool {.
      cdecl, importc: "SDL_ReadU16BE".}
else:
  static :
    hint("Declaration of " & "ReadU16BE" & " already exists, not redeclaring")
when not declared(ReadS16BE):
  proc ReadS16BE*(src: ptr IOStream_520094269; value: ptr Sint16_520094139): bool {.
      cdecl, importc: "SDL_ReadS16BE".}
else:
  static :
    hint("Declaration of " & "ReadS16BE" & " already exists, not redeclaring")
when not declared(ReadU32LE):
  proc ReadU32LE*(src: ptr IOStream_520094269; value: ptr Uint32_520094145): bool {.
      cdecl, importc: "SDL_ReadU32LE".}
else:
  static :
    hint("Declaration of " & "ReadU32LE" & " already exists, not redeclaring")
when not declared(ReadS32LE):
  proc ReadS32LE*(src: ptr IOStream_520094269; value: ptr Sint32_520094143): bool {.
      cdecl, importc: "SDL_ReadS32LE".}
else:
  static :
    hint("Declaration of " & "ReadS32LE" & " already exists, not redeclaring")
when not declared(ReadU32BE):
  proc ReadU32BE*(src: ptr IOStream_520094269; value: ptr Uint32_520094145): bool {.
      cdecl, importc: "SDL_ReadU32BE".}
else:
  static :
    hint("Declaration of " & "ReadU32BE" & " already exists, not redeclaring")
when not declared(ReadS32BE):
  proc ReadS32BE*(src: ptr IOStream_520094269; value: ptr Sint32_520094143): bool {.
      cdecl, importc: "SDL_ReadS32BE".}
else:
  static :
    hint("Declaration of " & "ReadS32BE" & " already exists, not redeclaring")
when not declared(ReadU64LE):
  proc ReadU64LE*(src: ptr IOStream_520094269; value: ptr Uint64_520094149): bool {.
      cdecl, importc: "SDL_ReadU64LE".}
else:
  static :
    hint("Declaration of " & "ReadU64LE" & " already exists, not redeclaring")
when not declared(ReadS64LE):
  proc ReadS64LE*(src: ptr IOStream_520094269; value: ptr Sint64_520094147): bool {.
      cdecl, importc: "SDL_ReadS64LE".}
else:
  static :
    hint("Declaration of " & "ReadS64LE" & " already exists, not redeclaring")
when not declared(ReadU64BE):
  proc ReadU64BE*(src: ptr IOStream_520094269; value: ptr Uint64_520094149): bool {.
      cdecl, importc: "SDL_ReadU64BE".}
else:
  static :
    hint("Declaration of " & "ReadU64BE" & " already exists, not redeclaring")
when not declared(ReadS64BE):
  proc ReadS64BE*(src: ptr IOStream_520094269; value: ptr Sint64_520094147): bool {.
      cdecl, importc: "SDL_ReadS64BE".}
else:
  static :
    hint("Declaration of " & "ReadS64BE" & " already exists, not redeclaring")
when not declared(WriteU8):
  proc WriteU8*(dst: ptr IOStream_520094269; value: Uint8_520094137): bool {.
      cdecl, importc: "SDL_WriteU8".}
else:
  static :
    hint("Declaration of " & "WriteU8" & " already exists, not redeclaring")
when not declared(WriteS8):
  proc WriteS8*(dst: ptr IOStream_520094269; value: Sint8_520094135): bool {.
      cdecl, importc: "SDL_WriteS8".}
else:
  static :
    hint("Declaration of " & "WriteS8" & " already exists, not redeclaring")
when not declared(WriteU16LE):
  proc WriteU16LE*(dst: ptr IOStream_520094269; value: Uint16_520094141): bool {.
      cdecl, importc: "SDL_WriteU16LE".}
else:
  static :
    hint("Declaration of " & "WriteU16LE" & " already exists, not redeclaring")
when not declared(WriteS16LE):
  proc WriteS16LE*(dst: ptr IOStream_520094269; value: Sint16_520094139): bool {.
      cdecl, importc: "SDL_WriteS16LE".}
else:
  static :
    hint("Declaration of " & "WriteS16LE" & " already exists, not redeclaring")
when not declared(WriteU16BE):
  proc WriteU16BE*(dst: ptr IOStream_520094269; value: Uint16_520094141): bool {.
      cdecl, importc: "SDL_WriteU16BE".}
else:
  static :
    hint("Declaration of " & "WriteU16BE" & " already exists, not redeclaring")
when not declared(WriteS16BE):
  proc WriteS16BE*(dst: ptr IOStream_520094269; value: Sint16_520094139): bool {.
      cdecl, importc: "SDL_WriteS16BE".}
else:
  static :
    hint("Declaration of " & "WriteS16BE" & " already exists, not redeclaring")
when not declared(WriteU32LE):
  proc WriteU32LE*(dst: ptr IOStream_520094269; value: Uint32_520094145): bool {.
      cdecl, importc: "SDL_WriteU32LE".}
else:
  static :
    hint("Declaration of " & "WriteU32LE" & " already exists, not redeclaring")
when not declared(WriteS32LE):
  proc WriteS32LE*(dst: ptr IOStream_520094269; value: Sint32_520094143): bool {.
      cdecl, importc: "SDL_WriteS32LE".}
else:
  static :
    hint("Declaration of " & "WriteS32LE" & " already exists, not redeclaring")
when not declared(WriteU32BE):
  proc WriteU32BE*(dst: ptr IOStream_520094269; value: Uint32_520094145): bool {.
      cdecl, importc: "SDL_WriteU32BE".}
else:
  static :
    hint("Declaration of " & "WriteU32BE" & " already exists, not redeclaring")
when not declared(WriteS32BE):
  proc WriteS32BE*(dst: ptr IOStream_520094269; value: Sint32_520094143): bool {.
      cdecl, importc: "SDL_WriteS32BE".}
else:
  static :
    hint("Declaration of " & "WriteS32BE" & " already exists, not redeclaring")
when not declared(WriteU64LE):
  proc WriteU64LE*(dst: ptr IOStream_520094269; value: Uint64_520094149): bool {.
      cdecl, importc: "SDL_WriteU64LE".}
else:
  static :
    hint("Declaration of " & "WriteU64LE" & " already exists, not redeclaring")
when not declared(WriteS64LE):
  proc WriteS64LE*(dst: ptr IOStream_520094269; value: Sint64_520094147): bool {.
      cdecl, importc: "SDL_WriteS64LE".}
else:
  static :
    hint("Declaration of " & "WriteS64LE" & " already exists, not redeclaring")
when not declared(WriteU64BE):
  proc WriteU64BE*(dst: ptr IOStream_520094269; value: Uint64_520094149): bool {.
      cdecl, importc: "SDL_WriteU64BE".}
else:
  static :
    hint("Declaration of " & "WriteU64BE" & " already exists, not redeclaring")
when not declared(WriteS64BE):
  proc WriteS64BE*(dst: ptr IOStream_520094269; value: Sint64_520094147): bool {.
      cdecl, importc: "SDL_WriteS64BE".}
else:
  static :
    hint("Declaration of " & "WriteS64BE" & " already exists, not redeclaring")
when not declared(GetNumAudioDrivers):
  proc GetNumAudioDrivers*(): cint {.cdecl, importc: "SDL_GetNumAudioDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumAudioDrivers" &
        " already exists, not redeclaring")
when not declared(GetAudioDriver):
  proc GetAudioDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetAudioDriver".}
else:
  static :
    hint("Declaration of " & "GetAudioDriver" &
        " already exists, not redeclaring")
when not declared(GetCurrentAudioDriver):
  proc GetCurrentAudioDriver*(): cstring {.cdecl,
      importc: "SDL_GetCurrentAudioDriver".}
else:
  static :
    hint("Declaration of " & "GetCurrentAudioDriver" &
        " already exists, not redeclaring")
when not declared(GetAudioPlaybackDevices):
  proc GetAudioPlaybackDevices*(count: ptr cint): ptr AudioDeviceID_520094275 {.
      cdecl, importc: "SDL_GetAudioPlaybackDevices".}
else:
  static :
    hint("Declaration of " & "GetAudioPlaybackDevices" &
        " already exists, not redeclaring")
when not declared(GetAudioRecordingDevices):
  proc GetAudioRecordingDevices*(count: ptr cint): ptr AudioDeviceID_520094275 {.
      cdecl, importc: "SDL_GetAudioRecordingDevices".}
else:
  static :
    hint("Declaration of " & "GetAudioRecordingDevices" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceName):
  proc GetAudioDeviceName*(devid: AudioDeviceID_520094275): cstring {.cdecl,
      importc: "SDL_GetAudioDeviceName".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceName" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceFormat):
  proc GetAudioDeviceFormat*(devid: AudioDeviceID_520094275;
                             spec: ptr AudioSpec_520094279;
                             sample_frames: ptr cint): bool {.cdecl,
      importc: "SDL_GetAudioDeviceFormat".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceFormat" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceChannelMap):
  proc GetAudioDeviceChannelMap*(devid: AudioDeviceID_520094275; count: ptr cint): ptr cint {.
      cdecl, importc: "SDL_GetAudioDeviceChannelMap".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceChannelMap" &
        " already exists, not redeclaring")
when not declared(OpenAudioDevice):
  proc OpenAudioDevice*(devid: AudioDeviceID_520094275; spec: ptr AudioSpec_520094279): AudioDeviceID_520094275 {.
      cdecl, importc: "SDL_OpenAudioDevice".}
else:
  static :
    hint("Declaration of " & "OpenAudioDevice" &
        " already exists, not redeclaring")
when not declared(IsAudioDevicePhysical):
  proc IsAudioDevicePhysical*(devid: AudioDeviceID_520094275): bool {.cdecl,
      importc: "SDL_IsAudioDevicePhysical".}
else:
  static :
    hint("Declaration of " & "IsAudioDevicePhysical" &
        " already exists, not redeclaring")
when not declared(IsAudioDevicePlayback):
  proc IsAudioDevicePlayback*(devid: AudioDeviceID_520094275): bool {.cdecl,
      importc: "SDL_IsAudioDevicePlayback".}
else:
  static :
    hint("Declaration of " & "IsAudioDevicePlayback" &
        " already exists, not redeclaring")
when not declared(PauseAudioDevice):
  proc PauseAudioDevice*(dev: AudioDeviceID_520094275): bool {.cdecl,
      importc: "SDL_PauseAudioDevice".}
else:
  static :
    hint("Declaration of " & "PauseAudioDevice" &
        " already exists, not redeclaring")
when not declared(ResumeAudioDevice):
  proc ResumeAudioDevice*(dev: AudioDeviceID_520094275): bool {.cdecl,
      importc: "SDL_ResumeAudioDevice".}
else:
  static :
    hint("Declaration of " & "ResumeAudioDevice" &
        " already exists, not redeclaring")
when not declared(AudioDevicePaused):
  proc AudioDevicePaused*(dev: AudioDeviceID_520094275): bool {.cdecl,
      importc: "SDL_AudioDevicePaused".}
else:
  static :
    hint("Declaration of " & "AudioDevicePaused" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceGain):
  proc GetAudioDeviceGain*(devid: AudioDeviceID_520094275): cfloat {.cdecl,
      importc: "SDL_GetAudioDeviceGain".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceGain" &
        " already exists, not redeclaring")
when not declared(SetAudioDeviceGain):
  proc SetAudioDeviceGain*(devid: AudioDeviceID_520094275; gain: cfloat): bool {.
      cdecl, importc: "SDL_SetAudioDeviceGain".}
else:
  static :
    hint("Declaration of " & "SetAudioDeviceGain" &
        " already exists, not redeclaring")
when not declared(CloseAudioDevice):
  proc CloseAudioDevice*(devid: AudioDeviceID_520094275): void {.cdecl,
      importc: "SDL_CloseAudioDevice".}
else:
  static :
    hint("Declaration of " & "CloseAudioDevice" &
        " already exists, not redeclaring")
when not declared(BindAudioStreams):
  proc BindAudioStreams*(devid: AudioDeviceID_520094275;
                         streams: ptr ptr AudioStream_520094281;
                         num_streams: cint): bool {.cdecl,
      importc: "SDL_BindAudioStreams".}
else:
  static :
    hint("Declaration of " & "BindAudioStreams" &
        " already exists, not redeclaring")
when not declared(BindAudioStream):
  proc BindAudioStream*(devid: AudioDeviceID_520094275; stream: ptr AudioStream_520094281): bool {.
      cdecl, importc: "SDL_BindAudioStream".}
else:
  static :
    hint("Declaration of " & "BindAudioStream" &
        " already exists, not redeclaring")
when not declared(UnbindAudioStreams):
  proc UnbindAudioStreams*(streams: ptr ptr AudioStream_520094281;
                           num_streams: cint): void {.cdecl,
      importc: "SDL_UnbindAudioStreams".}
else:
  static :
    hint("Declaration of " & "UnbindAudioStreams" &
        " already exists, not redeclaring")
when not declared(UnbindAudioStream):
  proc UnbindAudioStream*(stream: ptr AudioStream_520094281): void {.cdecl,
      importc: "SDL_UnbindAudioStream".}
else:
  static :
    hint("Declaration of " & "UnbindAudioStream" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamDevice):
  proc GetAudioStreamDevice*(stream: ptr AudioStream_520094281): AudioDeviceID_520094275 {.
      cdecl, importc: "SDL_GetAudioStreamDevice".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamDevice" &
        " already exists, not redeclaring")
when not declared(CreateAudioStream):
  proc CreateAudioStream*(src_spec: ptr AudioSpec_520094279;
                          dst_spec: ptr AudioSpec_520094279): ptr AudioStream_520094281 {.
      cdecl, importc: "SDL_CreateAudioStream".}
else:
  static :
    hint("Declaration of " & "CreateAudioStream" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamProperties):
  proc GetAudioStreamProperties*(stream: ptr AudioStream_520094281): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetAudioStreamProperties".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamProperties" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamFormat):
  proc GetAudioStreamFormat*(stream: ptr AudioStream_520094281;
                             src_spec: ptr AudioSpec_520094279;
                             dst_spec: ptr AudioSpec_520094279): bool {.cdecl,
      importc: "SDL_GetAudioStreamFormat".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamFormat" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamFormat):
  proc SetAudioStreamFormat*(stream: ptr AudioStream_520094281;
                             src_spec: ptr AudioSpec_520094279;
                             dst_spec: ptr AudioSpec_520094279): bool {.cdecl,
      importc: "SDL_SetAudioStreamFormat".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamFormat" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamFrequencyRatio):
  proc GetAudioStreamFrequencyRatio*(stream: ptr AudioStream_520094281): cfloat {.
      cdecl, importc: "SDL_GetAudioStreamFrequencyRatio".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamFrequencyRatio" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamFrequencyRatio):
  proc SetAudioStreamFrequencyRatio*(stream: ptr AudioStream_520094281;
                                     ratio: cfloat): bool {.cdecl,
      importc: "SDL_SetAudioStreamFrequencyRatio".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamFrequencyRatio" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamGain):
  proc GetAudioStreamGain*(stream: ptr AudioStream_520094281): cfloat {.cdecl,
      importc: "SDL_GetAudioStreamGain".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamGain" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamGain):
  proc SetAudioStreamGain*(stream: ptr AudioStream_520094281; gain: cfloat): bool {.
      cdecl, importc: "SDL_SetAudioStreamGain".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamGain" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamInputChannelMap):
  proc GetAudioStreamInputChannelMap*(stream: ptr AudioStream_520094281;
                                      count: ptr cint): ptr cint {.cdecl,
      importc: "SDL_GetAudioStreamInputChannelMap".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamInputChannelMap" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamOutputChannelMap):
  proc GetAudioStreamOutputChannelMap*(stream: ptr AudioStream_520094281;
                                       count: ptr cint): ptr cint {.cdecl,
      importc: "SDL_GetAudioStreamOutputChannelMap".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamOutputChannelMap" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamInputChannelMap):
  proc SetAudioStreamInputChannelMap*(stream: ptr AudioStream_520094281;
                                      chmap: ptr cint; count: cint): bool {.
      cdecl, importc: "SDL_SetAudioStreamInputChannelMap".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamInputChannelMap" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamOutputChannelMap):
  proc SetAudioStreamOutputChannelMap*(stream: ptr AudioStream_520094281;
                                       chmap: ptr cint; count: cint): bool {.
      cdecl, importc: "SDL_SetAudioStreamOutputChannelMap".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamOutputChannelMap" &
        " already exists, not redeclaring")
when not declared(PutAudioStreamData):
  proc PutAudioStreamData*(stream: ptr AudioStream_520094281; buf: pointer;
                           len: cint): bool {.cdecl,
      importc: "SDL_PutAudioStreamData".}
else:
  static :
    hint("Declaration of " & "PutAudioStreamData" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamData):
  proc GetAudioStreamData*(stream: ptr AudioStream_520094281; buf: pointer;
                           len: cint): cint {.cdecl,
      importc: "SDL_GetAudioStreamData".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamData" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamAvailable):
  proc GetAudioStreamAvailable*(stream: ptr AudioStream_520094281): cint {.
      cdecl, importc: "SDL_GetAudioStreamAvailable".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamAvailable" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamQueued):
  proc GetAudioStreamQueued*(stream: ptr AudioStream_520094281): cint {.cdecl,
      importc: "SDL_GetAudioStreamQueued".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamQueued" &
        " already exists, not redeclaring")
when not declared(FlushAudioStream):
  proc FlushAudioStream*(stream: ptr AudioStream_520094281): bool {.cdecl,
      importc: "SDL_FlushAudioStream".}
else:
  static :
    hint("Declaration of " & "FlushAudioStream" &
        " already exists, not redeclaring")
when not declared(ClearAudioStream):
  proc ClearAudioStream*(stream: ptr AudioStream_520094281): bool {.cdecl,
      importc: "SDL_ClearAudioStream".}
else:
  static :
    hint("Declaration of " & "ClearAudioStream" &
        " already exists, not redeclaring")
when not declared(PauseAudioStreamDevice):
  proc PauseAudioStreamDevice*(stream: ptr AudioStream_520094281): bool {.cdecl,
      importc: "SDL_PauseAudioStreamDevice".}
else:
  static :
    hint("Declaration of " & "PauseAudioStreamDevice" &
        " already exists, not redeclaring")
when not declared(ResumeAudioStreamDevice):
  proc ResumeAudioStreamDevice*(stream: ptr AudioStream_520094281): bool {.
      cdecl, importc: "SDL_ResumeAudioStreamDevice".}
else:
  static :
    hint("Declaration of " & "ResumeAudioStreamDevice" &
        " already exists, not redeclaring")
when not declared(LockAudioStream):
  proc LockAudioStream*(stream: ptr AudioStream_520094281): bool {.cdecl,
      importc: "SDL_LockAudioStream".}
else:
  static :
    hint("Declaration of " & "LockAudioStream" &
        " already exists, not redeclaring")
when not declared(UnlockAudioStream):
  proc UnlockAudioStream*(stream: ptr AudioStream_520094281): bool {.cdecl,
      importc: "SDL_UnlockAudioStream".}
else:
  static :
    hint("Declaration of " & "UnlockAudioStream" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamGetCallback):
  proc SetAudioStreamGetCallback*(stream: ptr AudioStream_520094281;
                                  callback: AudioStreamCallback_520094283;
                                  userdata: pointer): bool {.cdecl,
      importc: "SDL_SetAudioStreamGetCallback".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamGetCallback" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamPutCallback):
  proc SetAudioStreamPutCallback*(stream: ptr AudioStream_520094281;
                                  callback: AudioStreamCallback_520094283;
                                  userdata: pointer): bool {.cdecl,
      importc: "SDL_SetAudioStreamPutCallback".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamPutCallback" &
        " already exists, not redeclaring")
when not declared(DestroyAudioStream):
  proc DestroyAudioStream*(stream: ptr AudioStream_520094281): void {.cdecl,
      importc: "SDL_DestroyAudioStream".}
else:
  static :
    hint("Declaration of " & "DestroyAudioStream" &
        " already exists, not redeclaring")
when not declared(OpenAudioDeviceStream):
  proc OpenAudioDeviceStream*(devid: AudioDeviceID_520094275;
                              spec: ptr AudioSpec_520094279;
                              callback: AudioStreamCallback_520094283;
                              userdata: pointer): ptr AudioStream_520094281 {.
      cdecl, importc: "SDL_OpenAudioDeviceStream".}
else:
  static :
    hint("Declaration of " & "OpenAudioDeviceStream" &
        " already exists, not redeclaring")
when not declared(SetAudioPostmixCallback):
  proc SetAudioPostmixCallback*(devid: AudioDeviceID_520094275;
                                callback: AudioPostmixCallback_520094285;
                                userdata: pointer): bool {.cdecl,
      importc: "SDL_SetAudioPostmixCallback".}
else:
  static :
    hint("Declaration of " & "SetAudioPostmixCallback" &
        " already exists, not redeclaring")
when not declared(LoadWAV_IO):
  proc LoadWAV_IO*(src: ptr IOStream_520094269; closeio: bool;
                   spec: ptr AudioSpec_520094279; audio_buf: ptr ptr Uint8_520094137;
                   audio_len: ptr Uint32_520094145): bool {.cdecl,
      importc: "SDL_LoadWAV_IO".}
else:
  static :
    hint("Declaration of " & "LoadWAV_IO" & " already exists, not redeclaring")
when not declared(LoadWAV):
  proc LoadWAV*(path: cstring; spec: ptr AudioSpec_520094279;
                audio_buf: ptr ptr Uint8_520094137; audio_len: ptr Uint32_520094145): bool {.
      cdecl, importc: "SDL_LoadWAV".}
else:
  static :
    hint("Declaration of " & "LoadWAV" & " already exists, not redeclaring")
when not declared(MixAudio):
  proc MixAudio*(dst: ptr Uint8_520094137; src: ptr Uint8_520094137;
                 format: AudioFormat_520094273; len: Uint32_520094145;
                 volume: cfloat): bool {.cdecl, importc: "SDL_MixAudio".}
else:
  static :
    hint("Declaration of " & "MixAudio" & " already exists, not redeclaring")
when not declared(ConvertAudioSamples):
  proc ConvertAudioSamples*(src_spec: ptr AudioSpec_520094279;
                            src_data: ptr Uint8_520094137; src_len: cint;
                            dst_spec: ptr AudioSpec_520094279;
                            dst_data: ptr ptr Uint8_520094137; dst_len: ptr cint): bool {.
      cdecl, importc: "SDL_ConvertAudioSamples".}
else:
  static :
    hint("Declaration of " & "ConvertAudioSamples" &
        " already exists, not redeclaring")
when not declared(GetAudioFormatName):
  proc GetAudioFormatName*(format: AudioFormat_520094273): cstring {.cdecl,
      importc: "SDL_GetAudioFormatName".}
else:
  static :
    hint("Declaration of " & "GetAudioFormatName" &
        " already exists, not redeclaring")
when not declared(GetSilenceValueForFormat):
  proc GetSilenceValueForFormat*(format: AudioFormat_520094273): cint {.cdecl,
      importc: "SDL_GetSilenceValueForFormat".}
else:
  static :
    hint("Declaration of " & "GetSilenceValueForFormat" &
        " already exists, not redeclaring")
when not declared(ComposeCustomBlendMode):
  proc ComposeCustomBlendMode*(srcColorFactor: BlendFactor_520094295;
                               dstColorFactor: BlendFactor_520094295;
                               colorOperation: BlendOperation_520094291;
                               srcAlphaFactor: BlendFactor_520094295;
                               dstAlphaFactor: BlendFactor_520094295;
                               alphaOperation: BlendOperation_520094291): BlendMode_520094287 {.
      cdecl, importc: "SDL_ComposeCustomBlendMode".}
else:
  static :
    hint("Declaration of " & "ComposeCustomBlendMode" &
        " already exists, not redeclaring")
when not declared(GetPixelFormatName):
  proc GetPixelFormatName*(format: PixelFormat_520094319): cstring {.cdecl,
      importc: "SDL_GetPixelFormatName".}
else:
  static :
    hint("Declaration of " & "GetPixelFormatName" &
        " already exists, not redeclaring")
when not declared(GetMasksForPixelFormat):
  proc GetMasksForPixelFormat*(format: PixelFormat_520094319; bpp: ptr cint;
                               Rmask: ptr Uint32_520094145; Gmask: ptr Uint32_520094145;
                               Bmask: ptr Uint32_520094145; Amask: ptr Uint32_520094145): bool {.
      cdecl, importc: "SDL_GetMasksForPixelFormat".}
else:
  static :
    hint("Declaration of " & "GetMasksForPixelFormat" &
        " already exists, not redeclaring")
when not declared(GetPixelFormatForMasks):
  proc GetPixelFormatForMasks*(bpp: cint; Rmask: Uint32_520094145;
                               Gmask: Uint32_520094145; Bmask: Uint32_520094145;
                               Amask: Uint32_520094145): PixelFormat_520094319 {.
      cdecl, importc: "SDL_GetPixelFormatForMasks".}
else:
  static :
    hint("Declaration of " & "GetPixelFormatForMasks" &
        " already exists, not redeclaring")
when not declared(GetPixelFormatDetails):
  proc GetPixelFormatDetails*(format: PixelFormat_520094319): ptr PixelFormatDetails_520094363 {.
      cdecl, importc: "SDL_GetPixelFormatDetails".}
else:
  static :
    hint("Declaration of " & "GetPixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(CreatePalette):
  proc CreatePalette*(ncolors: cint): ptr Palette_520094359 {.cdecl,
      importc: "SDL_CreatePalette".}
else:
  static :
    hint("Declaration of " & "CreatePalette" &
        " already exists, not redeclaring")
when not declared(SetPaletteColors):
  proc SetPaletteColors*(palette: ptr Palette_520094359; colors: ptr Color_520094351;
                         firstcolor: cint; ncolors: cint): bool {.cdecl,
      importc: "SDL_SetPaletteColors".}
else:
  static :
    hint("Declaration of " & "SetPaletteColors" &
        " already exists, not redeclaring")
when not declared(DestroyPalette):
  proc DestroyPalette*(palette: ptr Palette_520094359): void {.cdecl,
      importc: "SDL_DestroyPalette".}
else:
  static :
    hint("Declaration of " & "DestroyPalette" &
        " already exists, not redeclaring")
when not declared(MapRGB):
  proc MapRGB*(format: ptr PixelFormatDetails_520094363; palette: ptr Palette_520094359;
               r: Uint8_520094137; g: Uint8_520094137; b: Uint8_520094137): Uint32_520094145 {.
      cdecl, importc: "SDL_MapRGB".}
else:
  static :
    hint("Declaration of " & "MapRGB" & " already exists, not redeclaring")
when not declared(MapRGBA):
  proc MapRGBA*(format: ptr PixelFormatDetails_520094363; palette: ptr Palette_520094359;
                r: Uint8_520094137; g: Uint8_520094137; b: Uint8_520094137;
                a: Uint8_520094137): Uint32_520094145 {.cdecl,
      importc: "SDL_MapRGBA".}
else:
  static :
    hint("Declaration of " & "MapRGBA" & " already exists, not redeclaring")
when not declared(GetRGB):
  proc GetRGB*(pixel: Uint32_520094145; format: ptr PixelFormatDetails_520094363;
               palette: ptr Palette_520094359; r: ptr Uint8_520094137;
               g: ptr Uint8_520094137; b: ptr Uint8_520094137): void {.cdecl,
      importc: "SDL_GetRGB".}
else:
  static :
    hint("Declaration of " & "GetRGB" & " already exists, not redeclaring")
when not declared(GetRGBA):
  proc GetRGBA*(pixel: Uint32_520094145; format: ptr PixelFormatDetails_520094363;
                palette: ptr Palette_520094359; r: ptr Uint8_520094137;
                g: ptr Uint8_520094137; b: ptr Uint8_520094137; a: ptr Uint8_520094137): void {.
      cdecl, importc: "SDL_GetRGBA".}
else:
  static :
    hint("Declaration of " & "GetRGBA" & " already exists, not redeclaring")
when not declared(HasRectIntersection):
  proc HasRectIntersection*(A: ptr Rect_520094375; B: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_HasRectIntersection".}
else:
  static :
    hint("Declaration of " & "HasRectIntersection" &
        " already exists, not redeclaring")
when not declared(GetRectIntersection):
  proc GetRectIntersection*(A: ptr Rect_520094375; B: ptr Rect_520094375;
                            result: ptr Rect_520094375): bool {.cdecl,
      importc: "SDL_GetRectIntersection".}
else:
  static :
    hint("Declaration of " & "GetRectIntersection" &
        " already exists, not redeclaring")
when not declared(GetRectUnion):
  proc GetRectUnion*(A: ptr Rect_520094375; B: ptr Rect_520094375;
                     result: ptr Rect_520094375): bool {.cdecl,
      importc: "SDL_GetRectUnion".}
else:
  static :
    hint("Declaration of " & "GetRectUnion" & " already exists, not redeclaring")
when not declared(GetRectEnclosingPoints):
  proc GetRectEnclosingPoints*(points: ptr Point_520094367; count: cint;
                               clip: ptr Rect_520094375; result: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetRectEnclosingPoints".}
else:
  static :
    hint("Declaration of " & "GetRectEnclosingPoints" &
        " already exists, not redeclaring")
when not declared(GetRectAndLineIntersection):
  proc GetRectAndLineIntersection*(rect: ptr Rect_520094375; X1: ptr cint;
                                   Y1: ptr cint; X2: ptr cint; Y2: ptr cint): bool {.
      cdecl, importc: "SDL_GetRectAndLineIntersection".}
else:
  static :
    hint("Declaration of " & "GetRectAndLineIntersection" &
        " already exists, not redeclaring")
when not declared(HasRectIntersectionFloat):
  proc HasRectIntersectionFloat*(A: ptr FRect_520094379; B: ptr FRect_520094379): bool {.
      cdecl, importc: "SDL_HasRectIntersectionFloat".}
else:
  static :
    hint("Declaration of " & "HasRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(GetRectIntersectionFloat):
  proc GetRectIntersectionFloat*(A: ptr FRect_520094379; B: ptr FRect_520094379;
                                 result: ptr FRect_520094379): bool {.cdecl,
      importc: "SDL_GetRectIntersectionFloat".}
else:
  static :
    hint("Declaration of " & "GetRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(GetRectUnionFloat):
  proc GetRectUnionFloat*(A: ptr FRect_520094379; B: ptr FRect_520094379;
                          result: ptr FRect_520094379): bool {.cdecl,
      importc: "SDL_GetRectUnionFloat".}
else:
  static :
    hint("Declaration of " & "GetRectUnionFloat" &
        " already exists, not redeclaring")
when not declared(GetRectEnclosingPointsFloat):
  proc GetRectEnclosingPointsFloat*(points: ptr FPoint_520094371; count: cint;
                                    clip: ptr FRect_520094379; result: ptr FRect_520094379): bool {.
      cdecl, importc: "SDL_GetRectEnclosingPointsFloat".}
else:
  static :
    hint("Declaration of " & "GetRectEnclosingPointsFloat" &
        " already exists, not redeclaring")
when not declared(GetRectAndLineIntersectionFloat):
  proc GetRectAndLineIntersectionFloat*(rect: ptr FRect_520094379;
                                        X1: ptr cfloat; Y1: ptr cfloat;
                                        X2: ptr cfloat; Y2: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetRectAndLineIntersectionFloat".}
else:
  static :
    hint("Declaration of " & "GetRectAndLineIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(CreateSurface):
  proc CreateSurface*(width: cint; height: cint; format: PixelFormat_520094319): ptr Surface_520094393 {.
      cdecl, importc: "SDL_CreateSurface".}
else:
  static :
    hint("Declaration of " & "CreateSurface" &
        " already exists, not redeclaring")
when not declared(CreateSurfaceFrom):
  proc CreateSurfaceFrom*(width: cint; height: cint; format: PixelFormat_520094319;
                          pixels: pointer; pitch: cint): ptr Surface_520094393 {.
      cdecl, importc: "SDL_CreateSurfaceFrom".}
else:
  static :
    hint("Declaration of " & "CreateSurfaceFrom" &
        " already exists, not redeclaring")
when not declared(DestroySurface):
  proc DestroySurface*(surface: ptr Surface_520094393): void {.cdecl,
      importc: "SDL_DestroySurface".}
else:
  static :
    hint("Declaration of " & "DestroySurface" &
        " already exists, not redeclaring")
when not declared(GetSurfaceProperties):
  proc GetSurfaceProperties*(surface: ptr Surface_520094393): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetSurfaceProperties".}
else:
  static :
    hint("Declaration of " & "GetSurfaceProperties" &
        " already exists, not redeclaring")
when not declared(SetSurfaceColorspace):
  proc SetSurfaceColorspace*(surface: ptr Surface_520094393;
                             colorspace: Colorspace_520094347): bool {.cdecl,
      importc: "SDL_SetSurfaceColorspace".}
else:
  static :
    hint("Declaration of " & "SetSurfaceColorspace" &
        " already exists, not redeclaring")
when not declared(GetSurfaceColorspace):
  proc GetSurfaceColorspace*(surface: ptr Surface_520094393): Colorspace_520094347 {.
      cdecl, importc: "SDL_GetSurfaceColorspace".}
else:
  static :
    hint("Declaration of " & "GetSurfaceColorspace" &
        " already exists, not redeclaring")
when not declared(CreateSurfacePalette):
  proc CreateSurfacePalette*(surface: ptr Surface_520094393): ptr Palette_520094359 {.
      cdecl, importc: "SDL_CreateSurfacePalette".}
else:
  static :
    hint("Declaration of " & "CreateSurfacePalette" &
        " already exists, not redeclaring")
when not declared(SetSurfacePalette):
  proc SetSurfacePalette*(surface: ptr Surface_520094393; palette: ptr Palette_520094359): bool {.
      cdecl, importc: "SDL_SetSurfacePalette".}
else:
  static :
    hint("Declaration of " & "SetSurfacePalette" &
        " already exists, not redeclaring")
when not declared(GetSurfacePalette):
  proc GetSurfacePalette*(surface: ptr Surface_520094393): ptr Palette_520094359 {.
      cdecl, importc: "SDL_GetSurfacePalette".}
else:
  static :
    hint("Declaration of " & "GetSurfacePalette" &
        " already exists, not redeclaring")
when not declared(AddSurfaceAlternateImage):
  proc AddSurfaceAlternateImage*(surface: ptr Surface_520094393;
                                 image: ptr Surface_520094393): bool {.cdecl,
      importc: "SDL_AddSurfaceAlternateImage".}
else:
  static :
    hint("Declaration of " & "AddSurfaceAlternateImage" &
        " already exists, not redeclaring")
when not declared(SurfaceHasAlternateImages):
  proc SurfaceHasAlternateImages*(surface: ptr Surface_520094393): bool {.cdecl,
      importc: "SDL_SurfaceHasAlternateImages".}
else:
  static :
    hint("Declaration of " & "SurfaceHasAlternateImages" &
        " already exists, not redeclaring")
when not declared(GetSurfaceImages):
  proc GetSurfaceImages*(surface: ptr Surface_520094393; count: ptr cint): ptr ptr Surface_520094393 {.
      cdecl, importc: "SDL_GetSurfaceImages".}
else:
  static :
    hint("Declaration of " & "GetSurfaceImages" &
        " already exists, not redeclaring")
when not declared(RemoveSurfaceAlternateImages):
  proc RemoveSurfaceAlternateImages*(surface: ptr Surface_520094393): void {.
      cdecl, importc: "SDL_RemoveSurfaceAlternateImages".}
else:
  static :
    hint("Declaration of " & "RemoveSurfaceAlternateImages" &
        " already exists, not redeclaring")
when not declared(LockSurface):
  proc LockSurface*(surface: ptr Surface_520094393): bool {.cdecl,
      importc: "SDL_LockSurface".}
else:
  static :
    hint("Declaration of " & "LockSurface" & " already exists, not redeclaring")
when not declared(UnlockSurface):
  proc UnlockSurface*(surface: ptr Surface_520094393): void {.cdecl,
      importc: "SDL_UnlockSurface".}
else:
  static :
    hint("Declaration of " & "UnlockSurface" &
        " already exists, not redeclaring")
when not declared(LoadBMP_IO):
  proc LoadBMP_IO*(src: ptr IOStream_520094269; closeio: bool): ptr Surface_520094393 {.
      cdecl, importc: "SDL_LoadBMP_IO".}
else:
  static :
    hint("Declaration of " & "LoadBMP_IO" & " already exists, not redeclaring")
when not declared(LoadBMP):
  proc LoadBMP*(file: cstring): ptr Surface_520094393 {.cdecl,
      importc: "SDL_LoadBMP".}
else:
  static :
    hint("Declaration of " & "LoadBMP" & " already exists, not redeclaring")
when not declared(SaveBMP_IO):
  proc SaveBMP_IO*(surface: ptr Surface_520094393; dst: ptr IOStream_520094269;
                   closeio: bool): bool {.cdecl, importc: "SDL_SaveBMP_IO".}
else:
  static :
    hint("Declaration of " & "SaveBMP_IO" & " already exists, not redeclaring")
when not declared(SaveBMP):
  proc SaveBMP*(surface: ptr Surface_520094393; file: cstring): bool {.cdecl,
      importc: "SDL_SaveBMP".}
else:
  static :
    hint("Declaration of " & "SaveBMP" & " already exists, not redeclaring")
when not declared(SetSurfaceRLE):
  proc SetSurfaceRLE*(surface: ptr Surface_520094393; enabled: bool): bool {.
      cdecl, importc: "SDL_SetSurfaceRLE".}
else:
  static :
    hint("Declaration of " & "SetSurfaceRLE" &
        " already exists, not redeclaring")
when not declared(SurfaceHasRLE):
  proc SurfaceHasRLE*(surface: ptr Surface_520094393): bool {.cdecl,
      importc: "SDL_SurfaceHasRLE".}
else:
  static :
    hint("Declaration of " & "SurfaceHasRLE" &
        " already exists, not redeclaring")
when not declared(SetSurfaceColorKey):
  proc SetSurfaceColorKey*(surface: ptr Surface_520094393; enabled: bool;
                           key: Uint32_520094145): bool {.cdecl,
      importc: "SDL_SetSurfaceColorKey".}
else:
  static :
    hint("Declaration of " & "SetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(SurfaceHasColorKey):
  proc SurfaceHasColorKey*(surface: ptr Surface_520094393): bool {.cdecl,
      importc: "SDL_SurfaceHasColorKey".}
else:
  static :
    hint("Declaration of " & "SurfaceHasColorKey" &
        " already exists, not redeclaring")
when not declared(GetSurfaceColorKey):
  proc GetSurfaceColorKey*(surface: ptr Surface_520094393; key: ptr Uint32_520094145): bool {.
      cdecl, importc: "SDL_GetSurfaceColorKey".}
else:
  static :
    hint("Declaration of " & "GetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(SetSurfaceColorMod):
  proc SetSurfaceColorMod*(surface: ptr Surface_520094393; r: Uint8_520094137;
                           g: Uint8_520094137; b: Uint8_520094137): bool {.
      cdecl, importc: "SDL_SetSurfaceColorMod".}
else:
  static :
    hint("Declaration of " & "SetSurfaceColorMod" &
        " already exists, not redeclaring")
when not declared(GetSurfaceColorMod):
  proc GetSurfaceColorMod*(surface: ptr Surface_520094393; r: ptr Uint8_520094137;
                           g: ptr Uint8_520094137; b: ptr Uint8_520094137): bool {.
      cdecl, importc: "SDL_GetSurfaceColorMod".}
else:
  static :
    hint("Declaration of " & "GetSurfaceColorMod" &
        " already exists, not redeclaring")
when not declared(SetSurfaceAlphaMod):
  proc SetSurfaceAlphaMod*(surface: ptr Surface_520094393; alpha: Uint8_520094137): bool {.
      cdecl, importc: "SDL_SetSurfaceAlphaMod".}
else:
  static :
    hint("Declaration of " & "SetSurfaceAlphaMod" &
        " already exists, not redeclaring")
when not declared(GetSurfaceAlphaMod):
  proc GetSurfaceAlphaMod*(surface: ptr Surface_520094393; alpha: ptr Uint8_520094137): bool {.
      cdecl, importc: "SDL_GetSurfaceAlphaMod".}
else:
  static :
    hint("Declaration of " & "GetSurfaceAlphaMod" &
        " already exists, not redeclaring")
when not declared(SetSurfaceBlendMode):
  proc SetSurfaceBlendMode*(surface: ptr Surface_520094393; blendMode: BlendMode_520094287): bool {.
      cdecl, importc: "SDL_SetSurfaceBlendMode".}
else:
  static :
    hint("Declaration of " & "SetSurfaceBlendMode" &
        " already exists, not redeclaring")
when not declared(GetSurfaceBlendMode):
  proc GetSurfaceBlendMode*(surface: ptr Surface_520094393;
                            blendMode: ptr BlendMode_520094287): bool {.cdecl,
      importc: "SDL_GetSurfaceBlendMode".}
else:
  static :
    hint("Declaration of " & "GetSurfaceBlendMode" &
        " already exists, not redeclaring")
when not declared(SetSurfaceClipRect):
  proc SetSurfaceClipRect*(surface: ptr Surface_520094393; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_SetSurfaceClipRect".}
else:
  static :
    hint("Declaration of " & "SetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(GetSurfaceClipRect):
  proc GetSurfaceClipRect*(surface: ptr Surface_520094393; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetSurfaceClipRect".}
else:
  static :
    hint("Declaration of " & "GetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(FlipSurface):
  proc FlipSurface*(surface: ptr Surface_520094393; flip: FlipMode_520094389): bool {.
      cdecl, importc: "SDL_FlipSurface".}
else:
  static :
    hint("Declaration of " & "FlipSurface" & " already exists, not redeclaring")
when not declared(DuplicateSurface):
  proc DuplicateSurface*(surface: ptr Surface_520094393): ptr Surface_520094393 {.
      cdecl, importc: "SDL_DuplicateSurface".}
else:
  static :
    hint("Declaration of " & "DuplicateSurface" &
        " already exists, not redeclaring")
when not declared(ScaleSurface):
  proc ScaleSurface*(surface: ptr Surface_520094393; width: cint; height: cint;
                     scaleMode: ScaleMode_520094385): ptr Surface_520094393 {.
      cdecl, importc: "SDL_ScaleSurface".}
else:
  static :
    hint("Declaration of " & "ScaleSurface" & " already exists, not redeclaring")
when not declared(ConvertSurface):
  proc ConvertSurface*(surface: ptr Surface_520094393; format: PixelFormat_520094319): ptr Surface_520094393 {.
      cdecl, importc: "SDL_ConvertSurface".}
else:
  static :
    hint("Declaration of " & "ConvertSurface" &
        " already exists, not redeclaring")
when not declared(ConvertSurfaceAndColorspace):
  proc ConvertSurfaceAndColorspace*(surface: ptr Surface_520094393;
                                    format: PixelFormat_520094319;
                                    palette: ptr Palette_520094359;
                                    colorspace: Colorspace_520094347;
                                    props: PropertiesID_520094217): ptr Surface_520094393 {.
      cdecl, importc: "SDL_ConvertSurfaceAndColorspace".}
else:
  static :
    hint("Declaration of " & "ConvertSurfaceAndColorspace" &
        " already exists, not redeclaring")
when not declared(ConvertPixels):
  proc ConvertPixels*(width: cint; height: cint; src_format: PixelFormat_520094319;
                      src: pointer; src_pitch: cint; dst_format: PixelFormat_520094319;
                      dst: pointer; dst_pitch: cint): bool {.cdecl,
      importc: "SDL_ConvertPixels".}
else:
  static :
    hint("Declaration of " & "ConvertPixels" &
        " already exists, not redeclaring")
when not declared(ConvertPixelsAndColorspace):
  proc ConvertPixelsAndColorspace*(width: cint; height: cint;
                                   src_format: PixelFormat_520094319;
                                   src_colorspace: Colorspace_520094347;
                                   src_properties: PropertiesID_520094217;
                                   src: pointer; src_pitch: cint;
                                   dst_format: PixelFormat_520094319;
                                   dst_colorspace: Colorspace_520094347;
                                   dst_properties: PropertiesID_520094217;
                                   dst: pointer; dst_pitch: cint): bool {.cdecl,
      importc: "SDL_ConvertPixelsAndColorspace".}
else:
  static :
    hint("Declaration of " & "ConvertPixelsAndColorspace" &
        " already exists, not redeclaring")
when not declared(PremultiplyAlpha):
  proc PremultiplyAlpha*(width: cint; height: cint; src_format: PixelFormat_520094319;
                         src: pointer; src_pitch: cint; dst_format: PixelFormat_520094319;
                         dst: pointer; dst_pitch: cint; linear: bool): bool {.
      cdecl, importc: "SDL_PremultiplyAlpha".}
else:
  static :
    hint("Declaration of " & "PremultiplyAlpha" &
        " already exists, not redeclaring")
when not declared(PremultiplySurfaceAlpha):
  proc PremultiplySurfaceAlpha*(surface: ptr Surface_520094393; linear: bool): bool {.
      cdecl, importc: "SDL_PremultiplySurfaceAlpha".}
else:
  static :
    hint("Declaration of " & "PremultiplySurfaceAlpha" &
        " already exists, not redeclaring")
when not declared(ClearSurface):
  proc ClearSurface*(surface: ptr Surface_520094393; r: cfloat; g: cfloat;
                     b: cfloat; a: cfloat): bool {.cdecl,
      importc: "SDL_ClearSurface".}
else:
  static :
    hint("Declaration of " & "ClearSurface" & " already exists, not redeclaring")
when not declared(FillSurfaceRect):
  proc FillSurfaceRect*(dst: ptr Surface_520094393; rect: ptr Rect_520094375;
                        color: Uint32_520094145): bool {.cdecl,
      importc: "SDL_FillSurfaceRect".}
else:
  static :
    hint("Declaration of " & "FillSurfaceRect" &
        " already exists, not redeclaring")
when not declared(FillSurfaceRects):
  proc FillSurfaceRects*(dst: ptr Surface_520094393; rects: ptr Rect_520094375;
                         count: cint; color: Uint32_520094145): bool {.cdecl,
      importc: "SDL_FillSurfaceRects".}
else:
  static :
    hint("Declaration of " & "FillSurfaceRects" &
        " already exists, not redeclaring")
when not declared(BlitSurface):
  proc BlitSurface*(src: ptr Surface_520094393; srcrect: ptr Rect_520094375;
                    dst: ptr Surface_520094393; dstrect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_BlitSurface".}
else:
  static :
    hint("Declaration of " & "BlitSurface" & " already exists, not redeclaring")
when not declared(BlitSurfaceUnchecked):
  proc BlitSurfaceUnchecked*(src: ptr Surface_520094393; srcrect: ptr Rect_520094375;
                             dst: ptr Surface_520094393; dstrect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_BlitSurfaceUnchecked".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceUnchecked" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceScaled):
  proc BlitSurfaceScaled*(src: ptr Surface_520094393; srcrect: ptr Rect_520094375;
                          dst: ptr Surface_520094393; dstrect: ptr Rect_520094375;
                          scaleMode: ScaleMode_520094385): bool {.cdecl,
      importc: "SDL_BlitSurfaceScaled".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceScaled" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceUncheckedScaled):
  proc BlitSurfaceUncheckedScaled*(src: ptr Surface_520094393;
                                   srcrect: ptr Rect_520094375;
                                   dst: ptr Surface_520094393;
                                   dstrect: ptr Rect_520094375;
                                   scaleMode: ScaleMode_520094385): bool {.
      cdecl, importc: "SDL_BlitSurfaceUncheckedScaled".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceUncheckedScaled" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceTiled):
  proc BlitSurfaceTiled*(src: ptr Surface_520094393; srcrect: ptr Rect_520094375;
                         dst: ptr Surface_520094393; dstrect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_BlitSurfaceTiled".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceTiled" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceTiledWithScale):
  proc BlitSurfaceTiledWithScale*(src: ptr Surface_520094393; srcrect: ptr Rect_520094375;
                                  scale: cfloat; scaleMode: ScaleMode_520094385;
                                  dst: ptr Surface_520094393; dstrect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_BlitSurfaceTiledWithScale".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceTiledWithScale" &
        " already exists, not redeclaring")
when not declared(BlitSurface9Grid):
  proc BlitSurface9Grid*(src: ptr Surface_520094393; srcrect: ptr Rect_520094375;
                         left_width: cint; right_width: cint; top_height: cint;
                         bottom_height: cint; scale: cfloat;
                         scaleMode: ScaleMode_520094385; dst: ptr Surface_520094393;
                         dstrect: ptr Rect_520094375): bool {.cdecl,
      importc: "SDL_BlitSurface9Grid".}
else:
  static :
    hint("Declaration of " & "BlitSurface9Grid" &
        " already exists, not redeclaring")
when not declared(MapSurfaceRGB):
  proc MapSurfaceRGB*(surface: ptr Surface_520094393; r: Uint8_520094137;
                      g: Uint8_520094137; b: Uint8_520094137): Uint32_520094145 {.
      cdecl, importc: "SDL_MapSurfaceRGB".}
else:
  static :
    hint("Declaration of " & "MapSurfaceRGB" &
        " already exists, not redeclaring")
when not declared(MapSurfaceRGBA):
  proc MapSurfaceRGBA*(surface: ptr Surface_520094393; r: Uint8_520094137;
                       g: Uint8_520094137; b: Uint8_520094137; a: Uint8_520094137): Uint32_520094145 {.
      cdecl, importc: "SDL_MapSurfaceRGBA".}
else:
  static :
    hint("Declaration of " & "MapSurfaceRGBA" &
        " already exists, not redeclaring")
when not declared(ReadSurfacePixel):
  proc ReadSurfacePixel*(surface: ptr Surface_520094393; x: cint; y: cint;
                         r: ptr Uint8_520094137; g: ptr Uint8_520094137;
                         b: ptr Uint8_520094137; a: ptr Uint8_520094137): bool {.
      cdecl, importc: "SDL_ReadSurfacePixel".}
else:
  static :
    hint("Declaration of " & "ReadSurfacePixel" &
        " already exists, not redeclaring")
when not declared(ReadSurfacePixelFloat):
  proc ReadSurfacePixelFloat*(surface: ptr Surface_520094393; x: cint; y: cint;
                              r: ptr cfloat; g: ptr cfloat; b: ptr cfloat;
                              a: ptr cfloat): bool {.cdecl,
      importc: "SDL_ReadSurfacePixelFloat".}
else:
  static :
    hint("Declaration of " & "ReadSurfacePixelFloat" &
        " already exists, not redeclaring")
when not declared(WriteSurfacePixel):
  proc WriteSurfacePixel*(surface: ptr Surface_520094393; x: cint; y: cint;
                          r: Uint8_520094137; g: Uint8_520094137; b: Uint8_520094137;
                          a: Uint8_520094137): bool {.cdecl,
      importc: "SDL_WriteSurfacePixel".}
else:
  static :
    hint("Declaration of " & "WriteSurfacePixel" &
        " already exists, not redeclaring")
when not declared(WriteSurfacePixelFloat):
  proc WriteSurfacePixelFloat*(surface: ptr Surface_520094393; x: cint; y: cint;
                               r: cfloat; g: cfloat; b: cfloat; a: cfloat): bool {.
      cdecl, importc: "SDL_WriteSurfacePixelFloat".}
else:
  static :
    hint("Declaration of " & "WriteSurfacePixelFloat" &
        " already exists, not redeclaring")
when not declared(GetNumCameraDrivers):
  proc GetNumCameraDrivers*(): cint {.cdecl, importc: "SDL_GetNumCameraDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumCameraDrivers" &
        " already exists, not redeclaring")
when not declared(GetCameraDriver):
  proc GetCameraDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetCameraDriver".}
else:
  static :
    hint("Declaration of " & "GetCameraDriver" &
        " already exists, not redeclaring")
when not declared(GetCurrentCameraDriver):
  proc GetCurrentCameraDriver*(): cstring {.cdecl,
      importc: "SDL_GetCurrentCameraDriver".}
else:
  static :
    hint("Declaration of " & "GetCurrentCameraDriver" &
        " already exists, not redeclaring")
when not declared(GetCameras):
  proc GetCameras*(count: ptr cint): ptr CameraID_520094395 {.cdecl,
      importc: "SDL_GetCameras".}
else:
  static :
    hint("Declaration of " & "GetCameras" & " already exists, not redeclaring")
when not declared(GetCameraSupportedFormats):
  proc GetCameraSupportedFormats*(devid: CameraID_520094395; count: ptr cint): ptr ptr CameraSpec_520094401 {.
      cdecl, importc: "SDL_GetCameraSupportedFormats".}
else:
  static :
    hint("Declaration of " & "GetCameraSupportedFormats" &
        " already exists, not redeclaring")
when not declared(GetCameraName):
  proc GetCameraName*(instance_id: CameraID_520094395): cstring {.cdecl,
      importc: "SDL_GetCameraName".}
else:
  static :
    hint("Declaration of " & "GetCameraName" &
        " already exists, not redeclaring")
when not declared(GetCameraPosition):
  proc GetCameraPosition*(instance_id: CameraID_520094395): CameraPosition_520094405 {.
      cdecl, importc: "SDL_GetCameraPosition".}
else:
  static :
    hint("Declaration of " & "GetCameraPosition" &
        " already exists, not redeclaring")
when not declared(OpenCamera):
  proc OpenCamera*(instance_id: CameraID_520094395; spec: ptr CameraSpec_520094401): ptr Camera_520094397 {.
      cdecl, importc: "SDL_OpenCamera".}
else:
  static :
    hint("Declaration of " & "OpenCamera" & " already exists, not redeclaring")
when not declared(GetCameraPermissionState):
  proc GetCameraPermissionState*(camera: ptr Camera_520094397): cint {.cdecl,
      importc: "SDL_GetCameraPermissionState".}
else:
  static :
    hint("Declaration of " & "GetCameraPermissionState" &
        " already exists, not redeclaring")
when not declared(GetCameraID):
  proc GetCameraID*(camera: ptr Camera_520094397): CameraID_520094395 {.cdecl,
      importc: "SDL_GetCameraID".}
else:
  static :
    hint("Declaration of " & "GetCameraID" & " already exists, not redeclaring")
when not declared(GetCameraProperties):
  proc GetCameraProperties*(camera: ptr Camera_520094397): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetCameraProperties".}
else:
  static :
    hint("Declaration of " & "GetCameraProperties" &
        " already exists, not redeclaring")
when not declared(GetCameraFormat):
  proc GetCameraFormat*(camera: ptr Camera_520094397; spec: ptr CameraSpec_520094401): bool {.
      cdecl, importc: "SDL_GetCameraFormat".}
else:
  static :
    hint("Declaration of " & "GetCameraFormat" &
        " already exists, not redeclaring")
when not declared(AcquireCameraFrame):
  proc AcquireCameraFrame*(camera: ptr Camera_520094397; timestampNS: ptr Uint64_520094149): ptr Surface_520094393 {.
      cdecl, importc: "SDL_AcquireCameraFrame".}
else:
  static :
    hint("Declaration of " & "AcquireCameraFrame" &
        " already exists, not redeclaring")
when not declared(ReleaseCameraFrame):
  proc ReleaseCameraFrame*(camera: ptr Camera_520094397; frame: ptr Surface_520094393): void {.
      cdecl, importc: "SDL_ReleaseCameraFrame".}
else:
  static :
    hint("Declaration of " & "ReleaseCameraFrame" &
        " already exists, not redeclaring")
when not declared(CloseCamera):
  proc CloseCamera*(camera: ptr Camera_520094397): void {.cdecl,
      importc: "SDL_CloseCamera".}
else:
  static :
    hint("Declaration of " & "CloseCamera" & " already exists, not redeclaring")
when not declared(SetClipboardText):
  proc SetClipboardText*(text: cstring): bool {.cdecl,
      importc: "SDL_SetClipboardText".}
else:
  static :
    hint("Declaration of " & "SetClipboardText" &
        " already exists, not redeclaring")
when not declared(GetClipboardText):
  proc GetClipboardText*(): cstring {.cdecl, importc: "SDL_GetClipboardText".}
else:
  static :
    hint("Declaration of " & "GetClipboardText" &
        " already exists, not redeclaring")
when not declared(HasClipboardText):
  proc HasClipboardText*(): bool {.cdecl, importc: "SDL_HasClipboardText".}
else:
  static :
    hint("Declaration of " & "HasClipboardText" &
        " already exists, not redeclaring")
when not declared(SetPrimarySelectionText):
  proc SetPrimarySelectionText*(text: cstring): bool {.cdecl,
      importc: "SDL_SetPrimarySelectionText".}
else:
  static :
    hint("Declaration of " & "SetPrimarySelectionText" &
        " already exists, not redeclaring")
when not declared(GetPrimarySelectionText):
  proc GetPrimarySelectionText*(): cstring {.cdecl,
      importc: "SDL_GetPrimarySelectionText".}
else:
  static :
    hint("Declaration of " & "GetPrimarySelectionText" &
        " already exists, not redeclaring")
when not declared(HasPrimarySelectionText):
  proc HasPrimarySelectionText*(): bool {.cdecl,
      importc: "SDL_HasPrimarySelectionText".}
else:
  static :
    hint("Declaration of " & "HasPrimarySelectionText" &
        " already exists, not redeclaring")
when not declared(SetClipboardData):
  proc SetClipboardData*(callback: ClipboardDataCallback_520094407;
                         cleanup: ClipboardCleanupCallback_520094409;
                         userdata: pointer; mime_types: ptr cstring;
                         num_mime_types: csize_t): bool {.cdecl,
      importc: "SDL_SetClipboardData".}
else:
  static :
    hint("Declaration of " & "SetClipboardData" &
        " already exists, not redeclaring")
when not declared(ClearClipboardData):
  proc ClearClipboardData*(): bool {.cdecl, importc: "SDL_ClearClipboardData".}
else:
  static :
    hint("Declaration of " & "ClearClipboardData" &
        " already exists, not redeclaring")
when not declared(GetClipboardData):
  proc GetClipboardData*(mime_type: cstring; size: ptr csize_t): pointer {.
      cdecl, importc: "SDL_GetClipboardData".}
else:
  static :
    hint("Declaration of " & "GetClipboardData" &
        " already exists, not redeclaring")
when not declared(HasClipboardData):
  proc HasClipboardData*(mime_type: cstring): bool {.cdecl,
      importc: "SDL_HasClipboardData".}
else:
  static :
    hint("Declaration of " & "HasClipboardData" &
        " already exists, not redeclaring")
when not declared(GetClipboardMimeTypes):
  proc GetClipboardMimeTypes*(num_mime_types: ptr csize_t): ptr cstring {.cdecl,
      importc: "SDL_GetClipboardMimeTypes".}
else:
  static :
    hint("Declaration of " & "GetClipboardMimeTypes" &
        " already exists, not redeclaring")
when not declared(GetNumLogicalCPUCores):
  proc GetNumLogicalCPUCores*(): cint {.cdecl,
                                        importc: "SDL_GetNumLogicalCPUCores".}
else:
  static :
    hint("Declaration of " & "GetNumLogicalCPUCores" &
        " already exists, not redeclaring")
when not declared(GetCPUCacheLineSize):
  proc GetCPUCacheLineSize*(): cint {.cdecl, importc: "SDL_GetCPUCacheLineSize".}
else:
  static :
    hint("Declaration of " & "GetCPUCacheLineSize" &
        " already exists, not redeclaring")
when not declared(HasAltiVec):
  proc HasAltiVec*(): bool {.cdecl, importc: "SDL_HasAltiVec".}
else:
  static :
    hint("Declaration of " & "HasAltiVec" & " already exists, not redeclaring")
when not declared(HasMMX):
  proc HasMMX*(): bool {.cdecl, importc: "SDL_HasMMX".}
else:
  static :
    hint("Declaration of " & "HasMMX" & " already exists, not redeclaring")
when not declared(HasSSE):
  proc HasSSE*(): bool {.cdecl, importc: "SDL_HasSSE".}
else:
  static :
    hint("Declaration of " & "HasSSE" & " already exists, not redeclaring")
when not declared(HasSSE2):
  proc HasSSE2*(): bool {.cdecl, importc: "SDL_HasSSE2".}
else:
  static :
    hint("Declaration of " & "HasSSE2" & " already exists, not redeclaring")
when not declared(HasSSE3):
  proc HasSSE3*(): bool {.cdecl, importc: "SDL_HasSSE3".}
else:
  static :
    hint("Declaration of " & "HasSSE3" & " already exists, not redeclaring")
when not declared(HasSSE41):
  proc HasSSE41*(): bool {.cdecl, importc: "SDL_HasSSE41".}
else:
  static :
    hint("Declaration of " & "HasSSE41" & " already exists, not redeclaring")
when not declared(HasSSE42):
  proc HasSSE42*(): bool {.cdecl, importc: "SDL_HasSSE42".}
else:
  static :
    hint("Declaration of " & "HasSSE42" & " already exists, not redeclaring")
when not declared(HasAVX):
  proc HasAVX*(): bool {.cdecl, importc: "SDL_HasAVX".}
else:
  static :
    hint("Declaration of " & "HasAVX" & " already exists, not redeclaring")
when not declared(HasAVX2):
  proc HasAVX2*(): bool {.cdecl, importc: "SDL_HasAVX2".}
else:
  static :
    hint("Declaration of " & "HasAVX2" & " already exists, not redeclaring")
when not declared(HasAVX512F):
  proc HasAVX512F*(): bool {.cdecl, importc: "SDL_HasAVX512F".}
else:
  static :
    hint("Declaration of " & "HasAVX512F" & " already exists, not redeclaring")
when not declared(HasARMSIMD):
  proc HasARMSIMD*(): bool {.cdecl, importc: "SDL_HasARMSIMD".}
else:
  static :
    hint("Declaration of " & "HasARMSIMD" & " already exists, not redeclaring")
when not declared(HasNEON):
  proc HasNEON*(): bool {.cdecl, importc: "SDL_HasNEON".}
else:
  static :
    hint("Declaration of " & "HasNEON" & " already exists, not redeclaring")
when not declared(HasLSX):
  proc HasLSX*(): bool {.cdecl, importc: "SDL_HasLSX".}
else:
  static :
    hint("Declaration of " & "HasLSX" & " already exists, not redeclaring")
when not declared(HasLASX):
  proc HasLASX*(): bool {.cdecl, importc: "SDL_HasLASX".}
else:
  static :
    hint("Declaration of " & "HasLASX" & " already exists, not redeclaring")
when not declared(GetSystemRAM):
  proc GetSystemRAM*(): cint {.cdecl, importc: "SDL_GetSystemRAM".}
else:
  static :
    hint("Declaration of " & "GetSystemRAM" & " already exists, not redeclaring")
when not declared(GetSIMDAlignment):
  proc GetSIMDAlignment*(): csize_t {.cdecl, importc: "SDL_GetSIMDAlignment".}
else:
  static :
    hint("Declaration of " & "GetSIMDAlignment" &
        " already exists, not redeclaring")
when not declared(GetNumVideoDrivers):
  proc GetNumVideoDrivers*(): cint {.cdecl, importc: "SDL_GetNumVideoDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumVideoDrivers" &
        " already exists, not redeclaring")
when not declared(GetVideoDriver):
  proc GetVideoDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetVideoDriver".}
else:
  static :
    hint("Declaration of " & "GetVideoDriver" &
        " already exists, not redeclaring")
when not declared(GetCurrentVideoDriver):
  proc GetCurrentVideoDriver*(): cstring {.cdecl,
      importc: "SDL_GetCurrentVideoDriver".}
else:
  static :
    hint("Declaration of " & "GetCurrentVideoDriver" &
        " already exists, not redeclaring")
when not declared(GetSystemTheme):
  proc GetSystemTheme*(): SystemTheme_520094417 {.cdecl,
      importc: "SDL_GetSystemTheme".}
else:
  static :
    hint("Declaration of " & "GetSystemTheme" &
        " already exists, not redeclaring")
when not declared(GetDisplays):
  proc GetDisplays*(count: ptr cint): ptr DisplayID_520094411 {.cdecl,
      importc: "SDL_GetDisplays".}
else:
  static :
    hint("Declaration of " & "GetDisplays" & " already exists, not redeclaring")
when not declared(GetPrimaryDisplay):
  proc GetPrimaryDisplay*(): DisplayID_520094411 {.cdecl,
      importc: "SDL_GetPrimaryDisplay".}
else:
  static :
    hint("Declaration of " & "GetPrimaryDisplay" &
        " already exists, not redeclaring")
when not declared(GetDisplayProperties):
  proc GetDisplayProperties*(displayID: DisplayID_520094411): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetDisplayProperties".}
else:
  static :
    hint("Declaration of " & "GetDisplayProperties" &
        " already exists, not redeclaring")
when not declared(GetDisplayName):
  proc GetDisplayName*(displayID: DisplayID_520094411): cstring {.cdecl,
      importc: "SDL_GetDisplayName".}
else:
  static :
    hint("Declaration of " & "GetDisplayName" &
        " already exists, not redeclaring")
when not declared(GetDisplayBounds):
  proc GetDisplayBounds*(displayID: DisplayID_520094411; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetDisplayBounds".}
else:
  static :
    hint("Declaration of " & "GetDisplayBounds" &
        " already exists, not redeclaring")
when not declared(GetDisplayUsableBounds):
  proc GetDisplayUsableBounds*(displayID: DisplayID_520094411; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetDisplayUsableBounds".}
else:
  static :
    hint("Declaration of " & "GetDisplayUsableBounds" &
        " already exists, not redeclaring")
when not declared(GetNaturalDisplayOrientation):
  proc GetNaturalDisplayOrientation*(displayID: DisplayID_520094411): DisplayOrientation_520094427 {.
      cdecl, importc: "SDL_GetNaturalDisplayOrientation".}
else:
  static :
    hint("Declaration of " & "GetNaturalDisplayOrientation" &
        " already exists, not redeclaring")
when not declared(GetCurrentDisplayOrientation):
  proc GetCurrentDisplayOrientation*(displayID: DisplayID_520094411): DisplayOrientation_520094427 {.
      cdecl, importc: "SDL_GetCurrentDisplayOrientation".}
else:
  static :
    hint("Declaration of " & "GetCurrentDisplayOrientation" &
        " already exists, not redeclaring")
when not declared(GetDisplayContentScale):
  proc GetDisplayContentScale*(displayID: DisplayID_520094411): cfloat {.cdecl,
      importc: "SDL_GetDisplayContentScale".}
else:
  static :
    hint("Declaration of " & "GetDisplayContentScale" &
        " already exists, not redeclaring")
when not declared(GetFullscreenDisplayModes):
  proc GetFullscreenDisplayModes*(displayID: DisplayID_520094411;
                                  count: ptr cint): ptr ptr DisplayMode_520094423 {.
      cdecl, importc: "SDL_GetFullscreenDisplayModes".}
else:
  static :
    hint("Declaration of " & "GetFullscreenDisplayModes" &
        " already exists, not redeclaring")
when not declared(GetClosestFullscreenDisplayMode):
  proc GetClosestFullscreenDisplayMode*(displayID: DisplayID_520094411; w: cint;
                                        h: cint; refresh_rate: cfloat;
                                        include_high_density_modes: bool;
                                        closest: ptr DisplayMode_520094423): bool {.
      cdecl, importc: "SDL_GetClosestFullscreenDisplayMode".}
else:
  static :
    hint("Declaration of " & "GetClosestFullscreenDisplayMode" &
        " already exists, not redeclaring")
when not declared(GetDesktopDisplayMode):
  proc GetDesktopDisplayMode*(displayID: DisplayID_520094411): ptr DisplayMode_520094423 {.
      cdecl, importc: "SDL_GetDesktopDisplayMode".}
else:
  static :
    hint("Declaration of " & "GetDesktopDisplayMode" &
        " already exists, not redeclaring")
when not declared(GetCurrentDisplayMode):
  proc GetCurrentDisplayMode*(displayID: DisplayID_520094411): ptr DisplayMode_520094423 {.
      cdecl, importc: "SDL_GetCurrentDisplayMode".}
else:
  static :
    hint("Declaration of " & "GetCurrentDisplayMode" &
        " already exists, not redeclaring")
when not declared(GetDisplayForPoint):
  proc GetDisplayForPoint*(point: ptr Point_520094367): DisplayID_520094411 {.
      cdecl, importc: "SDL_GetDisplayForPoint".}
else:
  static :
    hint("Declaration of " & "GetDisplayForPoint" &
        " already exists, not redeclaring")
when not declared(GetDisplayForRect):
  proc GetDisplayForRect*(rect: ptr Rect_520094375): DisplayID_520094411 {.
      cdecl, importc: "SDL_GetDisplayForRect".}
else:
  static :
    hint("Declaration of " & "GetDisplayForRect" &
        " already exists, not redeclaring")
when not declared(GetDisplayForWindow):
  proc GetDisplayForWindow*(window: ptr Window_520094429): DisplayID_520094411 {.
      cdecl, importc: "SDL_GetDisplayForWindow".}
else:
  static :
    hint("Declaration of " & "GetDisplayForWindow" &
        " already exists, not redeclaring")
when not declared(GetWindowPixelDensity):
  proc GetWindowPixelDensity*(window: ptr Window_520094429): cfloat {.cdecl,
      importc: "SDL_GetWindowPixelDensity".}
else:
  static :
    hint("Declaration of " & "GetWindowPixelDensity" &
        " already exists, not redeclaring")
when not declared(GetWindowDisplayScale):
  proc GetWindowDisplayScale*(window: ptr Window_520094429): cfloat {.cdecl,
      importc: "SDL_GetWindowDisplayScale".}
else:
  static :
    hint("Declaration of " & "GetWindowDisplayScale" &
        " already exists, not redeclaring")
when not declared(SetWindowFullscreenMode):
  proc SetWindowFullscreenMode*(window: ptr Window_520094429;
                                mode: ptr DisplayMode_520094423): bool {.cdecl,
      importc: "SDL_SetWindowFullscreenMode".}
else:
  static :
    hint("Declaration of " & "SetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(GetWindowFullscreenMode):
  proc GetWindowFullscreenMode*(window: ptr Window_520094429): ptr DisplayMode_520094423 {.
      cdecl, importc: "SDL_GetWindowFullscreenMode".}
else:
  static :
    hint("Declaration of " & "GetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(GetWindowICCProfile):
  proc GetWindowICCProfile*(window: ptr Window_520094429; size: ptr csize_t): pointer {.
      cdecl, importc: "SDL_GetWindowICCProfile".}
else:
  static :
    hint("Declaration of " & "GetWindowICCProfile" &
        " already exists, not redeclaring")
when not declared(GetWindowPixelFormat):
  proc GetWindowPixelFormat*(window: ptr Window_520094429): PixelFormat_520094319 {.
      cdecl, importc: "SDL_GetWindowPixelFormat".}
else:
  static :
    hint("Declaration of " & "GetWindowPixelFormat" &
        " already exists, not redeclaring")
when not declared(GetWindows):
  proc GetWindows*(count: ptr cint): ptr ptr Window_520094429 {.cdecl,
      importc: "SDL_GetWindows".}
else:
  static :
    hint("Declaration of " & "GetWindows" & " already exists, not redeclaring")
when not declared(CreateWindow):
  proc CreateWindow*(title: cstring; w: cint; h: cint; flags: WindowFlags_520094431): ptr Window_520094429 {.
      cdecl, importc: "SDL_CreateWindow".}
else:
  static :
    hint("Declaration of " & "CreateWindow" & " already exists, not redeclaring")
when not declared(CreatePopupWindow):
  proc CreatePopupWindow*(parent: ptr Window_520094429; offset_x: cint;
                          offset_y: cint; w: cint; h: cint; flags: WindowFlags_520094431): ptr Window_520094429 {.
      cdecl, importc: "SDL_CreatePopupWindow".}
else:
  static :
    hint("Declaration of " & "CreatePopupWindow" &
        " already exists, not redeclaring")
when not declared(CreateWindowWithProperties):
  proc CreateWindowWithProperties*(props: PropertiesID_520094217): ptr Window_520094429 {.
      cdecl, importc: "SDL_CreateWindowWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateWindowWithProperties" &
        " already exists, not redeclaring")
when not declared(GetWindowID):
  proc GetWindowID*(window: ptr Window_520094429): WindowID_520094413 {.cdecl,
      importc: "SDL_GetWindowID".}
else:
  static :
    hint("Declaration of " & "GetWindowID" & " already exists, not redeclaring")
when not declared(GetWindowFromID):
  proc GetWindowFromID*(id: WindowID_520094413): ptr Window_520094429 {.cdecl,
      importc: "SDL_GetWindowFromID".}
else:
  static :
    hint("Declaration of " & "GetWindowFromID" &
        " already exists, not redeclaring")
when not declared(GetWindowParent):
  proc GetWindowParent*(window: ptr Window_520094429): ptr Window_520094429 {.
      cdecl, importc: "SDL_GetWindowParent".}
else:
  static :
    hint("Declaration of " & "GetWindowParent" &
        " already exists, not redeclaring")
when not declared(GetWindowProperties):
  proc GetWindowProperties*(window: ptr Window_520094429): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetWindowProperties".}
else:
  static :
    hint("Declaration of " & "GetWindowProperties" &
        " already exists, not redeclaring")
when not declared(GetWindowFlags):
  proc GetWindowFlags*(window: ptr Window_520094429): WindowFlags_520094431 {.
      cdecl, importc: "SDL_GetWindowFlags".}
else:
  static :
    hint("Declaration of " & "GetWindowFlags" &
        " already exists, not redeclaring")
when not declared(SetWindowTitle):
  proc SetWindowTitle*(window: ptr Window_520094429; title: cstring): bool {.
      cdecl, importc: "SDL_SetWindowTitle".}
else:
  static :
    hint("Declaration of " & "SetWindowTitle" &
        " already exists, not redeclaring")
when not declared(GetWindowTitle):
  proc GetWindowTitle*(window: ptr Window_520094429): cstring {.cdecl,
      importc: "SDL_GetWindowTitle".}
else:
  static :
    hint("Declaration of " & "GetWindowTitle" &
        " already exists, not redeclaring")
when not declared(SetWindowIcon):
  proc SetWindowIcon*(window: ptr Window_520094429; icon: ptr Surface_520094393): bool {.
      cdecl, importc: "SDL_SetWindowIcon".}
else:
  static :
    hint("Declaration of " & "SetWindowIcon" &
        " already exists, not redeclaring")
when not declared(SetWindowPosition):
  proc SetWindowPosition*(window: ptr Window_520094429; x: cint; y: cint): bool {.
      cdecl, importc: "SDL_SetWindowPosition".}
else:
  static :
    hint("Declaration of " & "SetWindowPosition" &
        " already exists, not redeclaring")
when not declared(GetWindowPosition):
  proc GetWindowPosition*(window: ptr Window_520094429; x: ptr cint; y: ptr cint): bool {.
      cdecl, importc: "SDL_GetWindowPosition".}
else:
  static :
    hint("Declaration of " & "GetWindowPosition" &
        " already exists, not redeclaring")
when not declared(SetWindowSize):
  proc SetWindowSize*(window: ptr Window_520094429; w: cint; h: cint): bool {.
      cdecl, importc: "SDL_SetWindowSize".}
else:
  static :
    hint("Declaration of " & "SetWindowSize" &
        " already exists, not redeclaring")
when not declared(GetWindowSize):
  proc GetWindowSize*(window: ptr Window_520094429; w: ptr cint; h: ptr cint): bool {.
      cdecl, importc: "SDL_GetWindowSize".}
else:
  static :
    hint("Declaration of " & "GetWindowSize" &
        " already exists, not redeclaring")
when not declared(GetWindowSafeArea):
  proc GetWindowSafeArea*(window: ptr Window_520094429; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetWindowSafeArea".}
else:
  static :
    hint("Declaration of " & "GetWindowSafeArea" &
        " already exists, not redeclaring")
when not declared(SetWindowAspectRatio):
  proc SetWindowAspectRatio*(window: ptr Window_520094429; min_aspect: cfloat;
                             max_aspect: cfloat): bool {.cdecl,
      importc: "SDL_SetWindowAspectRatio".}
else:
  static :
    hint("Declaration of " & "SetWindowAspectRatio" &
        " already exists, not redeclaring")
when not declared(GetWindowAspectRatio):
  proc GetWindowAspectRatio*(window: ptr Window_520094429;
                             min_aspect: ptr cfloat; max_aspect: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetWindowAspectRatio".}
else:
  static :
    hint("Declaration of " & "GetWindowAspectRatio" &
        " already exists, not redeclaring")
when not declared(GetWindowBordersSize):
  proc GetWindowBordersSize*(window: ptr Window_520094429; top: ptr cint;
                             left: ptr cint; bottom: ptr cint; right: ptr cint): bool {.
      cdecl, importc: "SDL_GetWindowBordersSize".}
else:
  static :
    hint("Declaration of " & "GetWindowBordersSize" &
        " already exists, not redeclaring")
when not declared(GetWindowSizeInPixels):
  proc GetWindowSizeInPixels*(window: ptr Window_520094429; w: ptr cint;
                              h: ptr cint): bool {.cdecl,
      importc: "SDL_GetWindowSizeInPixels".}
else:
  static :
    hint("Declaration of " & "GetWindowSizeInPixels" &
        " already exists, not redeclaring")
when not declared(SetWindowMinimumSize):
  proc SetWindowMinimumSize*(window: ptr Window_520094429; min_w: cint;
                             min_h: cint): bool {.cdecl,
      importc: "SDL_SetWindowMinimumSize".}
else:
  static :
    hint("Declaration of " & "SetWindowMinimumSize" &
        " already exists, not redeclaring")
when not declared(GetWindowMinimumSize):
  proc GetWindowMinimumSize*(window: ptr Window_520094429; w: ptr cint;
                             h: ptr cint): bool {.cdecl,
      importc: "SDL_GetWindowMinimumSize".}
else:
  static :
    hint("Declaration of " & "GetWindowMinimumSize" &
        " already exists, not redeclaring")
when not declared(SetWindowMaximumSize):
  proc SetWindowMaximumSize*(window: ptr Window_520094429; max_w: cint;
                             max_h: cint): bool {.cdecl,
      importc: "SDL_SetWindowMaximumSize".}
else:
  static :
    hint("Declaration of " & "SetWindowMaximumSize" &
        " already exists, not redeclaring")
when not declared(GetWindowMaximumSize):
  proc GetWindowMaximumSize*(window: ptr Window_520094429; w: ptr cint;
                             h: ptr cint): bool {.cdecl,
      importc: "SDL_GetWindowMaximumSize".}
else:
  static :
    hint("Declaration of " & "GetWindowMaximumSize" &
        " already exists, not redeclaring")
when not declared(SetWindowBordered):
  proc SetWindowBordered*(window: ptr Window_520094429; bordered: bool): bool {.
      cdecl, importc: "SDL_SetWindowBordered".}
else:
  static :
    hint("Declaration of " & "SetWindowBordered" &
        " already exists, not redeclaring")
when not declared(SetWindowResizable):
  proc SetWindowResizable*(window: ptr Window_520094429; resizable: bool): bool {.
      cdecl, importc: "SDL_SetWindowResizable".}
else:
  static :
    hint("Declaration of " & "SetWindowResizable" &
        " already exists, not redeclaring")
when not declared(SetWindowAlwaysOnTop):
  proc SetWindowAlwaysOnTop*(window: ptr Window_520094429; on_top: bool): bool {.
      cdecl, importc: "SDL_SetWindowAlwaysOnTop".}
else:
  static :
    hint("Declaration of " & "SetWindowAlwaysOnTop" &
        " already exists, not redeclaring")
when not declared(ShowWindow):
  proc ShowWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_ShowWindow".}
else:
  static :
    hint("Declaration of " & "ShowWindow" & " already exists, not redeclaring")
when not declared(HideWindow):
  proc HideWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_HideWindow".}
else:
  static :
    hint("Declaration of " & "HideWindow" & " already exists, not redeclaring")
when not declared(RaiseWindow):
  proc RaiseWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_RaiseWindow".}
else:
  static :
    hint("Declaration of " & "RaiseWindow" & " already exists, not redeclaring")
when not declared(MaximizeWindow):
  proc MaximizeWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_MaximizeWindow".}
else:
  static :
    hint("Declaration of " & "MaximizeWindow" &
        " already exists, not redeclaring")
when not declared(MinimizeWindow):
  proc MinimizeWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_MinimizeWindow".}
else:
  static :
    hint("Declaration of " & "MinimizeWindow" &
        " already exists, not redeclaring")
when not declared(RestoreWindow):
  proc RestoreWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_RestoreWindow".}
else:
  static :
    hint("Declaration of " & "RestoreWindow" &
        " already exists, not redeclaring")
when not declared(SetWindowFullscreen):
  proc SetWindowFullscreen*(window: ptr Window_520094429; fullscreen: bool): bool {.
      cdecl, importc: "SDL_SetWindowFullscreen".}
else:
  static :
    hint("Declaration of " & "SetWindowFullscreen" &
        " already exists, not redeclaring")
when not declared(SyncWindow):
  proc SyncWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_SyncWindow".}
else:
  static :
    hint("Declaration of " & "SyncWindow" & " already exists, not redeclaring")
when not declared(WindowHasSurface):
  proc WindowHasSurface*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_WindowHasSurface".}
else:
  static :
    hint("Declaration of " & "WindowHasSurface" &
        " already exists, not redeclaring")
when not declared(GetWindowSurface):
  proc GetWindowSurface*(window: ptr Window_520094429): ptr Surface_520094393 {.
      cdecl, importc: "SDL_GetWindowSurface".}
else:
  static :
    hint("Declaration of " & "GetWindowSurface" &
        " already exists, not redeclaring")
when not declared(SetWindowSurfaceVSync):
  proc SetWindowSurfaceVSync*(window: ptr Window_520094429; vsync: cint): bool {.
      cdecl, importc: "SDL_SetWindowSurfaceVSync".}
else:
  static :
    hint("Declaration of " & "SetWindowSurfaceVSync" &
        " already exists, not redeclaring")
when not declared(GetWindowSurfaceVSync):
  proc GetWindowSurfaceVSync*(window: ptr Window_520094429; vsync: ptr cint): bool {.
      cdecl, importc: "SDL_GetWindowSurfaceVSync".}
else:
  static :
    hint("Declaration of " & "GetWindowSurfaceVSync" &
        " already exists, not redeclaring")
when not declared(UpdateWindowSurface):
  proc UpdateWindowSurface*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_UpdateWindowSurface".}
else:
  static :
    hint("Declaration of " & "UpdateWindowSurface" &
        " already exists, not redeclaring")
when not declared(UpdateWindowSurfaceRects):
  proc UpdateWindowSurfaceRects*(window: ptr Window_520094429; rects: ptr Rect_520094375;
                                 numrects: cint): bool {.cdecl,
      importc: "SDL_UpdateWindowSurfaceRects".}
else:
  static :
    hint("Declaration of " & "UpdateWindowSurfaceRects" &
        " already exists, not redeclaring")
when not declared(DestroyWindowSurface):
  proc DestroyWindowSurface*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_DestroyWindowSurface".}
else:
  static :
    hint("Declaration of " & "DestroyWindowSurface" &
        " already exists, not redeclaring")
when not declared(SetWindowKeyboardGrab):
  proc SetWindowKeyboardGrab*(window: ptr Window_520094429; grabbed: bool): bool {.
      cdecl, importc: "SDL_SetWindowKeyboardGrab".}
else:
  static :
    hint("Declaration of " & "SetWindowKeyboardGrab" &
        " already exists, not redeclaring")
when not declared(SetWindowMouseGrab):
  proc SetWindowMouseGrab*(window: ptr Window_520094429; grabbed: bool): bool {.
      cdecl, importc: "SDL_SetWindowMouseGrab".}
else:
  static :
    hint("Declaration of " & "SetWindowMouseGrab" &
        " already exists, not redeclaring")
when not declared(GetWindowKeyboardGrab):
  proc GetWindowKeyboardGrab*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_GetWindowKeyboardGrab".}
else:
  static :
    hint("Declaration of " & "GetWindowKeyboardGrab" &
        " already exists, not redeclaring")
when not declared(GetWindowMouseGrab):
  proc GetWindowMouseGrab*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_GetWindowMouseGrab".}
else:
  static :
    hint("Declaration of " & "GetWindowMouseGrab" &
        " already exists, not redeclaring")
when not declared(GetGrabbedWindow):
  proc GetGrabbedWindow*(): ptr Window_520094429 {.cdecl,
      importc: "SDL_GetGrabbedWindow".}
else:
  static :
    hint("Declaration of " & "GetGrabbedWindow" &
        " already exists, not redeclaring")
when not declared(SetWindowMouseRect):
  proc SetWindowMouseRect*(window: ptr Window_520094429; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_SetWindowMouseRect".}
else:
  static :
    hint("Declaration of " & "SetWindowMouseRect" &
        " already exists, not redeclaring")
when not declared(GetWindowMouseRect):
  proc GetWindowMouseRect*(window: ptr Window_520094429): ptr Rect_520094375 {.
      cdecl, importc: "SDL_GetWindowMouseRect".}
else:
  static :
    hint("Declaration of " & "GetWindowMouseRect" &
        " already exists, not redeclaring")
when not declared(SetWindowOpacity):
  proc SetWindowOpacity*(window: ptr Window_520094429; opacity: cfloat): bool {.
      cdecl, importc: "SDL_SetWindowOpacity".}
else:
  static :
    hint("Declaration of " & "SetWindowOpacity" &
        " already exists, not redeclaring")
when not declared(GetWindowOpacity):
  proc GetWindowOpacity*(window: ptr Window_520094429): cfloat {.cdecl,
      importc: "SDL_GetWindowOpacity".}
else:
  static :
    hint("Declaration of " & "GetWindowOpacity" &
        " already exists, not redeclaring")
when not declared(SetWindowParent):
  proc SetWindowParent*(window: ptr Window_520094429; parent: ptr Window_520094429): bool {.
      cdecl, importc: "SDL_SetWindowParent".}
else:
  static :
    hint("Declaration of " & "SetWindowParent" &
        " already exists, not redeclaring")
when not declared(SetWindowModal):
  proc SetWindowModal*(window: ptr Window_520094429; modal: bool): bool {.cdecl,
      importc: "SDL_SetWindowModal".}
else:
  static :
    hint("Declaration of " & "SetWindowModal" &
        " already exists, not redeclaring")
when not declared(SetWindowFocusable):
  proc SetWindowFocusable*(window: ptr Window_520094429; focusable: bool): bool {.
      cdecl, importc: "SDL_SetWindowFocusable".}
else:
  static :
    hint("Declaration of " & "SetWindowFocusable" &
        " already exists, not redeclaring")
when not declared(ShowWindowSystemMenu):
  proc ShowWindowSystemMenu*(window: ptr Window_520094429; x: cint; y: cint): bool {.
      cdecl, importc: "SDL_ShowWindowSystemMenu".}
else:
  static :
    hint("Declaration of " & "ShowWindowSystemMenu" &
        " already exists, not redeclaring")
when not declared(SetWindowHitTest):
  proc SetWindowHitTest*(window: ptr Window_520094429; callback: HitTest_520094471;
                         callback_data: pointer): bool {.cdecl,
      importc: "SDL_SetWindowHitTest".}
else:
  static :
    hint("Declaration of " & "SetWindowHitTest" &
        " already exists, not redeclaring")
when not declared(SetWindowShape):
  proc SetWindowShape*(window: ptr Window_520094429; shape: ptr Surface_520094393): bool {.
      cdecl, importc: "SDL_SetWindowShape".}
else:
  static :
    hint("Declaration of " & "SetWindowShape" &
        " already exists, not redeclaring")
when not declared(FlashWindow):
  proc FlashWindow*(window: ptr Window_520094429; operation: FlashOperation_520094435): bool {.
      cdecl, importc: "SDL_FlashWindow".}
else:
  static :
    hint("Declaration of " & "FlashWindow" & " already exists, not redeclaring")
when not declared(DestroyWindow):
  proc DestroyWindow*(window: ptr Window_520094429): void {.cdecl,
      importc: "SDL_DestroyWindow".}
else:
  static :
    hint("Declaration of " & "DestroyWindow" &
        " already exists, not redeclaring")
when not declared(ScreenSaverEnabled):
  proc ScreenSaverEnabled*(): bool {.cdecl, importc: "SDL_ScreenSaverEnabled".}
else:
  static :
    hint("Declaration of " & "ScreenSaverEnabled" &
        " already exists, not redeclaring")
when not declared(EnableScreenSaver):
  proc EnableScreenSaver*(): bool {.cdecl, importc: "SDL_EnableScreenSaver".}
else:
  static :
    hint("Declaration of " & "EnableScreenSaver" &
        " already exists, not redeclaring")
when not declared(DisableScreenSaver):
  proc DisableScreenSaver*(): bool {.cdecl, importc: "SDL_DisableScreenSaver".}
else:
  static :
    hint("Declaration of " & "DisableScreenSaver" &
        " already exists, not redeclaring")
when not declared(GL_LoadLibrary):
  proc GL_LoadLibrary*(path: cstring): bool {.cdecl,
      importc: "SDL_GL_LoadLibrary".}
else:
  static :
    hint("Declaration of " & "GL_LoadLibrary" &
        " already exists, not redeclaring")
when not declared(GL_GetProcAddress):
  proc GL_GetProcAddress*(proc_arg: cstring): FunctionPointer_520094179 {.cdecl,
      importc: "SDL_GL_GetProcAddress".}
else:
  static :
    hint("Declaration of " & "GL_GetProcAddress" &
        " already exists, not redeclaring")
when not declared(EGL_GetProcAddress):
  proc EGL_GetProcAddress*(proc_arg: cstring): FunctionPointer_520094179 {.
      cdecl, importc: "SDL_EGL_GetProcAddress".}
else:
  static :
    hint("Declaration of " & "EGL_GetProcAddress" &
        " already exists, not redeclaring")
when not declared(GL_UnloadLibrary):
  proc GL_UnloadLibrary*(): void {.cdecl, importc: "SDL_GL_UnloadLibrary".}
else:
  static :
    hint("Declaration of " & "GL_UnloadLibrary" &
        " already exists, not redeclaring")
when not declared(GL_ExtensionSupported):
  proc GL_ExtensionSupported*(extension: cstring): bool {.cdecl,
      importc: "SDL_GL_ExtensionSupported".}
else:
  static :
    hint("Declaration of " & "GL_ExtensionSupported" &
        " already exists, not redeclaring")
when not declared(GL_ResetAttributes):
  proc GL_ResetAttributes*(): void {.cdecl, importc: "SDL_GL_ResetAttributes".}
else:
  static :
    hint("Declaration of " & "GL_ResetAttributes" &
        " already exists, not redeclaring")
when not declared(GL_SetAttribute):
  proc GL_SetAttribute*(attr: GLAttr_typedef_520094457; value: cint): bool {.
      cdecl, importc: "SDL_GL_SetAttribute".}
else:
  static :
    hint("Declaration of " & "GL_SetAttribute" &
        " already exists, not redeclaring")
when not declared(GL_GetAttribute):
  proc GL_GetAttribute*(attr: GLAttr_typedef_520094457; value: ptr cint): bool {.
      cdecl, importc: "SDL_GL_GetAttribute".}
else:
  static :
    hint("Declaration of " & "GL_GetAttribute" &
        " already exists, not redeclaring")
when not declared(GL_CreateContext):
  proc GL_CreateContext*(window: ptr Window_520094429): GLContext_520094437 {.
      cdecl, importc: "SDL_GL_CreateContext".}
else:
  static :
    hint("Declaration of " & "GL_CreateContext" &
        " already exists, not redeclaring")
when not declared(GL_MakeCurrent):
  proc GL_MakeCurrent*(window: ptr Window_520094429; context: GLContext_520094437): bool {.
      cdecl, importc: "SDL_GL_MakeCurrent".}
else:
  static :
    hint("Declaration of " & "GL_MakeCurrent" &
        " already exists, not redeclaring")
when not declared(GL_GetCurrentWindow):
  proc GL_GetCurrentWindow*(): ptr Window_520094429 {.cdecl,
      importc: "SDL_GL_GetCurrentWindow".}
else:
  static :
    hint("Declaration of " & "GL_GetCurrentWindow" &
        " already exists, not redeclaring")
when not declared(GL_GetCurrentContext):
  proc GL_GetCurrentContext*(): GLContext_520094437 {.cdecl,
      importc: "SDL_GL_GetCurrentContext".}
else:
  static :
    hint("Declaration of " & "GL_GetCurrentContext" &
        " already exists, not redeclaring")
when not declared(EGL_GetCurrentDisplay):
  proc EGL_GetCurrentDisplay*(): EGLDisplay_520094439 {.cdecl,
      importc: "SDL_EGL_GetCurrentDisplay".}
else:
  static :
    hint("Declaration of " & "EGL_GetCurrentDisplay" &
        " already exists, not redeclaring")
when not declared(EGL_GetCurrentConfig):
  proc EGL_GetCurrentConfig*(): EGLConfig_520094441 {.cdecl,
      importc: "SDL_EGL_GetCurrentConfig".}
else:
  static :
    hint("Declaration of " & "EGL_GetCurrentConfig" &
        " already exists, not redeclaring")
when not declared(EGL_GetWindowSurface):
  proc EGL_GetWindowSurface*(window: ptr Window_520094429): EGLSurface_520094443 {.
      cdecl, importc: "SDL_EGL_GetWindowSurface".}
else:
  static :
    hint("Declaration of " & "EGL_GetWindowSurface" &
        " already exists, not redeclaring")
when not declared(EGL_SetAttributeCallbacks):
  proc EGL_SetAttributeCallbacks*(platformAttribCallback: EGLAttribArrayCallback_520094451;
                                  surfaceAttribCallback: EGLIntArrayCallback_520094453;
                                  contextAttribCallback: EGLIntArrayCallback_520094453;
                                  userdata: pointer): void {.cdecl,
      importc: "SDL_EGL_SetAttributeCallbacks".}
else:
  static :
    hint("Declaration of " & "EGL_SetAttributeCallbacks" &
        " already exists, not redeclaring")
when not declared(GL_SetSwapInterval):
  proc GL_SetSwapInterval*(interval: cint): bool {.cdecl,
      importc: "SDL_GL_SetSwapInterval".}
else:
  static :
    hint("Declaration of " & "GL_SetSwapInterval" &
        " already exists, not redeclaring")
when not declared(GL_GetSwapInterval):
  proc GL_GetSwapInterval*(interval: ptr cint): bool {.cdecl,
      importc: "SDL_GL_GetSwapInterval".}
else:
  static :
    hint("Declaration of " & "GL_GetSwapInterval" &
        " already exists, not redeclaring")
when not declared(GL_SwapWindow):
  proc GL_SwapWindow*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_GL_SwapWindow".}
else:
  static :
    hint("Declaration of " & "GL_SwapWindow" &
        " already exists, not redeclaring")
when not declared(GL_DestroyContext):
  proc GL_DestroyContext*(context: GLContext_520094437): bool {.cdecl,
      importc: "SDL_GL_DestroyContext".}
else:
  static :
    hint("Declaration of " & "GL_DestroyContext" &
        " already exists, not redeclaring")
when not declared(ShowOpenFileDialog):
  proc ShowOpenFileDialog*(callback: DialogFileCallback_520094477;
                           userdata: pointer; window: ptr Window_520094429;
                           filters: ptr DialogFileFilter_520094475;
                           nfilters: cint; default_location: cstring;
                           allow_many: bool): void {.cdecl,
      importc: "SDL_ShowOpenFileDialog".}
else:
  static :
    hint("Declaration of " & "ShowOpenFileDialog" &
        " already exists, not redeclaring")
when not declared(ShowSaveFileDialog):
  proc ShowSaveFileDialog*(callback: DialogFileCallback_520094477;
                           userdata: pointer; window: ptr Window_520094429;
                           filters: ptr DialogFileFilter_520094475;
                           nfilters: cint; default_location: cstring): void {.
      cdecl, importc: "SDL_ShowSaveFileDialog".}
else:
  static :
    hint("Declaration of " & "ShowSaveFileDialog" &
        " already exists, not redeclaring")
when not declared(ShowOpenFolderDialog):
  proc ShowOpenFolderDialog*(callback: DialogFileCallback_520094477;
                             userdata: pointer; window: ptr Window_520094429;
                             default_location: cstring; allow_many: bool): void {.
      cdecl, importc: "SDL_ShowOpenFolderDialog".}
else:
  static :
    hint("Declaration of " & "ShowOpenFolderDialog" &
        " already exists, not redeclaring")
when not declared(ShowFileDialogWithProperties):
  proc ShowFileDialogWithProperties*(type_arg: FileDialogType_520094481;
                                     callback: DialogFileCallback_520094477;
                                     userdata: pointer; props: PropertiesID_520094217): void {.
      cdecl, importc: "SDL_ShowFileDialogWithProperties".}
else:
  static :
    hint("Declaration of " & "ShowFileDialogWithProperties" &
        " already exists, not redeclaring")
when not declared(GUIDToString):
  proc GUIDToString*(guid: GUID_520094485; pszGUID: cstring; cbGUID: cint): void {.
      cdecl, importc: "SDL_GUIDToString".}
else:
  static :
    hint("Declaration of " & "GUIDToString" & " already exists, not redeclaring")
when not declared(StringToGUID):
  proc StringToGUID*(pchGUID: cstring): GUID_520094485 {.cdecl,
      importc: "SDL_StringToGUID".}
else:
  static :
    hint("Declaration of " & "StringToGUID" & " already exists, not redeclaring")
when not declared(GetPowerInfo):
  proc GetPowerInfo*(seconds: ptr cint; percent: ptr cint): PowerState_520094489 {.
      cdecl, importc: "SDL_GetPowerInfo".}
else:
  static :
    hint("Declaration of " & "GetPowerInfo" & " already exists, not redeclaring")
when not declared(GetSensors):
  proc GetSensors*(count: ptr cint): ptr SensorID_520094493 {.cdecl,
      importc: "SDL_GetSensors".}
else:
  static :
    hint("Declaration of " & "GetSensors" & " already exists, not redeclaring")
when not declared(GetSensorNameForID):
  proc GetSensorNameForID*(instance_id: SensorID_520094493): cstring {.cdecl,
      importc: "SDL_GetSensorNameForID".}
else:
  static :
    hint("Declaration of " & "GetSensorNameForID" &
        " already exists, not redeclaring")
when not declared(GetSensorTypeForID):
  proc GetSensorTypeForID*(instance_id: SensorID_520094493): SensorType_520094497 {.
      cdecl, importc: "SDL_GetSensorTypeForID".}
else:
  static :
    hint("Declaration of " & "GetSensorTypeForID" &
        " already exists, not redeclaring")
when not declared(GetSensorNonPortableTypeForID):
  proc GetSensorNonPortableTypeForID*(instance_id: SensorID_520094493): cint {.
      cdecl, importc: "SDL_GetSensorNonPortableTypeForID".}
else:
  static :
    hint("Declaration of " & "GetSensorNonPortableTypeForID" &
        " already exists, not redeclaring")
when not declared(OpenSensor):
  proc OpenSensor*(instance_id: SensorID_520094493): ptr Sensor_520094491 {.
      cdecl, importc: "SDL_OpenSensor".}
else:
  static :
    hint("Declaration of " & "OpenSensor" & " already exists, not redeclaring")
when not declared(GetSensorFromID):
  proc GetSensorFromID*(instance_id: SensorID_520094493): ptr Sensor_520094491 {.
      cdecl, importc: "SDL_GetSensorFromID".}
else:
  static :
    hint("Declaration of " & "GetSensorFromID" &
        " already exists, not redeclaring")
when not declared(GetSensorProperties):
  proc GetSensorProperties*(sensor: ptr Sensor_520094491): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetSensorProperties".}
else:
  static :
    hint("Declaration of " & "GetSensorProperties" &
        " already exists, not redeclaring")
when not declared(GetSensorName):
  proc GetSensorName*(sensor: ptr Sensor_520094491): cstring {.cdecl,
      importc: "SDL_GetSensorName".}
else:
  static :
    hint("Declaration of " & "GetSensorName" &
        " already exists, not redeclaring")
when not declared(GetSensorType):
  proc GetSensorType*(sensor: ptr Sensor_520094491): SensorType_520094497 {.
      cdecl, importc: "SDL_GetSensorType".}
else:
  static :
    hint("Declaration of " & "GetSensorType" &
        " already exists, not redeclaring")
when not declared(GetSensorNonPortableType):
  proc GetSensorNonPortableType*(sensor: ptr Sensor_520094491): cint {.cdecl,
      importc: "SDL_GetSensorNonPortableType".}
else:
  static :
    hint("Declaration of " & "GetSensorNonPortableType" &
        " already exists, not redeclaring")
when not declared(GetSensorID):
  proc GetSensorID*(sensor: ptr Sensor_520094491): SensorID_520094493 {.cdecl,
      importc: "SDL_GetSensorID".}
else:
  static :
    hint("Declaration of " & "GetSensorID" & " already exists, not redeclaring")
when not declared(GetSensorData):
  proc GetSensorData*(sensor: ptr Sensor_520094491; data: ptr cfloat;
                      num_values: cint): bool {.cdecl,
      importc: "SDL_GetSensorData".}
else:
  static :
    hint("Declaration of " & "GetSensorData" &
        " already exists, not redeclaring")
when not declared(CloseSensor):
  proc CloseSensor*(sensor: ptr Sensor_520094491): void {.cdecl,
      importc: "SDL_CloseSensor".}
else:
  static :
    hint("Declaration of " & "CloseSensor" & " already exists, not redeclaring")
when not declared(UpdateSensors):
  proc UpdateSensors*(): void {.cdecl, importc: "SDL_UpdateSensors".}
else:
  static :
    hint("Declaration of " & "UpdateSensors" &
        " already exists, not redeclaring")
when not declared(LockJoysticks):
  proc LockJoysticks*(): void {.cdecl, importc: "SDL_LockJoysticks".}
else:
  static :
    hint("Declaration of " & "LockJoysticks" &
        " already exists, not redeclaring")
when not declared(UnlockJoysticks):
  proc UnlockJoysticks*(): void {.cdecl, importc: "SDL_UnlockJoysticks".}
else:
  static :
    hint("Declaration of " & "UnlockJoysticks" &
        " already exists, not redeclaring")
when not declared(HasJoystick):
  proc HasJoystick*(): bool {.cdecl, importc: "SDL_HasJoystick".}
else:
  static :
    hint("Declaration of " & "HasJoystick" & " already exists, not redeclaring")
when not declared(GetJoysticks):
  proc GetJoysticks*(count: ptr cint): ptr JoystickID_520094501 {.cdecl,
      importc: "SDL_GetJoysticks".}
else:
  static :
    hint("Declaration of " & "GetJoysticks" & " already exists, not redeclaring")
when not declared(GetJoystickNameForID):
  proc GetJoystickNameForID*(instance_id: JoystickID_520094501): cstring {.
      cdecl, importc: "SDL_GetJoystickNameForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickNameForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickPathForID):
  proc GetJoystickPathForID*(instance_id: JoystickID_520094501): cstring {.
      cdecl, importc: "SDL_GetJoystickPathForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickPathForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickPlayerIndexForID):
  proc GetJoystickPlayerIndexForID*(instance_id: JoystickID_520094501): cint {.
      cdecl, importc: "SDL_GetJoystickPlayerIndexForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickPlayerIndexForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickGUIDForID):
  proc GetJoystickGUIDForID*(instance_id: JoystickID_520094501): GUID_520094485 {.
      cdecl, importc: "SDL_GetJoystickGUIDForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickGUIDForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickVendorForID):
  proc GetJoystickVendorForID*(instance_id: JoystickID_520094501): Uint16_520094141 {.
      cdecl, importc: "SDL_GetJoystickVendorForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickVendorForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickProductForID):
  proc GetJoystickProductForID*(instance_id: JoystickID_520094501): Uint16_520094141 {.
      cdecl, importc: "SDL_GetJoystickProductForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickProductForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickProductVersionForID):
  proc GetJoystickProductVersionForID*(instance_id: JoystickID_520094501): Uint16_520094141 {.
      cdecl, importc: "SDL_GetJoystickProductVersionForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickProductVersionForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickTypeForID):
  proc GetJoystickTypeForID*(instance_id: JoystickID_520094501): JoystickType_520094505 {.
      cdecl, importc: "SDL_GetJoystickTypeForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickTypeForID" &
        " already exists, not redeclaring")
when not declared(OpenJoystick):
  proc OpenJoystick*(instance_id: JoystickID_520094501): ptr Joystick_520094499 {.
      cdecl, importc: "SDL_OpenJoystick".}
else:
  static :
    hint("Declaration of " & "OpenJoystick" & " already exists, not redeclaring")
when not declared(GetJoystickFromID):
  proc GetJoystickFromID*(instance_id: JoystickID_520094501): ptr Joystick_520094499 {.
      cdecl, importc: "SDL_GetJoystickFromID".}
else:
  static :
    hint("Declaration of " & "GetJoystickFromID" &
        " already exists, not redeclaring")
when not declared(GetJoystickFromPlayerIndex):
  proc GetJoystickFromPlayerIndex*(player_index: cint): ptr Joystick_520094499 {.
      cdecl, importc: "SDL_GetJoystickFromPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetJoystickFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(AttachVirtualJoystick):
  proc AttachVirtualJoystick*(desc: ptr VirtualJoystickDesc_520094521): JoystickID_520094501 {.
      cdecl, importc: "SDL_AttachVirtualJoystick".}
else:
  static :
    hint("Declaration of " & "AttachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(DetachVirtualJoystick):
  proc DetachVirtualJoystick*(instance_id: JoystickID_520094501): bool {.cdecl,
      importc: "SDL_DetachVirtualJoystick".}
else:
  static :
    hint("Declaration of " & "DetachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(IsJoystickVirtual):
  proc IsJoystickVirtual*(instance_id: JoystickID_520094501): bool {.cdecl,
      importc: "SDL_IsJoystickVirtual".}
else:
  static :
    hint("Declaration of " & "IsJoystickVirtual" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualAxis):
  proc SetJoystickVirtualAxis*(joystick: ptr Joystick_520094499; axis: cint;
                               value: Sint16_520094139): bool {.cdecl,
      importc: "SDL_SetJoystickVirtualAxis".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualAxis" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualBall):
  proc SetJoystickVirtualBall*(joystick: ptr Joystick_520094499; ball: cint;
                               xrel: Sint16_520094139; yrel: Sint16_520094139): bool {.
      cdecl, importc: "SDL_SetJoystickVirtualBall".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualBall" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualButton):
  proc SetJoystickVirtualButton*(joystick: ptr Joystick_520094499; button: cint;
                                 down: bool): bool {.cdecl,
      importc: "SDL_SetJoystickVirtualButton".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualButton" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualHat):
  proc SetJoystickVirtualHat*(joystick: ptr Joystick_520094499; hat: cint;
                              value: Uint8_520094137): bool {.cdecl,
      importc: "SDL_SetJoystickVirtualHat".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualHat" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualTouchpad):
  proc SetJoystickVirtualTouchpad*(joystick: ptr Joystick_520094499;
                                   touchpad: cint; finger: cint; down: bool;
                                   x: cfloat; y: cfloat; pressure: cfloat): bool {.
      cdecl, importc: "SDL_SetJoystickVirtualTouchpad".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualTouchpad" &
        " already exists, not redeclaring")
when not declared(SendJoystickVirtualSensorData):
  proc SendJoystickVirtualSensorData*(joystick: ptr Joystick_520094499;
                                      type_arg: SensorType_520094497;
                                      sensor_timestamp: Uint64_520094149;
                                      data: ptr cfloat; num_values: cint): bool {.
      cdecl, importc: "SDL_SendJoystickVirtualSensorData".}
else:
  static :
    hint("Declaration of " & "SendJoystickVirtualSensorData" &
        " already exists, not redeclaring")
when not declared(GetJoystickProperties):
  proc GetJoystickProperties*(joystick: ptr Joystick_520094499): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetJoystickProperties".}
else:
  static :
    hint("Declaration of " & "GetJoystickProperties" &
        " already exists, not redeclaring")
when not declared(GetJoystickName):
  proc GetJoystickName*(joystick: ptr Joystick_520094499): cstring {.cdecl,
      importc: "SDL_GetJoystickName".}
else:
  static :
    hint("Declaration of " & "GetJoystickName" &
        " already exists, not redeclaring")
when not declared(GetJoystickPath):
  proc GetJoystickPath*(joystick: ptr Joystick_520094499): cstring {.cdecl,
      importc: "SDL_GetJoystickPath".}
else:
  static :
    hint("Declaration of " & "GetJoystickPath" &
        " already exists, not redeclaring")
when not declared(GetJoystickPlayerIndex):
  proc GetJoystickPlayerIndex*(joystick: ptr Joystick_520094499): cint {.cdecl,
      importc: "SDL_GetJoystickPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(SetJoystickPlayerIndex):
  proc SetJoystickPlayerIndex*(joystick: ptr Joystick_520094499;
                               player_index: cint): bool {.cdecl,
      importc: "SDL_SetJoystickPlayerIndex".}
else:
  static :
    hint("Declaration of " & "SetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(GetJoystickGUID):
  proc GetJoystickGUID*(joystick: ptr Joystick_520094499): GUID_520094485 {.
      cdecl, importc: "SDL_GetJoystickGUID".}
else:
  static :
    hint("Declaration of " & "GetJoystickGUID" &
        " already exists, not redeclaring")
when not declared(GetJoystickVendor):
  proc GetJoystickVendor*(joystick: ptr Joystick_520094499): Uint16_520094141 {.
      cdecl, importc: "SDL_GetJoystickVendor".}
else:
  static :
    hint("Declaration of " & "GetJoystickVendor" &
        " already exists, not redeclaring")
when not declared(GetJoystickProduct):
  proc GetJoystickProduct*(joystick: ptr Joystick_520094499): Uint16_520094141 {.
      cdecl, importc: "SDL_GetJoystickProduct".}
else:
  static :
    hint("Declaration of " & "GetJoystickProduct" &
        " already exists, not redeclaring")
when not declared(GetJoystickProductVersion):
  proc GetJoystickProductVersion*(joystick: ptr Joystick_520094499): Uint16_520094141 {.
      cdecl, importc: "SDL_GetJoystickProductVersion".}
else:
  static :
    hint("Declaration of " & "GetJoystickProductVersion" &
        " already exists, not redeclaring")
when not declared(GetJoystickFirmwareVersion):
  proc GetJoystickFirmwareVersion*(joystick: ptr Joystick_520094499): Uint16_520094141 {.
      cdecl, importc: "SDL_GetJoystickFirmwareVersion".}
else:
  static :
    hint("Declaration of " & "GetJoystickFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(GetJoystickSerial):
  proc GetJoystickSerial*(joystick: ptr Joystick_520094499): cstring {.cdecl,
      importc: "SDL_GetJoystickSerial".}
else:
  static :
    hint("Declaration of " & "GetJoystickSerial" &
        " already exists, not redeclaring")
when not declared(GetJoystickType):
  proc GetJoystickType*(joystick: ptr Joystick_520094499): JoystickType_520094505 {.
      cdecl, importc: "SDL_GetJoystickType".}
else:
  static :
    hint("Declaration of " & "GetJoystickType" &
        " already exists, not redeclaring")
when not declared(GetJoystickGUIDInfo):
  proc GetJoystickGUIDInfo*(guid: GUID_520094485; vendor: ptr Uint16_520094141;
                            product: ptr Uint16_520094141; version: ptr Uint16_520094141;
                            crc16: ptr Uint16_520094141): void {.cdecl,
      importc: "SDL_GetJoystickGUIDInfo".}
else:
  static :
    hint("Declaration of " & "GetJoystickGUIDInfo" &
        " already exists, not redeclaring")
when not declared(JoystickConnected):
  proc JoystickConnected*(joystick: ptr Joystick_520094499): bool {.cdecl,
      importc: "SDL_JoystickConnected".}
else:
  static :
    hint("Declaration of " & "JoystickConnected" &
        " already exists, not redeclaring")
when not declared(GetJoystickID):
  proc GetJoystickID*(joystick: ptr Joystick_520094499): JoystickID_520094501 {.
      cdecl, importc: "SDL_GetJoystickID".}
else:
  static :
    hint("Declaration of " & "GetJoystickID" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickAxes):
  proc GetNumJoystickAxes*(joystick: ptr Joystick_520094499): cint {.cdecl,
      importc: "SDL_GetNumJoystickAxes".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickAxes" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickBalls):
  proc GetNumJoystickBalls*(joystick: ptr Joystick_520094499): cint {.cdecl,
      importc: "SDL_GetNumJoystickBalls".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickBalls" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickHats):
  proc GetNumJoystickHats*(joystick: ptr Joystick_520094499): cint {.cdecl,
      importc: "SDL_GetNumJoystickHats".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickHats" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickButtons):
  proc GetNumJoystickButtons*(joystick: ptr Joystick_520094499): cint {.cdecl,
      importc: "SDL_GetNumJoystickButtons".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickButtons" &
        " already exists, not redeclaring")
when not declared(SetJoystickEventsEnabled):
  proc SetJoystickEventsEnabled*(enabled: bool): void {.cdecl,
      importc: "SDL_SetJoystickEventsEnabled".}
else:
  static :
    hint("Declaration of " & "SetJoystickEventsEnabled" &
        " already exists, not redeclaring")
when not declared(JoystickEventsEnabled):
  proc JoystickEventsEnabled*(): bool {.cdecl,
                                        importc: "SDL_JoystickEventsEnabled".}
else:
  static :
    hint("Declaration of " & "JoystickEventsEnabled" &
        " already exists, not redeclaring")
when not declared(UpdateJoysticks):
  proc UpdateJoysticks*(): void {.cdecl, importc: "SDL_UpdateJoysticks".}
else:
  static :
    hint("Declaration of " & "UpdateJoysticks" &
        " already exists, not redeclaring")
when not declared(GetJoystickAxis):
  proc GetJoystickAxis*(joystick: ptr Joystick_520094499; axis: cint): Sint16_520094139 {.
      cdecl, importc: "SDL_GetJoystickAxis".}
else:
  static :
    hint("Declaration of " & "GetJoystickAxis" &
        " already exists, not redeclaring")
when not declared(GetJoystickAxisInitialState):
  proc GetJoystickAxisInitialState*(joystick: ptr Joystick_520094499;
                                    axis: cint; state: ptr Sint16_520094139): bool {.
      cdecl, importc: "SDL_GetJoystickAxisInitialState".}
else:
  static :
    hint("Declaration of " & "GetJoystickAxisInitialState" &
        " already exists, not redeclaring")
when not declared(GetJoystickBall):
  proc GetJoystickBall*(joystick: ptr Joystick_520094499; ball: cint;
                        dx: ptr cint; dy: ptr cint): bool {.cdecl,
      importc: "SDL_GetJoystickBall".}
else:
  static :
    hint("Declaration of " & "GetJoystickBall" &
        " already exists, not redeclaring")
when not declared(GetJoystickHat):
  proc GetJoystickHat*(joystick: ptr Joystick_520094499; hat: cint): Uint8_520094137 {.
      cdecl, importc: "SDL_GetJoystickHat".}
else:
  static :
    hint("Declaration of " & "GetJoystickHat" &
        " already exists, not redeclaring")
when not declared(GetJoystickButton):
  proc GetJoystickButton*(joystick: ptr Joystick_520094499; button: cint): bool {.
      cdecl, importc: "SDL_GetJoystickButton".}
else:
  static :
    hint("Declaration of " & "GetJoystickButton" &
        " already exists, not redeclaring")
when not declared(RumbleJoystick):
  proc RumbleJoystick*(joystick: ptr Joystick_520094499;
                       low_frequency_rumble: Uint16_520094141;
                       high_frequency_rumble: Uint16_520094141;
                       duration_ms: Uint32_520094145): bool {.cdecl,
      importc: "SDL_RumbleJoystick".}
else:
  static :
    hint("Declaration of " & "RumbleJoystick" &
        " already exists, not redeclaring")
when not declared(RumbleJoystickTriggers):
  proc RumbleJoystickTriggers*(joystick: ptr Joystick_520094499;
                               left_rumble: Uint16_520094141;
                               right_rumble: Uint16_520094141;
                               duration_ms: Uint32_520094145): bool {.cdecl,
      importc: "SDL_RumbleJoystickTriggers".}
else:
  static :
    hint("Declaration of " & "RumbleJoystickTriggers" &
        " already exists, not redeclaring")
when not declared(SetJoystickLED):
  proc SetJoystickLED*(joystick: ptr Joystick_520094499; red: Uint8_520094137;
                       green: Uint8_520094137; blue: Uint8_520094137): bool {.
      cdecl, importc: "SDL_SetJoystickLED".}
else:
  static :
    hint("Declaration of " & "SetJoystickLED" &
        " already exists, not redeclaring")
when not declared(SendJoystickEffect):
  proc SendJoystickEffect*(joystick: ptr Joystick_520094499; data: pointer;
                           size: cint): bool {.cdecl,
      importc: "SDL_SendJoystickEffect".}
else:
  static :
    hint("Declaration of " & "SendJoystickEffect" &
        " already exists, not redeclaring")
when not declared(CloseJoystick):
  proc CloseJoystick*(joystick: ptr Joystick_520094499): void {.cdecl,
      importc: "SDL_CloseJoystick".}
else:
  static :
    hint("Declaration of " & "CloseJoystick" &
        " already exists, not redeclaring")
when not declared(GetJoystickConnectionState):
  proc GetJoystickConnectionState*(joystick: ptr Joystick_520094499): JoystickConnectionState_520094509 {.
      cdecl, importc: "SDL_GetJoystickConnectionState".}
else:
  static :
    hint("Declaration of " & "GetJoystickConnectionState" &
        " already exists, not redeclaring")
when not declared(GetJoystickPowerInfo):
  proc GetJoystickPowerInfo*(joystick: ptr Joystick_520094499; percent: ptr cint): PowerState_520094489 {.
      cdecl, importc: "SDL_GetJoystickPowerInfo".}
else:
  static :
    hint("Declaration of " & "GetJoystickPowerInfo" &
        " already exists, not redeclaring")
when not declared(AddGamepadMapping):
  proc AddGamepadMapping*(mapping: cstring): cint {.cdecl,
      importc: "SDL_AddGamepadMapping".}
else:
  static :
    hint("Declaration of " & "AddGamepadMapping" &
        " already exists, not redeclaring")
when not declared(AddGamepadMappingsFromIO):
  proc AddGamepadMappingsFromIO*(src: ptr IOStream_520094269; closeio: bool): cint {.
      cdecl, importc: "SDL_AddGamepadMappingsFromIO".}
else:
  static :
    hint("Declaration of " & "AddGamepadMappingsFromIO" &
        " already exists, not redeclaring")
when not declared(AddGamepadMappingsFromFile):
  proc AddGamepadMappingsFromFile*(file: cstring): cint {.cdecl,
      importc: "SDL_AddGamepadMappingsFromFile".}
else:
  static :
    hint("Declaration of " & "AddGamepadMappingsFromFile" &
        " already exists, not redeclaring")
when not declared(ReloadGamepadMappings):
  proc ReloadGamepadMappings*(): bool {.cdecl,
                                        importc: "SDL_ReloadGamepadMappings".}
else:
  static :
    hint("Declaration of " & "ReloadGamepadMappings" &
        " already exists, not redeclaring")
when not declared(GetGamepadMappings):
  proc GetGamepadMappings*(count: ptr cint): ptr cstring {.cdecl,
      importc: "SDL_GetGamepadMappings".}
else:
  static :
    hint("Declaration of " & "GetGamepadMappings" &
        " already exists, not redeclaring")
when not declared(GetGamepadMappingForGUID):
  proc GetGamepadMappingForGUID*(guid: GUID_520094485): cstring {.cdecl,
      importc: "SDL_GetGamepadMappingForGUID".}
else:
  static :
    hint("Declaration of " & "GetGamepadMappingForGUID" &
        " already exists, not redeclaring")
when not declared(GetGamepadMapping):
  proc GetGamepadMapping*(gamepad: ptr Gamepad_520094523): cstring {.cdecl,
      importc: "SDL_GetGamepadMapping".}
else:
  static :
    hint("Declaration of " & "GetGamepadMapping" &
        " already exists, not redeclaring")
when not declared(SetGamepadMapping):
  proc SetGamepadMapping*(instance_id: JoystickID_520094501; mapping: cstring): bool {.
      cdecl, importc: "SDL_SetGamepadMapping".}
else:
  static :
    hint("Declaration of " & "SetGamepadMapping" &
        " already exists, not redeclaring")
when not declared(HasGamepad):
  proc HasGamepad*(): bool {.cdecl, importc: "SDL_HasGamepad".}
else:
  static :
    hint("Declaration of " & "HasGamepad" & " already exists, not redeclaring")
when not declared(GetGamepads):
  proc GetGamepads*(count: ptr cint): ptr JoystickID_520094501 {.cdecl,
      importc: "SDL_GetGamepads".}
else:
  static :
    hint("Declaration of " & "GetGamepads" & " already exists, not redeclaring")
when not declared(IsGamepad):
  proc IsGamepad*(instance_id: JoystickID_520094501): bool {.cdecl,
      importc: "SDL_IsGamepad".}
else:
  static :
    hint("Declaration of " & "IsGamepad" & " already exists, not redeclaring")
when not declared(GetGamepadNameForID):
  proc GetGamepadNameForID*(instance_id: JoystickID_520094501): cstring {.cdecl,
      importc: "SDL_GetGamepadNameForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadNameForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadPathForID):
  proc GetGamepadPathForID*(instance_id: JoystickID_520094501): cstring {.cdecl,
      importc: "SDL_GetGamepadPathForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadPathForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadPlayerIndexForID):
  proc GetGamepadPlayerIndexForID*(instance_id: JoystickID_520094501): cint {.
      cdecl, importc: "SDL_GetGamepadPlayerIndexForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadPlayerIndexForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadGUIDForID):
  proc GetGamepadGUIDForID*(instance_id: JoystickID_520094501): GUID_520094485 {.
      cdecl, importc: "SDL_GetGamepadGUIDForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadGUIDForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadVendorForID):
  proc GetGamepadVendorForID*(instance_id: JoystickID_520094501): Uint16_520094141 {.
      cdecl, importc: "SDL_GetGamepadVendorForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadVendorForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadProductForID):
  proc GetGamepadProductForID*(instance_id: JoystickID_520094501): Uint16_520094141 {.
      cdecl, importc: "SDL_GetGamepadProductForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadProductForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadProductVersionForID):
  proc GetGamepadProductVersionForID*(instance_id: JoystickID_520094501): Uint16_520094141 {.
      cdecl, importc: "SDL_GetGamepadProductVersionForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadProductVersionForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadTypeForID):
  proc GetGamepadTypeForID*(instance_id: JoystickID_520094501): GamepadType_520094527 {.
      cdecl, importc: "SDL_GetGamepadTypeForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadTypeForID" &
        " already exists, not redeclaring")
when not declared(GetRealGamepadTypeForID):
  proc GetRealGamepadTypeForID*(instance_id: JoystickID_520094501): GamepadType_520094527 {.
      cdecl, importc: "SDL_GetRealGamepadTypeForID".}
else:
  static :
    hint("Declaration of " & "GetRealGamepadTypeForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadMappingForID):
  proc GetGamepadMappingForID*(instance_id: JoystickID_520094501): cstring {.
      cdecl, importc: "SDL_GetGamepadMappingForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadMappingForID" &
        " already exists, not redeclaring")
when not declared(OpenGamepad):
  proc OpenGamepad*(instance_id: JoystickID_520094501): ptr Gamepad_520094523 {.
      cdecl, importc: "SDL_OpenGamepad".}
else:
  static :
    hint("Declaration of " & "OpenGamepad" & " already exists, not redeclaring")
when not declared(GetGamepadFromID):
  proc GetGamepadFromID*(instance_id: JoystickID_520094501): ptr Gamepad_520094523 {.
      cdecl, importc: "SDL_GetGamepadFromID".}
else:
  static :
    hint("Declaration of " & "GetGamepadFromID" &
        " already exists, not redeclaring")
when not declared(GetGamepadFromPlayerIndex):
  proc GetGamepadFromPlayerIndex*(player_index: cint): ptr Gamepad_520094523 {.
      cdecl, importc: "SDL_GetGamepadFromPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetGamepadFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(GetGamepadProperties):
  proc GetGamepadProperties*(gamepad: ptr Gamepad_520094523): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetGamepadProperties".}
else:
  static :
    hint("Declaration of " & "GetGamepadProperties" &
        " already exists, not redeclaring")
when not declared(GetGamepadID):
  proc GetGamepadID*(gamepad: ptr Gamepad_520094523): JoystickID_520094501 {.
      cdecl, importc: "SDL_GetGamepadID".}
else:
  static :
    hint("Declaration of " & "GetGamepadID" & " already exists, not redeclaring")
when not declared(GetGamepadName):
  proc GetGamepadName*(gamepad: ptr Gamepad_520094523): cstring {.cdecl,
      importc: "SDL_GetGamepadName".}
else:
  static :
    hint("Declaration of " & "GetGamepadName" &
        " already exists, not redeclaring")
when not declared(GetGamepadPath):
  proc GetGamepadPath*(gamepad: ptr Gamepad_520094523): cstring {.cdecl,
      importc: "SDL_GetGamepadPath".}
else:
  static :
    hint("Declaration of " & "GetGamepadPath" &
        " already exists, not redeclaring")
when not declared(GetGamepadType):
  proc GetGamepadType*(gamepad: ptr Gamepad_520094523): GamepadType_520094527 {.
      cdecl, importc: "SDL_GetGamepadType".}
else:
  static :
    hint("Declaration of " & "GetGamepadType" &
        " already exists, not redeclaring")
when not declared(GetRealGamepadType):
  proc GetRealGamepadType*(gamepad: ptr Gamepad_520094523): GamepadType_520094527 {.
      cdecl, importc: "SDL_GetRealGamepadType".}
else:
  static :
    hint("Declaration of " & "GetRealGamepadType" &
        " already exists, not redeclaring")
when not declared(GetGamepadPlayerIndex):
  proc GetGamepadPlayerIndex*(gamepad: ptr Gamepad_520094523): cint {.cdecl,
      importc: "SDL_GetGamepadPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(SetGamepadPlayerIndex):
  proc SetGamepadPlayerIndex*(gamepad: ptr Gamepad_520094523; player_index: cint): bool {.
      cdecl, importc: "SDL_SetGamepadPlayerIndex".}
else:
  static :
    hint("Declaration of " & "SetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(GetGamepadVendor):
  proc GetGamepadVendor*(gamepad: ptr Gamepad_520094523): Uint16_520094141 {.
      cdecl, importc: "SDL_GetGamepadVendor".}
else:
  static :
    hint("Declaration of " & "GetGamepadVendor" &
        " already exists, not redeclaring")
when not declared(GetGamepadProduct):
  proc GetGamepadProduct*(gamepad: ptr Gamepad_520094523): Uint16_520094141 {.
      cdecl, importc: "SDL_GetGamepadProduct".}
else:
  static :
    hint("Declaration of " & "GetGamepadProduct" &
        " already exists, not redeclaring")
when not declared(GetGamepadProductVersion):
  proc GetGamepadProductVersion*(gamepad: ptr Gamepad_520094523): Uint16_520094141 {.
      cdecl, importc: "SDL_GetGamepadProductVersion".}
else:
  static :
    hint("Declaration of " & "GetGamepadProductVersion" &
        " already exists, not redeclaring")
when not declared(GetGamepadFirmwareVersion):
  proc GetGamepadFirmwareVersion*(gamepad: ptr Gamepad_520094523): Uint16_520094141 {.
      cdecl, importc: "SDL_GetGamepadFirmwareVersion".}
else:
  static :
    hint("Declaration of " & "GetGamepadFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(GetGamepadSerial):
  proc GetGamepadSerial*(gamepad: ptr Gamepad_520094523): cstring {.cdecl,
      importc: "SDL_GetGamepadSerial".}
else:
  static :
    hint("Declaration of " & "GetGamepadSerial" &
        " already exists, not redeclaring")
when not declared(GetGamepadSteamHandle):
  proc GetGamepadSteamHandle*(gamepad: ptr Gamepad_520094523): Uint64_520094149 {.
      cdecl, importc: "SDL_GetGamepadSteamHandle".}
else:
  static :
    hint("Declaration of " & "GetGamepadSteamHandle" &
        " already exists, not redeclaring")
when not declared(GetGamepadConnectionState):
  proc GetGamepadConnectionState*(gamepad: ptr Gamepad_520094523): JoystickConnectionState_520094509 {.
      cdecl, importc: "SDL_GetGamepadConnectionState".}
else:
  static :
    hint("Declaration of " & "GetGamepadConnectionState" &
        " already exists, not redeclaring")
when not declared(GetGamepadPowerInfo):
  proc GetGamepadPowerInfo*(gamepad: ptr Gamepad_520094523; percent: ptr cint): PowerState_520094489 {.
      cdecl, importc: "SDL_GetGamepadPowerInfo".}
else:
  static :
    hint("Declaration of " & "GetGamepadPowerInfo" &
        " already exists, not redeclaring")
when not declared(GamepadConnected):
  proc GamepadConnected*(gamepad: ptr Gamepad_520094523): bool {.cdecl,
      importc: "SDL_GamepadConnected".}
else:
  static :
    hint("Declaration of " & "GamepadConnected" &
        " already exists, not redeclaring")
when not declared(GetGamepadJoystick):
  proc GetGamepadJoystick*(gamepad: ptr Gamepad_520094523): ptr Joystick_520094499 {.
      cdecl, importc: "SDL_GetGamepadJoystick".}
else:
  static :
    hint("Declaration of " & "GetGamepadJoystick" &
        " already exists, not redeclaring")
when not declared(SetGamepadEventsEnabled):
  proc SetGamepadEventsEnabled*(enabled: bool): void {.cdecl,
      importc: "SDL_SetGamepadEventsEnabled".}
else:
  static :
    hint("Declaration of " & "SetGamepadEventsEnabled" &
        " already exists, not redeclaring")
when not declared(GamepadEventsEnabled):
  proc GamepadEventsEnabled*(): bool {.cdecl,
                                       importc: "SDL_GamepadEventsEnabled".}
else:
  static :
    hint("Declaration of " & "GamepadEventsEnabled" &
        " already exists, not redeclaring")
when not declared(GetGamepadBindings):
  proc GetGamepadBindings*(gamepad: ptr Gamepad_520094523; count: ptr cint): ptr ptr GamepadBinding_520094547 {.
      cdecl, importc: "SDL_GetGamepadBindings".}
else:
  static :
    hint("Declaration of " & "GetGamepadBindings" &
        " already exists, not redeclaring")
when not declared(UpdateGamepads):
  proc UpdateGamepads*(): void {.cdecl, importc: "SDL_UpdateGamepads".}
else:
  static :
    hint("Declaration of " & "UpdateGamepads" &
        " already exists, not redeclaring")
when not declared(GetGamepadTypeFromString):
  proc GetGamepadTypeFromString*(str: cstring): GamepadType_520094527 {.cdecl,
      importc: "SDL_GetGamepadTypeFromString".}
else:
  static :
    hint("Declaration of " & "GetGamepadTypeFromString" &
        " already exists, not redeclaring")
when not declared(GetGamepadStringForType):
  proc GetGamepadStringForType*(type_arg: GamepadType_520094527): cstring {.
      cdecl, importc: "SDL_GetGamepadStringForType".}
else:
  static :
    hint("Declaration of " & "GetGamepadStringForType" &
        " already exists, not redeclaring")
when not declared(GetGamepadAxisFromString):
  proc GetGamepadAxisFromString*(str: cstring): GamepadAxis_520094539 {.cdecl,
      importc: "SDL_GetGamepadAxisFromString".}
else:
  static :
    hint("Declaration of " & "GetGamepadAxisFromString" &
        " already exists, not redeclaring")
when not declared(GetGamepadStringForAxis):
  proc GetGamepadStringForAxis*(axis: GamepadAxis_520094539): cstring {.cdecl,
      importc: "SDL_GetGamepadStringForAxis".}
else:
  static :
    hint("Declaration of " & "GetGamepadStringForAxis" &
        " already exists, not redeclaring")
when not declared(GamepadHasAxis):
  proc GamepadHasAxis*(gamepad: ptr Gamepad_520094523; axis: GamepadAxis_520094539): bool {.
      cdecl, importc: "SDL_GamepadHasAxis".}
else:
  static :
    hint("Declaration of " & "GamepadHasAxis" &
        " already exists, not redeclaring")
when not declared(GetGamepadAxis):
  proc GetGamepadAxis*(gamepad: ptr Gamepad_520094523; axis: GamepadAxis_520094539): Sint16_520094139 {.
      cdecl, importc: "SDL_GetGamepadAxis".}
else:
  static :
    hint("Declaration of " & "GetGamepadAxis" &
        " already exists, not redeclaring")
when not declared(GetGamepadButtonFromString):
  proc GetGamepadButtonFromString*(str: cstring): GamepadButton_520094531 {.
      cdecl, importc: "SDL_GetGamepadButtonFromString".}
else:
  static :
    hint("Declaration of " & "GetGamepadButtonFromString" &
        " already exists, not redeclaring")
when not declared(GetGamepadStringForButton):
  proc GetGamepadStringForButton*(button: GamepadButton_520094531): cstring {.
      cdecl, importc: "SDL_GetGamepadStringForButton".}
else:
  static :
    hint("Declaration of " & "GetGamepadStringForButton" &
        " already exists, not redeclaring")
when not declared(GamepadHasButton):
  proc GamepadHasButton*(gamepad: ptr Gamepad_520094523; button: GamepadButton_520094531): bool {.
      cdecl, importc: "SDL_GamepadHasButton".}
else:
  static :
    hint("Declaration of " & "GamepadHasButton" &
        " already exists, not redeclaring")
when not declared(GetGamepadButton):
  proc GetGamepadButton*(gamepad: ptr Gamepad_520094523; button: GamepadButton_520094531): bool {.
      cdecl, importc: "SDL_GetGamepadButton".}
else:
  static :
    hint("Declaration of " & "GetGamepadButton" &
        " already exists, not redeclaring")
when not declared(GetGamepadButtonLabelForType):
  proc GetGamepadButtonLabelForType*(type_arg: GamepadType_520094527;
                                     button: GamepadButton_520094531): GamepadButtonLabel_520094535 {.
      cdecl, importc: "SDL_GetGamepadButtonLabelForType".}
else:
  static :
    hint("Declaration of " & "GetGamepadButtonLabelForType" &
        " already exists, not redeclaring")
when not declared(GetGamepadButtonLabel):
  proc GetGamepadButtonLabel*(gamepad: ptr Gamepad_520094523;
                              button: GamepadButton_520094531): GamepadButtonLabel_520094535 {.
      cdecl, importc: "SDL_GetGamepadButtonLabel".}
else:
  static :
    hint("Declaration of " & "GetGamepadButtonLabel" &
        " already exists, not redeclaring")
when not declared(GetNumGamepadTouchpads):
  proc GetNumGamepadTouchpads*(gamepad: ptr Gamepad_520094523): cint {.cdecl,
      importc: "SDL_GetNumGamepadTouchpads".}
else:
  static :
    hint("Declaration of " & "GetNumGamepadTouchpads" &
        " already exists, not redeclaring")
when not declared(GetNumGamepadTouchpadFingers):
  proc GetNumGamepadTouchpadFingers*(gamepad: ptr Gamepad_520094523;
                                     touchpad: cint): cint {.cdecl,
      importc: "SDL_GetNumGamepadTouchpadFingers".}
else:
  static :
    hint("Declaration of " & "GetNumGamepadTouchpadFingers" &
        " already exists, not redeclaring")
when not declared(GetGamepadTouchpadFinger):
  proc GetGamepadTouchpadFinger*(gamepad: ptr Gamepad_520094523; touchpad: cint;
                                 finger: cint; down: ptr bool; x: ptr cfloat;
                                 y: ptr cfloat; pressure: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetGamepadTouchpadFinger".}
else:
  static :
    hint("Declaration of " & "GetGamepadTouchpadFinger" &
        " already exists, not redeclaring")
when not declared(GamepadHasSensor):
  proc GamepadHasSensor*(gamepad: ptr Gamepad_520094523; type_arg: SensorType_520094497): bool {.
      cdecl, importc: "SDL_GamepadHasSensor".}
else:
  static :
    hint("Declaration of " & "GamepadHasSensor" &
        " already exists, not redeclaring")
when not declared(SetGamepadSensorEnabled):
  proc SetGamepadSensorEnabled*(gamepad: ptr Gamepad_520094523;
                                type_arg: SensorType_520094497; enabled: bool): bool {.
      cdecl, importc: "SDL_SetGamepadSensorEnabled".}
else:
  static :
    hint("Declaration of " & "SetGamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(GamepadSensorEnabled):
  proc GamepadSensorEnabled*(gamepad: ptr Gamepad_520094523;
                             type_arg: SensorType_520094497): bool {.cdecl,
      importc: "SDL_GamepadSensorEnabled".}
else:
  static :
    hint("Declaration of " & "GamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(GetGamepadSensorDataRate):
  proc GetGamepadSensorDataRate*(gamepad: ptr Gamepad_520094523;
                                 type_arg: SensorType_520094497): cfloat {.
      cdecl, importc: "SDL_GetGamepadSensorDataRate".}
else:
  static :
    hint("Declaration of " & "GetGamepadSensorDataRate" &
        " already exists, not redeclaring")
when not declared(GetGamepadSensorData):
  proc GetGamepadSensorData*(gamepad: ptr Gamepad_520094523;
                             type_arg: SensorType_520094497; data: ptr cfloat;
                             num_values: cint): bool {.cdecl,
      importc: "SDL_GetGamepadSensorData".}
else:
  static :
    hint("Declaration of " & "GetGamepadSensorData" &
        " already exists, not redeclaring")
when not declared(RumbleGamepad):
  proc RumbleGamepad*(gamepad: ptr Gamepad_520094523;
                      low_frequency_rumble: Uint16_520094141;
                      high_frequency_rumble: Uint16_520094141;
                      duration_ms: Uint32_520094145): bool {.cdecl,
      importc: "SDL_RumbleGamepad".}
else:
  static :
    hint("Declaration of " & "RumbleGamepad" &
        " already exists, not redeclaring")
when not declared(RumbleGamepadTriggers):
  proc RumbleGamepadTriggers*(gamepad: ptr Gamepad_520094523;
                              left_rumble: Uint16_520094141;
                              right_rumble: Uint16_520094141;
                              duration_ms: Uint32_520094145): bool {.cdecl,
      importc: "SDL_RumbleGamepadTriggers".}
else:
  static :
    hint("Declaration of " & "RumbleGamepadTriggers" &
        " already exists, not redeclaring")
when not declared(SetGamepadLED):
  proc SetGamepadLED*(gamepad: ptr Gamepad_520094523; red: Uint8_520094137;
                      green: Uint8_520094137; blue: Uint8_520094137): bool {.
      cdecl, importc: "SDL_SetGamepadLED".}
else:
  static :
    hint("Declaration of " & "SetGamepadLED" &
        " already exists, not redeclaring")
when not declared(SendGamepadEffect):
  proc SendGamepadEffect*(gamepad: ptr Gamepad_520094523; data: pointer;
                          size: cint): bool {.cdecl,
      importc: "SDL_SendGamepadEffect".}
else:
  static :
    hint("Declaration of " & "SendGamepadEffect" &
        " already exists, not redeclaring")
when not declared(CloseGamepad):
  proc CloseGamepad*(gamepad: ptr Gamepad_520094523): void {.cdecl,
      importc: "SDL_CloseGamepad".}
else:
  static :
    hint("Declaration of " & "CloseGamepad" & " already exists, not redeclaring")
when not declared(GetGamepadAppleSFSymbolsNameForButton):
  proc GetGamepadAppleSFSymbolsNameForButton*(gamepad: ptr Gamepad_520094523;
      button: GamepadButton_520094531): cstring {.cdecl,
      importc: "SDL_GetGamepadAppleSFSymbolsNameForButton".}
else:
  static :
    hint("Declaration of " & "GetGamepadAppleSFSymbolsNameForButton" &
        " already exists, not redeclaring")
when not declared(GetGamepadAppleSFSymbolsNameForAxis):
  proc GetGamepadAppleSFSymbolsNameForAxis*(gamepad: ptr Gamepad_520094523;
      axis: GamepadAxis_520094539): cstring {.cdecl,
      importc: "SDL_GetGamepadAppleSFSymbolsNameForAxis".}
else:
  static :
    hint("Declaration of " & "GetGamepadAppleSFSymbolsNameForAxis" &
        " already exists, not redeclaring")
when not declared(HasKeyboard):
  proc HasKeyboard*(): bool {.cdecl, importc: "SDL_HasKeyboard".}
else:
  static :
    hint("Declaration of " & "HasKeyboard" & " already exists, not redeclaring")
when not declared(GetKeyboards):
  proc GetKeyboards*(count: ptr cint): ptr KeyboardID_520094557 {.cdecl,
      importc: "SDL_GetKeyboards".}
else:
  static :
    hint("Declaration of " & "GetKeyboards" & " already exists, not redeclaring")
when not declared(GetKeyboardNameForID):
  proc GetKeyboardNameForID*(instance_id: KeyboardID_520094557): cstring {.
      cdecl, importc: "SDL_GetKeyboardNameForID".}
else:
  static :
    hint("Declaration of " & "GetKeyboardNameForID" &
        " already exists, not redeclaring")
when not declared(GetKeyboardFocus):
  proc GetKeyboardFocus*(): ptr Window_520094429 {.cdecl,
      importc: "SDL_GetKeyboardFocus".}
else:
  static :
    hint("Declaration of " & "GetKeyboardFocus" &
        " already exists, not redeclaring")
when not declared(GetKeyboardState):
  proc GetKeyboardState*(numkeys: ptr cint): ptr bool {.cdecl,
      importc: "SDL_GetKeyboardState".}
else:
  static :
    hint("Declaration of " & "GetKeyboardState" &
        " already exists, not redeclaring")
when not declared(ResetKeyboard):
  proc ResetKeyboard*(): void {.cdecl, importc: "SDL_ResetKeyboard".}
else:
  static :
    hint("Declaration of " & "ResetKeyboard" &
        " already exists, not redeclaring")
when not declared(GetModState):
  proc GetModState*(): Keymod_520094555 {.cdecl, importc: "SDL_GetModState".}
else:
  static :
    hint("Declaration of " & "GetModState" & " already exists, not redeclaring")
when not declared(SetModState):
  proc SetModState*(modstate: Keymod_520094555): void {.cdecl,
      importc: "SDL_SetModState".}
else:
  static :
    hint("Declaration of " & "SetModState" & " already exists, not redeclaring")
when not declared(GetKeyFromScancode):
  proc GetKeyFromScancode*(scancode: Scancode_520094551; modstate: Keymod_520094555;
                           key_event: bool): Keycode_520094553 {.cdecl,
      importc: "SDL_GetKeyFromScancode".}
else:
  static :
    hint("Declaration of " & "GetKeyFromScancode" &
        " already exists, not redeclaring")
when not declared(GetScancodeFromKey):
  proc GetScancodeFromKey*(key: Keycode_520094553; modstate: ptr Keymod_520094555): Scancode_520094551 {.
      cdecl, importc: "SDL_GetScancodeFromKey".}
else:
  static :
    hint("Declaration of " & "GetScancodeFromKey" &
        " already exists, not redeclaring")
when not declared(SetScancodeName):
  proc SetScancodeName*(scancode: Scancode_520094551; name: cstring): bool {.
      cdecl, importc: "SDL_SetScancodeName".}
else:
  static :
    hint("Declaration of " & "SetScancodeName" &
        " already exists, not redeclaring")
when not declared(GetScancodeName):
  proc GetScancodeName*(scancode: Scancode_520094551): cstring {.cdecl,
      importc: "SDL_GetScancodeName".}
else:
  static :
    hint("Declaration of " & "GetScancodeName" &
        " already exists, not redeclaring")
when not declared(GetScancodeFromName):
  proc GetScancodeFromName*(name: cstring): Scancode_520094551 {.cdecl,
      importc: "SDL_GetScancodeFromName".}
else:
  static :
    hint("Declaration of " & "GetScancodeFromName" &
        " already exists, not redeclaring")
when not declared(GetKeyName):
  proc GetKeyName*(key: Keycode_520094553): cstring {.cdecl,
      importc: "SDL_GetKeyName".}
else:
  static :
    hint("Declaration of " & "GetKeyName" & " already exists, not redeclaring")
when not declared(GetKeyFromName):
  proc GetKeyFromName*(name: cstring): Keycode_520094553 {.cdecl,
      importc: "SDL_GetKeyFromName".}
else:
  static :
    hint("Declaration of " & "GetKeyFromName" &
        " already exists, not redeclaring")
when not declared(StartTextInput):
  proc StartTextInput*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_StartTextInput".}
else:
  static :
    hint("Declaration of " & "StartTextInput" &
        " already exists, not redeclaring")
when not declared(StartTextInputWithProperties):
  proc StartTextInputWithProperties*(window: ptr Window_520094429;
                                     props: PropertiesID_520094217): bool {.
      cdecl, importc: "SDL_StartTextInputWithProperties".}
else:
  static :
    hint("Declaration of " & "StartTextInputWithProperties" &
        " already exists, not redeclaring")
when not declared(TextInputActive):
  proc TextInputActive*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_TextInputActive".}
else:
  static :
    hint("Declaration of " & "TextInputActive" &
        " already exists, not redeclaring")
when not declared(StopTextInput):
  proc StopTextInput*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_StopTextInput".}
else:
  static :
    hint("Declaration of " & "StopTextInput" &
        " already exists, not redeclaring")
when not declared(ClearComposition):
  proc ClearComposition*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_ClearComposition".}
else:
  static :
    hint("Declaration of " & "ClearComposition" &
        " already exists, not redeclaring")
when not declared(SetTextInputArea):
  proc SetTextInputArea*(window: ptr Window_520094429; rect: ptr Rect_520094375;
                         cursor: cint): bool {.cdecl,
      importc: "SDL_SetTextInputArea".}
else:
  static :
    hint("Declaration of " & "SetTextInputArea" &
        " already exists, not redeclaring")
when not declared(GetTextInputArea):
  proc GetTextInputArea*(window: ptr Window_520094429; rect: ptr Rect_520094375;
                         cursor: ptr cint): bool {.cdecl,
      importc: "SDL_GetTextInputArea".}
else:
  static :
    hint("Declaration of " & "GetTextInputArea" &
        " already exists, not redeclaring")
when not declared(HasScreenKeyboardSupport):
  proc HasScreenKeyboardSupport*(): bool {.cdecl,
      importc: "SDL_HasScreenKeyboardSupport".}
else:
  static :
    hint("Declaration of " & "HasScreenKeyboardSupport" &
        " already exists, not redeclaring")
when not declared(ScreenKeyboardShown):
  proc ScreenKeyboardShown*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_ScreenKeyboardShown".}
else:
  static :
    hint("Declaration of " & "ScreenKeyboardShown" &
        " already exists, not redeclaring")
when not declared(HasMouse):
  proc HasMouse*(): bool {.cdecl, importc: "SDL_HasMouse".}
else:
  static :
    hint("Declaration of " & "HasMouse" & " already exists, not redeclaring")
when not declared(GetMice):
  proc GetMice*(count: ptr cint): ptr MouseID_520094567 {.cdecl,
      importc: "SDL_GetMice".}
else:
  static :
    hint("Declaration of " & "GetMice" & " already exists, not redeclaring")
when not declared(GetMouseNameForID):
  proc GetMouseNameForID*(instance_id: MouseID_520094567): cstring {.cdecl,
      importc: "SDL_GetMouseNameForID".}
else:
  static :
    hint("Declaration of " & "GetMouseNameForID" &
        " already exists, not redeclaring")
when not declared(GetMouseFocus):
  proc GetMouseFocus*(): ptr Window_520094429 {.cdecl,
      importc: "SDL_GetMouseFocus".}
else:
  static :
    hint("Declaration of " & "GetMouseFocus" &
        " already exists, not redeclaring")
when not declared(GetMouseState):
  proc GetMouseState*(x: ptr cfloat; y: ptr cfloat): MouseButtonFlags_520094579 {.
      cdecl, importc: "SDL_GetMouseState".}
else:
  static :
    hint("Declaration of " & "GetMouseState" &
        " already exists, not redeclaring")
when not declared(GetGlobalMouseState):
  proc GetGlobalMouseState*(x: ptr cfloat; y: ptr cfloat): MouseButtonFlags_520094579 {.
      cdecl, importc: "SDL_GetGlobalMouseState".}
else:
  static :
    hint("Declaration of " & "GetGlobalMouseState" &
        " already exists, not redeclaring")
when not declared(GetRelativeMouseState):
  proc GetRelativeMouseState*(x: ptr cfloat; y: ptr cfloat): MouseButtonFlags_520094579 {.
      cdecl, importc: "SDL_GetRelativeMouseState".}
else:
  static :
    hint("Declaration of " & "GetRelativeMouseState" &
        " already exists, not redeclaring")
when not declared(WarpMouseInWindow):
  proc WarpMouseInWindow*(window: ptr Window_520094429; x: cfloat; y: cfloat): void {.
      cdecl, importc: "SDL_WarpMouseInWindow".}
else:
  static :
    hint("Declaration of " & "WarpMouseInWindow" &
        " already exists, not redeclaring")
when not declared(WarpMouseGlobal):
  proc WarpMouseGlobal*(x: cfloat; y: cfloat): bool {.cdecl,
      importc: "SDL_WarpMouseGlobal".}
else:
  static :
    hint("Declaration of " & "WarpMouseGlobal" &
        " already exists, not redeclaring")
when not declared(SetWindowRelativeMouseMode):
  proc SetWindowRelativeMouseMode*(window: ptr Window_520094429; enabled: bool): bool {.
      cdecl, importc: "SDL_SetWindowRelativeMouseMode".}
else:
  static :
    hint("Declaration of " & "SetWindowRelativeMouseMode" &
        " already exists, not redeclaring")
when not declared(GetWindowRelativeMouseMode):
  proc GetWindowRelativeMouseMode*(window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_GetWindowRelativeMouseMode".}
else:
  static :
    hint("Declaration of " & "GetWindowRelativeMouseMode" &
        " already exists, not redeclaring")
when not declared(CaptureMouse):
  proc CaptureMouse*(enabled: bool): bool {.cdecl, importc: "SDL_CaptureMouse".}
else:
  static :
    hint("Declaration of " & "CaptureMouse" & " already exists, not redeclaring")
when not declared(CreateCursor):
  proc CreateCursor*(data: ptr Uint8_520094137; mask: ptr Uint8_520094137;
                     w: cint; h: cint; hot_x: cint; hot_y: cint): ptr Cursor_520094569 {.
      cdecl, importc: "SDL_CreateCursor".}
else:
  static :
    hint("Declaration of " & "CreateCursor" & " already exists, not redeclaring")
when not declared(CreateColorCursor):
  proc CreateColorCursor*(surface: ptr Surface_520094393; hot_x: cint;
                          hot_y: cint): ptr Cursor_520094569 {.cdecl,
      importc: "SDL_CreateColorCursor".}
else:
  static :
    hint("Declaration of " & "CreateColorCursor" &
        " already exists, not redeclaring")
when not declared(CreateSystemCursor):
  proc CreateSystemCursor*(id: SystemCursor_520094573): ptr Cursor_520094569 {.
      cdecl, importc: "SDL_CreateSystemCursor".}
else:
  static :
    hint("Declaration of " & "CreateSystemCursor" &
        " already exists, not redeclaring")
when not declared(SetCursor):
  proc SetCursor*(cursor: ptr Cursor_520094569): bool {.cdecl,
      importc: "SDL_SetCursor".}
else:
  static :
    hint("Declaration of " & "SetCursor" & " already exists, not redeclaring")
when not declared(GetCursor):
  proc GetCursor*(): ptr Cursor_520094569 {.cdecl, importc: "SDL_GetCursor".}
else:
  static :
    hint("Declaration of " & "GetCursor" & " already exists, not redeclaring")
when not declared(GetDefaultCursor):
  proc GetDefaultCursor*(): ptr Cursor_520094569 {.cdecl,
      importc: "SDL_GetDefaultCursor".}
else:
  static :
    hint("Declaration of " & "GetDefaultCursor" &
        " already exists, not redeclaring")
when not declared(DestroyCursor):
  proc DestroyCursor*(cursor: ptr Cursor_520094569): void {.cdecl,
      importc: "SDL_DestroyCursor".}
else:
  static :
    hint("Declaration of " & "DestroyCursor" &
        " already exists, not redeclaring")
when not declared(ShowCursor):
  proc ShowCursor*(): bool {.cdecl, importc: "SDL_ShowCursor".}
else:
  static :
    hint("Declaration of " & "ShowCursor" & " already exists, not redeclaring")
when not declared(HideCursor):
  proc HideCursor*(): bool {.cdecl, importc: "SDL_HideCursor".}
else:
  static :
    hint("Declaration of " & "HideCursor" & " already exists, not redeclaring")
when not declared(CursorVisible):
  proc CursorVisible*(): bool {.cdecl, importc: "SDL_CursorVisible".}
else:
  static :
    hint("Declaration of " & "CursorVisible" &
        " already exists, not redeclaring")
when not declared(GetTouchDevices):
  proc GetTouchDevices*(count: ptr cint): ptr TouchID_520094589 {.cdecl,
      importc: "SDL_GetTouchDevices".}
else:
  static :
    hint("Declaration of " & "GetTouchDevices" &
        " already exists, not redeclaring")
when not declared(GetTouchDeviceName):
  proc GetTouchDeviceName*(touchID: TouchID_520094589): cstring {.cdecl,
      importc: "SDL_GetTouchDeviceName".}
else:
  static :
    hint("Declaration of " & "GetTouchDeviceName" &
        " already exists, not redeclaring")
when not declared(GetTouchDeviceType):
  proc GetTouchDeviceType*(touchID: TouchID_520094589): TouchDeviceType_520094595 {.
      cdecl, importc: "SDL_GetTouchDeviceType".}
else:
  static :
    hint("Declaration of " & "GetTouchDeviceType" &
        " already exists, not redeclaring")
when not declared(GetTouchFingers):
  proc GetTouchFingers*(touchID: TouchID_520094589; count: ptr cint): ptr ptr Finger_520094599 {.
      cdecl, importc: "SDL_GetTouchFingers".}
else:
  static :
    hint("Declaration of " & "GetTouchFingers" &
        " already exists, not redeclaring")
when not declared(PumpEvents):
  proc PumpEvents*(): void {.cdecl, importc: "SDL_PumpEvents".}
else:
  static :
    hint("Declaration of " & "PumpEvents" & " already exists, not redeclaring")
when not declared(PeepEvents):
  proc PeepEvents*(events: ptr Event_520094755; numevents: cint;
                   action: EventAction_520094759; minType: Uint32_520094145;
                   maxType: Uint32_520094145): cint {.cdecl,
      importc: "SDL_PeepEvents".}
else:
  static :
    hint("Declaration of " & "PeepEvents" & " already exists, not redeclaring")
when not declared(HasEvent):
  proc HasEvent*(type_arg: Uint32_520094145): bool {.cdecl,
      importc: "SDL_HasEvent".}
else:
  static :
    hint("Declaration of " & "HasEvent" & " already exists, not redeclaring")
when not declared(HasEvents):
  proc HasEvents*(minType: Uint32_520094145; maxType: Uint32_520094145): bool {.
      cdecl, importc: "SDL_HasEvents".}
else:
  static :
    hint("Declaration of " & "HasEvents" & " already exists, not redeclaring")
when not declared(FlushEvent):
  proc FlushEvent*(type_arg: Uint32_520094145): void {.cdecl,
      importc: "SDL_FlushEvent".}
else:
  static :
    hint("Declaration of " & "FlushEvent" & " already exists, not redeclaring")
when not declared(FlushEvents):
  proc FlushEvents*(minType: Uint32_520094145; maxType: Uint32_520094145): void {.
      cdecl, importc: "SDL_FlushEvents".}
else:
  static :
    hint("Declaration of " & "FlushEvents" & " already exists, not redeclaring")
when not declared(PollEvent):
  proc PollEvent*(event: ptr Event_520094755): bool {.cdecl,
      importc: "SDL_PollEvent".}
else:
  static :
    hint("Declaration of " & "PollEvent" & " already exists, not redeclaring")
when not declared(WaitEvent):
  proc WaitEvent*(event: ptr Event_520094755): bool {.cdecl,
      importc: "SDL_WaitEvent".}
else:
  static :
    hint("Declaration of " & "WaitEvent" & " already exists, not redeclaring")
when not declared(WaitEventTimeout):
  proc WaitEventTimeout*(event: ptr Event_520094755; timeoutMS: Sint32_520094143): bool {.
      cdecl, importc: "SDL_WaitEventTimeout".}
else:
  static :
    hint("Declaration of " & "WaitEventTimeout" &
        " already exists, not redeclaring")
when not declared(PushEvent):
  proc PushEvent*(event: ptr Event_520094755): bool {.cdecl,
      importc: "SDL_PushEvent".}
else:
  static :
    hint("Declaration of " & "PushEvent" & " already exists, not redeclaring")
when not declared(SetEventFilter):
  proc SetEventFilter*(filter: EventFilter_520094761; userdata: pointer): void {.
      cdecl, importc: "SDL_SetEventFilter".}
else:
  static :
    hint("Declaration of " & "SetEventFilter" &
        " already exists, not redeclaring")
when not declared(GetEventFilter):
  proc GetEventFilter*(filter: EventFilter_520094761; userdata: ptr pointer): bool {.
      cdecl, importc: "SDL_GetEventFilter".}
else:
  static :
    hint("Declaration of " & "GetEventFilter" &
        " already exists, not redeclaring")
when not declared(AddEventWatch):
  proc AddEventWatch*(filter: EventFilter_520094761; userdata: pointer): bool {.
      cdecl, importc: "SDL_AddEventWatch".}
else:
  static :
    hint("Declaration of " & "AddEventWatch" &
        " already exists, not redeclaring")
when not declared(RemoveEventWatch):
  proc RemoveEventWatch*(filter: EventFilter_520094761; userdata: pointer): void {.
      cdecl, importc: "SDL_RemoveEventWatch".}
else:
  static :
    hint("Declaration of " & "RemoveEventWatch" &
        " already exists, not redeclaring")
when not declared(FilterEvents):
  proc FilterEvents*(filter: EventFilter_520094761; userdata: pointer): void {.
      cdecl, importc: "SDL_FilterEvents".}
else:
  static :
    hint("Declaration of " & "FilterEvents" & " already exists, not redeclaring")
when not declared(SetEventEnabled):
  proc SetEventEnabled*(type_arg: Uint32_520094145; enabled: bool): void {.
      cdecl, importc: "SDL_SetEventEnabled".}
else:
  static :
    hint("Declaration of " & "SetEventEnabled" &
        " already exists, not redeclaring")
when not declared(EventEnabled):
  proc EventEnabled*(type_arg: Uint32_520094145): bool {.cdecl,
      importc: "SDL_EventEnabled".}
else:
  static :
    hint("Declaration of " & "EventEnabled" & " already exists, not redeclaring")
when not declared(RegisterEvents):
  proc RegisterEvents*(numevents: cint): Uint32_520094145 {.cdecl,
      importc: "SDL_RegisterEvents".}
else:
  static :
    hint("Declaration of " & "RegisterEvents" &
        " already exists, not redeclaring")
when not declared(GetWindowFromEvent):
  proc GetWindowFromEvent*(event: ptr Event_520094755): ptr Window_520094429 {.
      cdecl, importc: "SDL_GetWindowFromEvent".}
else:
  static :
    hint("Declaration of " & "GetWindowFromEvent" &
        " already exists, not redeclaring")
when not declared(GetBasePath):
  proc GetBasePath*(): cstring {.cdecl, importc: "SDL_GetBasePath".}
else:
  static :
    hint("Declaration of " & "GetBasePath" & " already exists, not redeclaring")
when not declared(GetPrefPath):
  proc GetPrefPath*(org: cstring; app: cstring): cstring {.cdecl,
      importc: "SDL_GetPrefPath".}
else:
  static :
    hint("Declaration of " & "GetPrefPath" & " already exists, not redeclaring")
when not declared(GetUserFolder):
  proc GetUserFolder*(folder: Folder_520094765): cstring {.cdecl,
      importc: "SDL_GetUserFolder".}
else:
  static :
    hint("Declaration of " & "GetUserFolder" &
        " already exists, not redeclaring")
when not declared(CreateDirectory):
  proc CreateDirectory*(path: cstring): bool {.cdecl,
      importc: "SDL_CreateDirectory".}
else:
  static :
    hint("Declaration of " & "CreateDirectory" &
        " already exists, not redeclaring")
when not declared(EnumerateDirectory):
  proc EnumerateDirectory*(path: cstring; callback: EnumerateDirectoryCallback_520094781;
                           userdata: pointer): bool {.cdecl,
      importc: "SDL_EnumerateDirectory".}
else:
  static :
    hint("Declaration of " & "EnumerateDirectory" &
        " already exists, not redeclaring")
when not declared(RemovePath):
  proc RemovePath*(path: cstring): bool {.cdecl, importc: "SDL_RemovePath".}
else:
  static :
    hint("Declaration of " & "RemovePath" & " already exists, not redeclaring")
when not declared(RenamePath):
  proc RenamePath*(oldpath: cstring; newpath: cstring): bool {.cdecl,
      importc: "SDL_RenamePath".}
else:
  static :
    hint("Declaration of " & "RenamePath" & " already exists, not redeclaring")
when not declared(CopyFile):
  proc CopyFile*(oldpath: cstring; newpath: cstring): bool {.cdecl,
      importc: "SDL_CopyFile".}
else:
  static :
    hint("Declaration of " & "CopyFile" & " already exists, not redeclaring")
when not declared(GetPathInfo):
  proc GetPathInfo*(path: cstring; info: ptr PathInfo_520094773): bool {.cdecl,
      importc: "SDL_GetPathInfo".}
else:
  static :
    hint("Declaration of " & "GetPathInfo" & " already exists, not redeclaring")
when not declared(GlobDirectory):
  proc GlobDirectory*(path: cstring; pattern: cstring; flags: GlobFlags_520094775;
                      count: ptr cint): ptr cstring {.cdecl,
      importc: "SDL_GlobDirectory".}
else:
  static :
    hint("Declaration of " & "GlobDirectory" &
        " already exists, not redeclaring")
when not declared(GetCurrentDirectory):
  proc GetCurrentDirectory*(): cstring {.cdecl,
      importc: "SDL_GetCurrentDirectory".}
else:
  static :
    hint("Declaration of " & "GetCurrentDirectory" &
        " already exists, not redeclaring")
when not declared(GPUSupportsShaderFormats):
  proc GPUSupportsShaderFormats*(format_flags: GPUShaderFormat_520094853;
                                 name: cstring): bool {.cdecl,
      importc: "SDL_GPUSupportsShaderFormats".}
else:
  static :
    hint("Declaration of " & "GPUSupportsShaderFormats" &
        " already exists, not redeclaring")
when not declared(GPUSupportsProperties):
  proc GPUSupportsProperties*(props: PropertiesID_520094217): bool {.cdecl,
      importc: "SDL_GPUSupportsProperties".}
else:
  static :
    hint("Declaration of " & "GPUSupportsProperties" &
        " already exists, not redeclaring")
when not declared(CreateGPUDevice):
  proc CreateGPUDevice*(format_flags: GPUShaderFormat_520094853;
                        debug_mode: bool; name: cstring): ptr GPUDevice_520094783 {.
      cdecl, importc: "SDL_CreateGPUDevice".}
else:
  static :
    hint("Declaration of " & "CreateGPUDevice" &
        " already exists, not redeclaring")
when not declared(CreateGPUDeviceWithProperties):
  proc CreateGPUDeviceWithProperties*(props: PropertiesID_520094217): ptr GPUDevice_520094783 {.
      cdecl, importc: "SDL_CreateGPUDeviceWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateGPUDeviceWithProperties" &
        " already exists, not redeclaring")
when not declared(DestroyGPUDevice):
  proc DestroyGPUDevice*(device: ptr GPUDevice_520094783): void {.cdecl,
      importc: "SDL_DestroyGPUDevice".}
else:
  static :
    hint("Declaration of " & "DestroyGPUDevice" &
        " already exists, not redeclaring")
when not declared(GetNumGPUDrivers):
  proc GetNumGPUDrivers*(): cint {.cdecl, importc: "SDL_GetNumGPUDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumGPUDrivers" &
        " already exists, not redeclaring")
when not declared(GetGPUDriver):
  proc GetGPUDriver*(index: cint): cstring {.cdecl, importc: "SDL_GetGPUDriver".}
else:
  static :
    hint("Declaration of " & "GetGPUDriver" & " already exists, not redeclaring")
when not declared(GetGPUDeviceDriver):
  proc GetGPUDeviceDriver*(device: ptr GPUDevice_520094783): cstring {.cdecl,
      importc: "SDL_GetGPUDeviceDriver".}
else:
  static :
    hint("Declaration of " & "GetGPUDeviceDriver" &
        " already exists, not redeclaring")
when not declared(GetGPUShaderFormats):
  proc GetGPUShaderFormats*(device: ptr GPUDevice_520094783): GPUShaderFormat_520094853 {.
      cdecl, importc: "SDL_GetGPUShaderFormats".}
else:
  static :
    hint("Declaration of " & "GetGPUShaderFormats" &
        " already exists, not redeclaring")
when not declared(CreateGPUComputePipeline):
  proc CreateGPUComputePipeline*(device: ptr GPUDevice_520094783;
                                 createinfo: ptr GPUComputePipelineCreateInfo_520095023): ptr GPUComputePipeline_520094795 {.
      cdecl, importc: "SDL_CreateGPUComputePipeline".}
else:
  static :
    hint("Declaration of " & "CreateGPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(CreateGPUGraphicsPipeline):
  proc CreateGPUGraphicsPipeline*(device: ptr GPUDevice_520094783;
                                  createinfo: ptr GPUGraphicsPipelineCreateInfo_520095019): ptr GPUGraphicsPipeline_520094797 {.
      cdecl, importc: "SDL_CreateGPUGraphicsPipeline".}
else:
  static :
    hint("Declaration of " & "CreateGPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(CreateGPUSampler):
  proc CreateGPUSampler*(device: ptr GPUDevice_520094783;
                         createinfo: ptr GPUSamplerCreateInfo_520094959): ptr GPUSampler_520094791 {.
      cdecl, importc: "SDL_CreateGPUSampler".}
else:
  static :
    hint("Declaration of " & "CreateGPUSampler" &
        " already exists, not redeclaring")
when not declared(CreateGPUShader):
  proc CreateGPUShader*(device: ptr GPUDevice_520094783;
                        createinfo: ptr GPUShaderCreateInfo_520094983): ptr GPUShader_520094793 {.
      cdecl, importc: "SDL_CreateGPUShader".}
else:
  static :
    hint("Declaration of " & "CreateGPUShader" &
        " already exists, not redeclaring")
when not declared(CreateGPUTexture):
  proc CreateGPUTexture*(device: ptr GPUDevice_520094783;
                         createinfo: ptr GPUTextureCreateInfo_520094987): ptr GPUTexture_520094789 {.
      cdecl, importc: "SDL_CreateGPUTexture".}
else:
  static :
    hint("Declaration of " & "CreateGPUTexture" &
        " already exists, not redeclaring")
when not declared(CreateGPUBuffer):
  proc CreateGPUBuffer*(device: ptr GPUDevice_520094783;
                        createinfo: ptr GPUBufferCreateInfo_520094991): ptr GPUBuffer_520094785 {.
      cdecl, importc: "SDL_CreateGPUBuffer".}
else:
  static :
    hint("Declaration of " & "CreateGPUBuffer" &
        " already exists, not redeclaring")
when not declared(CreateGPUTransferBuffer):
  proc CreateGPUTransferBuffer*(device: ptr GPUDevice_520094783;
                                createinfo: ptr GPUTransferBufferCreateInfo_520094995): ptr GPUTransferBuffer_520094787 {.
      cdecl, importc: "SDL_CreateGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "CreateGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(SetGPUBufferName):
  proc SetGPUBufferName*(device: ptr GPUDevice_520094783; buffer: ptr GPUBuffer_520094785;
                         text: cstring): void {.cdecl,
      importc: "SDL_SetGPUBufferName".}
else:
  static :
    hint("Declaration of " & "SetGPUBufferName" &
        " already exists, not redeclaring")
when not declared(SetGPUTextureName):
  proc SetGPUTextureName*(device: ptr GPUDevice_520094783;
                          texture: ptr GPUTexture_520094789; text: cstring): void {.
      cdecl, importc: "SDL_SetGPUTextureName".}
else:
  static :
    hint("Declaration of " & "SetGPUTextureName" &
        " already exists, not redeclaring")
when not declared(InsertGPUDebugLabel):
  proc InsertGPUDebugLabel*(command_buffer: ptr GPUCommandBuffer_520094799;
                            text: cstring): void {.cdecl,
      importc: "SDL_InsertGPUDebugLabel".}
else:
  static :
    hint("Declaration of " & "InsertGPUDebugLabel" &
        " already exists, not redeclaring")
when not declared(PushGPUDebugGroup):
  proc PushGPUDebugGroup*(command_buffer: ptr GPUCommandBuffer_520094799;
                          name: cstring): void {.cdecl,
      importc: "SDL_PushGPUDebugGroup".}
else:
  static :
    hint("Declaration of " & "PushGPUDebugGroup" &
        " already exists, not redeclaring")
when not declared(PopGPUDebugGroup):
  proc PopGPUDebugGroup*(command_buffer: ptr GPUCommandBuffer_520094799): void {.
      cdecl, importc: "SDL_PopGPUDebugGroup".}
else:
  static :
    hint("Declaration of " & "PopGPUDebugGroup" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUTexture):
  proc ReleaseGPUTexture*(device: ptr GPUDevice_520094783;
                          texture: ptr GPUTexture_520094789): void {.cdecl,
      importc: "SDL_ReleaseGPUTexture".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUTexture" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUSampler):
  proc ReleaseGPUSampler*(device: ptr GPUDevice_520094783;
                          sampler: ptr GPUSampler_520094791): void {.cdecl,
      importc: "SDL_ReleaseGPUSampler".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUSampler" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUBuffer):
  proc ReleaseGPUBuffer*(device: ptr GPUDevice_520094783; buffer: ptr GPUBuffer_520094785): void {.
      cdecl, importc: "SDL_ReleaseGPUBuffer".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUBuffer" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUTransferBuffer):
  proc ReleaseGPUTransferBuffer*(device: ptr GPUDevice_520094783;
                                 transfer_buffer: ptr GPUTransferBuffer_520094787): void {.
      cdecl, importc: "SDL_ReleaseGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUComputePipeline):
  proc ReleaseGPUComputePipeline*(device: ptr GPUDevice_520094783;
                                  compute_pipeline: ptr GPUComputePipeline_520094795): void {.
      cdecl, importc: "SDL_ReleaseGPUComputePipeline".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUShader):
  proc ReleaseGPUShader*(device: ptr GPUDevice_520094783; shader: ptr GPUShader_520094793): void {.
      cdecl, importc: "SDL_ReleaseGPUShader".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUShader" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUGraphicsPipeline):
  proc ReleaseGPUGraphicsPipeline*(device: ptr GPUDevice_520094783;
                                   graphics_pipeline: ptr GPUGraphicsPipeline_520094797): void {.
      cdecl, importc: "SDL_ReleaseGPUGraphicsPipeline".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(AcquireGPUCommandBuffer):
  proc AcquireGPUCommandBuffer*(device: ptr GPUDevice_520094783): ptr GPUCommandBuffer_520094799 {.
      cdecl, importc: "SDL_AcquireGPUCommandBuffer".}
else:
  static :
    hint("Declaration of " & "AcquireGPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(PushGPUVertexUniformData):
  proc PushGPUVertexUniformData*(command_buffer: ptr GPUCommandBuffer_520094799;
                                 slot_index: Uint32_520094145; data: pointer;
                                 length: Uint32_520094145): void {.cdecl,
      importc: "SDL_PushGPUVertexUniformData".}
else:
  static :
    hint("Declaration of " & "PushGPUVertexUniformData" &
        " already exists, not redeclaring")
when not declared(PushGPUFragmentUniformData):
  proc PushGPUFragmentUniformData*(command_buffer: ptr GPUCommandBuffer_520094799;
                                   slot_index: Uint32_520094145; data: pointer;
                                   length: Uint32_520094145): void {.cdecl,
      importc: "SDL_PushGPUFragmentUniformData".}
else:
  static :
    hint("Declaration of " & "PushGPUFragmentUniformData" &
        " already exists, not redeclaring")
when not declared(PushGPUComputeUniformData):
  proc PushGPUComputeUniformData*(command_buffer: ptr GPUCommandBuffer_520094799;
                                  slot_index: Uint32_520094145; data: pointer;
                                  length: Uint32_520094145): void {.cdecl,
      importc: "SDL_PushGPUComputeUniformData".}
else:
  static :
    hint("Declaration of " & "PushGPUComputeUniformData" &
        " already exists, not redeclaring")
when not declared(BeginGPURenderPass):
  proc BeginGPURenderPass*(command_buffer: ptr GPUCommandBuffer_520094799;
                           color_target_infos: ptr GPUColorTargetInfo_520095027;
                           num_color_targets: Uint32_520094145;
      depth_stencil_target_info: ptr GPUDepthStencilTargetInfo_520095031): ptr GPURenderPass_520094801 {.
      cdecl, importc: "SDL_BeginGPURenderPass".}
else:
  static :
    hint("Declaration of " & "BeginGPURenderPass" &
        " already exists, not redeclaring")
when not declared(BindGPUGraphicsPipeline):
  proc BindGPUGraphicsPipeline*(render_pass: ptr GPURenderPass_520094801;
                                graphics_pipeline: ptr GPUGraphicsPipeline_520094797): void {.
      cdecl, importc: "SDL_BindGPUGraphicsPipeline".}
else:
  static :
    hint("Declaration of " & "BindGPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(SetGPUViewport):
  proc SetGPUViewport*(render_pass: ptr GPURenderPass_520094801;
                       viewport: ptr GPUViewport_520094915): void {.cdecl,
      importc: "SDL_SetGPUViewport".}
else:
  static :
    hint("Declaration of " & "SetGPUViewport" &
        " already exists, not redeclaring")
when not declared(SetGPUScissor):
  proc SetGPUScissor*(render_pass: ptr GPURenderPass_520094801;
                      scissor: ptr Rect_520094375): void {.cdecl,
      importc: "SDL_SetGPUScissor".}
else:
  static :
    hint("Declaration of " & "SetGPUScissor" &
        " already exists, not redeclaring")
when not declared(SetGPUBlendConstants):
  proc SetGPUBlendConstants*(render_pass: ptr GPURenderPass_520094801;
                             blend_constants: FColor_520094355): void {.cdecl,
      importc: "SDL_SetGPUBlendConstants".}
else:
  static :
    hint("Declaration of " & "SetGPUBlendConstants" &
        " already exists, not redeclaring")
when not declared(SetGPUStencilReference):
  proc SetGPUStencilReference*(render_pass: ptr GPURenderPass_520094801;
                               reference: Uint8_520094137): void {.cdecl,
      importc: "SDL_SetGPUStencilReference".}
else:
  static :
    hint("Declaration of " & "SetGPUStencilReference" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexBuffers):
  proc BindGPUVertexBuffers*(render_pass: ptr GPURenderPass_520094801;
                             first_slot: Uint32_520094145;
                             bindings: ptr GPUBufferBinding_520095039;
                             num_bindings: Uint32_520094145): void {.cdecl,
      importc: "SDL_BindGPUVertexBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexBuffers" &
        " already exists, not redeclaring")
when not declared(BindGPUIndexBuffer):
  proc BindGPUIndexBuffer*(render_pass: ptr GPURenderPass_520094801;
                           binding: ptr GPUBufferBinding_520095039;
                           index_element_size: GPUIndexElementSize_520094823): void {.
      cdecl, importc: "SDL_BindGPUIndexBuffer".}
else:
  static :
    hint("Declaration of " & "BindGPUIndexBuffer" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexSamplers):
  proc BindGPUVertexSamplers*(render_pass: ptr GPURenderPass_520094801;
                              first_slot: Uint32_520094145;
      texture_sampler_bindings: ptr GPUTextureSamplerBinding_520095043;
                              num_bindings: Uint32_520094145): void {.cdecl,
      importc: "SDL_BindGPUVertexSamplers".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexSamplers" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexStorageTextures):
  proc BindGPUVertexStorageTextures*(render_pass: ptr GPURenderPass_520094801;
                                     first_slot: Uint32_520094145;
                                     storage_textures: ptr ptr GPUTexture_520094789;
                                     num_bindings: Uint32_520094145): void {.
      cdecl, importc: "SDL_BindGPUVertexStorageTextures".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexStorageTextures" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexStorageBuffers):
  proc BindGPUVertexStorageBuffers*(render_pass: ptr GPURenderPass_520094801;
                                    first_slot: Uint32_520094145;
                                    storage_buffers: ptr ptr GPUBuffer_520094785;
                                    num_bindings: Uint32_520094145): void {.
      cdecl, importc: "SDL_BindGPUVertexStorageBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexStorageBuffers" &
        " already exists, not redeclaring")
when not declared(BindGPUFragmentSamplers):
  proc BindGPUFragmentSamplers*(render_pass: ptr GPURenderPass_520094801;
                                first_slot: Uint32_520094145;
      texture_sampler_bindings: ptr GPUTextureSamplerBinding_520095043;
                                num_bindings: Uint32_520094145): void {.cdecl,
      importc: "SDL_BindGPUFragmentSamplers".}
else:
  static :
    hint("Declaration of " & "BindGPUFragmentSamplers" &
        " already exists, not redeclaring")
when not declared(BindGPUFragmentStorageTextures):
  proc BindGPUFragmentStorageTextures*(render_pass: ptr GPURenderPass_520094801;
                                       first_slot: Uint32_520094145;
                                       storage_textures: ptr ptr GPUTexture_520094789;
                                       num_bindings: Uint32_520094145): void {.
      cdecl, importc: "SDL_BindGPUFragmentStorageTextures".}
else:
  static :
    hint("Declaration of " & "BindGPUFragmentStorageTextures" &
        " already exists, not redeclaring")
when not declared(BindGPUFragmentStorageBuffers):
  proc BindGPUFragmentStorageBuffers*(render_pass: ptr GPURenderPass_520094801;
                                      first_slot: Uint32_520094145;
                                      storage_buffers: ptr ptr GPUBuffer_520094785;
                                      num_bindings: Uint32_520094145): void {.
      cdecl, importc: "SDL_BindGPUFragmentStorageBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUFragmentStorageBuffers" &
        " already exists, not redeclaring")
when not declared(DrawGPUIndexedPrimitives):
  proc DrawGPUIndexedPrimitives*(render_pass: ptr GPURenderPass_520094801;
                                 num_indices: Uint32_520094145;
                                 num_instances: Uint32_520094145;
                                 first_index: Uint32_520094145;
                                 vertex_offset: Sint32_520094143;
                                 first_instance: Uint32_520094145): void {.
      cdecl, importc: "SDL_DrawGPUIndexedPrimitives".}
else:
  static :
    hint("Declaration of " & "DrawGPUIndexedPrimitives" &
        " already exists, not redeclaring")
when not declared(DrawGPUPrimitives):
  proc DrawGPUPrimitives*(render_pass: ptr GPURenderPass_520094801;
                          num_vertices: Uint32_520094145; num_instances: Uint32_520094145;
                          first_vertex: Uint32_520094145; first_instance: Uint32_520094145): void {.
      cdecl, importc: "SDL_DrawGPUPrimitives".}
else:
  static :
    hint("Declaration of " & "DrawGPUPrimitives" &
        " already exists, not redeclaring")
when not declared(DrawGPUPrimitivesIndirect):
  proc DrawGPUPrimitivesIndirect*(render_pass: ptr GPURenderPass_520094801;
                                  buffer: ptr GPUBuffer_520094785;
                                  offset: Uint32_520094145; draw_count: Uint32_520094145): void {.
      cdecl, importc: "SDL_DrawGPUPrimitivesIndirect".}
else:
  static :
    hint("Declaration of " & "DrawGPUPrimitivesIndirect" &
        " already exists, not redeclaring")
when not declared(DrawGPUIndexedPrimitivesIndirect):
  proc DrawGPUIndexedPrimitivesIndirect*(render_pass: ptr GPURenderPass_520094801;
      buffer: ptr GPUBuffer_520094785; offset: Uint32_520094145;
      draw_count: Uint32_520094145): void {.cdecl,
      importc: "SDL_DrawGPUIndexedPrimitivesIndirect".}
else:
  static :
    hint("Declaration of " & "DrawGPUIndexedPrimitivesIndirect" &
        " already exists, not redeclaring")
when not declared(EndGPURenderPass):
  proc EndGPURenderPass*(render_pass: ptr GPURenderPass_520094801): void {.
      cdecl, importc: "SDL_EndGPURenderPass".}
else:
  static :
    hint("Declaration of " & "EndGPURenderPass" &
        " already exists, not redeclaring")
when not declared(BeginGPUComputePass):
  proc BeginGPUComputePass*(command_buffer: ptr GPUCommandBuffer_520094799;
      storage_texture_bindings: ptr GPUStorageTextureReadWriteBinding_520095051;
                            num_storage_texture_bindings: Uint32_520094145;
      storage_buffer_bindings: ptr GPUStorageBufferReadWriteBinding_520095047;
                            num_storage_buffer_bindings: Uint32_520094145): ptr GPUComputePass_520094803 {.
      cdecl, importc: "SDL_BeginGPUComputePass".}
else:
  static :
    hint("Declaration of " & "BeginGPUComputePass" &
        " already exists, not redeclaring")
when not declared(BindGPUComputePipeline):
  proc BindGPUComputePipeline*(compute_pass: ptr GPUComputePass_520094803;
                               compute_pipeline: ptr GPUComputePipeline_520094795): void {.
      cdecl, importc: "SDL_BindGPUComputePipeline".}
else:
  static :
    hint("Declaration of " & "BindGPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(BindGPUComputeSamplers):
  proc BindGPUComputeSamplers*(compute_pass: ptr GPUComputePass_520094803;
                               first_slot: Uint32_520094145;
      texture_sampler_bindings: ptr GPUTextureSamplerBinding_520095043;
                               num_bindings: Uint32_520094145): void {.cdecl,
      importc: "SDL_BindGPUComputeSamplers".}
else:
  static :
    hint("Declaration of " & "BindGPUComputeSamplers" &
        " already exists, not redeclaring")
when not declared(BindGPUComputeStorageTextures):
  proc BindGPUComputeStorageTextures*(compute_pass: ptr GPUComputePass_520094803;
                                      first_slot: Uint32_520094145;
                                      storage_textures: ptr ptr GPUTexture_520094789;
                                      num_bindings: Uint32_520094145): void {.
      cdecl, importc: "SDL_BindGPUComputeStorageTextures".}
else:
  static :
    hint("Declaration of " & "BindGPUComputeStorageTextures" &
        " already exists, not redeclaring")
when not declared(BindGPUComputeStorageBuffers):
  proc BindGPUComputeStorageBuffers*(compute_pass: ptr GPUComputePass_520094803;
                                     first_slot: Uint32_520094145;
                                     storage_buffers: ptr ptr GPUBuffer_520094785;
                                     num_bindings: Uint32_520094145): void {.
      cdecl, importc: "SDL_BindGPUComputeStorageBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUComputeStorageBuffers" &
        " already exists, not redeclaring")
when not declared(DispatchGPUCompute):
  proc DispatchGPUCompute*(compute_pass: ptr GPUComputePass_520094803;
                           groupcount_x: Uint32_520094145; groupcount_y: Uint32_520094145;
                           groupcount_z: Uint32_520094145): void {.cdecl,
      importc: "SDL_DispatchGPUCompute".}
else:
  static :
    hint("Declaration of " & "DispatchGPUCompute" &
        " already exists, not redeclaring")
when not declared(DispatchGPUComputeIndirect):
  proc DispatchGPUComputeIndirect*(compute_pass: ptr GPUComputePass_520094803;
                                   buffer: ptr GPUBuffer_520094785;
                                   offset: Uint32_520094145): void {.cdecl,
      importc: "SDL_DispatchGPUComputeIndirect".}
else:
  static :
    hint("Declaration of " & "DispatchGPUComputeIndirect" &
        " already exists, not redeclaring")
when not declared(EndGPUComputePass):
  proc EndGPUComputePass*(compute_pass: ptr GPUComputePass_520094803): void {.
      cdecl, importc: "SDL_EndGPUComputePass".}
else:
  static :
    hint("Declaration of " & "EndGPUComputePass" &
        " already exists, not redeclaring")
when not declared(MapGPUTransferBuffer):
  proc MapGPUTransferBuffer*(device: ptr GPUDevice_520094783;
                             transfer_buffer: ptr GPUTransferBuffer_520094787;
                             cycle: bool): pointer {.cdecl,
      importc: "SDL_MapGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "MapGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(UnmapGPUTransferBuffer):
  proc UnmapGPUTransferBuffer*(device: ptr GPUDevice_520094783;
                               transfer_buffer: ptr GPUTransferBuffer_520094787): void {.
      cdecl, importc: "SDL_UnmapGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "UnmapGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(BeginGPUCopyPass):
  proc BeginGPUCopyPass*(command_buffer: ptr GPUCommandBuffer_520094799): ptr GPUCopyPass_520094805 {.
      cdecl, importc: "SDL_BeginGPUCopyPass".}
else:
  static :
    hint("Declaration of " & "BeginGPUCopyPass" &
        " already exists, not redeclaring")
when not declared(UploadToGPUTexture):
  proc UploadToGPUTexture*(copy_pass: ptr GPUCopyPass_520094805;
                           source: ptr GPUTextureTransferInfo_520094919;
                           destination: ptr GPUTextureRegion_520094931;
                           cycle: bool): void {.cdecl,
      importc: "SDL_UploadToGPUTexture".}
else:
  static :
    hint("Declaration of " & "UploadToGPUTexture" &
        " already exists, not redeclaring")
when not declared(UploadToGPUBuffer):
  proc UploadToGPUBuffer*(copy_pass: ptr GPUCopyPass_520094805;
                          source: ptr GPUTransferBufferLocation_520094923;
                          destination: ptr GPUBufferRegion_520094943;
                          cycle: bool): void {.cdecl,
      importc: "SDL_UploadToGPUBuffer".}
else:
  static :
    hint("Declaration of " & "UploadToGPUBuffer" &
        " already exists, not redeclaring")
when not declared(CopyGPUTextureToTexture):
  proc CopyGPUTextureToTexture*(copy_pass: ptr GPUCopyPass_520094805;
                                source: ptr GPUTextureLocation_520094927;
                                destination: ptr GPUTextureLocation_520094927;
                                w: Uint32_520094145; h: Uint32_520094145;
                                d: Uint32_520094145; cycle: bool): void {.cdecl,
      importc: "SDL_CopyGPUTextureToTexture".}
else:
  static :
    hint("Declaration of " & "CopyGPUTextureToTexture" &
        " already exists, not redeclaring")
when not declared(CopyGPUBufferToBuffer):
  proc CopyGPUBufferToBuffer*(copy_pass: ptr GPUCopyPass_520094805;
                              source: ptr GPUBufferLocation_520094939;
                              destination: ptr GPUBufferLocation_520094939;
                              size: Uint32_520094145; cycle: bool): void {.
      cdecl, importc: "SDL_CopyGPUBufferToBuffer".}
else:
  static :
    hint("Declaration of " & "CopyGPUBufferToBuffer" &
        " already exists, not redeclaring")
when not declared(DownloadFromGPUTexture):
  proc DownloadFromGPUTexture*(copy_pass: ptr GPUCopyPass_520094805;
                               source: ptr GPUTextureRegion_520094931;
                               destination: ptr GPUTextureTransferInfo_520094919): void {.
      cdecl, importc: "SDL_DownloadFromGPUTexture".}
else:
  static :
    hint("Declaration of " & "DownloadFromGPUTexture" &
        " already exists, not redeclaring")
when not declared(DownloadFromGPUBuffer):
  proc DownloadFromGPUBuffer*(copy_pass: ptr GPUCopyPass_520094805;
                              source: ptr GPUBufferRegion_520094943;
                              destination: ptr GPUTransferBufferLocation_520094923): void {.
      cdecl, importc: "SDL_DownloadFromGPUBuffer".}
else:
  static :
    hint("Declaration of " & "DownloadFromGPUBuffer" &
        " already exists, not redeclaring")
when not declared(EndGPUCopyPass):
  proc EndGPUCopyPass*(copy_pass: ptr GPUCopyPass_520094805): void {.cdecl,
      importc: "SDL_EndGPUCopyPass".}
else:
  static :
    hint("Declaration of " & "EndGPUCopyPass" &
        " already exists, not redeclaring")
when not declared(GenerateMipmapsForGPUTexture):
  proc GenerateMipmapsForGPUTexture*(command_buffer: ptr GPUCommandBuffer_520094799;
                                     texture: ptr GPUTexture_520094789): void {.
      cdecl, importc: "SDL_GenerateMipmapsForGPUTexture".}
else:
  static :
    hint("Declaration of " & "GenerateMipmapsForGPUTexture" &
        " already exists, not redeclaring")
when not declared(BlitGPUTexture):
  proc BlitGPUTexture*(command_buffer: ptr GPUCommandBuffer_520094799;
                       info: ptr GPUBlitInfo_520095035): void {.cdecl,
      importc: "SDL_BlitGPUTexture".}
else:
  static :
    hint("Declaration of " & "BlitGPUTexture" &
        " already exists, not redeclaring")
when not declared(WindowSupportsGPUSwapchainComposition):
  proc WindowSupportsGPUSwapchainComposition*(device: ptr GPUDevice_520094783;
      window: ptr Window_520094429;
      swapchain_composition: GPUSwapchainComposition_520094911): bool {.cdecl,
      importc: "SDL_WindowSupportsGPUSwapchainComposition".}
else:
  static :
    hint("Declaration of " & "WindowSupportsGPUSwapchainComposition" &
        " already exists, not redeclaring")
when not declared(WindowSupportsGPUPresentMode):
  proc WindowSupportsGPUPresentMode*(device: ptr GPUDevice_520094783;
                                     window: ptr Window_520094429;
                                     present_mode: GPUPresentMode_520094907): bool {.
      cdecl, importc: "SDL_WindowSupportsGPUPresentMode".}
else:
  static :
    hint("Declaration of " & "WindowSupportsGPUPresentMode" &
        " already exists, not redeclaring")
when not declared(ClaimWindowForGPUDevice):
  proc ClaimWindowForGPUDevice*(device: ptr GPUDevice_520094783;
                                window: ptr Window_520094429): bool {.cdecl,
      importc: "SDL_ClaimWindowForGPUDevice".}
else:
  static :
    hint("Declaration of " & "ClaimWindowForGPUDevice" &
        " already exists, not redeclaring")
when not declared(ReleaseWindowFromGPUDevice):
  proc ReleaseWindowFromGPUDevice*(device: ptr GPUDevice_520094783;
                                   window: ptr Window_520094429): void {.cdecl,
      importc: "SDL_ReleaseWindowFromGPUDevice".}
else:
  static :
    hint("Declaration of " & "ReleaseWindowFromGPUDevice" &
        " already exists, not redeclaring")
when not declared(SetGPUSwapchainParameters):
  proc SetGPUSwapchainParameters*(device: ptr GPUDevice_520094783;
                                  window: ptr Window_520094429;
      swapchain_composition: GPUSwapchainComposition_520094911;
                                  present_mode: GPUPresentMode_520094907): bool {.
      cdecl, importc: "SDL_SetGPUSwapchainParameters".}
else:
  static :
    hint("Declaration of " & "SetGPUSwapchainParameters" &
        " already exists, not redeclaring")
when not declared(SetGPUAllowedFramesInFlight):
  proc SetGPUAllowedFramesInFlight*(device: ptr GPUDevice_520094783;
                                    allowed_frames_in_flight: Uint32_520094145): bool {.
      cdecl, importc: "SDL_SetGPUAllowedFramesInFlight".}
else:
  static :
    hint("Declaration of " & "SetGPUAllowedFramesInFlight" &
        " already exists, not redeclaring")
when not declared(GetGPUSwapchainTextureFormat):
  proc GetGPUSwapchainTextureFormat*(device: ptr GPUDevice_520094783;
                                     window: ptr Window_520094429): GPUTextureFormat_520094827 {.
      cdecl, importc: "SDL_GetGPUSwapchainTextureFormat".}
else:
  static :
    hint("Declaration of " & "GetGPUSwapchainTextureFormat" &
        " already exists, not redeclaring")
when not declared(AcquireGPUSwapchainTexture):
  proc AcquireGPUSwapchainTexture*(command_buffer: ptr GPUCommandBuffer_520094799;
                                   window: ptr Window_520094429;
                                   swapchain_texture: ptr ptr GPUTexture_520094789;
                                   swapchain_texture_width: ptr Uint32_520094145;
                                   swapchain_texture_height: ptr Uint32_520094145): bool {.
      cdecl, importc: "SDL_AcquireGPUSwapchainTexture".}
else:
  static :
    hint("Declaration of " & "AcquireGPUSwapchainTexture" &
        " already exists, not redeclaring")
when not declared(WaitForGPUSwapchain):
  proc WaitForGPUSwapchain*(device: ptr GPUDevice_520094783; window: ptr Window_520094429): bool {.
      cdecl, importc: "SDL_WaitForGPUSwapchain".}
else:
  static :
    hint("Declaration of " & "WaitForGPUSwapchain" &
        " already exists, not redeclaring")
when not declared(WaitAndAcquireGPUSwapchainTexture):
  proc WaitAndAcquireGPUSwapchainTexture*(command_buffer: ptr GPUCommandBuffer_520094799;
      window: ptr Window_520094429; swapchain_texture: ptr ptr GPUTexture_520094789;
      swapchain_texture_width: ptr Uint32_520094145;
      swapchain_texture_height: ptr Uint32_520094145): bool {.cdecl,
      importc: "SDL_WaitAndAcquireGPUSwapchainTexture".}
else:
  static :
    hint("Declaration of " & "WaitAndAcquireGPUSwapchainTexture" &
        " already exists, not redeclaring")
when not declared(SubmitGPUCommandBuffer):
  proc SubmitGPUCommandBuffer*(command_buffer: ptr GPUCommandBuffer_520094799): bool {.
      cdecl, importc: "SDL_SubmitGPUCommandBuffer".}
else:
  static :
    hint("Declaration of " & "SubmitGPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(SubmitGPUCommandBufferAndAcquireFence):
  proc SubmitGPUCommandBufferAndAcquireFence*(
      command_buffer: ptr GPUCommandBuffer_520094799): ptr GPUFence_520094807 {.
      cdecl, importc: "SDL_SubmitGPUCommandBufferAndAcquireFence".}
else:
  static :
    hint("Declaration of " & "SubmitGPUCommandBufferAndAcquireFence" &
        " already exists, not redeclaring")
when not declared(CancelGPUCommandBuffer):
  proc CancelGPUCommandBuffer*(command_buffer: ptr GPUCommandBuffer_520094799): bool {.
      cdecl, importc: "SDL_CancelGPUCommandBuffer".}
else:
  static :
    hint("Declaration of " & "CancelGPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(WaitForGPUIdle):
  proc WaitForGPUIdle*(device: ptr GPUDevice_520094783): bool {.cdecl,
      importc: "SDL_WaitForGPUIdle".}
else:
  static :
    hint("Declaration of " & "WaitForGPUIdle" &
        " already exists, not redeclaring")
when not declared(WaitForGPUFences):
  proc WaitForGPUFences*(device: ptr GPUDevice_520094783; wait_all: bool;
                         fences: ptr ptr GPUFence_520094807; num_fences: Uint32_520094145): bool {.
      cdecl, importc: "SDL_WaitForGPUFences".}
else:
  static :
    hint("Declaration of " & "WaitForGPUFences" &
        " already exists, not redeclaring")
when not declared(QueryGPUFence):
  proc QueryGPUFence*(device: ptr GPUDevice_520094783; fence: ptr GPUFence_520094807): bool {.
      cdecl, importc: "SDL_QueryGPUFence".}
else:
  static :
    hint("Declaration of " & "QueryGPUFence" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUFence):
  proc ReleaseGPUFence*(device: ptr GPUDevice_520094783; fence: ptr GPUFence_520094807): void {.
      cdecl, importc: "SDL_ReleaseGPUFence".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUFence" &
        " already exists, not redeclaring")
when not declared(GPUTextureFormatTexelBlockSize):
  proc GPUTextureFormatTexelBlockSize*(format: GPUTextureFormat_520094827): Uint32_520094145 {.
      cdecl, importc: "SDL_GPUTextureFormatTexelBlockSize".}
else:
  static :
    hint("Declaration of " & "GPUTextureFormatTexelBlockSize" &
        " already exists, not redeclaring")
when not declared(GPUTextureSupportsFormat):
  proc GPUTextureSupportsFormat*(device: ptr GPUDevice_520094783;
                                 format: GPUTextureFormat_520094827;
                                 type_arg: GPUTextureType_520094833;
                                 usage: GPUTextureUsageFlags_520094829): bool {.
      cdecl, importc: "SDL_GPUTextureSupportsFormat".}
else:
  static :
    hint("Declaration of " & "GPUTextureSupportsFormat" &
        " already exists, not redeclaring")
when not declared(GPUTextureSupportsSampleCount):
  proc GPUTextureSupportsSampleCount*(device: ptr GPUDevice_520094783;
                                      format: GPUTextureFormat_520094827;
                                      sample_count: GPUSampleCount_520094837): bool {.
      cdecl, importc: "SDL_GPUTextureSupportsSampleCount".}
else:
  static :
    hint("Declaration of " & "GPUTextureSupportsSampleCount" &
        " already exists, not redeclaring")
when not declared(CalculateGPUTextureFormatSize):
  proc CalculateGPUTextureFormatSize*(format: GPUTextureFormat_520094827;
                                      width: Uint32_520094145; height: Uint32_520094145;
                                      depth_or_layer_count: Uint32_520094145): Uint32_520094145 {.
      cdecl, importc: "SDL_CalculateGPUTextureFormatSize".}
else:
  static :
    hint("Declaration of " & "CalculateGPUTextureFormatSize" &
        " already exists, not redeclaring")
when not declared(GetHaptics):
  proc GetHaptics*(count: ptr cint): ptr HapticID_520095087 {.cdecl,
      importc: "SDL_GetHaptics".}
else:
  static :
    hint("Declaration of " & "GetHaptics" & " already exists, not redeclaring")
when not declared(GetHapticNameForID):
  proc GetHapticNameForID*(instance_id: HapticID_520095087): cstring {.cdecl,
      importc: "SDL_GetHapticNameForID".}
else:
  static :
    hint("Declaration of " & "GetHapticNameForID" &
        " already exists, not redeclaring")
when not declared(OpenHaptic):
  proc OpenHaptic*(instance_id: HapticID_520095087): ptr Haptic_520095053 {.
      cdecl, importc: "SDL_OpenHaptic".}
else:
  static :
    hint("Declaration of " & "OpenHaptic" & " already exists, not redeclaring")
when not declared(GetHapticFromID):
  proc GetHapticFromID*(instance_id: HapticID_520095087): ptr Haptic_520095053 {.
      cdecl, importc: "SDL_GetHapticFromID".}
else:
  static :
    hint("Declaration of " & "GetHapticFromID" &
        " already exists, not redeclaring")
when not declared(GetHapticID):
  proc GetHapticID*(haptic: ptr Haptic_520095053): HapticID_520095087 {.cdecl,
      importc: "SDL_GetHapticID".}
else:
  static :
    hint("Declaration of " & "GetHapticID" & " already exists, not redeclaring")
when not declared(GetHapticName):
  proc GetHapticName*(haptic: ptr Haptic_520095053): cstring {.cdecl,
      importc: "SDL_GetHapticName".}
else:
  static :
    hint("Declaration of " & "GetHapticName" &
        " already exists, not redeclaring")
when not declared(IsMouseHaptic):
  proc IsMouseHaptic*(): bool {.cdecl, importc: "SDL_IsMouseHaptic".}
else:
  static :
    hint("Declaration of " & "IsMouseHaptic" &
        " already exists, not redeclaring")
when not declared(OpenHapticFromMouse):
  proc OpenHapticFromMouse*(): ptr Haptic_520095053 {.cdecl,
      importc: "SDL_OpenHapticFromMouse".}
else:
  static :
    hint("Declaration of " & "OpenHapticFromMouse" &
        " already exists, not redeclaring")
when not declared(IsJoystickHaptic):
  proc IsJoystickHaptic*(joystick: ptr Joystick_520094499): bool {.cdecl,
      importc: "SDL_IsJoystickHaptic".}
else:
  static :
    hint("Declaration of " & "IsJoystickHaptic" &
        " already exists, not redeclaring")
when not declared(OpenHapticFromJoystick):
  proc OpenHapticFromJoystick*(joystick: ptr Joystick_520094499): ptr Haptic_520095053 {.
      cdecl, importc: "SDL_OpenHapticFromJoystick".}
else:
  static :
    hint("Declaration of " & "OpenHapticFromJoystick" &
        " already exists, not redeclaring")
when not declared(CloseHaptic):
  proc CloseHaptic*(haptic: ptr Haptic_520095053): void {.cdecl,
      importc: "SDL_CloseHaptic".}
else:
  static :
    hint("Declaration of " & "CloseHaptic" & " already exists, not redeclaring")
when not declared(GetMaxHapticEffects):
  proc GetMaxHapticEffects*(haptic: ptr Haptic_520095053): cint {.cdecl,
      importc: "SDL_GetMaxHapticEffects".}
else:
  static :
    hint("Declaration of " & "GetMaxHapticEffects" &
        " already exists, not redeclaring")
when not declared(GetMaxHapticEffectsPlaying):
  proc GetMaxHapticEffectsPlaying*(haptic: ptr Haptic_520095053): cint {.cdecl,
      importc: "SDL_GetMaxHapticEffectsPlaying".}
else:
  static :
    hint("Declaration of " & "GetMaxHapticEffectsPlaying" &
        " already exists, not redeclaring")
when not declared(GetHapticFeatures):
  proc GetHapticFeatures*(haptic: ptr Haptic_520095053): Uint32_520094145 {.
      cdecl, importc: "SDL_GetHapticFeatures".}
else:
  static :
    hint("Declaration of " & "GetHapticFeatures" &
        " already exists, not redeclaring")
when not declared(GetNumHapticAxes):
  proc GetNumHapticAxes*(haptic: ptr Haptic_520095053): cint {.cdecl,
      importc: "SDL_GetNumHapticAxes".}
else:
  static :
    hint("Declaration of " & "GetNumHapticAxes" &
        " already exists, not redeclaring")
when not declared(HapticEffectSupported):
  proc HapticEffectSupported*(haptic: ptr Haptic_520095053;
                              effect: ptr HapticEffect_520095085): bool {.cdecl,
      importc: "SDL_HapticEffectSupported".}
else:
  static :
    hint("Declaration of " & "HapticEffectSupported" &
        " already exists, not redeclaring")
when not declared(CreateHapticEffect):
  proc CreateHapticEffect*(haptic: ptr Haptic_520095053;
                           effect: ptr HapticEffect_520095085): cint {.cdecl,
      importc: "SDL_CreateHapticEffect".}
else:
  static :
    hint("Declaration of " & "CreateHapticEffect" &
        " already exists, not redeclaring")
when not declared(UpdateHapticEffect):
  proc UpdateHapticEffect*(haptic: ptr Haptic_520095053; effect: cint;
                           data: ptr HapticEffect_520095085): bool {.cdecl,
      importc: "SDL_UpdateHapticEffect".}
else:
  static :
    hint("Declaration of " & "UpdateHapticEffect" &
        " already exists, not redeclaring")
when not declared(RunHapticEffect):
  proc RunHapticEffect*(haptic: ptr Haptic_520095053; effect: cint;
                        iterations: Uint32_520094145): bool {.cdecl,
      importc: "SDL_RunHapticEffect".}
else:
  static :
    hint("Declaration of " & "RunHapticEffect" &
        " already exists, not redeclaring")
when not declared(StopHapticEffect):
  proc StopHapticEffect*(haptic: ptr Haptic_520095053; effect: cint): bool {.
      cdecl, importc: "SDL_StopHapticEffect".}
else:
  static :
    hint("Declaration of " & "StopHapticEffect" &
        " already exists, not redeclaring")
when not declared(DestroyHapticEffect):
  proc DestroyHapticEffect*(haptic: ptr Haptic_520095053; effect: cint): void {.
      cdecl, importc: "SDL_DestroyHapticEffect".}
else:
  static :
    hint("Declaration of " & "DestroyHapticEffect" &
        " already exists, not redeclaring")
when not declared(GetHapticEffectStatus):
  proc GetHapticEffectStatus*(haptic: ptr Haptic_520095053; effect: cint): bool {.
      cdecl, importc: "SDL_GetHapticEffectStatus".}
else:
  static :
    hint("Declaration of " & "GetHapticEffectStatus" &
        " already exists, not redeclaring")
when not declared(SetHapticGain):
  proc SetHapticGain*(haptic: ptr Haptic_520095053; gain: cint): bool {.cdecl,
      importc: "SDL_SetHapticGain".}
else:
  static :
    hint("Declaration of " & "SetHapticGain" &
        " already exists, not redeclaring")
when not declared(SetHapticAutocenter):
  proc SetHapticAutocenter*(haptic: ptr Haptic_520095053; autocenter: cint): bool {.
      cdecl, importc: "SDL_SetHapticAutocenter".}
else:
  static :
    hint("Declaration of " & "SetHapticAutocenter" &
        " already exists, not redeclaring")
when not declared(PauseHaptic):
  proc PauseHaptic*(haptic: ptr Haptic_520095053): bool {.cdecl,
      importc: "SDL_PauseHaptic".}
else:
  static :
    hint("Declaration of " & "PauseHaptic" & " already exists, not redeclaring")
when not declared(ResumeHaptic):
  proc ResumeHaptic*(haptic: ptr Haptic_520095053): bool {.cdecl,
      importc: "SDL_ResumeHaptic".}
else:
  static :
    hint("Declaration of " & "ResumeHaptic" & " already exists, not redeclaring")
when not declared(StopHapticEffects):
  proc StopHapticEffects*(haptic: ptr Haptic_520095053): bool {.cdecl,
      importc: "SDL_StopHapticEffects".}
else:
  static :
    hint("Declaration of " & "StopHapticEffects" &
        " already exists, not redeclaring")
when not declared(HapticRumbleSupported):
  proc HapticRumbleSupported*(haptic: ptr Haptic_520095053): bool {.cdecl,
      importc: "SDL_HapticRumbleSupported".}
else:
  static :
    hint("Declaration of " & "HapticRumbleSupported" &
        " already exists, not redeclaring")
when not declared(InitHapticRumble):
  proc InitHapticRumble*(haptic: ptr Haptic_520095053): bool {.cdecl,
      importc: "SDL_InitHapticRumble".}
else:
  static :
    hint("Declaration of " & "InitHapticRumble" &
        " already exists, not redeclaring")
when not declared(PlayHapticRumble):
  proc PlayHapticRumble*(haptic: ptr Haptic_520095053; strength: cfloat;
                         length: Uint32_520094145): bool {.cdecl,
      importc: "SDL_PlayHapticRumble".}
else:
  static :
    hint("Declaration of " & "PlayHapticRumble" &
        " already exists, not redeclaring")
when not declared(StopHapticRumble):
  proc StopHapticRumble*(haptic: ptr Haptic_520095053): bool {.cdecl,
      importc: "SDL_StopHapticRumble".}
else:
  static :
    hint("Declaration of " & "StopHapticRumble" &
        " already exists, not redeclaring")
when not declared(hid_init):
  proc hid_init*(): cint {.cdecl, importc: "SDL_hid_init".}
else:
  static :
    hint("Declaration of " & "hid_init" & " already exists, not redeclaring")
when not declared(hid_exit):
  proc hid_exit*(): cint {.cdecl, importc: "SDL_hid_exit".}
else:
  static :
    hint("Declaration of " & "hid_exit" & " already exists, not redeclaring")
when not declared(hid_device_change_count):
  proc hid_device_change_count*(): Uint32_520094145 {.cdecl,
      importc: "SDL_hid_device_change_count".}
else:
  static :
    hint("Declaration of " & "hid_device_change_count" &
        " already exists, not redeclaring")
when not declared(hid_enumerate):
  proc hid_enumerate*(vendor_id: cushort; product_id: cushort): ptr hid_device_info_520095097 {.
      cdecl, importc: "SDL_hid_enumerate".}
else:
  static :
    hint("Declaration of " & "hid_enumerate" &
        " already exists, not redeclaring")
when not declared(hid_free_enumeration):
  proc hid_free_enumeration*(devs: ptr hid_device_info_520095097): void {.cdecl,
      importc: "SDL_hid_free_enumeration".}
else:
  static :
    hint("Declaration of " & "hid_free_enumeration" &
        " already exists, not redeclaring")
when not declared(hid_open):
  proc hid_open*(vendor_id: cushort; product_id: cushort;
                 serial_number: ptr wchar_t_520094175): ptr hid_device_520095089 {.
      cdecl, importc: "SDL_hid_open".}
else:
  static :
    hint("Declaration of " & "hid_open" & " already exists, not redeclaring")
when not declared(hid_open_path):
  proc hid_open_path*(path: cstring): ptr hid_device_520095089 {.cdecl,
      importc: "SDL_hid_open_path".}
else:
  static :
    hint("Declaration of " & "hid_open_path" &
        " already exists, not redeclaring")
when not declared(hid_write):
  proc hid_write*(dev: ptr hid_device_520095089; data: ptr uint8;
                  length: csize_t): cint {.cdecl, importc: "SDL_hid_write".}
else:
  static :
    hint("Declaration of " & "hid_write" & " already exists, not redeclaring")
when not declared(hid_read_timeout):
  proc hid_read_timeout*(dev: ptr hid_device_520095089; data: ptr uint8;
                         length: csize_t; milliseconds: cint): cint {.cdecl,
      importc: "SDL_hid_read_timeout".}
else:
  static :
    hint("Declaration of " & "hid_read_timeout" &
        " already exists, not redeclaring")
when not declared(hid_read):
  proc hid_read*(dev: ptr hid_device_520095089; data: ptr uint8; length: csize_t): cint {.
      cdecl, importc: "SDL_hid_read".}
else:
  static :
    hint("Declaration of " & "hid_read" & " already exists, not redeclaring")
when not declared(hid_set_nonblocking):
  proc hid_set_nonblocking*(dev: ptr hid_device_520095089; nonblock: cint): cint {.
      cdecl, importc: "SDL_hid_set_nonblocking".}
else:
  static :
    hint("Declaration of " & "hid_set_nonblocking" &
        " already exists, not redeclaring")
when not declared(hid_send_feature_report):
  proc hid_send_feature_report*(dev: ptr hid_device_520095089; data: ptr uint8;
                                length: csize_t): cint {.cdecl,
      importc: "SDL_hid_send_feature_report".}
else:
  static :
    hint("Declaration of " & "hid_send_feature_report" &
        " already exists, not redeclaring")
when not declared(hid_get_feature_report):
  proc hid_get_feature_report*(dev: ptr hid_device_520095089; data: ptr uint8;
                               length: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_feature_report".}
else:
  static :
    hint("Declaration of " & "hid_get_feature_report" &
        " already exists, not redeclaring")
when not declared(hid_get_input_report):
  proc hid_get_input_report*(dev: ptr hid_device_520095089; data: ptr uint8;
                             length: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_input_report".}
else:
  static :
    hint("Declaration of " & "hid_get_input_report" &
        " already exists, not redeclaring")
when not declared(hid_close):
  proc hid_close*(dev: ptr hid_device_520095089): cint {.cdecl,
      importc: "SDL_hid_close".}
else:
  static :
    hint("Declaration of " & "hid_close" & " already exists, not redeclaring")
when not declared(hid_get_manufacturer_string):
  proc hid_get_manufacturer_string*(dev: ptr hid_device_520095089;
                                    string_arg: ptr wchar_t_520094175;
                                    maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_manufacturer_string".}
else:
  static :
    hint("Declaration of " & "hid_get_manufacturer_string" &
        " already exists, not redeclaring")
when not declared(hid_get_product_string):
  proc hid_get_product_string*(dev: ptr hid_device_520095089;
                               string_arg: ptr wchar_t_520094175;
                               maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_product_string".}
else:
  static :
    hint("Declaration of " & "hid_get_product_string" &
        " already exists, not redeclaring")
when not declared(hid_get_serial_number_string):
  proc hid_get_serial_number_string*(dev: ptr hid_device_520095089;
                                     string_arg: ptr wchar_t_520094175;
                                     maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_serial_number_string".}
else:
  static :
    hint("Declaration of " & "hid_get_serial_number_string" &
        " already exists, not redeclaring")
when not declared(hid_get_indexed_string):
  proc hid_get_indexed_string*(dev: ptr hid_device_520095089;
                               string_index: cint; string_arg: ptr wchar_t_520094175;
                               maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_indexed_string".}
else:
  static :
    hint("Declaration of " & "hid_get_indexed_string" &
        " already exists, not redeclaring")
when not declared(hid_get_device_info):
  proc hid_get_device_info*(dev: ptr hid_device_520095089): ptr hid_device_info_520095097 {.
      cdecl, importc: "SDL_hid_get_device_info".}
else:
  static :
    hint("Declaration of " & "hid_get_device_info" &
        " already exists, not redeclaring")
when not declared(hid_get_report_descriptor):
  proc hid_get_report_descriptor*(dev: ptr hid_device_520095089; buf: ptr uint8;
                                  buf_size: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_report_descriptor".}
else:
  static :
    hint("Declaration of " & "hid_get_report_descriptor" &
        " already exists, not redeclaring")
when not declared(hid_ble_scan):
  proc hid_ble_scan*(active: bool): void {.cdecl, importc: "SDL_hid_ble_scan".}
else:
  static :
    hint("Declaration of " & "hid_ble_scan" & " already exists, not redeclaring")
when not declared(SetHintWithPriority):
  proc SetHintWithPriority*(name: cstring; value: cstring;
                            priority: HintPriority_520095101): bool {.cdecl,
      importc: "SDL_SetHintWithPriority".}
else:
  static :
    hint("Declaration of " & "SetHintWithPriority" &
        " already exists, not redeclaring")
when not declared(SetHint):
  proc SetHint*(name: cstring; value: cstring): bool {.cdecl,
      importc: "SDL_SetHint".}
else:
  static :
    hint("Declaration of " & "SetHint" & " already exists, not redeclaring")
when not declared(ResetHint):
  proc ResetHint*(name: cstring): bool {.cdecl, importc: "SDL_ResetHint".}
else:
  static :
    hint("Declaration of " & "ResetHint" & " already exists, not redeclaring")
when not declared(ResetHints):
  proc ResetHints*(): void {.cdecl, importc: "SDL_ResetHints".}
else:
  static :
    hint("Declaration of " & "ResetHints" & " already exists, not redeclaring")
when not declared(GetHint):
  proc GetHint*(name: cstring): cstring {.cdecl, importc: "SDL_GetHint".}
else:
  static :
    hint("Declaration of " & "GetHint" & " already exists, not redeclaring")
when not declared(GetHintBoolean):
  proc GetHintBoolean*(name: cstring; default_value: bool): bool {.cdecl,
      importc: "SDL_GetHintBoolean".}
else:
  static :
    hint("Declaration of " & "GetHintBoolean" &
        " already exists, not redeclaring")
when not declared(AddHintCallback):
  proc AddHintCallback*(name: cstring; callback: HintCallback_520095103;
                        userdata: pointer): bool {.cdecl,
      importc: "SDL_AddHintCallback".}
else:
  static :
    hint("Declaration of " & "AddHintCallback" &
        " already exists, not redeclaring")
when not declared(RemoveHintCallback):
  proc RemoveHintCallback*(name: cstring; callback: HintCallback_520095103;
                           userdata: pointer): void {.cdecl,
      importc: "SDL_RemoveHintCallback".}
else:
  static :
    hint("Declaration of " & "RemoveHintCallback" &
        " already exists, not redeclaring")
when not declared(Init):
  proc Init*(flags: InitFlags_520095105): bool {.cdecl, importc: "SDL_Init".}
else:
  static :
    hint("Declaration of " & "Init" & " already exists, not redeclaring")
when not declared(InitSubSystem):
  proc InitSubSystem*(flags: InitFlags_520095105): bool {.cdecl,
      importc: "SDL_InitSubSystem".}
else:
  static :
    hint("Declaration of " & "InitSubSystem" &
        " already exists, not redeclaring")
when not declared(QuitSubSystem):
  proc QuitSubSystem*(flags: InitFlags_520095105): void {.cdecl,
      importc: "SDL_QuitSubSystem".}
else:
  static :
    hint("Declaration of " & "QuitSubSystem" &
        " already exists, not redeclaring")
when not declared(WasInit):
  proc WasInit*(flags: InitFlags_520095105): InitFlags_520095105 {.cdecl,
      importc: "SDL_WasInit".}
else:
  static :
    hint("Declaration of " & "WasInit" & " already exists, not redeclaring")
when not declared(Quit_proc):
  proc Quit_proc*(): void {.cdecl, importc: "SDL_Quit".}
else:
  static :
    hint("Declaration of " & "Quit_proc" & " already exists, not redeclaring")
when not declared(IsMainThread):
  proc IsMainThread*(): bool {.cdecl, importc: "SDL_IsMainThread".}
else:
  static :
    hint("Declaration of " & "IsMainThread" & " already exists, not redeclaring")
when not declared(RunOnMainThread):
  proc RunOnMainThread*(callback: MainThreadCallback_520095119;
                        userdata: pointer; wait_complete: bool): bool {.cdecl,
      importc: "SDL_RunOnMainThread".}
else:
  static :
    hint("Declaration of " & "RunOnMainThread" &
        " already exists, not redeclaring")
when not declared(SetAppMetadata):
  proc SetAppMetadata*(appname: cstring; appversion: cstring;
                       appidentifier: cstring): bool {.cdecl,
      importc: "SDL_SetAppMetadata".}
else:
  static :
    hint("Declaration of " & "SetAppMetadata" &
        " already exists, not redeclaring")
when not declared(SetAppMetadataProperty):
  proc SetAppMetadataProperty*(name: cstring; value: cstring): bool {.cdecl,
      importc: "SDL_SetAppMetadataProperty".}
else:
  static :
    hint("Declaration of " & "SetAppMetadataProperty" &
        " already exists, not redeclaring")
when not declared(GetAppMetadataProperty):
  proc GetAppMetadataProperty*(name: cstring): cstring {.cdecl,
      importc: "SDL_GetAppMetadataProperty".}
else:
  static :
    hint("Declaration of " & "GetAppMetadataProperty" &
        " already exists, not redeclaring")
when not declared(LoadObject):
  proc LoadObject*(sofile: cstring): ptr SharedObject_520095121 {.cdecl,
      importc: "SDL_LoadObject".}
else:
  static :
    hint("Declaration of " & "LoadObject" & " already exists, not redeclaring")
when not declared(LoadFunction):
  proc LoadFunction*(handle: ptr SharedObject_520095121; name: cstring): FunctionPointer_520094179 {.
      cdecl, importc: "SDL_LoadFunction".}
else:
  static :
    hint("Declaration of " & "LoadFunction" & " already exists, not redeclaring")
when not declared(UnloadObject):
  proc UnloadObject*(handle: ptr SharedObject_520095121): void {.cdecl,
      importc: "SDL_UnloadObject".}
else:
  static :
    hint("Declaration of " & "UnloadObject" & " already exists, not redeclaring")
when not declared(GetPreferredLocales):
  proc GetPreferredLocales*(count: ptr cint): ptr ptr Locale_520095125 {.cdecl,
      importc: "SDL_GetPreferredLocales".}
else:
  static :
    hint("Declaration of " & "GetPreferredLocales" &
        " already exists, not redeclaring")
when not declared(SetLogPriorities):
  proc SetLogPriorities*(priority: LogPriority_520095133): void {.cdecl,
      importc: "SDL_SetLogPriorities".}
else:
  static :
    hint("Declaration of " & "SetLogPriorities" &
        " already exists, not redeclaring")
when not declared(SetLogPriority):
  proc SetLogPriority*(category: cint; priority: LogPriority_520095133): void {.
      cdecl, importc: "SDL_SetLogPriority".}
else:
  static :
    hint("Declaration of " & "SetLogPriority" &
        " already exists, not redeclaring")
when not declared(GetLogPriority):
  proc GetLogPriority*(category: cint): LogPriority_520095133 {.cdecl,
      importc: "SDL_GetLogPriority".}
else:
  static :
    hint("Declaration of " & "GetLogPriority" &
        " already exists, not redeclaring")
when not declared(ResetLogPriorities):
  proc ResetLogPriorities*(): void {.cdecl, importc: "SDL_ResetLogPriorities".}
else:
  static :
    hint("Declaration of " & "ResetLogPriorities" &
        " already exists, not redeclaring")
when not declared(SetLogPriorityPrefix):
  proc SetLogPriorityPrefix*(priority: LogPriority_520095133; prefix: cstring): bool {.
      cdecl, importc: "SDL_SetLogPriorityPrefix".}
else:
  static :
    hint("Declaration of " & "SetLogPriorityPrefix" &
        " already exists, not redeclaring")
when not declared(Log):
  proc Log*(fmt: cstring): void {.cdecl, varargs, importc: "SDL_Log".}
else:
  static :
    hint("Declaration of " & "Log" & " already exists, not redeclaring")
when not declared(LogTrace):
  proc LogTrace*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogTrace".}
else:
  static :
    hint("Declaration of " & "LogTrace" & " already exists, not redeclaring")
when not declared(LogVerbose):
  proc LogVerbose*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogVerbose".}
else:
  static :
    hint("Declaration of " & "LogVerbose" & " already exists, not redeclaring")
when not declared(LogDebug):
  proc LogDebug*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogDebug".}
else:
  static :
    hint("Declaration of " & "LogDebug" & " already exists, not redeclaring")
when not declared(LogInfo):
  proc LogInfo*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogInfo".}
else:
  static :
    hint("Declaration of " & "LogInfo" & " already exists, not redeclaring")
when not declared(LogWarn):
  proc LogWarn*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogWarn".}
else:
  static :
    hint("Declaration of " & "LogWarn" & " already exists, not redeclaring")
when not declared(LogError):
  proc LogError*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogError".}
else:
  static :
    hint("Declaration of " & "LogError" & " already exists, not redeclaring")
when not declared(LogCritical):
  proc LogCritical*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogCritical".}
else:
  static :
    hint("Declaration of " & "LogCritical" & " already exists, not redeclaring")
when not declared(LogMessage):
  proc LogMessage*(category: cint; priority: LogPriority_520095133; fmt: cstring): void {.
      cdecl, varargs, importc: "SDL_LogMessage".}
else:
  static :
    hint("Declaration of " & "LogMessage" & " already exists, not redeclaring")
when not declared(LogMessageV):
  proc LogMessageV*(category: cint; priority: LogPriority_520095133;
                    fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogMessageV".}
else:
  static :
    hint("Declaration of " & "LogMessageV" & " already exists, not redeclaring")
when not declared(GetDefaultLogOutputFunction):
  proc GetDefaultLogOutputFunction*(): LogOutputFunction_520095135 {.cdecl,
      importc: "SDL_GetDefaultLogOutputFunction".}
else:
  static :
    hint("Declaration of " & "GetDefaultLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(GetLogOutputFunction):
  proc GetLogOutputFunction*(callback: LogOutputFunction_520095135;
                             userdata: ptr pointer): void {.cdecl,
      importc: "SDL_GetLogOutputFunction".}
else:
  static :
    hint("Declaration of " & "GetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(SetLogOutputFunction):
  proc SetLogOutputFunction*(callback: LogOutputFunction_520095135;
                             userdata: pointer): void {.cdecl,
      importc: "SDL_SetLogOutputFunction".}
else:
  static :
    hint("Declaration of " & "SetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(ShowMessageBox):
  proc ShowMessageBox*(messageboxdata: ptr MessageBoxData_520095159;
                       buttonid: ptr cint): bool {.cdecl,
      importc: "SDL_ShowMessageBox".}
else:
  static :
    hint("Declaration of " & "ShowMessageBox" &
        " already exists, not redeclaring")
when not declared(ShowSimpleMessageBox):
  proc ShowSimpleMessageBox*(flags: MessageBoxFlags_520095137; title: cstring;
                             message: cstring; window: ptr Window_520094429): bool {.
      cdecl, importc: "SDL_ShowSimpleMessageBox".}
else:
  static :
    hint("Declaration of " & "ShowSimpleMessageBox" &
        " already exists, not redeclaring")
when not declared(Metal_CreateView):
  proc Metal_CreateView*(window: ptr Window_520094429): MetalView_520095161 {.
      cdecl, importc: "SDL_Metal_CreateView".}
else:
  static :
    hint("Declaration of " & "Metal_CreateView" &
        " already exists, not redeclaring")
when not declared(Metal_DestroyView):
  proc Metal_DestroyView*(view: MetalView_520095161): void {.cdecl,
      importc: "SDL_Metal_DestroyView".}
else:
  static :
    hint("Declaration of " & "Metal_DestroyView" &
        " already exists, not redeclaring")
when not declared(Metal_GetLayer):
  proc Metal_GetLayer*(view: MetalView_520095161): pointer {.cdecl,
      importc: "SDL_Metal_GetLayer".}
else:
  static :
    hint("Declaration of " & "Metal_GetLayer" &
        " already exists, not redeclaring")
when not declared(OpenURL):
  proc OpenURL*(url: cstring): bool {.cdecl, importc: "SDL_OpenURL".}
else:
  static :
    hint("Declaration of " & "OpenURL" & " already exists, not redeclaring")
when not declared(GetPlatform):
  proc GetPlatform*(): cstring {.cdecl, importc: "SDL_GetPlatform".}
else:
  static :
    hint("Declaration of " & "GetPlatform" & " already exists, not redeclaring")
when not declared(CreateProcess):
  proc CreateProcess*(args: ptr cstring; pipe_stdio: bool): ptr Process_520095163 {.
      cdecl, importc: "SDL_CreateProcess".}
else:
  static :
    hint("Declaration of " & "CreateProcess" &
        " already exists, not redeclaring")
when not declared(CreateProcessWithProperties):
  proc CreateProcessWithProperties*(props: PropertiesID_520094217): ptr Process_520095163 {.
      cdecl, importc: "SDL_CreateProcessWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateProcessWithProperties" &
        " already exists, not redeclaring")
when not declared(GetProcessProperties):
  proc GetProcessProperties*(process: ptr Process_520095163): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetProcessProperties".}
else:
  static :
    hint("Declaration of " & "GetProcessProperties" &
        " already exists, not redeclaring")
when not declared(ReadProcess):
  proc ReadProcess*(process: ptr Process_520095163; datasize: ptr csize_t;
                    exitcode: ptr cint): pointer {.cdecl,
      importc: "SDL_ReadProcess".}
else:
  static :
    hint("Declaration of " & "ReadProcess" & " already exists, not redeclaring")
when not declared(GetProcessInput):
  proc GetProcessInput*(process: ptr Process_520095163): ptr IOStream_520094269 {.
      cdecl, importc: "SDL_GetProcessInput".}
else:
  static :
    hint("Declaration of " & "GetProcessInput" &
        " already exists, not redeclaring")
when not declared(GetProcessOutput):
  proc GetProcessOutput*(process: ptr Process_520095163): ptr IOStream_520094269 {.
      cdecl, importc: "SDL_GetProcessOutput".}
else:
  static :
    hint("Declaration of " & "GetProcessOutput" &
        " already exists, not redeclaring")
when not declared(KillProcess):
  proc KillProcess*(process: ptr Process_520095163; force: bool): bool {.cdecl,
      importc: "SDL_KillProcess".}
else:
  static :
    hint("Declaration of " & "KillProcess" & " already exists, not redeclaring")
when not declared(WaitProcess):
  proc WaitProcess*(process: ptr Process_520095163; block_arg: bool;
                    exitcode: ptr cint): bool {.cdecl,
      importc: "SDL_WaitProcess".}
else:
  static :
    hint("Declaration of " & "WaitProcess" & " already exists, not redeclaring")
when not declared(DestroyProcess):
  proc DestroyProcess*(process: ptr Process_520095163): void {.cdecl,
      importc: "SDL_DestroyProcess".}
else:
  static :
    hint("Declaration of " & "DestroyProcess" &
        " already exists, not redeclaring")
when not declared(GetNumRenderDrivers):
  proc GetNumRenderDrivers*(): cint {.cdecl, importc: "SDL_GetNumRenderDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumRenderDrivers" &
        " already exists, not redeclaring")
when not declared(GetRenderDriver):
  proc GetRenderDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetRenderDriver".}
else:
  static :
    hint("Declaration of " & "GetRenderDriver" &
        " already exists, not redeclaring")
when not declared(CreateWindowAndRenderer):
  proc CreateWindowAndRenderer*(title: cstring; width: cint; height: cint;
                                window_flags: WindowFlags_520094431;
                                window: ptr ptr Window_520094429;
                                renderer: ptr ptr Renderer_520095181): bool {.
      cdecl, importc: "SDL_CreateWindowAndRenderer".}
else:
  static :
    hint("Declaration of " & "CreateWindowAndRenderer" &
        " already exists, not redeclaring")
when not declared(CreateRenderer):
  proc CreateRenderer*(window: ptr Window_520094429; name: cstring): ptr Renderer_520095181 {.
      cdecl, importc: "SDL_CreateRenderer".}
else:
  static :
    hint("Declaration of " & "CreateRenderer" &
        " already exists, not redeclaring")
when not declared(CreateRendererWithProperties):
  proc CreateRendererWithProperties*(props: PropertiesID_520094217): ptr Renderer_520095181 {.
      cdecl, importc: "SDL_CreateRendererWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateRendererWithProperties" &
        " already exists, not redeclaring")
when not declared(CreateSoftwareRenderer):
  proc CreateSoftwareRenderer*(surface: ptr Surface_520094393): ptr Renderer_520095181 {.
      cdecl, importc: "SDL_CreateSoftwareRenderer".}
else:
  static :
    hint("Declaration of " & "CreateSoftwareRenderer" &
        " already exists, not redeclaring")
when not declared(GetRenderer):
  proc GetRenderer*(window: ptr Window_520094429): ptr Renderer_520095181 {.
      cdecl, importc: "SDL_GetRenderer".}
else:
  static :
    hint("Declaration of " & "GetRenderer" & " already exists, not redeclaring")
when not declared(GetRenderWindow):
  proc GetRenderWindow*(renderer: ptr Renderer_520095181): ptr Window_520094429 {.
      cdecl, importc: "SDL_GetRenderWindow".}
else:
  static :
    hint("Declaration of " & "GetRenderWindow" &
        " already exists, not redeclaring")
when not declared(GetRendererName):
  proc GetRendererName*(renderer: ptr Renderer_520095181): cstring {.cdecl,
      importc: "SDL_GetRendererName".}
else:
  static :
    hint("Declaration of " & "GetRendererName" &
        " already exists, not redeclaring")
when not declared(GetRendererProperties):
  proc GetRendererProperties*(renderer: ptr Renderer_520095181): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetRendererProperties".}
else:
  static :
    hint("Declaration of " & "GetRendererProperties" &
        " already exists, not redeclaring")
when not declared(GetRenderOutputSize):
  proc GetRenderOutputSize*(renderer: ptr Renderer_520095181; w: ptr cint;
                            h: ptr cint): bool {.cdecl,
      importc: "SDL_GetRenderOutputSize".}
else:
  static :
    hint("Declaration of " & "GetRenderOutputSize" &
        " already exists, not redeclaring")
when not declared(GetCurrentRenderOutputSize):
  proc GetCurrentRenderOutputSize*(renderer: ptr Renderer_520095181;
                                   w: ptr cint; h: ptr cint): bool {.cdecl,
      importc: "SDL_GetCurrentRenderOutputSize".}
else:
  static :
    hint("Declaration of " & "GetCurrentRenderOutputSize" &
        " already exists, not redeclaring")
when not declared(CreateTexture):
  proc CreateTexture*(renderer: ptr Renderer_520095181; format: PixelFormat_520094319;
                      access: TextureAccess_520095175; w: cint; h: cint): ptr Texture_520095185 {.
      cdecl, importc: "SDL_CreateTexture".}
else:
  static :
    hint("Declaration of " & "CreateTexture" &
        " already exists, not redeclaring")
when not declared(CreateTextureFromSurface):
  proc CreateTextureFromSurface*(renderer: ptr Renderer_520095181;
                                 surface: ptr Surface_520094393): ptr Texture_520095185 {.
      cdecl, importc: "SDL_CreateTextureFromSurface".}
else:
  static :
    hint("Declaration of " & "CreateTextureFromSurface" &
        " already exists, not redeclaring")
when not declared(CreateTextureWithProperties):
  proc CreateTextureWithProperties*(renderer: ptr Renderer_520095181;
                                    props: PropertiesID_520094217): ptr Texture_520095185 {.
      cdecl, importc: "SDL_CreateTextureWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateTextureWithProperties" &
        " already exists, not redeclaring")
when not declared(GetTextureProperties):
  proc GetTextureProperties*(texture: ptr Texture_520095185): PropertiesID_520094217 {.
      cdecl, importc: "SDL_GetTextureProperties".}
else:
  static :
    hint("Declaration of " & "GetTextureProperties" &
        " already exists, not redeclaring")
when not declared(GetRendererFromTexture):
  proc GetRendererFromTexture*(texture: ptr Texture_520095185): ptr Renderer_520095181 {.
      cdecl, importc: "SDL_GetRendererFromTexture".}
else:
  static :
    hint("Declaration of " & "GetRendererFromTexture" &
        " already exists, not redeclaring")
when not declared(GetTextureSize):
  proc GetTextureSize*(texture: ptr Texture_520095185; w: ptr cfloat;
                       h: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetTextureSize".}
else:
  static :
    hint("Declaration of " & "GetTextureSize" &
        " already exists, not redeclaring")
when not declared(SetTextureColorMod):
  proc SetTextureColorMod*(texture: ptr Texture_520095185; r: Uint8_520094137;
                           g: Uint8_520094137; b: Uint8_520094137): bool {.
      cdecl, importc: "SDL_SetTextureColorMod".}
else:
  static :
    hint("Declaration of " & "SetTextureColorMod" &
        " already exists, not redeclaring")
when not declared(SetTextureColorModFloat):
  proc SetTextureColorModFloat*(texture: ptr Texture_520095185; r: cfloat;
                                g: cfloat; b: cfloat): bool {.cdecl,
      importc: "SDL_SetTextureColorModFloat".}
else:
  static :
    hint("Declaration of " & "SetTextureColorModFloat" &
        " already exists, not redeclaring")
when not declared(GetTextureColorMod):
  proc GetTextureColorMod*(texture: ptr Texture_520095185; r: ptr Uint8_520094137;
                           g: ptr Uint8_520094137; b: ptr Uint8_520094137): bool {.
      cdecl, importc: "SDL_GetTextureColorMod".}
else:
  static :
    hint("Declaration of " & "GetTextureColorMod" &
        " already exists, not redeclaring")
when not declared(GetTextureColorModFloat):
  proc GetTextureColorModFloat*(texture: ptr Texture_520095185; r: ptr cfloat;
                                g: ptr cfloat; b: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetTextureColorModFloat".}
else:
  static :
    hint("Declaration of " & "GetTextureColorModFloat" &
        " already exists, not redeclaring")
when not declared(SetTextureAlphaMod):
  proc SetTextureAlphaMod*(texture: ptr Texture_520095185; alpha: Uint8_520094137): bool {.
      cdecl, importc: "SDL_SetTextureAlphaMod".}
else:
  static :
    hint("Declaration of " & "SetTextureAlphaMod" &
        " already exists, not redeclaring")
when not declared(SetTextureAlphaModFloat):
  proc SetTextureAlphaModFloat*(texture: ptr Texture_520095185; alpha: cfloat): bool {.
      cdecl, importc: "SDL_SetTextureAlphaModFloat".}
else:
  static :
    hint("Declaration of " & "SetTextureAlphaModFloat" &
        " already exists, not redeclaring")
when not declared(GetTextureAlphaMod):
  proc GetTextureAlphaMod*(texture: ptr Texture_520095185; alpha: ptr Uint8_520094137): bool {.
      cdecl, importc: "SDL_GetTextureAlphaMod".}
else:
  static :
    hint("Declaration of " & "GetTextureAlphaMod" &
        " already exists, not redeclaring")
when not declared(GetTextureAlphaModFloat):
  proc GetTextureAlphaModFloat*(texture: ptr Texture_520095185;
                                alpha: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetTextureAlphaModFloat".}
else:
  static :
    hint("Declaration of " & "GetTextureAlphaModFloat" &
        " already exists, not redeclaring")
when not declared(SetTextureBlendMode):
  proc SetTextureBlendMode*(texture: ptr Texture_520095185; blendMode: BlendMode_520094287): bool {.
      cdecl, importc: "SDL_SetTextureBlendMode".}
else:
  static :
    hint("Declaration of " & "SetTextureBlendMode" &
        " already exists, not redeclaring")
when not declared(GetTextureBlendMode):
  proc GetTextureBlendMode*(texture: ptr Texture_520095185;
                            blendMode: ptr BlendMode_520094287): bool {.cdecl,
      importc: "SDL_GetTextureBlendMode".}
else:
  static :
    hint("Declaration of " & "GetTextureBlendMode" &
        " already exists, not redeclaring")
when not declared(SetTextureScaleMode):
  proc SetTextureScaleMode*(texture: ptr Texture_520095185; scaleMode: ScaleMode_520094385): bool {.
      cdecl, importc: "SDL_SetTextureScaleMode".}
else:
  static :
    hint("Declaration of " & "SetTextureScaleMode" &
        " already exists, not redeclaring")
when not declared(GetTextureScaleMode):
  proc GetTextureScaleMode*(texture: ptr Texture_520095185;
                            scaleMode: ptr ScaleMode_520094385): bool {.cdecl,
      importc: "SDL_GetTextureScaleMode".}
else:
  static :
    hint("Declaration of " & "GetTextureScaleMode" &
        " already exists, not redeclaring")
when not declared(UpdateTexture):
  proc UpdateTexture*(texture: ptr Texture_520095185; rect: ptr Rect_520094375;
                      pixels: pointer; pitch: cint): bool {.cdecl,
      importc: "SDL_UpdateTexture".}
else:
  static :
    hint("Declaration of " & "UpdateTexture" &
        " already exists, not redeclaring")
when not declared(UpdateYUVTexture):
  proc UpdateYUVTexture*(texture: ptr Texture_520095185; rect: ptr Rect_520094375;
                         Yplane: ptr Uint8_520094137; Ypitch: cint;
                         Uplane: ptr Uint8_520094137; Upitch: cint;
                         Vplane: ptr Uint8_520094137; Vpitch: cint): bool {.
      cdecl, importc: "SDL_UpdateYUVTexture".}
else:
  static :
    hint("Declaration of " & "UpdateYUVTexture" &
        " already exists, not redeclaring")
when not declared(UpdateNVTexture):
  proc UpdateNVTexture*(texture: ptr Texture_520095185; rect: ptr Rect_520094375;
                        Yplane: ptr Uint8_520094137; Ypitch: cint;
                        UVplane: ptr Uint8_520094137; UVpitch: cint): bool {.
      cdecl, importc: "SDL_UpdateNVTexture".}
else:
  static :
    hint("Declaration of " & "UpdateNVTexture" &
        " already exists, not redeclaring")
when not declared(LockTexture):
  proc LockTexture*(texture: ptr Texture_520095185; rect: ptr Rect_520094375;
                    pixels: ptr pointer; pitch: ptr cint): bool {.cdecl,
      importc: "SDL_LockTexture".}
else:
  static :
    hint("Declaration of " & "LockTexture" & " already exists, not redeclaring")
when not declared(LockTextureToSurface):
  proc LockTextureToSurface*(texture: ptr Texture_520095185; rect: ptr Rect_520094375;
                             surface: ptr ptr Surface_520094393): bool {.cdecl,
      importc: "SDL_LockTextureToSurface".}
else:
  static :
    hint("Declaration of " & "LockTextureToSurface" &
        " already exists, not redeclaring")
when not declared(UnlockTexture):
  proc UnlockTexture*(texture: ptr Texture_520095185): void {.cdecl,
      importc: "SDL_UnlockTexture".}
else:
  static :
    hint("Declaration of " & "UnlockTexture" &
        " already exists, not redeclaring")
when not declared(SetRenderTarget):
  proc SetRenderTarget*(renderer: ptr Renderer_520095181; texture: ptr Texture_520095185): bool {.
      cdecl, importc: "SDL_SetRenderTarget".}
else:
  static :
    hint("Declaration of " & "SetRenderTarget" &
        " already exists, not redeclaring")
when not declared(GetRenderTarget):
  proc GetRenderTarget*(renderer: ptr Renderer_520095181): ptr Texture_520095185 {.
      cdecl, importc: "SDL_GetRenderTarget".}
else:
  static :
    hint("Declaration of " & "GetRenderTarget" &
        " already exists, not redeclaring")
when not declared(SetRenderLogicalPresentation):
  proc SetRenderLogicalPresentation*(renderer: ptr Renderer_520095181; w: cint;
                                     h: cint; mode: RendererLogicalPresentation_520095179): bool {.
      cdecl, importc: "SDL_SetRenderLogicalPresentation".}
else:
  static :
    hint("Declaration of " & "SetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(GetRenderLogicalPresentation):
  proc GetRenderLogicalPresentation*(renderer: ptr Renderer_520095181;
                                     w: ptr cint; h: ptr cint;
                                     mode: ptr RendererLogicalPresentation_520095179): bool {.
      cdecl, importc: "SDL_GetRenderLogicalPresentation".}
else:
  static :
    hint("Declaration of " & "GetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(GetRenderLogicalPresentationRect):
  proc GetRenderLogicalPresentationRect*(renderer: ptr Renderer_520095181;
      rect: ptr FRect_520094379): bool {.cdecl,
      importc: "SDL_GetRenderLogicalPresentationRect".}
else:
  static :
    hint("Declaration of " & "GetRenderLogicalPresentationRect" &
        " already exists, not redeclaring")
when not declared(RenderCoordinatesFromWindow):
  proc RenderCoordinatesFromWindow*(renderer: ptr Renderer_520095181;
                                    window_x: cfloat; window_y: cfloat;
                                    x: ptr cfloat; y: ptr cfloat): bool {.cdecl,
      importc: "SDL_RenderCoordinatesFromWindow".}
else:
  static :
    hint("Declaration of " & "RenderCoordinatesFromWindow" &
        " already exists, not redeclaring")
when not declared(RenderCoordinatesToWindow):
  proc RenderCoordinatesToWindow*(renderer: ptr Renderer_520095181; x: cfloat;
                                  y: cfloat; window_x: ptr cfloat;
                                  window_y: ptr cfloat): bool {.cdecl,
      importc: "SDL_RenderCoordinatesToWindow".}
else:
  static :
    hint("Declaration of " & "RenderCoordinatesToWindow" &
        " already exists, not redeclaring")
when not declared(ConvertEventToRenderCoordinates):
  proc ConvertEventToRenderCoordinates*(renderer: ptr Renderer_520095181;
                                        event: ptr Event_520094755): bool {.
      cdecl, importc: "SDL_ConvertEventToRenderCoordinates".}
else:
  static :
    hint("Declaration of " & "ConvertEventToRenderCoordinates" &
        " already exists, not redeclaring")
when not declared(SetRenderViewport):
  proc SetRenderViewport*(renderer: ptr Renderer_520095181; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_SetRenderViewport".}
else:
  static :
    hint("Declaration of " & "SetRenderViewport" &
        " already exists, not redeclaring")
when not declared(GetRenderViewport):
  proc GetRenderViewport*(renderer: ptr Renderer_520095181; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetRenderViewport".}
else:
  static :
    hint("Declaration of " & "GetRenderViewport" &
        " already exists, not redeclaring")
when not declared(RenderViewportSet):
  proc RenderViewportSet*(renderer: ptr Renderer_520095181): bool {.cdecl,
      importc: "SDL_RenderViewportSet".}
else:
  static :
    hint("Declaration of " & "RenderViewportSet" &
        " already exists, not redeclaring")
when not declared(GetRenderSafeArea):
  proc GetRenderSafeArea*(renderer: ptr Renderer_520095181; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetRenderSafeArea".}
else:
  static :
    hint("Declaration of " & "GetRenderSafeArea" &
        " already exists, not redeclaring")
when not declared(SetRenderClipRect):
  proc SetRenderClipRect*(renderer: ptr Renderer_520095181; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_SetRenderClipRect".}
else:
  static :
    hint("Declaration of " & "SetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(GetRenderClipRect):
  proc GetRenderClipRect*(renderer: ptr Renderer_520095181; rect: ptr Rect_520094375): bool {.
      cdecl, importc: "SDL_GetRenderClipRect".}
else:
  static :
    hint("Declaration of " & "GetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(RenderClipEnabled):
  proc RenderClipEnabled*(renderer: ptr Renderer_520095181): bool {.cdecl,
      importc: "SDL_RenderClipEnabled".}
else:
  static :
    hint("Declaration of " & "RenderClipEnabled" &
        " already exists, not redeclaring")
when not declared(SetRenderScale):
  proc SetRenderScale*(renderer: ptr Renderer_520095181; scaleX: cfloat;
                       scaleY: cfloat): bool {.cdecl,
      importc: "SDL_SetRenderScale".}
else:
  static :
    hint("Declaration of " & "SetRenderScale" &
        " already exists, not redeclaring")
when not declared(GetRenderScale):
  proc GetRenderScale*(renderer: ptr Renderer_520095181; scaleX: ptr cfloat;
                       scaleY: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetRenderScale".}
else:
  static :
    hint("Declaration of " & "GetRenderScale" &
        " already exists, not redeclaring")
when not declared(SetRenderDrawColor):
  proc SetRenderDrawColor*(renderer: ptr Renderer_520095181; r: Uint8_520094137;
                           g: Uint8_520094137; b: Uint8_520094137; a: Uint8_520094137): bool {.
      cdecl, importc: "SDL_SetRenderDrawColor".}
else:
  static :
    hint("Declaration of " & "SetRenderDrawColor" &
        " already exists, not redeclaring")
when not declared(SetRenderDrawColorFloat):
  proc SetRenderDrawColorFloat*(renderer: ptr Renderer_520095181; r: cfloat;
                                g: cfloat; b: cfloat; a: cfloat): bool {.cdecl,
      importc: "SDL_SetRenderDrawColorFloat".}
else:
  static :
    hint("Declaration of " & "SetRenderDrawColorFloat" &
        " already exists, not redeclaring")
when not declared(GetRenderDrawColor):
  proc GetRenderDrawColor*(renderer: ptr Renderer_520095181; r: ptr Uint8_520094137;
                           g: ptr Uint8_520094137; b: ptr Uint8_520094137;
                           a: ptr Uint8_520094137): bool {.cdecl,
      importc: "SDL_GetRenderDrawColor".}
else:
  static :
    hint("Declaration of " & "GetRenderDrawColor" &
        " already exists, not redeclaring")
when not declared(GetRenderDrawColorFloat):
  proc GetRenderDrawColorFloat*(renderer: ptr Renderer_520095181; r: ptr cfloat;
                                g: ptr cfloat; b: ptr cfloat; a: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetRenderDrawColorFloat".}
else:
  static :
    hint("Declaration of " & "GetRenderDrawColorFloat" &
        " already exists, not redeclaring")
when not declared(SetRenderColorScale):
  proc SetRenderColorScale*(renderer: ptr Renderer_520095181; scale: cfloat): bool {.
      cdecl, importc: "SDL_SetRenderColorScale".}
else:
  static :
    hint("Declaration of " & "SetRenderColorScale" &
        " already exists, not redeclaring")
when not declared(GetRenderColorScale):
  proc GetRenderColorScale*(renderer: ptr Renderer_520095181; scale: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetRenderColorScale".}
else:
  static :
    hint("Declaration of " & "GetRenderColorScale" &
        " already exists, not redeclaring")
when not declared(SetRenderDrawBlendMode):
  proc SetRenderDrawBlendMode*(renderer: ptr Renderer_520095181;
                               blendMode: BlendMode_520094287): bool {.cdecl,
      importc: "SDL_SetRenderDrawBlendMode".}
else:
  static :
    hint("Declaration of " & "SetRenderDrawBlendMode" &
        " already exists, not redeclaring")
when not declared(GetRenderDrawBlendMode):
  proc GetRenderDrawBlendMode*(renderer: ptr Renderer_520095181;
                               blendMode: ptr BlendMode_520094287): bool {.
      cdecl, importc: "SDL_GetRenderDrawBlendMode".}
else:
  static :
    hint("Declaration of " & "GetRenderDrawBlendMode" &
        " already exists, not redeclaring")
when not declared(RenderClear):
  proc RenderClear*(renderer: ptr Renderer_520095181): bool {.cdecl,
      importc: "SDL_RenderClear".}
else:
  static :
    hint("Declaration of " & "RenderClear" & " already exists, not redeclaring")
when not declared(RenderPoint):
  proc RenderPoint*(renderer: ptr Renderer_520095181; x: cfloat; y: cfloat): bool {.
      cdecl, importc: "SDL_RenderPoint".}
else:
  static :
    hint("Declaration of " & "RenderPoint" & " already exists, not redeclaring")
when not declared(RenderPoints):
  proc RenderPoints*(renderer: ptr Renderer_520095181; points: ptr FPoint_520094371;
                     count: cint): bool {.cdecl, importc: "SDL_RenderPoints".}
else:
  static :
    hint("Declaration of " & "RenderPoints" & " already exists, not redeclaring")
when not declared(RenderLine):
  proc RenderLine*(renderer: ptr Renderer_520095181; x1: cfloat; y1: cfloat;
                   x2: cfloat; y2: cfloat): bool {.cdecl,
      importc: "SDL_RenderLine".}
else:
  static :
    hint("Declaration of " & "RenderLine" & " already exists, not redeclaring")
when not declared(RenderLines):
  proc RenderLines*(renderer: ptr Renderer_520095181; points: ptr FPoint_520094371;
                    count: cint): bool {.cdecl, importc: "SDL_RenderLines".}
else:
  static :
    hint("Declaration of " & "RenderLines" & " already exists, not redeclaring")
when not declared(RenderRect):
  proc RenderRect*(renderer: ptr Renderer_520095181; rect: ptr FRect_520094379): bool {.
      cdecl, importc: "SDL_RenderRect".}
else:
  static :
    hint("Declaration of " & "RenderRect" & " already exists, not redeclaring")
when not declared(RenderRects):
  proc RenderRects*(renderer: ptr Renderer_520095181; rects: ptr FRect_520094379;
                    count: cint): bool {.cdecl, importc: "SDL_RenderRects".}
else:
  static :
    hint("Declaration of " & "RenderRects" & " already exists, not redeclaring")
when not declared(RenderFillRect):
  proc RenderFillRect*(renderer: ptr Renderer_520095181; rect: ptr FRect_520094379): bool {.
      cdecl, importc: "SDL_RenderFillRect".}
else:
  static :
    hint("Declaration of " & "RenderFillRect" &
        " already exists, not redeclaring")
when not declared(RenderFillRects):
  proc RenderFillRects*(renderer: ptr Renderer_520095181; rects: ptr FRect_520094379;
                        count: cint): bool {.cdecl,
      importc: "SDL_RenderFillRects".}
else:
  static :
    hint("Declaration of " & "RenderFillRects" &
        " already exists, not redeclaring")
when not declared(RenderTexture):
  proc RenderTexture*(renderer: ptr Renderer_520095181; texture: ptr Texture_520095185;
                      srcrect: ptr FRect_520094379; dstrect: ptr FRect_520094379): bool {.
      cdecl, importc: "SDL_RenderTexture".}
else:
  static :
    hint("Declaration of " & "RenderTexture" &
        " already exists, not redeclaring")
when not declared(RenderTextureRotated):
  proc RenderTextureRotated*(renderer: ptr Renderer_520095181;
                             texture: ptr Texture_520095185; srcrect: ptr FRect_520094379;
                             dstrect: ptr FRect_520094379; angle: cdouble;
                             center: ptr FPoint_520094371; flip: FlipMode_520094389): bool {.
      cdecl, importc: "SDL_RenderTextureRotated".}
else:
  static :
    hint("Declaration of " & "RenderTextureRotated" &
        " already exists, not redeclaring")
when not declared(RenderTextureAffine):
  proc RenderTextureAffine*(renderer: ptr Renderer_520095181;
                            texture: ptr Texture_520095185; srcrect: ptr FRect_520094379;
                            origin: ptr FPoint_520094371; right: ptr FPoint_520094371;
                            down: ptr FPoint_520094371): bool {.cdecl,
      importc: "SDL_RenderTextureAffine".}
else:
  static :
    hint("Declaration of " & "RenderTextureAffine" &
        " already exists, not redeclaring")
when not declared(RenderTextureTiled):
  proc RenderTextureTiled*(renderer: ptr Renderer_520095181;
                           texture: ptr Texture_520095185; srcrect: ptr FRect_520094379;
                           scale: cfloat; dstrect: ptr FRect_520094379): bool {.
      cdecl, importc: "SDL_RenderTextureTiled".}
else:
  static :
    hint("Declaration of " & "RenderTextureTiled" &
        " already exists, not redeclaring")
when not declared(RenderTexture9Grid):
  proc RenderTexture9Grid*(renderer: ptr Renderer_520095181;
                           texture: ptr Texture_520095185; srcrect: ptr FRect_520094379;
                           left_width: cfloat; right_width: cfloat;
                           top_height: cfloat; bottom_height: cfloat;
                           scale: cfloat; dstrect: ptr FRect_520094379): bool {.
      cdecl, importc: "SDL_RenderTexture9Grid".}
else:
  static :
    hint("Declaration of " & "RenderTexture9Grid" &
        " already exists, not redeclaring")
when not declared(RenderGeometry):
  proc RenderGeometry*(renderer: ptr Renderer_520095181; texture: ptr Texture_520095185;
                       vertices: ptr Vertex_520095171; num_vertices: cint;
                       indices: ptr cint; num_indices: cint): bool {.cdecl,
      importc: "SDL_RenderGeometry".}
else:
  static :
    hint("Declaration of " & "RenderGeometry" &
        " already exists, not redeclaring")
when not declared(RenderGeometryRaw):
  proc RenderGeometryRaw*(renderer: ptr Renderer_520095181;
                          texture: ptr Texture_520095185; xy: ptr cfloat;
                          xy_stride: cint; color: ptr FColor_520094355;
                          color_stride: cint; uv: ptr cfloat; uv_stride: cint;
                          num_vertices: cint; indices: pointer;
                          num_indices: cint; size_indices: cint): bool {.cdecl,
      importc: "SDL_RenderGeometryRaw".}
else:
  static :
    hint("Declaration of " & "RenderGeometryRaw" &
        " already exists, not redeclaring")
when not declared(RenderReadPixels):
  proc RenderReadPixels*(renderer: ptr Renderer_520095181; rect: ptr Rect_520094375): ptr Surface_520094393 {.
      cdecl, importc: "SDL_RenderReadPixels".}
else:
  static :
    hint("Declaration of " & "RenderReadPixels" &
        " already exists, not redeclaring")
when not declared(RenderPresent):
  proc RenderPresent*(renderer: ptr Renderer_520095181): bool {.cdecl,
      importc: "SDL_RenderPresent".}
else:
  static :
    hint("Declaration of " & "RenderPresent" &
        " already exists, not redeclaring")
when not declared(DestroyTexture):
  proc DestroyTexture*(texture: ptr Texture_520095185): void {.cdecl,
      importc: "SDL_DestroyTexture".}
else:
  static :
    hint("Declaration of " & "DestroyTexture" &
        " already exists, not redeclaring")
when not declared(DestroyRenderer):
  proc DestroyRenderer*(renderer: ptr Renderer_520095181): void {.cdecl,
      importc: "SDL_DestroyRenderer".}
else:
  static :
    hint("Declaration of " & "DestroyRenderer" &
        " already exists, not redeclaring")
when not declared(FlushRenderer):
  proc FlushRenderer*(renderer: ptr Renderer_520095181): bool {.cdecl,
      importc: "SDL_FlushRenderer".}
else:
  static :
    hint("Declaration of " & "FlushRenderer" &
        " already exists, not redeclaring")
when not declared(GetRenderMetalLayer):
  proc GetRenderMetalLayer*(renderer: ptr Renderer_520095181): pointer {.cdecl,
      importc: "SDL_GetRenderMetalLayer".}
else:
  static :
    hint("Declaration of " & "GetRenderMetalLayer" &
        " already exists, not redeclaring")
when not declared(GetRenderMetalCommandEncoder):
  proc GetRenderMetalCommandEncoder*(renderer: ptr Renderer_520095181): pointer {.
      cdecl, importc: "SDL_GetRenderMetalCommandEncoder".}
else:
  static :
    hint("Declaration of " & "GetRenderMetalCommandEncoder" &
        " already exists, not redeclaring")
when not declared(AddVulkanRenderSemaphores):
  proc AddVulkanRenderSemaphores*(renderer: ptr Renderer_520095181;
                                  wait_stage_mask: Uint32_520094145;
                                  wait_semaphore: Sint64_520094147;
                                  signal_semaphore: Sint64_520094147): bool {.
      cdecl, importc: "SDL_AddVulkanRenderSemaphores".}
else:
  static :
    hint("Declaration of " & "AddVulkanRenderSemaphores" &
        " already exists, not redeclaring")
when not declared(SetRenderVSync):
  proc SetRenderVSync*(renderer: ptr Renderer_520095181; vsync: cint): bool {.
      cdecl, importc: "SDL_SetRenderVSync".}
else:
  static :
    hint("Declaration of " & "SetRenderVSync" &
        " already exists, not redeclaring")
when not declared(GetRenderVSync):
  proc GetRenderVSync*(renderer: ptr Renderer_520095181; vsync: ptr cint): bool {.
      cdecl, importc: "SDL_GetRenderVSync".}
else:
  static :
    hint("Declaration of " & "GetRenderVSync" &
        " already exists, not redeclaring")
when not declared(RenderDebugText):
  proc RenderDebugText*(renderer: ptr Renderer_520095181; x: cfloat; y: cfloat;
                        str: cstring): bool {.cdecl,
      importc: "SDL_RenderDebugText".}
else:
  static :
    hint("Declaration of " & "RenderDebugText" &
        " already exists, not redeclaring")
when not declared(OpenTitleStorage):
  proc OpenTitleStorage*(override: cstring; props: PropertiesID_520094217): ptr Storage_520095191 {.
      cdecl, importc: "SDL_OpenTitleStorage".}
else:
  static :
    hint("Declaration of " & "OpenTitleStorage" &
        " already exists, not redeclaring")
when not declared(OpenUserStorage):
  proc OpenUserStorage*(org: cstring; app: cstring; props: PropertiesID_520094217): ptr Storage_520095191 {.
      cdecl, importc: "SDL_OpenUserStorage".}
else:
  static :
    hint("Declaration of " & "OpenUserStorage" &
        " already exists, not redeclaring")
when not declared(OpenFileStorage):
  proc OpenFileStorage*(path: cstring): ptr Storage_520095191 {.cdecl,
      importc: "SDL_OpenFileStorage".}
else:
  static :
    hint("Declaration of " & "OpenFileStorage" &
        " already exists, not redeclaring")
when not declared(OpenStorage):
  proc OpenStorage*(iface: ptr StorageInterface_520095189; userdata: pointer): ptr Storage_520095191 {.
      cdecl, importc: "SDL_OpenStorage".}
else:
  static :
    hint("Declaration of " & "OpenStorage" & " already exists, not redeclaring")
when not declared(CloseStorage):
  proc CloseStorage*(storage: ptr Storage_520095191): bool {.cdecl,
      importc: "SDL_CloseStorage".}
else:
  static :
    hint("Declaration of " & "CloseStorage" & " already exists, not redeclaring")
when not declared(StorageReady):
  proc StorageReady*(storage: ptr Storage_520095191): bool {.cdecl,
      importc: "SDL_StorageReady".}
else:
  static :
    hint("Declaration of " & "StorageReady" & " already exists, not redeclaring")
when not declared(GetStorageFileSize):
  proc GetStorageFileSize*(storage: ptr Storage_520095191; path: cstring;
                           length: ptr Uint64_520094149): bool {.cdecl,
      importc: "SDL_GetStorageFileSize".}
else:
  static :
    hint("Declaration of " & "GetStorageFileSize" &
        " already exists, not redeclaring")
when not declared(ReadStorageFile):
  proc ReadStorageFile*(storage: ptr Storage_520095191; path: cstring;
                        destination: pointer; length: Uint64_520094149): bool {.
      cdecl, importc: "SDL_ReadStorageFile".}
else:
  static :
    hint("Declaration of " & "ReadStorageFile" &
        " already exists, not redeclaring")
when not declared(WriteStorageFile):
  proc WriteStorageFile*(storage: ptr Storage_520095191; path: cstring;
                         source: pointer; length: Uint64_520094149): bool {.
      cdecl, importc: "SDL_WriteStorageFile".}
else:
  static :
    hint("Declaration of " & "WriteStorageFile" &
        " already exists, not redeclaring")
when not declared(CreateStorageDirectory):
  proc CreateStorageDirectory*(storage: ptr Storage_520095191; path: cstring): bool {.
      cdecl, importc: "SDL_CreateStorageDirectory".}
else:
  static :
    hint("Declaration of " & "CreateStorageDirectory" &
        " already exists, not redeclaring")
when not declared(EnumerateStorageDirectory):
  proc EnumerateStorageDirectory*(storage: ptr Storage_520095191; path: cstring;
                                  callback: EnumerateDirectoryCallback_520094781;
                                  userdata: pointer): bool {.cdecl,
      importc: "SDL_EnumerateStorageDirectory".}
else:
  static :
    hint("Declaration of " & "EnumerateStorageDirectory" &
        " already exists, not redeclaring")
when not declared(RemoveStoragePath):
  proc RemoveStoragePath*(storage: ptr Storage_520095191; path: cstring): bool {.
      cdecl, importc: "SDL_RemoveStoragePath".}
else:
  static :
    hint("Declaration of " & "RemoveStoragePath" &
        " already exists, not redeclaring")
when not declared(RenameStoragePath):
  proc RenameStoragePath*(storage: ptr Storage_520095191; oldpath: cstring;
                          newpath: cstring): bool {.cdecl,
      importc: "SDL_RenameStoragePath".}
else:
  static :
    hint("Declaration of " & "RenameStoragePath" &
        " already exists, not redeclaring")
when not declared(CopyStorageFile):
  proc CopyStorageFile*(storage: ptr Storage_520095191; oldpath: cstring;
                        newpath: cstring): bool {.cdecl,
      importc: "SDL_CopyStorageFile".}
else:
  static :
    hint("Declaration of " & "CopyStorageFile" &
        " already exists, not redeclaring")
when not declared(GetStoragePathInfo):
  proc GetStoragePathInfo*(storage: ptr Storage_520095191; path: cstring;
                           info: ptr PathInfo_520094773): bool {.cdecl,
      importc: "SDL_GetStoragePathInfo".}
else:
  static :
    hint("Declaration of " & "GetStoragePathInfo" &
        " already exists, not redeclaring")
when not declared(GetStorageSpaceRemaining):
  proc GetStorageSpaceRemaining*(storage: ptr Storage_520095191): Uint64_520094149 {.
      cdecl, importc: "SDL_GetStorageSpaceRemaining".}
else:
  static :
    hint("Declaration of " & "GetStorageSpaceRemaining" &
        " already exists, not redeclaring")
when not declared(GlobStorageDirectory):
  proc GlobStorageDirectory*(storage: ptr Storage_520095191; path: cstring;
                             pattern: cstring; flags: GlobFlags_520094775;
                             count: ptr cint): ptr cstring {.cdecl,
      importc: "SDL_GlobStorageDirectory".}
else:
  static :
    hint("Declaration of " & "GlobStorageDirectory" &
        " already exists, not redeclaring")
when not declared(SetWindowsMessageHook):
  proc SetWindowsMessageHook*(callback: WindowsMessageHook_520095195;
                              userdata: pointer): void {.cdecl,
      importc: "SDL_SetWindowsMessageHook".}
else:
  static :
    hint("Declaration of " & "SetWindowsMessageHook" &
        " already exists, not redeclaring")
when not declared(GetDirect3D9AdapterIndex):
  proc GetDirect3D9AdapterIndex*(displayID: DisplayID_520094411): cint {.cdecl,
      importc: "SDL_GetDirect3D9AdapterIndex".}
else:
  static :
    hint("Declaration of " & "GetDirect3D9AdapterIndex" &
        " already exists, not redeclaring")
when not declared(GetDXGIOutputInfo):
  proc GetDXGIOutputInfo*(displayID: DisplayID_520094411;
                          adapterIndex: ptr cint; outputIndex: ptr cint): bool {.
      cdecl, importc: "SDL_GetDXGIOutputInfo".}
else:
  static :
    hint("Declaration of " & "GetDXGIOutputInfo" &
        " already exists, not redeclaring")
when not declared(SetX11EventHook):
  proc SetX11EventHook*(callback: X11EventHook_520095199; userdata: pointer): void {.
      cdecl, importc: "SDL_SetX11EventHook".}
else:
  static :
    hint("Declaration of " & "SetX11EventHook" &
        " already exists, not redeclaring")
when not declared(IsTablet):
  proc IsTablet*(): bool {.cdecl, importc: "SDL_IsTablet".}
else:
  static :
    hint("Declaration of " & "IsTablet" & " already exists, not redeclaring")
when not declared(IsTV):
  proc IsTV*(): bool {.cdecl, importc: "SDL_IsTV".}
else:
  static :
    hint("Declaration of " & "IsTV" & " already exists, not redeclaring")
when not declared(GetSandbox):
  proc GetSandbox*(): Sandbox_520095203 {.cdecl, importc: "SDL_GetSandbox".}
else:
  static :
    hint("Declaration of " & "GetSandbox" & " already exists, not redeclaring")
when not declared(OnApplicationWillTerminate):
  proc OnApplicationWillTerminate*(): void {.cdecl,
      importc: "SDL_OnApplicationWillTerminate".}
else:
  static :
    hint("Declaration of " & "OnApplicationWillTerminate" &
        " already exists, not redeclaring")
when not declared(OnApplicationDidReceiveMemoryWarning):
  proc OnApplicationDidReceiveMemoryWarning*(): void {.cdecl,
      importc: "SDL_OnApplicationDidReceiveMemoryWarning".}
else:
  static :
    hint("Declaration of " & "OnApplicationDidReceiveMemoryWarning" &
        " already exists, not redeclaring")
when not declared(OnApplicationWillEnterBackground):
  proc OnApplicationWillEnterBackground*(): void {.cdecl,
      importc: "SDL_OnApplicationWillEnterBackground".}
else:
  static :
    hint("Declaration of " & "OnApplicationWillEnterBackground" &
        " already exists, not redeclaring")
when not declared(OnApplicationDidEnterBackground):
  proc OnApplicationDidEnterBackground*(): void {.cdecl,
      importc: "SDL_OnApplicationDidEnterBackground".}
else:
  static :
    hint("Declaration of " & "OnApplicationDidEnterBackground" &
        " already exists, not redeclaring")
when not declared(OnApplicationWillEnterForeground):
  proc OnApplicationWillEnterForeground*(): void {.cdecl,
      importc: "SDL_OnApplicationWillEnterForeground".}
else:
  static :
    hint("Declaration of " & "OnApplicationWillEnterForeground" &
        " already exists, not redeclaring")
when not declared(OnApplicationDidEnterForeground):
  proc OnApplicationDidEnterForeground*(): void {.cdecl,
      importc: "SDL_OnApplicationDidEnterForeground".}
else:
  static :
    hint("Declaration of " & "OnApplicationDidEnterForeground" &
        " already exists, not redeclaring")
when not declared(GetDateTimeLocalePreferences):
  proc GetDateTimeLocalePreferences*(dateFormat: ptr DateFormat_520095211;
                                     timeFormat: ptr TimeFormat_520095215): bool {.
      cdecl, importc: "SDL_GetDateTimeLocalePreferences".}
else:
  static :
    hint("Declaration of " & "GetDateTimeLocalePreferences" &
        " already exists, not redeclaring")
when not declared(GetCurrentTime):
  proc GetCurrentTime*(ticks: ptr Time_520094151): bool {.cdecl,
      importc: "SDL_GetCurrentTime".}
else:
  static :
    hint("Declaration of " & "GetCurrentTime" &
        " already exists, not redeclaring")
when not declared(TimeToDateTime):
  proc TimeToDateTime*(ticks: Time_520094151; dt: ptr DateTime_520095207;
                       localTime: bool): bool {.cdecl,
      importc: "SDL_TimeToDateTime".}
else:
  static :
    hint("Declaration of " & "TimeToDateTime" &
        " already exists, not redeclaring")
when not declared(DateTimeToTime):
  proc DateTimeToTime*(dt: ptr DateTime_520095207; ticks: ptr Time_520094151): bool {.
      cdecl, importc: "SDL_DateTimeToTime".}
else:
  static :
    hint("Declaration of " & "DateTimeToTime" &
        " already exists, not redeclaring")
when not declared(TimeToWindows):
  proc TimeToWindows*(ticks: Time_520094151; dwLowDateTime: ptr Uint32_520094145;
                      dwHighDateTime: ptr Uint32_520094145): void {.cdecl,
      importc: "SDL_TimeToWindows".}
else:
  static :
    hint("Declaration of " & "TimeToWindows" &
        " already exists, not redeclaring")
when not declared(TimeFromWindows):
  proc TimeFromWindows*(dwLowDateTime: Uint32_520094145; dwHighDateTime: Uint32_520094145): Time_520094151 {.
      cdecl, importc: "SDL_TimeFromWindows".}
else:
  static :
    hint("Declaration of " & "TimeFromWindows" &
        " already exists, not redeclaring")
when not declared(GetDaysInMonth):
  proc GetDaysInMonth*(year: cint; month: cint): cint {.cdecl,
      importc: "SDL_GetDaysInMonth".}
else:
  static :
    hint("Declaration of " & "GetDaysInMonth" &
        " already exists, not redeclaring")
when not declared(GetDayOfYear):
  proc GetDayOfYear*(year: cint; month: cint; day: cint): cint {.cdecl,
      importc: "SDL_GetDayOfYear".}
else:
  static :
    hint("Declaration of " & "GetDayOfYear" & " already exists, not redeclaring")
when not declared(GetDayOfWeek):
  proc GetDayOfWeek*(year: cint; month: cint; day: cint): cint {.cdecl,
      importc: "SDL_GetDayOfWeek".}
else:
  static :
    hint("Declaration of " & "GetDayOfWeek" & " already exists, not redeclaring")
when not declared(GetTicks):
  proc GetTicks*(): Uint64_520094149 {.cdecl, importc: "SDL_GetTicks".}
else:
  static :
    hint("Declaration of " & "GetTicks" & " already exists, not redeclaring")
when not declared(GetTicksNS):
  proc GetTicksNS*(): Uint64_520094149 {.cdecl, importc: "SDL_GetTicksNS".}
else:
  static :
    hint("Declaration of " & "GetTicksNS" & " already exists, not redeclaring")
when not declared(GetPerformanceCounter):
  proc GetPerformanceCounter*(): Uint64_520094149 {.cdecl,
      importc: "SDL_GetPerformanceCounter".}
else:
  static :
    hint("Declaration of " & "GetPerformanceCounter" &
        " already exists, not redeclaring")
when not declared(GetPerformanceFrequency):
  proc GetPerformanceFrequency*(): Uint64_520094149 {.cdecl,
      importc: "SDL_GetPerformanceFrequency".}
else:
  static :
    hint("Declaration of " & "GetPerformanceFrequency" &
        " already exists, not redeclaring")
when not declared(Delay):
  proc Delay*(ms: Uint32_520094145): void {.cdecl, importc: "SDL_Delay".}
else:
  static :
    hint("Declaration of " & "Delay" & " already exists, not redeclaring")
when not declared(DelayNS):
  proc DelayNS*(ns: Uint64_520094149): void {.cdecl, importc: "SDL_DelayNS".}
else:
  static :
    hint("Declaration of " & "DelayNS" & " already exists, not redeclaring")
when not declared(DelayPrecise):
  proc DelayPrecise*(ns: Uint64_520094149): void {.cdecl,
      importc: "SDL_DelayPrecise".}
else:
  static :
    hint("Declaration of " & "DelayPrecise" & " already exists, not redeclaring")
when not declared(AddTimer):
  proc AddTimer*(interval: Uint32_520094145; callback: TimerCallback_520095219;
                 userdata: pointer): TimerID_520095217 {.cdecl,
      importc: "SDL_AddTimer".}
else:
  static :
    hint("Declaration of " & "AddTimer" & " already exists, not redeclaring")
when not declared(AddTimerNS):
  proc AddTimerNS*(interval: Uint64_520094149; callback: NSTimerCallback_520095221;
                   userdata: pointer): TimerID_520095217 {.cdecl,
      importc: "SDL_AddTimerNS".}
else:
  static :
    hint("Declaration of " & "AddTimerNS" & " already exists, not redeclaring")
when not declared(RemoveTimer):
  proc RemoveTimer*(id: TimerID_520095217): bool {.cdecl,
      importc: "SDL_RemoveTimer".}
else:
  static :
    hint("Declaration of " & "RemoveTimer" & " already exists, not redeclaring")
when not declared(GetVersion):
  proc GetVersion*(): cint {.cdecl, importc: "SDL_GetVersion".}
else:
  static :
    hint("Declaration of " & "GetVersion" & " already exists, not redeclaring")
when not declared(GetRevision):
  proc GetRevision*(): cstring {.cdecl, importc: "SDL_GetRevision".}
else:
  static :
    hint("Declaration of " & "GetRevision" & " already exists, not redeclaring")